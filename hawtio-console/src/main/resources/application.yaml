server:
  # port: 10000
  port: 8080
  servlet.context-path: /my-camel/admin
  shutdown: graceful
  # Adding SameSite=Strict for session cookie is recommended
  servlet.session.cookie.same-site: strict
management:
  server:
    port: ${server.port}
#    port: 10001
#    base-path: /my-camel/admin
  endpoints:
    health:
      enabled: true
      show-details: always
      # expose liveness/readiness probes
      probes:
        enabled: true
    refresh.enable: true
    web.exposure.include: health,info,hawtio,jolokia,refresh
    #  Actuator Enpoints exposure for the spring-boot plugin
    jmx.exposure.include: health,info,loggers,httpexchanges

    # Information for Spring Boot Info endpoint
  info:
    app.name: ${spring.application.name}
    env.enabled: true
    java.enabled: true

spring:
  jmx.enabled: true
  profiles:
    active:
#      - jdbc
      - ${SPRING_PROFILES_ACTIVE:local}
  application:.name: Hawtio Camel Admin Console
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.OracleDialect
    show-sql: true
    properties.hibernate.jdbc.time-zone: EST

  datasource:
    platform: oracle
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521/FREE
    username: C##CAMEL
    password: Passw0rd
    hikari:
      connection-timeout: 5000
      maximum-pool-size: 10
  cloud:
    config:
      server:
        jdbc:
          sql: SELECT PROP_KEY, PROP_VALUE from APP_PROPERTIES where APPLICATION=? and PROFILE=? and LABEL=?
          order: 1
        # prefix: config
#  security:
#    user:
#      name: admin
#      password: admin
#    oauth2:
#      # For SPA
#      client:
#        provider:
#          azure:
#            issuer-uri: https://login.microsoftonline.com/xxxxx/v2.0
#            # When using JWT-based authentication, Spring Security will use, by default, the standard sub claim value as the Principal‘s name.
#            # Looking at the claims, AzureAD populates this field with an internal identifier, which is unfit for display purposes.
#            # so choose one of the available attributes available and put its name on the provider’s user-name-attribute property:
#            user-name-attribute: name
#          auth0:
#            issuer-uri: https://xxxx.auth0.com/
#        google:
#          clientId: your_client_id
#          clientSecret: your_client_secret
#          redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#          scope:
#            - email
#            - profile
#        facebook:
#          clientId: your_client_id
#          clientSecret: your_client_secret
#          redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#          scope:
#            - email
#            - public_profile
#        github:
#          clientId: your_client_id
#          clientSecret: your_client_secret
#          redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#          scope:
#            - user:email
#            - read:user
#        registration:
#          azure-dev:
#            provider: azure
#            authorization-grant-type: authorization-code
#            client-id: xxxxx
#            client-secret: xxxxx
#            scope:
#              - openid
#              - email
#              - profile
#          auth0-confidential-user:
#            authorization-grant-type: authorization_code
#            client-name: Auth0
#            client-id: your_client_id
#            client-secret: your_client_secret
#            provider: auth0
#            scope: openid,profile,email,offline_access
#
#      # multitenancy: https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/multitenancy.html
#      # For API single tenant
#      resourceserve:
#        jwt:
#          # https://login.microsoftonline.com/{tenant-id}/v2.0
#          # https://login.microsoftonline.com/common/discovery/keys https://login.microsoftonline.com/{tenant_id}/discovery/keys?appid={client_id}
#          issuer-uri: https://login.microsoftonline.com/xxxxxxxxxxxx/v2.0
  liquibase.enabled: false
  liquibase.contexts: ${SPRING_PROFILES_ACTIVE:local}
liquibase.change-log: classpath:/db/changelog/db.changelog-master.yaml
logging.level:
  mycamel.spring.boot: DEBUG
  io.hawt: INFO
  org.springframework: WARN
feign:
  client:
    config:
      default:
        connectTimeout: 15000
        readTimeout: 15000
        loggerLevel: basic
camel:
  springboot:
    name: ${spring.application.name}

    # Uncomment these properties to enable the Camel plugin Trace tab
    # tracing: true
    # backlog-tracing: true
    # use-breadcrumb: true

quartz:
  cron:  0 0 0/1 * * ?
  # quartz.repeatInterval = 10000
  repeatInterval: 1000000

hawtio:
  authenticationEnabled: false
  disableProxy: false
  proxyAllowlist: r:.*-my-camel\.apis\.com
#
# Hawtio properties to change the behaviours for HTTP headers
# (Hawtio version >2.15.1)
#

# By default, Access-Control-Allow-Origin is no more sent.
# To send the HTTP header, uncomment the following line.
#  http:
#    enableCORS: true

# When hawtio.http.enableCORS=true is set, Hawtio by default sends:
#
#   Access-Control-Allow-Origin: *
#
# You can customise the header value with the following property.
#  http.accessControlAllowOrigin: https://example.com

# By default, Hawtio sends the following HTTP headers:
#
#   X-Frame-Options: DENY
#   Content-Security-Policy: frame-ancestors 'none'
#
# By uncommenting the following line, these headers are changed like these
# (the behaviour in 2.15.1 and before):
#
#   X-Frame-Options: SAMEORIGIN
#   Content-Security-Policy: frame-ancestors 'self'
#
#    allowXFrameSameOrigin: true

# By default, Hawtio sends the following HTTP header:
#
#   Referrer-Policy: strict-origin
#
# You can customise the header by setting the following property.
#    referrerPolicy: no-referrer
my-camel:
  feign.logger.level: FULL
  openfeign:.client.api.url: http://localhost:8080/my-camel/admin/spring/admin/resource
  # Monthly
  refresh.schedule: 0 0 0 1 * *
  # weekly
  # refresh.schedule: 0 0 0 * * 0
  validate.api.request: false
  webclient:
    connection-timeout-mills: 20000
    read-timeout-mills: 20000
    mac-connection: 300
  refresh-url:
    - pod: app1
      refreshUrl: http://app1/actuator/refresh
    - pod: app2
      refreshUrl: http://app2/actuator/refresh
    - pod: app3
      refreshUrl: http://app3/actuator/refresh
  circuitbreaker:
    api-client:
      registrerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 50
      failureRateThreshold: 50
      slowCallRateThreshold: 50
      slowCallDurationThreshold: 5
      minimumNumberOfCalls: 20
      permittedNumberOfCallsinHalfOpenState: 10
      waitDurationInOpenState: 60
