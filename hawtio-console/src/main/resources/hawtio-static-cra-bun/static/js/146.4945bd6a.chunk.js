"use strict";(self.webpackChunkconsole_ui=self.webpackChunkconsole_ui||[]).push([[146],{92146:e=>{var t,r=Object.defineProperty,i=Object.getOwnPropertyDescriptor,a=Object.getOwnPropertyNames,n=Object.prototype.hasOwnProperty,o={};((e,t)=>{for(var i in t)r(e,i,{get:t[i],enumerable:!0})})(o,{apacheCamelModelVersion:()=>u,components:()=>c,dataformats:()=>l,definitions:()=>s,languages:()=>p,rests:()=>d}),e.exports=(t=o,((e,t,o,s)=>{if(t&&"object"===typeof t||"function"===typeof t)for(let d of a(t))n.call(e,d)||d===o||r(e,d,{get:()=>t[d],enumerable:!(s=i(t,d))||s.enumerable});return e})(r({},"__esModule",{value:!0}),t));var s={expression:{type:"object",title:"expression",group:"language",icon:"generic24.png",description:"Expression in the choose language",properties:{expression:{kind:"element",type:"string",title:"Expression",group:"language",description:"The expression",required:!0},language:{kind:"element",type:"string",title:"Expression",group:"language",description:"The chosen language",required:!0,enum:["constant","csimple","datasonnet","exchangeProperty","groovy","header","hl7terser","joor","jq","js","jsonpath","language","method","mvel","ognl","python","ref","simple","spel","tokenize","xpath","xquery","xtokenize"]}}},aggregate:{type:"object",title:"Aggregate",group:"eip,routing",icon:"aggregate24.png",description:"Aggregates many messages into a single message",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{correlationExpression:{kind:"expression",type:"object",description:"The expression used to calculate the correlation key to use for aggregation. The Exchange which has the same correlation key is aggregated together. If the correlation key could not be evaluated an Exception is thrown. You can disable this by using the ignoreBadCorrelationKeys option.",title:"Correlation Expression",required:!0,deprecated:!1},completionPredicate:{kind:"expression",type:"object",description:"A Predicate to indicate when an aggregated exchange is complete. If this is not specified and the AggregationStrategy object implements Predicate, the aggregationStrategy object will be used as the completionPredicate.",title:"Completion Predicate",required:!1,deprecated:!1},completionTimeoutExpression:{kind:"expression",type:"object",description:"Time in millis that an aggregated exchange should be inactive before its complete (timeout). This option can be set as either a fixed value or using an Expression which allows you to evaluate a timeout dynamically - will use Long as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0. You cannot use this option together with completionInterval, only one of the two can be used. By default the timeout checker runs every second, you can use the completionTimeoutCheckerInterval option to configure how frequently to run the checker. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.",title:"Completion Timeout Expression",required:!1,deprecated:!1},completionSizeExpression:{kind:"expression",type:"object",description:"Number of messages aggregated before the aggregation is complete. This option can be set as either a fixed value or using an Expression which allows you to evaluate a size dynamically - will use Integer as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0.",title:"Completion Size Expression",required:!1,deprecated:!1},optimisticLockRetryPolicy:{kind:"element",type:"object",description:"Allows to configure retry settings when using optimistic locking.",title:"Optimistic Lock Retry Policy",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"When aggregated are completed they are being send out of the aggregator. This option indicates whether or not Camel should use a thread pool with multiple threads for concurrency. If no custom thread pool has been specified then Camel creates a default pool with 10 concurrent threads.",title:"Parallel Processing",required:!1,deprecated:!1},optimisticLocking:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Turns on using optimistic locking, which requires the aggregationRepository being used, is supporting this by implementing org.apache.camel.spi.OptimisticLockingAggregationRepository .",title:"Optimistic Locking",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"If using parallelProcessing you can specify a custom thread pool to be used. In fact also if you are not using parallelProcessing this custom thread pool is used to send out aggregated exchanges as well.",title:"Executor Service",required:!1,deprecated:!1},timeoutCheckerExecutorService:{kind:"attribute",type:"object",description:"If using either of the completionTimeout, completionTimeoutExpression, or completionInterval options a background thread is created to check for the completion for every aggregator. Set this option to provide a custom thread pool to be used rather than creating a new thread for every aggregator.",title:"Timeout Checker Executor Service",required:!1,deprecated:!1},aggregateController:{kind:"attribute",type:"object",description:"To use a org.apache.camel.processor.aggregate.AggregateController to allow external sources to control this aggregator.",title:"Aggregate Controller",required:!1,deprecated:!1},aggregationRepository:{kind:"attribute",type:"object",description:"The AggregationRepository to use. Sets the custom aggregate repository to use. Will by default use org.apache.camel.processor.aggregate.MemoryAggregationRepository",title:"Aggregation Repository",required:!1,deprecated:!1},aggregationStrategy:{kind:"attribute",type:"object",description:"The AggregationStrategy to use. For example to lookup a bean with the name foo, the value is simply just #bean:foo. Configuring an AggregationStrategy is required, and is used to merge the incoming Exchange with the existing already merged exchanges. At first call the oldExchange parameter is null. On subsequent invocations the oldExchange contains the merged exchanges and newExchange is of course the new incoming Exchange.",title:"Aggregation Strategy",required:!1,deprecated:!1},aggregationStrategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using beans as the AggregationStrategy.",title:"Aggregation Strategy Method Name",required:!1,deprecated:!1},aggregationStrategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used for the very first aggregation. If this option is true then null values is used as the oldExchange (at the very first aggregation), when using beans as the AggregationStrategy.",title:"Aggregation Strategy Method Allow Null",required:!1,deprecated:!1},completionSize:{kind:"attribute",type:"integer",description:"Number of messages aggregated before the aggregation is complete. This option can be set as either a fixed value or using an Expression which allows you to evaluate a size dynamically - will use Integer as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0.",title:"Completion Size",required:!1,deprecated:!1},completionInterval:{kind:"attribute",type:"duration",description:"A repeating period in millis by which the aggregator will complete all current aggregated exchanges. Camel has a background task which is triggered every period. You cannot use this option together with completionTimeout, only one of them can be used.",title:"Completion Interval",required:!1,deprecated:!1},completionTimeout:{kind:"attribute",type:"duration",description:"Time in millis that an aggregated exchange should be inactive before its complete (timeout). This option can be set as either a fixed value or using an Expression which allows you to evaluate a timeout dynamically - will use Long as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0. You cannot use this option together with completionInterval, only one of the two can be used. By default the timeout checker runs every second, you can use the completionTimeoutCheckerInterval option to configure how frequently to run the checker. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.",title:"Completion Timeout",required:!1,deprecated:!1},completionTimeoutCheckerInterval:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Interval in millis that is used by the background task that checks for timeouts ( org.apache.camel.TimeoutMap ). By default the timeout checker runs every second. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.",title:"Completion Timeout Checker Interval",required:!1,deprecated:!1},completionFromBatchConsumer:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables the batch completion mode where we aggregate from a org.apache.camel.BatchConsumer and aggregate the total number of exchanges the org.apache.camel.BatchConsumer has reported as total by checking the exchange property org.apache.camel.Exchange#BATCH_COMPLETE when its complete. This option cannot be used together with discardOnAggregationFailure.",title:"Completion From Batch Consumer",required:!1,deprecated:!1},completionOnNewCorrelationGroup:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables completion on all previous groups when a new incoming correlation group. This can for example be used to complete groups with same correlation keys when they are in consecutive order. Notice when this is enabled then only 1 correlation group can be in progress as when a new correlation group starts, then the previous groups is forced completed.",title:"Completion On New Correlation Group",required:!1,deprecated:!1},eagerCheckCompletion:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Use eager completion checking which means that the completionPredicate will use the incoming Exchange. As opposed to without eager completion checking the completionPredicate will use the aggregated Exchange.",title:"Eager Check Completion",required:!1,deprecated:!1},ignoreInvalidCorrelationKeys:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If a correlation key cannot be successfully evaluated it will be ignored by logging a DEBUG and then just ignore the incoming Exchange.",title:"Ignore Invalid Correlation Keys",required:!1,deprecated:!1},closeCorrelationKeyOnCompletion:{kind:"attribute",type:"integer",description:"Closes a correlation key when its complete. Any late received exchanges which has a correlation key that has been closed, it will be defined and a ClosedCorrelationKeyException is thrown.",title:"Close Correlation Key On Completion",required:!1,deprecated:!1},discardOnCompletionTimeout:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Discards the aggregated message on completion timeout. This means on timeout the aggregated message is dropped and not sent out of the aggregator.",title:"Discard On Completion Timeout",required:!1,deprecated:!1},discardOnAggregationFailure:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Discards the aggregated message when aggregation failed (an exception was thrown from AggregationStrategy . This means the partly aggregated message is dropped and not sent out of the aggregator. This option cannot be used together with completionFromBatchConsumer.",title:"Discard On Aggregation Failure",required:!1,deprecated:!1},forceCompletionOnStop:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Indicates to complete all current aggregated exchanges when the context is stopped",title:"Force Completion On Stop",required:!1,deprecated:!1},completeAllOnStop:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Indicates to wait to complete all current and partial (pending) aggregated exchanges when the context is stopped. This also means that we will wait for all pending exchanges which are stored in the aggregation repository to complete so the repository is empty before we can stop. You may want to enable this when using the memory based aggregation repository that is memory based only, and do not store data on disk. When this option is enabled, then the aggregator is waiting to complete all those exchanges before its stopped, when stopping CamelContext or the route using it.",title:"Complete All On Stop",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},"batch-config":{type:"object",title:"Batch-config",group:"configuration,eip",icon:"generic24.png",description:"Configures batch-processing resequence eip.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{batchSize:{kind:"attribute",type:"integer",defaultValue:"100",description:"Sets the size of the batch to be re-ordered. The default size is 100.",title:"Batch Size",required:!1,deprecated:!1},batchTimeout:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Sets the timeout for collecting elements to be re-ordered. The default timeout is 1000 msec.",title:"Batch Timeout",required:!1,deprecated:!1},allowDuplicates:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to allow duplicates.",title:"Allow Duplicates",required:!1,deprecated:!1},reverse:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to reverse the ordering.",title:"Reverse",required:!1,deprecated:!1},ignoreInvalidExchanges:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore invalid exchanges",title:"Ignore Invalid Exchanges",required:!1,deprecated:!1}}},bean:{type:"object",title:"Bean",group:"eip,endpoint",icon:"bean24.png",description:"Calls a Java bean",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{ref:{kind:"attribute",type:"string",description:"Sets a reference to an exiting bean to use, which is looked up from the registry",title:"Ref",required:!1,deprecated:!1},method:{kind:"attribute",type:"string",description:"Sets the method name on the bean to use",title:"Method",required:!1,deprecated:!1},beanType:{kind:"attribute",type:"string",description:"Sets the class name (fully qualified) of the bean to use",title:"Bean Type",required:!1,deprecated:!1},scope:{kind:"attribute",type:"enum",defaultValue:"Singleton",enum:["Singleton","Request","Prototype"],description:"Scope of bean. When using singleton scope (default) the bean is created or looked up only once and reused for the lifetime of the endpoint. The bean should be thread-safe in case concurrent threads is calling the bean at the same time. When using request scope the bean is created or looked up once per request (exchange). This can be used if you want to store state on a bean while processing a request and you want to call the same bean instance multiple times while processing the request. The bean does not have to be thread-safe as the instance is only called from the same request. When using prototype scope, then the bean will be looked up or created per call. However in case of lookup then this is delegated to the bean registry such as Spring or CDI (if in use), which depends on their configuration can act as either singleton or prototype scope. So when using prototype scope then this depends on the bean registry implementation.",title:"Scope",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},beans:{type:"object",title:"Beans",group:"configuration",icon:"generic24.png",description:"A grouping POJO (and related XML root element) that's historically associated with entire application (or its distinguished fragment). This class is not meant to be used with Camel Java DSL, but it's needed to generate XML Schema and MX parser methods.",properties:{"component-scan":{kind:"element",type:"array",description:"Component scanning definition(s). But unlike package/packageScan/contextScan, we're not scanning only for org.apache.camel.builder.RouteBuilder.",title:"Component-scan",required:!1,deprecated:!1},bean:{kind:"element",type:"array",description:"",title:"Bean",required:!1,deprecated:!1},restConfiguration:{kind:"element",type:"array",description:"",title:"Rest Configuration",required:!1,deprecated:!1},rest:{kind:"element",type:"array",description:"",title:"Rest",required:!1,deprecated:!1},routeConfiguration:{kind:"element",type:"array",description:"",title:"Route Configuration",required:!1,deprecated:!1},routeTemplate:{kind:"element",type:"array",description:"",title:"Route Template",required:!1,deprecated:!1},templatedRoute:{kind:"element",type:"array",description:"",title:"Templated Route",required:!1,deprecated:!1},route:{kind:"element",type:"array",description:"",title:"Route",required:!1,deprecated:!1}}},blacklistServiceFilter:{type:"object",title:"Blacklist Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",properties:{servers:{kind:"element",type:"array",description:"Sets the server blacklist. Each entry can be a list of servers separated by comma in the format: servicehost:port,servicehost2:port,servicehost3:port",title:"Servers",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},cachingServiceDiscovery:{type:"object",title:"Caching Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{timeout:{kind:"attribute",type:"integer",defaultValue:"60",description:"Set the time the services will be retained.",title:"Timeout",required:!1,deprecated:!1},units:{kind:"attribute",type:"enum",defaultValue:"SECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Set the time unit for the timeout.",title:"Units",required:!1,deprecated:!1},serviceDiscoveryConfiguration:{kind:"element",type:"object",description:"Set the service-call configuration to use",title:"Service Discovery Configuration",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},camel:{type:"object",title:"Camel",group:"configuration",icon:"generic24.png",description:"If beans reminds Spring application too much, we can use camel.",properties:{"component-scan":{kind:"element",type:"array",description:"Component scanning definition(s). But unlike package/packageScan/contextScan, we're not scanning only for org.apache.camel.builder.RouteBuilder.",title:"Component-scan",required:!1,deprecated:!1},bean:{kind:"element",type:"array",description:"",title:"Bean",required:!1,deprecated:!1},restConfiguration:{kind:"element",type:"array",description:"",title:"Rest Configuration",required:!1,deprecated:!1},rest:{kind:"element",type:"array",description:"",title:"Rest",required:!1,deprecated:!1},routeConfiguration:{kind:"element",type:"array",description:"",title:"Route Configuration",required:!1,deprecated:!1},routeTemplate:{kind:"element",type:"array",description:"",title:"Route Template",required:!1,deprecated:!1},templatedRoute:{kind:"element",type:"array",description:"",title:"Templated Route",required:!1,deprecated:!1},route:{kind:"element",type:"array",description:"",title:"Route",required:!1,deprecated:!1}}},choice:{type:"object",title:"Choice",group:"eip,routing",icon:"choice24.png",description:"Route messages based on a series of predicates",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{when:{kind:"element",type:"array",description:"Sets the when nodes",title:"When",required:!1,deprecated:!1},otherwise:{kind:"element",type:"object",description:"Sets the otherwise node",title:"Otherwise",required:!1,deprecated:!1},precondition:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Indicates whether this Choice EIP is in precondition mode or not. If so its branches (when/otherwise) are evaluated during startup to keep at runtime only the branch that matched.",title:"Precondition",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},circuitBreaker:{type:"object",title:"Circuit Breaker",group:"eip,routing",icon:"generic24.png",description:"Route messages in a fault tolerance way using Circuit Breaker",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{configuration:{kind:"attribute",type:"string",description:"Refers to a circuit breaker configuration (such as resillience4j, or microprofile-fault-tolerance) to use for configuring the circuit breaker EIP.",title:"Configuration",required:!1,deprecated:!1},resilience4jConfiguration:{kind:"element",type:"object",description:"Configures the circuit breaker to use Resilience4j with the given configuration.",title:"Resilience4j Configuration",required:!1,deprecated:!1},faultToleranceConfiguration:{kind:"element",type:"object",description:"Configures the circuit breaker to use MicroProfile Fault Tolerance with the given configuration.",title:"Fault Tolerance Configuration",required:!1,deprecated:!1},onFallback:{kind:"element",type:"object",description:"The fallback route path to execute that does not go over the network. This should be a static or cached result that can immediately be returned upon failure. If the fallback requires network connection then use onFallbackViaNetwork() .",title:"On Fallback",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},claimCheck:{type:"object",title:"Claim Check",group:"eip,routing",icon:"generic24.png",description:"The Claim Check EIP allows you to replace message content with a claim check (a unique key), which can be used to retrieve the message content at a later time.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{operation:{kind:"attribute",type:"enum",enum:["Get","GetAndRemove","Set","Push","Pop"],description:"The claim check operation to use. The following operations are supported: Get - Gets (does not remove) the claim check by the given key. GetAndRemove - Gets and removes the claim check by the given key. Set - Sets a new (will override if key already exists) claim check with the given key. Push - Sets a new claim check on the stack (does not use key). Pop - Gets the latest claim check from the stack (does not use key).",title:"Operation",required:!1,deprecated:!1},key:{kind:"attribute",type:"string",description:"To use a specific key for claim check id (for dynamic keys use simple language syntax as the key).",title:"Key",required:!1,deprecated:!1},filter:{kind:"attribute",type:"string",description:"Specify a filter to control what data gets merged data back from the claim check repository. The following syntax is supported: body - to aggregate the message body attachments - to aggregate all the message attachments headers - to aggregate all the message headers header:pattern - to aggregate all the message headers that matches the pattern. The following pattern rules are applied in this order: exact match, returns true wildcard match (pattern ends with a and the name starts with the pattern), returns true regular expression match, returns true otherwise returns false You can specify multiple rules separated by comma. For example, the following includes the message body and all headers starting with foo: body,header:foo. The syntax supports the following prefixes which can be used to specify include,exclude, or remove - to include (which is the default mode) - - to exclude (exclude takes precedence over include) -- - to remove (remove takes precedence) For example to exclude a header name foo, and remove all headers starting with bar, -header:foo,--headers:bar Note you cannot have both include and exclude header:pattern at the same time.",title:"Filter",required:!1,deprecated:!1},aggregationStrategy:{kind:"attribute",type:"object",description:"To use a custom AggregationStrategy instead of the default implementation. Notice you cannot use both custom aggregation strategy and configure data at the same time.",title:"Aggregation Strategy",required:!1,deprecated:!1},aggregationStrategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Name",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},combinedServiceDiscovery:{type:"object",title:"Combined Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{serviceDiscoveryConfigurations:{kind:"element",type:"array",description:"List of ServiceDiscovery configuration to use",title:"Service Discovery Configurations",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},combinedServiceFilter:{type:"object",title:"Combined Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",properties:{serviceFilterConfigurations:{kind:"element",type:"array",description:"List of ServiceFilter configuration to use",title:"Service Filter Configurations",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},consulServiceDiscovery:{type:"object",title:"Consul Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{url:{kind:"attribute",type:"string",description:"The Consul agent URL",title:"Url",required:!1,deprecated:!1},datacenter:{kind:"attribute",type:"string",description:"The data center",title:"Datacenter",required:!1,deprecated:!1},aclToken:{kind:"attribute",type:"string",description:"Sets the ACL token to be used with Consul",title:"Acl Token",required:!1,deprecated:!1},userName:{kind:"attribute",type:"string",description:"Sets the username to be used for basic authentication",title:"User Name",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"Sets the password to be used for basic authentication",title:"Password",required:!1,deprecated:!1},connectTimeoutMillis:{kind:"attribute",type:"integer",description:"Connect timeout for OkHttpClient",title:"Connect Timeout Millis",required:!1,deprecated:!1},readTimeoutMillis:{kind:"attribute",type:"integer",description:"Read timeout for OkHttpClient",title:"Read Timeout Millis",required:!1,deprecated:!1},writeTimeoutMillis:{kind:"attribute",type:"integer",description:"Write timeout for OkHttpClient",title:"Write Timeout Millis",required:!1,deprecated:!1},blockSeconds:{kind:"attribute",type:"integer",defaultValue:"10",description:"The seconds to wait for a watch event, default 10 seconds",title:"Block Seconds",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},contextScan:{type:"object",title:"Context Scan",group:"configuration",icon:"generic24.png",description:"Scans for Java org.apache.camel.builder.RouteBuilder instances in the context org.apache.camel.spi.Registry .",properties:{includeNonSingletons:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include non-singleton beans (prototypes) By default only singleton beans is included in the context scan",title:"Include Non Singletons",required:!1,deprecated:!1},excludes:{kind:"element",type:"array",description:"Exclude finding route builder from these java package names.",title:"Excludes",required:!1,deprecated:!1},includes:{kind:"element",type:"array",description:"Include finding route builder from these java package names.",title:"Includes",required:!1,deprecated:!1}}},convertBodyTo:{type:"object",title:"Convert Body To",group:"eip,transformation",icon:"convertBodyTo24.png",description:"Converts the message body to another type",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{type:{kind:"attribute",type:"string",description:"The java type to convert to",title:"Type",required:!0,deprecated:!1},mandatory:{kind:"attribute",type:"boolean",defaultValue:"true",description:"When mandatory then the conversion must return a value (cannot be null), if this is not possible then NoTypeConversionAvailableException is thrown. Setting this to false could mean conversion is not possible and the value is null.",title:"Mandatory",required:!1,deprecated:!1},charset:{kind:"attribute",type:"string",description:"To use a specific charset when converting",title:"Charset",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},customLoadBalancer:{type:"object",title:"Custom Load Balancer",group:"eip,routing",icon:"generic24.png",description:"To use a custom load balancer implementation.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Refers to the custom load balancer to lookup from the registry",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},customServiceFilter:{type:"object",title:"Custom Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",properties:{ref:{kind:"attribute",type:"string",description:"Reference of a ServiceFilter",title:"Ref",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},deadLetterChannel:{type:"object",title:"Dead Letter Channel",group:"configuration,error",icon:"generic24.png",description:"Error handler with dead letter queue.",properties:{deadLetterUri:{kind:"attribute",type:"string",description:"The dead letter endpoint uri for the Dead Letter error handler.",title:"Dead Letter Uri",required:!0,deprecated:!1},deadLetterHandleNewException:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the dead letter channel should handle (and ignore) any new exception that may been thrown during sending the message to the dead letter endpoint. The default value is true which means any such kind of exception is handled and ignored. Set this to false to let the exception be propagated back on the org.apache.camel.Exchange . This can be used in situations where you use transactions, and want to use Camel's dead letter channel to deal with exceptions during routing, but if the dead letter channel itself fails because of a new exception being thrown, then by setting this to false the new exceptions is propagated back and set on the org.apache.camel.Exchange , which allows the transaction to detect the exception, and rollback.",title:"Dead Letter Handle New Exception",required:!1,deprecated:!1},loggerRef:{kind:"attribute",type:"string",description:"References to a logger to use as logger for the error handler",title:"Logger Ref",required:!1,deprecated:!1},level:{kind:"attribute",type:"enum",defaultValue:"ERROR",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level to use when using the logging error handler type.",title:"Level",required:!1,deprecated:!1},logName:{kind:"attribute",type:"string",description:"Name of the logger to use for the logging error handler",title:"Log Name",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message (original body and headers) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},useOriginalBody:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message body (original body only) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Body",required:!1,deprecated:!1},onRedeliveryRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered.",title:"On Redelivery Ref",required:!1,deprecated:!1},onExceptionOccurredRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed just after an exception occurred. Can be used to perform custom logging about the occurred exception at the exact time it happened. Important: Any exception thrown from this processor will be ignored.",title:"On Exception Occurred Ref",required:!1,deprecated:!1},onPrepareFailureRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor to prepare the org.apache.camel.Exchange before handled by the failure processor / dead letter channel. This allows for example to enrich the message before sending to a dead letter queue.",title:"On Prepare Failure Ref",required:!1,deprecated:!1},retryWhileRef:{kind:"attribute",type:"object",description:"Sets a retry while predicate. Will continue retrying until the predicate evaluates to false.",title:"Retry While Ref",required:!1,deprecated:!1},redeliveryPolicyRef:{kind:"attribute",type:"object",description:"Sets a reference to a RedeliveryPolicy to be used for redelivery settings.",title:"Redelivery Policy Ref",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"object",description:"Sets a reference to a thread pool to be used by the error handler",title:"Executor Service Ref",required:!1,deprecated:!1},redeliveryPolicy:{kind:"element",type:"object",description:"Sets the redelivery settings",title:"Redelivery Policy",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},defaultErrorHandler:{type:"object",title:"Default Error Handler",group:"configuration,error",icon:"generic24.png",description:"The default error handler.",properties:{loggerRef:{kind:"attribute",type:"string",description:"References to a logger to use as logger for the error handler",title:"Logger Ref",required:!1,deprecated:!1},level:{kind:"attribute",type:"enum",defaultValue:"ERROR",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level to use when using the logging error handler type.",title:"Level",required:!1,deprecated:!1},logName:{kind:"attribute",type:"string",description:"Name of the logger to use for the logging error handler",title:"Log Name",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message (original body and headers) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},useOriginalBody:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message body (original body only) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Body",required:!1,deprecated:!1},onRedeliveryRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered.",title:"On Redelivery Ref",required:!1,deprecated:!1},onExceptionOccurredRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed just after an exception occurred. Can be used to perform custom logging about the occurred exception at the exact time it happened. Important: Any exception thrown from this processor will be ignored.",title:"On Exception Occurred Ref",required:!1,deprecated:!1},onPrepareFailureRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor to prepare the org.apache.camel.Exchange before handled by the failure processor / dead letter channel. This allows for example to enrich the message before sending to a dead letter queue.",title:"On Prepare Failure Ref",required:!1,deprecated:!1},retryWhileRef:{kind:"attribute",type:"object",description:"Sets a retry while predicate. Will continue retrying until the predicate evaluates to false.",title:"Retry While Ref",required:!1,deprecated:!1},redeliveryPolicyRef:{kind:"attribute",type:"object",description:"Sets a reference to a RedeliveryPolicy to be used for redelivery settings.",title:"Redelivery Policy Ref",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"object",description:"Sets a reference to a thread pool to be used by the error handler",title:"Executor Service Ref",required:!1,deprecated:!1},redeliveryPolicy:{kind:"element",type:"object",description:"Sets the redelivery settings",title:"Redelivery Policy",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},defaultLoadBalancer:{type:"object",title:"Default Load Balancer",group:"routing,cloud,load-balancing",icon:"generic24.png",description:"",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},delay:{type:"object",title:"Delay",group:"eip,routing",icon:"generic24.png",description:"Delays processing for a specified length of time",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to define how long time to wait (in millis)",title:"Expression",required:!0,deprecated:!1},asyncDelayed:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Enables asynchronous delay which means the thread will not block while delaying.",title:"Async Delayed",required:!1,deprecated:!1},callerRunsWhenRejected:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the caller should run the task when it was rejected by the thread pool. Is by default true",title:"Caller Runs When Rejected",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"To use a custom Thread Pool if asyncDelay has been enabled.",title:"Executor Service",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},dnsServiceDiscovery:{type:"object",title:"Dns Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{proto:{kind:"attribute",type:"string",defaultValue:"_tcp",description:"The transport protocol of the desired service.",title:"Proto",required:!1,deprecated:!1},domain:{kind:"attribute",type:"string",description:"The domain name;",title:"Domain",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},doCatch:{type:"object",title:"Do Catch",group:"error",icon:"generic24.png",description:"Catches exceptions as part of a try, catch, finally block",properties:{exception:{kind:"element",type:"array",description:"The exception(s) to catch.",title:"Exception",required:!1,deprecated:!1},onWhen:{kind:"element",type:"object",description:"Sets an additional predicate that should be true before the onCatch is triggered. To be used for fine grained controlling whether a thrown exception should be intercepted by this exception type or not.",title:"On When",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},doFinally:{type:"object",title:"Do Finally",group:"error",icon:"generic24.png",description:"Path traversed when a try, catch, finally block exits",properties:{outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},doTry:{type:"object",title:"Do Try",group:"error",icon:"generic24.png",description:"Marks the beginning of a try, catch, finally block",properties:{outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},dynamicRouter:{type:"object",title:"Dynamic Router",group:"eip,routing",icon:"dynamicRouter24.png",description:"Route messages based on dynamic rules",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to call that returns the endpoint(s) to route to in the dynamic routing. Important: The expression will be called in a while loop fashion, until the expression returns null which means the dynamic router is finished.",title:"Expression",required:!0,deprecated:!1},uriDelimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Sets the uri delimiter to use",title:"Uri Delimiter",required:!1,deprecated:!1},ignoreInvalidEndpoints:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoints",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.spi.ProducerCache which is used to cache and reuse producers when using this dynamic router, when uris are reused. Beware that when using dynamic endpoints then it affects how well the cache can be utilized. If each dynamic endpoint is unique then its best to turn off caching by setting this to -1, which allows Camel to not cache both the producers and endpoints; they are regarded as prototype scoped and will be stopped and discarded after use. This reduces memory usage as otherwise producers/endpoints are stored in memory in the caches. However if there are a high degree of dynamic endpoints that have been used before, then it can benefit to use the cache to reuse both producers and endpoints and therefore the cache size can be set accordingly or rely on the default size (1000). If there is a mix of unique and used before dynamic endpoints, then setting a reasonable cache size can help reduce memory usage to avoid storing too many non frequent used producers.",title:"Cache Size",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},enrich:{type:"object",title:"Enrich",group:"eip,transformation",icon:"enrich24.png",description:"Enriches a message with data from a secondary resource",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that computes the endpoint uri to use as the resource endpoint to enrich from",title:"Expression",required:!0,deprecated:!1},aggregationStrategy:{kind:"attribute",type:"object",description:"Sets the AggregationStrategy to be used to merge the reply from the external service, into a single outgoing message. By default Camel will use the reply from the external service as outgoing message.",title:"Aggregation Strategy",required:!1,deprecated:!1},aggregationStrategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Name",required:!1,deprecated:!1},aggregationStrategyMethodAllowNull:{kind:"attribute",type:"string",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Allow Null",required:!1,deprecated:!1},aggregateOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was an exception thrown while trying to retrieve the data to enrich from the resource. Setting this option to true allows end users to control what to do if there was an exception in the aggregate method. For example to suppress the exception or set a custom message body etc.",title:"Aggregate On Exception",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and the resource exchange. Enrich will by default not share unit of work between the parent exchange and the resource exchange. This means the resource exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.spi.ProducerCache which is used to cache and reuse producer when uris are reused. Beware that when using dynamic endpoints then it affects how well the cache can be utilized. If each dynamic endpoint is unique then its best to turn off caching by setting this to -1, which allows Camel to not cache both the producers and endpoints; they are regarded as prototype scoped and will be stopped and discarded after use. This reduces memory usage as otherwise producers/endpoints are stored in memory in the caches. However if there are a high degree of dynamic endpoints that have been used before, then it can benefit to use the cache to reuse both producers and endpoints and therefore the cache size can be set accordingly or rely on the default size (1000). If there is a mix of unique and used before dynamic endpoints, then setting a reasonable cache size can help reduce memory usage to avoid storing too many non frequent used producers.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},allowOptimisedComponents:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow components to optimise enricher if they are org.apache.camel.spi.SendDynamicAware .",title:"Allow Optimised Components",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},errorHandler:{type:"object",title:"Error Handler",group:"configuration,error",icon:"generic24.png",description:"Camel error handling.",properties:{errorHandlerType:{kind:"element",type:"object",description:"The specific error handler in use.",title:"Error Handler Type",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},failover:{type:"object",title:"Failover",group:"eip,routing",icon:"generic24.png",description:"In case of failures the exchange will be tried on the next endpoint.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{exception:{kind:"element",type:"array",description:"A list of class names for specific exceptions to monitor. If no exceptions are configured then all exceptions are monitored",title:"Exception",required:!1,deprecated:!1},roundRobin:{kind:"attribute",type:"string",description:"Whether or not the failover load balancer should operate in round robin mode or not. If not, then it will always start from the first endpoint when a new message is to be processed. In other words it restart from the top for every message. If round robin is enabled, then it keeps state and will continue with the next endpoint in a round robin fashion. You can also enable sticky mode together with round robin, if so then it will pick the last known good endpoint to use when starting the load balancing (instead of using the next when starting).",title:"Round Robin",required:!1,deprecated:!1},sticky:{kind:"attribute",type:"string",description:"Whether or not the failover load balancer should operate in sticky mode or not. If not, then it will always start from the first endpoint when a new message is to be processed. In other words it restart from the top for every message. If sticky is enabled, then it keeps state and will continue with the last known good endpoint. You can also enable sticky mode together with round robin, if so then it will pick the last known good endpoint to use when starting the load balancing (instead of using the next when starting).",title:"Sticky",required:!1,deprecated:!1},maximumFailoverAttempts:{kind:"attribute",type:"string",defaultValue:"-1",description:"A value to indicate after X failover attempts we should exhaust (give up). Use -1 to indicate never give up and continuously try to failover. Use 0 to never failover. And use e.g. 3 to failover at most 3 times before giving up. his option can be used whether or not roundRobin is enabled or not.",title:"Maximum Failover Attempts",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},faultToleranceConfiguration:{type:"object",title:"Fault Tolerance Configuration",group:"configuration,eip",icon:"generic24.png",description:"MicroProfile Fault Tolerance Circuit Breaker EIP configuration",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{circuitBreaker:{kind:"attribute",type:"string",description:"Refers to an existing io.smallrye.faulttolerance.core.circuit.breaker.CircuitBreaker instance to lookup and use from the registry. When using this, then any other circuit breaker options are not in use.",title:"Circuit Breaker",required:!1,deprecated:!1},delay:{kind:"attribute",type:"duration",defaultValue:"5000",description:"Control how long the circuit breaker stays open. The default is 5 seconds.",title:"Delay",required:!1,deprecated:!1},successThreshold:{kind:"attribute",type:"integer",defaultValue:"1",description:"Controls the number of trial calls which are allowed when the circuit breaker is half-open",title:"Success Threshold",required:!1,deprecated:!1},requestVolumeThreshold:{kind:"attribute",type:"integer",defaultValue:"20",description:"Controls the size of the rolling window used when the circuit breaker is closed",title:"Request Volume Threshold",required:!1,deprecated:!1},failureRatio:{kind:"attribute",type:"integer",defaultValue:"50",description:"Configures the failure rate threshold in percentage. If the failure rate is equal or greater than the threshold the CircuitBreaker transitions to open and starts short-circuiting calls. The threshold must be greater than 0 and not greater than 100. Default value is 50 percentage.",title:"Failure Ratio",required:!1,deprecated:!1},timeoutEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether timeout is enabled or not on the circuit breaker. Default is false.",title:"Timeout Enabled",required:!1,deprecated:!1},timeoutDuration:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Configures the thread execution timeout. Default value is 1 second.",title:"Timeout Duration",required:!1,deprecated:!1},timeoutPoolSize:{kind:"attribute",type:"integer",defaultValue:"10",description:"Configures the pool size of the thread pool when timeout is enabled. Default value is 10.",title:"Timeout Pool Size",required:!1,deprecated:!1},timeoutScheduledExecutorService:{kind:"attribute",type:"object",description:"References to a custom thread pool to use when timeout is enabled",title:"Timeout Scheduled Executor Service",required:!1,deprecated:!1},bulkheadEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether bulkhead is enabled or not on the circuit breaker. Default is false.",title:"Bulkhead Enabled",required:!1,deprecated:!1},bulkheadMaxConcurrentCalls:{kind:"attribute",type:"integer",defaultValue:"10",description:"Configures the max amount of concurrent calls the bulkhead will support.",title:"Bulkhead Max Concurrent Calls",required:!1,deprecated:!1},bulkheadWaitingTaskQueue:{kind:"attribute",type:"integer",defaultValue:"10",description:"Configures the task queue size for holding waiting tasks to be processed by the bulkhead.",title:"Bulkhead Waiting Task Queue",required:!1,deprecated:!1},bulkheadExecutorService:{kind:"attribute",type:"object",description:"References to a custom thread pool to use when bulkhead is enabled.",title:"Bulkhead Executor Service",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},filter:{type:"object",title:"Filter",group:"eip,routing",icon:"filter24.png",description:"Filter out messages based using a predicate",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to determine if the message should be filtered or not. If the expression returns an empty value or false then the message is filtered (dropped), otherwise the message is continued being routed.",title:"Expression",required:!0,deprecated:!1},statusPropertyName:{kind:"attribute",type:"string",description:"Name of exchange property to use for storing the status of the filtering. Setting this allows to know if the filter predicate evaluated as true or false.",title:"Status Property Name",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},from:{type:"object",title:"From",group:"eip,routing",icon:"endpoint24.png",description:"Act as a message source as input to a route",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{uri:{kind:"attribute",type:"string",description:"Sets the URI of the endpoint to use",title:"Uri",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},globalOption:{type:"object",title:"Global Option",group:"configuration",icon:"generic24.png",description:"Models a string key/value pair for configuring some global options on a Camel context such as max debug log length.",properties:{key:{kind:"attribute",type:"string",description:"Global option key",title:"Key",required:!0,deprecated:!1},value:{kind:"attribute",type:"string",description:"Global option value",title:"Value",required:!0,deprecated:!1}}},globalOptions:{type:"object",title:"Global Options",group:"configuration",icon:"generic24.png",description:"Models a series of string key/value pairs for configuring some global options on a Camel context such as max debug log length.",properties:{globalOption:{kind:"element",type:"array",description:"A series of global options as key value pairs",title:"Global Option",required:!1,deprecated:!1}}},healthyServiceFilter:{type:"object",title:"Healthy Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},idempotentConsumer:{type:"object",title:"Idempotent Consumer",group:"eip,routing",icon:"idempotentConsumer24.png",description:"Filters out duplicate messages",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression used to calculate the correlation key to use for duplicate check. The Exchange which has the same correlation key is regarded as a duplicate and will be rejected.",title:"Expression",required:!0,deprecated:!1},idempotentRepository:{kind:"attribute",type:"object",description:"Sets the reference name of the message id repository",title:"Idempotent Repository",required:!1,deprecated:!1},eager:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether to eagerly add the key to the idempotent repository or wait until the exchange is complete. Eager is default enabled.",title:"Eager",required:!1,deprecated:!1},completionEager:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether to complete the idempotent consumer eager or when the exchange is done. If this option is true to complete eager, then the idempotent consumer will trigger its completion when the exchange reached the end of the block of the idempotent consumer pattern. So if the exchange is continued routed after the block ends, then whatever happens there does not affect the state. If this option is false (default) to not complete eager, then the idempotent consumer will complete when the exchange is done being routed. So if the exchange is continued routed after the block ends, then whatever happens there also affect the state. For example if the exchange failed due to an exception, then the state of the idempotent consumer will be a rollback.",title:"Completion Eager",required:!1,deprecated:!1},skipDuplicate:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether to skip duplicates or not. The default behavior is to skip duplicates. A duplicate message would have the Exchange property org.apache.camel.Exchange#DUPLICATE_MESSAGE set to a Boolean#TRUE value. A none duplicate message will not have this property set.",title:"Skip Duplicate",required:!1,deprecated:!1},removeOnFailure:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether to remove or keep the key on failure. The default behavior is to remove the key on failure.",title:"Remove On Failure",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},inputType:{type:"object",title:"Input Type",group:"configuration",icon:"generic24.png",description:"Set the expected data type of the input message. If the actual message type is different at runtime, camel look for a required Transformer and apply if exists. If validate attribute is true then camel applies Validator as well. Type name consists of two parts, 'scheme' and 'name' connected with ':'. For Java type 'name' is a fully qualified class name. For example {code java:java.lang.String} , {code json:ABCOrder} . It's also possible to specify only scheme part, so that it works like a wildcard. If only 'xml' is specified, all the XML message matches. It's handy to add only one transformer/validator for all the transformation from/to XML.",properties:{urn:{kind:"attribute",type:"string",description:"The input type URN.",title:"Urn",required:!0,deprecated:!1},validate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether if validation is required for this input type.",title:"Validate",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},intercept:{type:"object",title:"Intercept",group:"configuration",icon:"generic24.png",description:"Intercepts a message at each step in the route",properties:{outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},interceptFrom:{type:"object",title:"Intercept From",group:"configuration",icon:"generic24.png",description:"Intercepts incoming messages",properties:{uri:{kind:"attribute",type:"string",description:"Intercept incoming messages from the uri or uri pattern. If this option is not configured, then all incoming messages is intercepted.",title:"Uri",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},interceptSendToEndpoint:{type:"object",title:"Intercept Send To Endpoint",group:"configuration",icon:"generic24.png",description:"Intercepts messages being sent to an endpoint",properties:{uri:{kind:"attribute",type:"string",description:"Intercept sending to the uri or uri pattern.",title:"Uri",required:!0,deprecated:!1},skipSendToOriginalEndpoint:{kind:"attribute",type:"string",description:"If set to true then the message is not sent to the original endpoint. By default (false) the message is both intercepted and then sent to the original endpoint.",title:"Skip Send To Original Endpoint",required:!1,deprecated:!1},afterUri:{kind:"attribute",type:"string",description:"After sending to the endpoint then send the message to this uri which allows to process its result.",title:"After Uri",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},jtaTransactionErrorHandler:{type:"object",title:"Jta Transaction Error Handler",group:"configuration,error",icon:"generic24.png",description:"JTA based transactional error handler (requires camel-jta).",properties:{transactedPolicyRef:{kind:"attribute",type:"object",description:"The transacted policy to use that is configured for either Spring or JTA based transactions. If no policy has been configured then Camel will attempt to auto-discover.",title:"Transacted Policy Ref",required:!1,deprecated:!1},rollbackLoggingLevel:{kind:"attribute",type:"enum",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Sets the logging level to use for logging transactional rollback. This option is default WARN.",title:"Rollback Logging Level",required:!1,deprecated:!1},loggerRef:{kind:"attribute",type:"string",description:"References to a logger to use as logger for the error handler",title:"Logger Ref",required:!1,deprecated:!1},level:{kind:"attribute",type:"enum",defaultValue:"ERROR",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level to use when using the logging error handler type.",title:"Level",required:!1,deprecated:!1},logName:{kind:"attribute",type:"string",description:"Name of the logger to use for the logging error handler",title:"Log Name",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message (original body and headers) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},useOriginalBody:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message body (original body only) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Body",required:!1,deprecated:!1},onRedeliveryRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered.",title:"On Redelivery Ref",required:!1,deprecated:!1},onExceptionOccurredRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed just after an exception occurred. Can be used to perform custom logging about the occurred exception at the exact time it happened. Important: Any exception thrown from this processor will be ignored.",title:"On Exception Occurred Ref",required:!1,deprecated:!1},onPrepareFailureRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor to prepare the org.apache.camel.Exchange before handled by the failure processor / dead letter channel. This allows for example to enrich the message before sending to a dead letter queue.",title:"On Prepare Failure Ref",required:!1,deprecated:!1},retryWhileRef:{kind:"attribute",type:"object",description:"Sets a retry while predicate. Will continue retrying until the predicate evaluates to false.",title:"Retry While Ref",required:!1,deprecated:!1},redeliveryPolicyRef:{kind:"attribute",type:"object",description:"Sets a reference to a RedeliveryPolicy to be used for redelivery settings.",title:"Redelivery Policy Ref",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"object",description:"Sets a reference to a thread pool to be used by the error handler",title:"Executor Service Ref",required:!1,deprecated:!1},redeliveryPolicy:{kind:"element",type:"object",description:"Sets the redelivery settings",title:"Redelivery Policy",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},kamelet:{type:"object",title:"Kamelet",group:"eip,routing",icon:"generic24.png",description:"To call Kamelets in special situations",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{name:{kind:"attribute",type:"string",description:"Name of the Kamelet (templateId/routeId) to call. Options for the kamelet can be specified using uri syntax, eg mynamecount=4&type=gold.",title:"Name",required:!0,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},kubernetesServiceDiscovery:{type:"object",title:"Kubernetes Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{lookup:{kind:"attribute",type:"enum",defaultValue:"environment",enum:["environment","dns","client"],description:"How to perform service lookup. Possible values: client, dns, environment. When using client, then the client queries the kubernetes master to obtain a list of active pods that provides the service, and then random (or round robin) select a pod. When using dns the service name is resolved as name.namespace.svc.dnsDomain. When using dnssrv the service name is resolved with SRV query for _._...svc... When using environment then environment variables are used to lookup the service. By default environment is used.",title:"Lookup",required:!1,deprecated:!1},dnsDomain:{kind:"attribute",type:"string",description:"Sets the DNS domain to use for DNS lookup.",title:"Dns Domain",required:!1,deprecated:!1},portName:{kind:"attribute",type:"string",description:"Sets the Port Name to use for DNS/DNSSRV lookup.",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"attribute",type:"string",description:"Sets the Port Protocol to use for DNS/DNSSRV lookup.",title:"Port Protocol",required:!1,deprecated:!1},namespace:{kind:"attribute",type:"string",description:"Sets the namespace to use. Will by default use namespace from the ENV variable KUBERNETES_MASTER.",title:"Namespace",required:!1,deprecated:!1},apiVersion:{kind:"attribute",type:"string",description:"Sets the API version when using client lookup",title:"Api Version",required:!1,deprecated:!1},masterUrl:{kind:"attribute",type:"string",description:"Sets the URL to the master when using client lookup",title:"Master Url",required:!1,deprecated:!1},username:{kind:"attribute",type:"string",description:"Sets the username for authentication when using client lookup",title:"Username",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"Sets the password for authentication when using client lookup",title:"Password",required:!1,deprecated:!1},oauthToken:{kind:"attribute",type:"string",description:"Sets the OAUTH token for authentication (instead of username/password) when using client lookup",title:"Oauth Token",required:!1,deprecated:!1},caCertData:{kind:"attribute",type:"string",description:"Sets the Certificate Authority data when using client lookup",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"attribute",type:"string",description:"Sets the Certificate Authority data that are loaded from the file when using client lookup",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"attribute",type:"string",description:"Sets the Client Certificate data when using client lookup",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"attribute",type:"string",description:"Sets the Client Certificate data that are loaded from the file when using client lookup",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"attribute",type:"string",description:"Sets the Client Keystore algorithm, such as RSA when using client lookup",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"attribute",type:"string",description:"Sets the Client Keystore data when using client lookup",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"attribute",type:"string",description:"Sets the Client Keystore data that are loaded from the file when using client lookup",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"attribute",type:"string",description:"Sets the Client Keystore passphrase when using client lookup",title:"Client Key Passphrase",required:!1,deprecated:!1},trustCerts:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether to turn on trust certificate check when using client lookup",title:"Trust Certs",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},loadBalance:{type:"object",title:"Load Balance",group:"eip,routing",icon:"loadBalance24.png",description:"Balances message processing among a number of nodes",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{loadBalancerType:{kind:"element",type:"object",description:"The load balancer to be used",title:"Load Balancer Type",required:!0,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},inheritErrorHandler:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to inherit the configured error handler. The default value is true. You can use this to disable using the inherited error handler for a given DSL such as a load balancer where you want to use a custom error handler strategy.",title:"Inherit Error Handler",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},loadBalancerConfiguration:{type:"object",title:"Load Balancer Configuration",group:"routing,cloud,load-balancing",icon:"generic24.png",description:"",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},log:{type:"object",title:"Log",group:"eip,routing",icon:"log24.png",description:"Logs the defined message to the logger",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{message:{kind:"attribute",type:"string",description:"Sets the log message (uses simple language)",title:"Message",required:!0,deprecated:!1},loggingLevel:{kind:"attribute",type:"enum",defaultValue:"INFO",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Sets the logging level. The default value is INFO",title:"Logging Level",required:!1,deprecated:!1},logName:{kind:"attribute",type:"string",description:"Sets the name of the logger",title:"Log Name",required:!1,deprecated:!1},marker:{kind:"attribute",type:"string",description:"To use slf4j marker",title:"Marker",required:!1,deprecated:!1},logger:{kind:"attribute",type:"object",description:"To refer to a custom logger instance to lookup from the registry.",title:"Logger",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},loop:{type:"object",title:"Loop",group:"eip,routing",icon:"generic24.png",description:"Processes a message multiple times",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to define how many times we should loop. Notice the expression is only evaluated once, and should return a number as how many times to loop. A value of zero or negative means no looping. The loop is like a for-loop fashion, if you want a while loop, then the dynamic router may be a better choice.",title:"Expression",required:!0,deprecated:!1},copy:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the copy attribute is true, a copy of the input Exchange is used for each iteration. That means each iteration will start from a copy of the same message. By default loop will loop the same exchange all over, so each iteration may have different message content.",title:"Copy",required:!1,deprecated:!1},doWhile:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables the while loop that loops until the predicate evaluates to false or null.",title:"Do While",required:!1,deprecated:!1},breakOnShutdown:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the breakOnShutdown attribute is true, then the loop will not iterate until it reaches the end when Camel is shut down.",title:"Break On Shutdown",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},multicast:{type:"object",title:"Multicast",group:"eip,routing",icon:"multicast24.png",description:"Routes the same message to multiple paths either sequentially or in parallel.",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{aggregationStrategy:{kind:"attribute",type:"object",description:"Refers to an AggregationStrategy to be used to assemble the replies from the multicasts, into a single outgoing message from the Multicast. By default Camel will use the last reply as the outgoing message. You can also use a POJO as the AggregationStrategy",title:"Aggregation Strategy",required:!1,deprecated:!1},aggregationStrategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Name",required:!1,deprecated:!1},aggregationStrategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy",title:"Aggregation Strategy Method Allow Null",required:!1,deprecated:!1},parallelAggregate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe.",title:"Parallel Aggregate",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then sending messages to the multicasts occurs concurrently. Note the caller thread will still wait until all messages has been fully processed, before it continues. Its only the sending and processing the replies from the multicasts which happens concurrently. When parallel processing is enabled, then the Camel routing engin will continue processing using last used thread from the parallel thread pool. However, if you want to use the original thread that called the multicast, then make sure to enable the synchronous option as well.",title:"Parallel Processing",required:!1,deprecated:!1},synchronous:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used. When enabled then the same thread is used to continue routing after the multicast is complete, even if parallel processing is enabled.",title:"Synchronous",required:!1,deprecated:!1},streaming:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Camel will process replies out-of-order, eg in the order they come back. If disabled, Camel will process replies in the same order as defined by the multicast.",title:"Streaming",required:!1,deprecated:!1},stopOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the multicast will stop further processing. This is the same behavior as in pipeline, which is used by the routing engine. The default behavior is to not stop but continue processing till the end",title:"Stop On Exception",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"duration",defaultValue:"0",description:"Sets a total timeout specified in millis, when using parallel processing. If the Multicast hasn't been able to send and process all replies within the given timeframe, then the timeout triggers and the Multicast breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining, certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care.",title:"Timeout",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatic implied, and you do not have to enable that option as well.",title:"Executor Service",required:!1,deprecated:!1},onPrepare:{kind:"attribute",type:"object",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send, or any custom logic needed before the exchange is send.",title:"On Prepare",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Multicast will by default not share unit of work between the parent exchange and each multicasted exchange. This means each sub exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},noErrorHandler:{type:"object",title:"No Error Handler",group:"configuration,error",icon:"generic24.png",description:"To not use an error handler.",properties:{id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},onCompletion:{type:"object",title:"On Completion",group:"configuration",icon:"generic24.png",description:"Route to be executed when normal route processing completes",properties:{mode:{kind:"attribute",type:"enum",defaultValue:"AfterConsumer",enum:["AfterConsumer","BeforeConsumer"],description:"Sets the on completion mode. The default value is AfterConsumer",title:"Mode",required:!1,deprecated:!1},onCompleteOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will only synchronize when the org.apache.camel.Exchange completed successfully (no errors).",title:"On Complete Only",required:!1,deprecated:!1},onFailureOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will only synchronize when the org.apache.camel.Exchange ended with failure (exception or FAULT message).",title:"On Failure Only",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the on completion process will run asynchronously by a separate thread from a thread pool. By default this is false, meaning the on completion process will run synchronously using the same caller thread as from the route.",title:"Parallel Processing",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"To use a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatic implied, and you do not have to enable that option as well.",title:"Executor Service",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input message body when an org.apache.camel.Exchange for this on completion. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the split message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},onWhen:{kind:"element",type:"object",description:"Sets an additional predicate that should be true before the onCompletion is triggered. To be used for fine grained controlling whether a completion callback should be invoked or not",title:"On When",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},onException:{type:"object",title:"On Exception",group:"error",icon:"generic24.png",description:"Route to be executed when an exception is thrown",properties:{exception:{kind:"element",type:"array",description:"A set of exceptions to react upon.",title:"Exception",required:!0,deprecated:!1},onWhen:{kind:"element",type:"object",description:"Sets an additional predicate that should be true before the onException is triggered. To be used for fine grained controlling whether a thrown exception should be intercepted by this exception type or not.",title:"On When",required:!1,deprecated:!1},retryWhile:{kind:"expression",type:"object",description:"Sets the retry while predicate. Will continue retrying until predicate returns false.",title:"Retry While",required:!1,deprecated:!1},redeliveryPolicy:{kind:"element",type:"object",description:"Used for configuring redelivery options",title:"Redelivery Policy",required:!1,deprecated:!1},redeliveryPolicyRef:{kind:"attribute",type:"string",description:"Sets a reference to a redelivery policy to lookup in the org.apache.camel.spi.Registry to be used.",title:"Redelivery Policy Ref",required:!1,deprecated:!1},handled:{kind:"expression",type:"object",description:"Sets whether the exchange should be marked as handled or not.",title:"Handled",required:!1,deprecated:!1},continued:{kind:"expression",type:"object",description:"Sets whether the exchange should handle and continue routing from the point of failure. If this option is enabled then its considered handled as well.",title:"Continued",required:!1,deprecated:!1},onRedeliveryRef:{kind:"attribute",type:"string",description:"Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered.",title:"On Redelivery Ref",required:!1,deprecated:!1},onExceptionOccurredRef:{kind:"attribute",type:"string",description:"Sets a reference to a processor that should be processed just after an exception occurred. Can be used to perform custom logging about the occurred exception at the exact time it happened. Important: Any exception thrown from this processor will be ignored.",title:"On Exception Occurred Ref",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message (original body and headers) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the split message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},useOriginalBody:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message body (original body only) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the split message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Body",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},onFallback:{type:"object",title:"On Fallback",group:"eip,routing",icon:"generic24.png",description:"Route to be executed when Circuit Breaker EIP executes fallback",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{fallbackViaNetwork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the fallback goes over the network. If the fallback will go over the network it is another possible point of failure. It is important to execute the fallback command on a separate thread-pool, otherwise if the main command were to become latent and fill the thread-pool this would prevent the fallback from running if the two commands share the same pool.",title:"Fallback Via Network",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},optimisticLockRetryPolicy:{type:"object",title:"Optimistic Lock Retry Policy",group:"configuration",icon:"generic24.png",description:"To configure optimistic locking",properties:{maximumRetries:{kind:"attribute",type:"integer",description:"Sets the maximum number of retries",title:"Maximum Retries",required:!1,deprecated:!1},retryDelay:{kind:"attribute",type:"duration",defaultValue:"50",description:"Sets the delay in millis between retries",title:"Retry Delay",required:!1,deprecated:!1},maximumRetryDelay:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Sets the upper value of retry in millis between retries, when using exponential or random backoff",title:"Maximum Retry Delay",required:!1,deprecated:!1},exponentialBackOff:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Enable exponential backoff",title:"Exponential Back Off",required:!1,deprecated:!1},randomBackOff:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables random backoff",title:"Random Back Off",required:!1,deprecated:!1}}},otherwise:{type:"object",title:"Otherwise",group:"eip,routing",icon:"generic24.png",description:"Route to be executed when all other choices evaluate to false",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},outputType:{type:"object",title:"Output Type",group:"configuration",icon:"generic24.png",description:"Set the expected data type of the output message. If the actual message type is different at runtime, camel look for a required Transformer and apply if exists. If validate attribute is true then camel applies Validator as well. Type name consists of two parts, 'scheme' and 'name' connected with ':'. For Java type 'name' is a fully qualified class name. For example {code java:java.lang.String} , {code json:ABCOrder} . It's also possible to specify only scheme part, so that it works like a wildcard. If only 'xml' is specified, all the XML message matches. It's handy to add only one transformer/validator for all the XML-Java transformation.",properties:{urn:{kind:"attribute",type:"string",description:"Set output type URN.",title:"Urn",required:!0,deprecated:!1},validate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether if validation is required for this output type.",title:"Validate",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},packageScan:{type:"object",title:"Package Scan",group:"configuration",icon:"generic24.png",description:"Scans for Java org.apache.camel.builder.RouteBuilder classes in java packages",properties:{package:{kind:"element",type:"array",description:"Sets the java package names to use for scanning for route builder classes",title:"Package",required:!0,deprecated:!1},excludes:{kind:"element",type:"array",description:"Exclude finding route builder from these java package names.",title:"Excludes",required:!1,deprecated:!1},includes:{kind:"element",type:"array",description:"Include finding route builder from these java package names.",title:"Includes",required:!1,deprecated:!1}}},passThroughServiceFilter:{type:"object",title:"Pass Through Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},pausable:{type:"object",title:"Pausable",group:"eip,routing",icon:"generic24.png",description:"Pausable EIP to support resuming processing from last known offset.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{consumerListener:{kind:"attribute",type:"object",description:"Sets the consumer listener to use",title:"Consumer Listener",required:!0,deprecated:!1},untilCheck:{kind:"attribute",type:"object",description:"References to a java.util.function.Predicate to use for until checks. The predicate is responsible for evaluating whether the processing can resume or not. Such predicate should return true if the consumption can resume, or false otherwise. The exact point of when the predicate is called is dependent on the component, and it may be called on either one of the available events. Implementations should not assume the predicate to be called at any specific point.",title:"Until Check",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},pipeline:{type:"object",title:"Pipeline",group:"eip,routing",icon:"pipeline24.png",description:"Routes the message to a sequence of processors.",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},policy:{type:"object",title:"Policy",group:"configuration",icon:"generic24.png",description:"Defines a policy the route will use",properties:{ref:{kind:"attribute",type:"string",description:"Sets a reference to use for lookup the policy in the registry.",title:"Ref",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},pollEnrich:{type:"object",title:"Poll Enrich",group:"eip,transformation",icon:"pollEnrich24.png",description:"Enriches messages with data polled from a secondary resource",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that computes the endpoint uri to use as the resource endpoint to enrich from",title:"Expression",required:!0,deprecated:!1},aggregationStrategy:{kind:"attribute",type:"object",description:"Sets the AggregationStrategy to be used to merge the reply from the external service, into a single outgoing message. By default Camel will use the reply from the external service as outgoing message.",title:"Aggregation Strategy",required:!1,deprecated:!1},aggregationStrategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Name",required:!1,deprecated:!1},aggregationStrategyMethodAllowNull:{kind:"attribute",type:"string",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Allow Null",required:!1,deprecated:!1},aggregateOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was an exception thrown while trying to retrieve the data to enrich from the resource. Setting this option to true allows end users to control what to do if there was an exception in the aggregate method. For example to suppress the exception or set a custom message body etc.",title:"Aggregate On Exception",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"duration",defaultValue:"-1",description:"Timeout in millis when polling from the external service. The timeout has influence about the poll enrich behavior. It basically operations in three different modes: negative value - Waits until a message is available and then returns it. Warning that this method could block indefinitely if no messages are available. 0 - Attempts to receive a message exchange immediately without waiting and returning null if a message exchange is not available yet. positive value - Attempts to receive a message exchange, waiting up to the given timeout to expire if a message is not yet available. Returns null if timed out The default value is -1 and therefore the method could block indefinitely, and therefore its recommended to use a timeout value",title:"Timeout",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.spi.ConsumerCache which is used to cache and reuse consumers when uris are reused. Beware that when using dynamic endpoints then it affects how well the cache can be utilized. If each dynamic endpoint is unique then its best to turn off caching by setting this to -1, which allows Camel to not cache both the producers and endpoints; they are regarded as prototype scoped and will be stopped and discarded after use. This reduces memory usage as otherwise producers/endpoints are stored in memory in the caches. However if there are a high degree of dynamic endpoints that have been used before, then it can benefit to use the cache to reuse both producers and endpoints and therefore the cache size can be set accordingly or rely on the default size (1000). If there is a mix of unique and used before dynamic endpoints, then setting a reasonable cache size can help reduce memory usage to avoid storing too many non frequent used producers.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},process:{type:"object",title:"Process",group:"eip,endpoint",icon:"process24.png",description:"Calls a Camel processor",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the Processor to lookup in the registry to use. Can also be used for creating new beans by their class name by prefixing with #class, eg #class:com.foo.MyClassType. And it is also possible to refer to singleton beans by their type in the registry by prefixing with #type: syntax, eg #type:com.foo.MyClassType",title:"Ref",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},property:{type:"object",title:"Property",group:"configuration",icon:"generic24.png",description:"A key value pair where the value is a literal value",properties:{key:{kind:"attribute",type:"string",description:"Property key",title:"Key",required:!0,deprecated:!1},value:{kind:"attribute",type:"string",description:"Property value",title:"Value",required:!0,deprecated:!1}}},propertyExpression:{type:"object",title:"Property Expression",group:"configuration",icon:"generic24.png",description:"A key value pair where the value is an expression.",properties:{key:{kind:"attribute",type:"string",description:"Property key",title:"Key",required:!0,deprecated:!1},expression:{kind:"expression",type:"object",description:"Property values as an expression",title:"Expression",required:!0,deprecated:!1}}},random:{type:"object",title:"Random",group:"eip,routing",icon:"generic24.png",description:"The destination endpoints are selected by random.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},recipientList:{type:"object",title:"Recipient List",group:"eip,routing",icon:"recipientList24.png",description:"Route messages to a number of dynamically specified recipients",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that returns which endpoints (url) to send the message to (the recipients). If the expression return an empty value then the message is not sent to any recipients.",title:"Expression",required:!0,deprecated:!1},delimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Delimiter used if the Expression returned multiple endpoints. Can be turned off using the value false. The default value is ,",title:"Delimiter",required:!1,deprecated:!1},aggregationStrategy:{kind:"attribute",type:"object",description:"Sets the AggregationStrategy to be used to assemble the replies from the recipients, into a single outgoing message from the RecipientList. By default Camel will use the last reply as the outgoing message. You can also use a POJO as the AggregationStrategy",title:"Aggregation Strategy",required:!1,deprecated:!1},aggregationStrategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Name",required:!1,deprecated:!1},aggregationStrategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy",title:"Aggregation Strategy Method Allow Null",required:!1,deprecated:!1},parallelAggregate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe.",title:"Parallel Aggregate",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then sending messages to the recipients occurs concurrently. Note the caller thread will still wait until all messages has been fully processed, before it continues. Its only the sending and processing the replies from the recipients which happens concurrently. When parallel processing is enabled, then the Camel routing engin will continue processing using last used thread from the parallel thread pool. However, if you want to use the original thread that called the recipient list, then make sure to enable the synchronous option as well.",title:"Parallel Processing",required:!1,deprecated:!1},synchronous:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used. When enabled then the same thread is used to continue routing after the recipient list is complete, even if parallel processing is enabled.",title:"Synchronous",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"duration",defaultValue:"0",description:"Sets a total timeout specified in millis, when using parallel processing. If the Recipient List hasn't been able to send and process all replies within the given timeframe, then the timeout triggers and the Recipient List breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining, certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care.",title:"Timeout",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"To use a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatic implied, and you do not have to enable that option as well.",title:"Executor Service",required:!1,deprecated:!1},stopOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the recipient list will stop further processing. This is the same behavior as in pipeline, which is used by the routing engine. The default behavior is to not stop but continue processing till the end",title:"Stop On Exception",required:!1,deprecated:!1},ignoreInvalidEndpoints:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoints",required:!1,deprecated:!1},streaming:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Camel will process replies out-of-order, eg in the order they come back. If disabled, Camel will process replies in the same order as defined by the recipient list.",title:"Streaming",required:!1,deprecated:!1},onPrepare:{kind:"attribute",type:"object",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be used send. This can be used to deep-clone messages that should be send, or any custom logic needed before the exchange is send.",title:"On Prepare",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.spi.ProducerCache which is used to cache and reuse producers when using this recipient list, when uris are reused. Beware that when using dynamic endpoints then it affects how well the cache can be utilized. If each dynamic endpoint is unique then its best to turn off caching by setting this to -1, which allows Camel to not cache both the producers and endpoints; they are regarded as prototype scoped and will be stopped and discarded after use. This reduces memory usage as otherwise producers/endpoints are stored in memory in the caches. However if there are a high degree of dynamic endpoints that have been used before, then it can benefit to use the cache to reuse both producers and endpoints and therefore the cache size can be set accordingly or rely on the default size (1000). If there is a mix of unique and used before dynamic endpoints, then setting a reasonable cache size can help reduce memory usage to avoid storing too many non frequent used producers.",title:"Cache Size",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Recipient List will by default not share unit of work between the parent exchange and each recipient exchange. This means each sub exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},redeliveryPolicy:{type:"object",title:"Redelivery Policy",group:"configuration",icon:"generic24.png",description:"To configure re-delivery for error handling",properties:{maximumRedeliveries:{kind:"attribute",type:"integer",description:"Sets the maximum redeliveries x = redeliver at most x times 0 = no redeliveries -1 = redeliver forever",title:"Maximum Redeliveries",required:!1,deprecated:!1},redeliveryDelay:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Sets the initial redelivery delay",title:"Redelivery Delay",required:!1,deprecated:!1},asyncDelayedRedelivery:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allow asynchronous delayed redelivery. The route, in particular the consumer's component, must support the Asynchronous Routing Engine (e.g. seda).",title:"Async Delayed Redelivery",required:!1,deprecated:!1},backOffMultiplier:{kind:"attribute",type:"number",defaultValue:"2.0",description:"Sets the back off multiplier",title:"Back Off Multiplier",required:!1,deprecated:!1},useExponentialBackOff:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Turn on exponential backk off",title:"Use Exponential Back Off",required:!1,deprecated:!1},collisionAvoidanceFactor:{kind:"attribute",type:"number",defaultValue:"0.15",description:"Sets the collision avoidance factor",title:"Collision Avoidance Factor",required:!1,deprecated:!1},useCollisionAvoidance:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Turn on collision avoidance.",title:"Use Collision Avoidance",required:!1,deprecated:!1},maximumRedeliveryDelay:{kind:"attribute",type:"duration",defaultValue:"60000",description:"Sets the maximum delay between redelivery",title:"Maximum Redelivery Delay",required:!1,deprecated:!1},retriesExhaustedLogLevel:{kind:"attribute",type:"object",defaultValue:"ERROR",description:"Sets the logging level to use when retries have been exhausted",title:"Retries Exhausted Log Level",required:!1,deprecated:!1},retryAttemptedLogLevel:{kind:"attribute",type:"object",defaultValue:"DEBUG",description:"Sets the logging level to use for logging retry attempts",title:"Retry Attempted Log Level",required:!1,deprecated:!1},retryAttemptedLogInterval:{kind:"attribute",type:"integer",defaultValue:"1",description:"Sets the interval to use for logging retry attempts",title:"Retry Attempted Log Interval",required:!1,deprecated:!1},logRetryAttempted:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether retry attempts should be logged or not. Can be used to include or reduce verbose.",title:"Log Retry Attempted",required:!1,deprecated:!1},logStackTrace:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether stack traces should be logged. Can be used to include or reduce verbose.",title:"Log Stack Trace",required:!1,deprecated:!1},logRetryStackTrace:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether stack traces should be logged when an retry attempt failed. Can be used to include or reduce verbose.",title:"Log Retry Stack Trace",required:!1,deprecated:!1},logHandled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether handled exceptions should be logged or not. Can be used to include or reduce verbose.",title:"Log Handled",required:!1,deprecated:!1},logNewException:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether new exceptions should be logged or not. Can be used to include or reduce verbose. A new exception is an exception that was thrown while handling a previous exception.",title:"Log New Exception",required:!1,deprecated:!1},logContinued:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether continued exceptions should be logged or not. Can be used to include or reduce verbose.",title:"Log Continued",required:!1,deprecated:!1},logExhausted:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether exhausted exceptions should be logged or not. Can be used to include or reduce verbose.",title:"Log Exhausted",required:!1,deprecated:!1},logExhaustedMessageHistory:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether exhausted exceptions should be logged including message history or not (supports property placeholders). Can be used to include or reduce verbose.",title:"Log Exhausted Message History",required:!1,deprecated:!1},logExhaustedMessageBody:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether exhausted message body should be logged including message history or not (supports property placeholders). Can be used to include or reduce verbose. Requires logExhaustedMessageHistory to be enabled.",title:"Log Exhausted Message Body",required:!1,deprecated:!1},disableRedelivery:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Disables redelivery (same as setting maximum redeliveries to 0)",title:"Disable Redelivery",required:!1,deprecated:!1},delayPattern:{kind:"attribute",type:"string",description:"Sets the delay pattern with delay intervals.",title:"Delay Pattern",required:!1,deprecated:!1},allowRedeliveryWhileStopping:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Controls whether to allow redelivery while stopping/shutting down a route that uses error handling.",title:"Allow Redelivery While Stopping",required:!1,deprecated:!1},exchangeFormatterRef:{kind:"attribute",type:"string",description:"Sets the reference of the instance of org.apache.camel.spi.ExchangeFormatter to generate the log message from exchange.",title:"Exchange Formatter Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},refErrorHandler:{type:"object",title:"Ref Error Handler",group:"configuration,error",icon:"generic24.png",description:"References to an existing or custom error handler.",properties:{ref:{kind:"attribute",type:"object",description:"References to an existing or custom error handler.",title:"Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},removeHeader:{type:"object",title:"Remove Header",group:"eip,transformation",icon:"generic24.png",description:"Removes a named header from the message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{name:{kind:"attribute",type:"string",description:"Name of header to remove",title:"Name",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},removeHeaders:{type:"object",title:"Remove Headers",group:"eip,transformation",icon:"generic24.png",description:"Removes message headers whose name matches a specified pattern",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{pattern:{kind:"attribute",type:"string",description:"Name or pattern of headers to remove. The pattern is matched in the following order: 1 = exact match 2 = wildcard (pattern ends with a and the name starts with the pattern) 3 = regular expression (all of above is case in-sensitive).",title:"Pattern",required:!0,deprecated:!1},excludePattern:{kind:"attribute",type:"string",description:"Name or patter of headers to not remove. The pattern is matched in the following order: 1 = exact match 2 = wildcard (pattern ends with a and the name starts with the pattern) 3 = regular expression (all of above is case in-sensitive).",title:"Exclude Pattern",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},removeProperties:{type:"object",title:"Remove Properties",group:"eip,transformation",icon:"generic24.png",description:"Removes message exchange properties whose name matches a specified pattern",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{pattern:{kind:"attribute",type:"string",description:"Name or pattern of properties to remove. The pattern is matched in the following order: 1 = exact match 2 = wildcard (pattern ends with a and the name starts with the pattern) 3 = regular expression (all of above is case in-sensitive).",title:"Pattern",required:!0,deprecated:!1},excludePattern:{kind:"attribute",type:"string",description:"Name or pattern of properties to not remove. The pattern is matched in the following order: 1 = exact match 2 = wildcard (pattern ends with a and the name starts with the pattern) 3 = regular expression (all of above is case in-sensitive).",title:"Exclude Pattern",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},removeProperty:{type:"object",title:"Remove Property",group:"eip,transformation",icon:"generic24.png",description:"Removes a named property from the message exchange",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{name:{kind:"attribute",type:"string",description:"Name of property to remove.",title:"Name",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},resequence:{type:"object",title:"Resequence",group:"eip,routing",icon:"resequence24.png",description:"Resequences (re-order) messages based on an expression",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to use for re-ordering the messages, such as a header with a sequence number",title:"Expression",required:!0,deprecated:!1},resequencerConfig:{kind:"element",type:"object",description:"To configure the resequencer in using either batch or stream configuration. Will by default use batch configuration.",title:"Resequencer Config",required:!0,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},resilience4jConfiguration:{type:"object",title:"Resilience4j Configuration",group:"configuration,eip",icon:"generic24.png",description:"Resilience4j Circuit Breaker EIP configuration",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{circuitBreaker:{kind:"attribute",type:"string",description:"Refers to an existing io.github.resilience4j.circuitbreaker.CircuitBreaker instance to lookup and use from the registry. When using this, then any other circuit breaker options are not in use.",title:"Circuit Breaker",required:!1,deprecated:!1},config:{kind:"attribute",type:"string",description:"Refers to an existing io.github.resilience4j.circuitbreaker.CircuitBreakerConfig instance to lookup and use from the registry.",title:"Config",required:!1,deprecated:!1},failureRateThreshold:{kind:"attribute",type:"number",defaultValue:"50",description:"Configures the failure rate threshold in percentage. If the failure rate is equal or greater than the threshold the CircuitBreaker transitions to open and starts short-circuiting calls. The threshold must be greater than 0 and not greater than 100. Default value is 50 percentage.",title:"Failure Rate Threshold",required:!1,deprecated:!1},permittedNumberOfCallsInHalfOpenState:{kind:"attribute",type:"integer",defaultValue:"10",description:"Configures the number of permitted calls when the CircuitBreaker is half open. The size must be greater than 0. Default size is 10.",title:"Permitted Number Of Calls In Half Open State",required:!1,deprecated:!1},throwExceptionWhenHalfOpenOrOpenState:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to throw io.github.resilience4j.circuitbreaker.CallNotPermittedException when the call is rejected due circuit breaker is half open or open.",title:"Throw Exception When Half Open Or Open State",required:!1,deprecated:!1},slidingWindowSize:{kind:"attribute",type:"integer",defaultValue:"100",description:"Configures the size of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed. slidingWindowSize configures the size of the sliding window. Sliding window can either be count-based or time-based. If slidingWindowType is COUNT_BASED, the last slidingWindowSize calls are recorded and aggregated. If slidingWindowType is TIME_BASED, the calls of the last slidingWindowSize seconds are recorded and aggregated. The slidingWindowSize must be greater than 0. The minimumNumberOfCalls must be greater than 0. If the slidingWindowType is COUNT_BASED, the minimumNumberOfCalls cannot be greater than slidingWindowSize . If the slidingWindowType is TIME_BASED, you can pick whatever you want. Default slidingWindowSize is 100.",title:"Sliding Window Size",required:!1,deprecated:!1},slidingWindowType:{kind:"attribute",type:"enum",defaultValue:"COUNT_BASED",enum:["TIME_BASED","COUNT_BASED"],description:"Configures the type of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed. Sliding window can either be count-based or time-based. If slidingWindowType is COUNT_BASED, the last slidingWindowSize calls are recorded and aggregated. If slidingWindowType is TIME_BASED, the calls of the last slidingWindowSize seconds are recorded and aggregated. Default slidingWindowType is COUNT_BASED.",title:"Sliding Window Type",required:!1,deprecated:!1},minimumNumberOfCalls:{kind:"attribute",type:"integer",defaultValue:"100",description:"Configures the minimum number of calls which are required (per sliding window period) before the CircuitBreaker can calculate the error rate. For example, if minimumNumberOfCalls is 10, then at least 10 calls must be recorded, before the failure rate can be calculated. If only 9 calls have been recorded the CircuitBreaker will not transition to open even if all 9 calls have failed. Default minimumNumberOfCalls is 100",title:"Minimum Number Of Calls",required:!1,deprecated:!1},writableStackTraceEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Enables writable stack traces. When set to false, Exception.getStackTrace returns a zero length array. This may be used to reduce log spam when the circuit breaker is open as the cause of the exceptions is already known (the circuit breaker is short-circuiting calls).",title:"Writable Stack Trace Enabled",required:!1,deprecated:!1},waitDurationInOpenState:{kind:"attribute",type:"integer",defaultValue:"60",description:"Configures the wait duration (in seconds) which specifies how long the CircuitBreaker should stay open, before it switches to half open. Default value is 60 seconds.",title:"Wait Duration In Open State",required:!1,deprecated:!1},automaticTransitionFromOpenToHalfOpenEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables automatic transition from OPEN to HALF_OPEN state once the waitDurationInOpenState has passed.",title:"Automatic Transition From Open To Half Open Enabled",required:!1,deprecated:!1},slowCallRateThreshold:{kind:"attribute",type:"number",defaultValue:"100",description:"Configures a threshold in percentage. The CircuitBreaker considers a call as slow when the call duration is greater than slowCallDurationThreshold Duration. When the percentage of slow calls is equal or greater the threshold, the CircuitBreaker transitions to open and starts short-circuiting calls. The threshold must be greater than 0 and not greater than 100. Default value is 100 percentage which means that all recorded calls must be slower than slowCallDurationThreshold.",title:"Slow Call Rate Threshold",required:!1,deprecated:!1},slowCallDurationThreshold:{kind:"attribute",type:"integer",defaultValue:"60",description:"Configures the duration threshold (seconds) above which calls are considered as slow and increase the slow calls percentage. Default value is 60 seconds.",title:"Slow Call Duration Threshold",required:!1,deprecated:!1},bulkheadEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether bulkhead is enabled or not on the circuit breaker. Default is false.",title:"Bulkhead Enabled",required:!1,deprecated:!1},bulkheadMaxConcurrentCalls:{kind:"attribute",type:"integer",defaultValue:"25",description:"Configures the max amount of concurrent calls the bulkhead will support.",title:"Bulkhead Max Concurrent Calls",required:!1,deprecated:!1},bulkheadMaxWaitDuration:{kind:"attribute",type:"integer",defaultValue:"0",description:"Configures a maximum amount of time which the calling thread will wait to enter the bulkhead. If bulkhead has space available, entry is guaranteed and immediate. If bulkhead is full, calling threads will contest for space, if it becomes available. maxWaitDuration can be set to 0. Note: for threads running on an event-loop or equivalent (rx computation pool, etc), setting maxWaitDuration to 0 is highly recommended. Blocking an event-loop thread will most likely have a negative effect on application throughput.",title:"Bulkhead Max Wait Duration",required:!1,deprecated:!1},timeoutEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether timeout is enabled or not on the circuit breaker. Default is false.",title:"Timeout Enabled",required:!1,deprecated:!1},timeoutExecutorService:{kind:"attribute",type:"object",description:"References to a custom thread pool to use when timeout is enabled (uses ForkJoinPool#commonPool() by default)",title:"Timeout Executor Service",required:!1,deprecated:!1},timeoutDuration:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Configures the thread execution timeout. Default value is 1 second.",title:"Timeout Duration",required:!1,deprecated:!1},timeoutCancelRunningFuture:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Configures whether cancel is called on the running future. Defaults to true.",title:"Timeout Cancel Running Future",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},resumable:{type:"object",title:"Resumable",group:"eip,routing",icon:"generic24.png",description:"Resume EIP to support resuming processing from last known offset.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{resumeStrategy:{kind:"attribute",type:"object",description:"Sets the resume strategy to use",title:"Resume Strategy",required:!0,deprecated:!1},loggingLevel:{kind:"attribute",type:"enum",defaultValue:"ERROR",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"",title:"Logging Level",required:!1,deprecated:!1},intermittent:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether the offsets will be intermittently present or whether they must be present in every exchange",title:"Intermittent",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},rollback:{type:"object",title:"Rollback",group:"eip,routing",icon:"generic24.png",description:"Forces a rollback by stopping routing the message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{message:{kind:"attribute",type:"string",description:"Message to use in rollback exception",title:"Message",required:!1,deprecated:!1},markRollbackOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Mark the transaction for rollback only (cannot be overruled to commit)",title:"Mark Rollback Only",required:!1,deprecated:!1},markRollbackOnlyLast:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Mark only last sub transaction for rollback only. When using sub transactions (if the transaction manager support this)",title:"Mark Rollback Only Last",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},roundRobin:{type:"object",title:"Round Robin",group:"eip,routing",icon:"generic24.png",description:"The destination endpoints are selected in a round-robin fashion. This is a well known and classic policy, which spreads the load evenly.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},route:{type:"object",title:"Route",group:"configuration",icon:"route24.png",description:"A Camel route",properties:{group:{kind:"attribute",type:"string",description:"The group that this route belongs to; could be the name of the RouteBuilder class or be explicitly configured in the XML. May be null.",title:"Group",required:!1,deprecated:!1},nodePrefixId:{kind:"attribute",type:"string",description:"Sets a prefix to use for all node ids (not route id).",title:"Node Prefix Id",required:!1,deprecated:!1},routeConfigurationId:{kind:"attribute",type:"string",description:"The route configuration id or pattern this route should use for configuration. Multiple id/pattern can be separated by comma.",title:"Route Configuration Id",required:!1,deprecated:!1},precondition:{kind:"attribute",type:"string",description:"The predicate of the precondition in simple language to evaluate in order to determine if this route should be included or not.",title:"Precondition",required:!1,deprecated:!1},streamCache:{kind:"attribute",type:"string",description:"Whether stream caching is enabled on this route.",title:"Stream Cache",required:!1,deprecated:!1},trace:{kind:"attribute",type:"string",description:"Whether tracing is enabled on this route.",title:"Trace",required:!1,deprecated:!1},messageHistory:{kind:"attribute",type:"string",description:"Whether message history is enabled on this route.",title:"Message History",required:!1,deprecated:!1},logMask:{kind:"attribute",type:"string",defaultValue:"false",description:"Whether security mask for Logging is enabled on this route.",title:"Log Mask",required:!1,deprecated:!1},delayer:{kind:"attribute",type:"duration",description:"Whether to slow down processing messages by a given delay in msec.",title:"Delayer",required:!1,deprecated:!1},autoStartup:{kind:"attribute",type:"string",defaultValue:"true",description:"Whether to auto start this route",title:"Auto Startup",required:!1,deprecated:!1},startupOrder:{kind:"attribute",type:"integer",description:"To configure the ordering of the routes being started",title:"Startup Order",required:!1,deprecated:!1},errorHandlerRef:{kind:"attribute",type:"string",description:"Sets the bean ref name of the error handler builder to use on this route",title:"Error Handler",required:!1,deprecated:!1},routePolicyRef:{kind:"attribute",type:"string",description:"Reference to custom org.apache.camel.spi.RoutePolicy to use by the route. Multiple policies can be configured by separating values using comma.",title:"Route Policy",required:!1,deprecated:!1},shutdownRoute:{kind:"attribute",type:"enum",enum:["Default","Defer"],description:"To control how to shutdown the route.",title:"Shutdown Route",required:!1,deprecated:!1},shutdownRunningTask:{kind:"attribute",type:"enum",enum:["CompleteCurrentTaskOnly","CompleteAllTasks"],description:"To control how to shut down the route.",title:"Shutdown Running Task",required:!1,deprecated:!1},input:{kind:"element",type:"object",description:"Input to the route.",title:"Input",required:!0,deprecated:!1},outputs:{kind:"element",type:"array",description:"Outputs are processors that determines how messages are processed by this route.",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},routeBuilder:{type:"object",title:"Route Builder",group:"configuration",icon:"generic24.png",description:"To refer to a Java org.apache.camel.builder.RouteBuilder instance to use.",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the route builder instance",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},routeConfiguration:{type:"object",title:"Route Configuration",group:"configuration",icon:"generic24.png",description:"Reusable configuration for Camel route(s).",properties:{errorHandler:{kind:"element",type:"object",description:"Sets the error handler to use, for routes that has not already been configured with an error handler.",title:"Error Handler",required:!1,deprecated:!1},intercept:{kind:"element",type:"array",description:"Adds a route for an interceptor that intercepts every processing step.",title:"Intercept",required:!1,deprecated:!1},interceptFrom:{kind:"element",type:"array",description:"Adds a route for an interceptor that intercepts incoming messages on the given endpoint.",title:"Intercept From",required:!1,deprecated:!1},interceptSendToEndpoint:{kind:"element",type:"array",description:"Applies a route for an interceptor if an exchange is send to the given endpoint",title:"Intercept Send To Endpoint",required:!1,deprecated:!1},onException:{kind:"element",type:"array",description:"Exception clause for catching certain exceptions and handling them.",title:"On Exception",required:!1,deprecated:!1},onCompletion:{kind:"element",type:"array",description:"On completion callback for doing custom routing when the org.apache.camel.Exchange is complete.",title:"On Completion",required:!1,deprecated:!1},precondition:{kind:"attribute",type:"string",description:"The predicate of the precondition in simple language to evaluate in order to determine if this route configuration should be included or not.",title:"Precondition",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},routeConfigurationContextRef:{type:"object",title:"Route Configuration Context Ref",group:"configuration",icon:"generic24.png",description:"To refer to an XML file with route configuration defined using the xml-dsl",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the route templates in the xml dsl",title:"Ref",required:!0,deprecated:!1}}},routeConfigurations:{type:"object",title:"Route Configurations",group:"configuration",icon:"generic24.png",description:"A series of route configurations",properties:{}},routeContextRef:{type:"object",title:"Route Context Ref",group:"configuration",icon:"generic24.png",description:"To refer to an XML file with routes defined using the xml-dsl",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the routes in the xml dsl",title:"Ref",required:!0,deprecated:!1}}},routeTemplate:{type:"object",title:"Route Template",group:"configuration",icon:"generic24.png",description:"Defines a route template (parameterized routes)",properties:{templateParameter:{kind:"element",type:"array",description:"Adds a template parameter the route template uses",title:"Template Parameter",required:!1,deprecated:!1},templateBean:{kind:"element",type:"array",description:"Adds a local bean the route template uses",title:"Template Bean",required:!1,deprecated:!1},route:{kind:"element",type:"object",description:"To define the route in the template",title:"Route",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},routeTemplateContextRef:{type:"object",title:"Route Template Context Ref",group:"configuration",icon:"generic24.png",description:"To refer to an XML file with route templates defined using the xml-dsl",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the route templates in the xml dsl",title:"Ref",required:!0,deprecated:!1}}},routeTemplates:{type:"object",title:"Route Templates",group:"routeTemplates",icon:"generic24.png",description:"A series of route templates",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},routes:{type:"object",title:"Routes",group:"configuration",icon:"generic24.png",description:"A series of Camel routes",properties:{routes:{kind:"element",type:"array",description:"Contains the Camel routes",title:"Routes",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},routingSlip:{type:"object",title:"Routing Slip",group:"eip,routing",icon:"routingSlip24.png",description:"Routes a message through a series of steps that are pre-determined (the slip)",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to define the routing slip, which defines which endpoints to route the message in a pipeline style. Notice the expression is evaluated once, if you want a more dynamic style, then the dynamic router eip is a better choice.",title:"Expression",required:!0,deprecated:!1},uriDelimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Sets the uri delimiter to use",title:"Uri Delimiter",required:!1,deprecated:!1},ignoreInvalidEndpoints:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoints",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.spi.ProducerCache which is used to cache and reuse producers when using this routing slip, when uris are reused. Beware that when using dynamic endpoints then it affects how well the cache can be utilized. If each dynamic endpoint is unique then its best to turn off caching by setting this to -1, which allows Camel to not cache both the producers and endpoints; they are regarded as prototype scoped and will be stopped and discarded after use. This reduces memory usage as otherwise producers/endpoints are stored in memory in the caches. However if there are a high degree of dynamic endpoints that have been used before, then it can benefit to use the cache to reuse both producers and endpoints and therefore the cache size can be set accordingly or rely on the default size (1000). If there is a mix of unique and used before dynamic endpoints, then setting a reasonable cache size can help reduce memory usage to avoid storing too many non frequent used producers.",title:"Cache Size",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},saga:{type:"object",title:"Saga",group:"eip,routing",icon:"generic24.png",description:"Enables Sagas on the route",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{sagaService:{kind:"attribute",type:"object",description:"Refers to the id to lookup in the registry for the specific CamelSagaService to use.",title:"Saga Service",required:!1,deprecated:!1},propagation:{kind:"attribute",type:"enum",defaultValue:"REQUIRED",enum:["REQUIRED","REQUIRES_NEW","MANDATORY","SUPPORTS","NOT_SUPPORTED","NEVER"],description:"Set the Saga propagation mode (REQUIRED, REQUIRES_NEW, MANDATORY, SUPPORTS, NOT_SUPPORTED, NEVER).",title:"Propagation",required:!1,deprecated:!1},completionMode:{kind:"attribute",type:"enum",defaultValue:"AUTO",enum:["AUTO","MANUAL"],description:"Determine how the saga should be considered complete. When set to AUTO, the saga is completed when the exchange that initiates the saga is processed successfully, or compensated when it completes exceptionally. When set to MANUAL, the user must complete or compensate the saga using the saga:complete or saga:compensate endpoints.",title:"Completion Mode",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"duration",description:"Set the maximum amount of time for the Saga. After the timeout is expired, the saga will be compensated automatically (unless a different decision has been taken in the meantime).",title:"Timeout",required:!1,deprecated:!1},compensation:{kind:"element",type:"object",description:"The compensation endpoint URI that must be called to compensate all changes done in the route. The route corresponding to the compensation URI must perform compensation and complete without error. If errors occur during compensation, the saga service may call again the compensation URI to retry.",title:"Compensation",required:!1,deprecated:!1},completion:{kind:"element",type:"object",description:"The completion endpoint URI that will be called when the Saga is completed successfully. The route corresponding to the completion URI must perform completion tasks and terminate without error. If errors occur during completion, the saga service may call again the completion URI to retry.",title:"Completion",required:!1,deprecated:!1},option:{kind:"element",type:"array",description:"Allows to save properties of the current exchange in order to re-use them in a compensation/completion callback route. Options are usually helpful e.g. to store and retrieve identifiers of objects that should be deleted in compensating actions. Option values will be transformed into input headers of the compensation/completion exchange.",title:"Option",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},sample:{type:"object",title:"Sample",group:"eip,routing",icon:"generic24.png",description:"Extract a sample of the messages passing through a route",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{samplePeriod:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Sets the sample period during which only a single Exchange will pass through.",title:"Sample Period",required:!1,deprecated:!1},messageFrequency:{kind:"attribute",type:"integer",description:"Sets the sample message count which only a single Exchange will pass through after this many received.",title:"Message Frequency",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},script:{type:"object",title:"Script",group:"eip,transformation",icon:"generic24.png",description:"Executes a script from a language which does not change the message body.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to return the transformed message body (the new message body to use)",title:"Expression",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},serviceCall:{type:"object",title:"Service Call",group:"eip,routing",icon:"generic24.png",description:"To call remote services",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{name:{kind:"attribute",type:"string",description:"Sets the name of the service to use",title:"Name",required:!0,deprecated:!1},expression:{kind:"element",type:"object",description:"Configures the Expression using the given configuration.",title:"Expression",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the org.apache.camel.language.simple.SimpleLanguage expression.",title:"Uri",required:!1,deprecated:!1},component:{kind:"attribute",type:"string",defaultValue:"http",description:"The component to use.",title:"Component",required:!1,deprecated:!1},pattern:{kind:"attribute",type:"enum",enum:["InOnly","InOut"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},configurationRef:{kind:"attribute",type:"string",description:"Refers to a ServiceCall configuration to use",title:"Configuration Ref",required:!1,deprecated:!1},serviceDiscoveryRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceDiscovery to use.",title:"Service Discovery Ref",required:!1,deprecated:!1},serviceFilterRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceFilter to use.",title:"Service Filter Ref",required:!1,deprecated:!1},serviceChooserRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceChooser to use.",title:"Service Chooser Ref",required:!1,deprecated:!1},loadBalancerRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceLoadBalancer to use.",title:"Load Balancer Ref",required:!1,deprecated:!1},expressionRef:{kind:"attribute",type:"string",description:"Set a reference to a custom Expression to use.",title:"Expression Ref",required:!1,deprecated:!1},serviceDiscoveryConfiguration:{kind:"element",type:"object",description:"Configures the ServiceDiscovery using the given configuration.",title:"Service Discovery Configuration",required:!0,deprecated:!1},serviceFilterConfiguration:{kind:"element",type:"object",description:"Configures the ServiceFilter using the given configuration.",title:"Service Filter Configuration",required:!0,deprecated:!1},loadBalancerConfiguration:{kind:"element",type:"object",description:"Configures the LoadBalancer using the given configuration.",title:"Load Balancer Configuration",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},serviceCallConfiguration:{type:"object",title:"Service Call Configuration",group:"routing,cloud",icon:"generic24.png",description:"Remote service call configuration",properties:{expression:{kind:"element",type:"object",description:"Configures the Expression using the given configuration.",title:"Expression",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the simple language expression.",title:"Uri",required:!1,deprecated:!1},component:{kind:"attribute",type:"string",defaultValue:"http",description:"The component to use.",title:"Component",required:!1,deprecated:!1},pattern:{kind:"attribute",type:"enum",enum:["InOnly","InOut"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},serviceDiscoveryRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceDiscovery to use.",title:"Service Discovery Ref",required:!1,deprecated:!1},serviceFilterRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceFilter to use.",title:"Service Filter Ref",required:!1,deprecated:!1},serviceChooserRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceChooser to use.",title:"Service Chooser Ref",required:!1,deprecated:!1},loadBalancerRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceLoadBalancer to use.",title:"Load Balancer Ref",required:!1,deprecated:!1},expressionRef:{kind:"attribute",type:"string",description:"Set a reference to a custom Expression to use.",title:"Expression Ref",required:!1,deprecated:!1},serviceDiscoveryConfiguration:{kind:"element",type:"object",description:"Configures the ServiceDiscovery using the given configuration.",title:"Service Discovery Configuration",required:!0,deprecated:!1},serviceFilterConfiguration:{kind:"element",type:"object",description:"Configures the ServiceFilter using the given configuration.",title:"Service Filter Configuration",required:!0,deprecated:!1},loadBalancerConfiguration:{kind:"element",type:"object",description:"Configures theL oadBalancer using the given configuration.",title:"Load Balancer Configuration",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},serviceChooserConfiguration:{type:"object",title:"Service Chooser Configuration",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},serviceDiscoveryConfiguration:{type:"object",title:"Service Discovery Configuration",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},serviceExpression:{type:"object",title:"Service Expression",group:"routing,cloud",icon:"generic24.png",description:"",properties:{hostHeader:{kind:"attribute",type:"string",defaultValue:"CamelServiceCallServiceHost",description:"The header that holds the service host information, default ServiceCallConstants.SERVICE_HOST",title:"Host Header",required:!1,deprecated:!1},portHeader:{kind:"attribute",type:"string",defaultValue:"CamelServiceCallServicePort",description:"The header that holds the service port information, default ServiceCallConstants.SERVICE_PORT",title:"Port Header",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},serviceFilterConfiguration:{type:"object",title:"Service Filter Configuration",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},setBody:{type:"object",title:"Set Body",group:"eip,transformation",icon:"setBody24.png",description:"Sets the contents of the message body",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that returns the new body to use",title:"Expression",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setExchangePattern:{type:"object",title:"Set Exchange Pattern",group:"configuration",icon:"generic24.png",description:"Sets the exchange pattern on the message exchange",properties:{pattern:{kind:"attribute",type:"enum",enum:["InOnly","InOut"],description:"Sets the new exchange pattern of the Exchange to be used from this point forward",title:"Pattern",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setHeader:{type:"object",title:"Set Header",group:"eip,transformation",icon:"generic24.png",description:"Sets the value of a message header",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{name:{kind:"attribute",type:"string",description:"Name of message header to set a new value The simple language can be used to define a dynamic evaluated header name to be used. Otherwise a constant name will be used.",title:"Name",required:!0,deprecated:!1},expression:{kind:"expression",type:"object",description:"Expression to return the value of the header",title:"Expression",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setProperty:{type:"object",title:"Set Property",group:"eip,transformation",icon:"generic24.png",description:"Sets a named property on the message exchange",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{name:{kind:"attribute",type:"string",description:"Name of exchange property to set a new value. The simple language can be used to define a dynamic evaluated exchange property name to be used. Otherwise a constant name will be used.",title:"Name",required:!0,deprecated:!1},expression:{kind:"expression",type:"object",description:"Expression to return the value of the message exchange property",title:"Expression",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},sort:{type:"object",title:"Sort",group:"eip,routing",icon:"generic24.png",description:"Sorts the contents of the message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Optional expression to sort by something else than the message body",title:"Expression",required:!0,deprecated:!1},comparator:{kind:"attribute",type:"object",description:"Sets the comparator to use for sorting",title:"Comparator",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},split:{type:"object",title:"Split",group:"eip,routing",icon:"split24.png",description:"Splits a single message into many sub-messages.",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression of how to split the message body, such as as-is, using a tokenizer, or using a xpath.",title:"Expression",required:!0,deprecated:!1},delimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Delimiter used in splitting messages. Can be turned off using the value false. The default value is ,",title:"Delimiter",required:!1,deprecated:!1},aggregationStrategy:{kind:"attribute",type:"object",description:"Sets a reference to the AggregationStrategy to be used to assemble the replies from the split messages, into a single outgoing message from the Splitter. By default Camel will use the original incoming message to the splitter (leave it unchanged). You can also use a POJO as the AggregationStrategy",title:"Aggregation Strategy",required:!1,deprecated:!1},aggregationStrategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Aggregation Strategy Method Name",required:!1,deprecated:!1},aggregationStrategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy",title:"Aggregation Strategy Method Allow Null",required:!1,deprecated:!1},parallelAggregate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe.",title:"Parallel Aggregate",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then processing each split messages occurs concurrently. Note the caller thread will still wait until all messages has been fully processed, before it continues. It's only processing the sub messages from the splitter which happens concurrently. When parallel processing is enabled, then the Camel routing engin will continue processing using last used thread from the parallel thread pool. However, if you want to use the original thread that called the splitter, then make sure to enable the synchronous option as well.",title:"Parallel Processing",required:!1,deprecated:!1},synchronous:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used. When enabled then the same thread is used to continue routing after the split is complete, even if parallel processing is enabled.",title:"Synchronous",required:!1,deprecated:!1},streaming:{kind:"attribute",type:"boolean",defaultValue:"false",description:"When in streaming mode, then the splitter splits the original message on-demand, and each split message is processed one by one. This reduces memory usage as the splitter do not split all the messages first, but then we do not know the total size, and therefore the org.apache.camel.Exchange#SPLIT_SIZE is empty. In non-streaming mode (default) the splitter will split each message first, to know the total size, and then process each message one by one. This requires to keep all the split messages in memory and therefore requires more memory. The total size is provided in the org.apache.camel.Exchange#SPLIT_SIZE header. The streaming mode also affects the aggregation behavior. If enabled then Camel will process replies out-of-order, e.g. in the order they come back. If disabled, Camel will process replies in the same order as the messages was split.",title:"Streaming",required:!1,deprecated:!1},stopOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the splitter will stop further processing. This is the same behavior as in pipeline, which is used by the routing engine. The default behavior is to not stop but continue processing till the end",title:"Stop On Exception",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"duration",defaultValue:"0",description:"Sets a total timeout specified in millis, when using parallel processing. If the Splitter hasn't been able to split and process all the sub messages within the given timeframe, then the timeout triggers and the Splitter breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining, certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care.",title:"Timeout",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"To use a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatically implied, and you do not have to enable that option as well.",title:"Executor Service",required:!1,deprecated:!1},onPrepare:{kind:"attribute",type:"object",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be sent. This can be used to deep-clone messages that should be sent, or any custom logic needed before the exchange is sent.",title:"On Prepare",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Splitter will by default not share unit of work between the parent exchange and each split exchange. This means each split exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},springTransactionErrorHandler:{type:"object",title:"Spring Transaction Error Handler",group:"configuration,error",icon:"generic24.png",description:"Spring based transactional error handler (requires camel-spring).",properties:{transactedPolicyRef:{kind:"attribute",type:"object",description:"The transacted policy to use that is configured for either Spring or JTA based transactions. If no policy has been configured then Camel will attempt to auto-discover.",title:"Transacted Policy Ref",required:!1,deprecated:!1},rollbackLoggingLevel:{kind:"attribute",type:"enum",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Sets the logging level to use for logging transactional rollback. This option is default WARN.",title:"Rollback Logging Level",required:!1,deprecated:!1},loggerRef:{kind:"attribute",type:"string",description:"References to a logger to use as logger for the error handler",title:"Logger Ref",required:!1,deprecated:!1},level:{kind:"attribute",type:"enum",defaultValue:"ERROR",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level to use when using the logging error handler type.",title:"Level",required:!1,deprecated:!1},logName:{kind:"attribute",type:"string",description:"Name of the logger to use for the logging error handler",title:"Log Name",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message (original body and headers) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},useOriginalBody:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input org.apache.camel.Message body (original body only) when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN message we use the original IN message instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN message. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN message is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. The difference between useOriginalMessage and useOriginalBody is that the former includes both the original body and headers, where as the latter only includes the original body. You can use the latter to enrich the message with custom headers and include the original message body. The former wont let you do this, as its using the original message body and headers as they are. You cannot enable both useOriginalMessage and useOriginalBody. The original input message is defensively copied, and the copied message body is converted to org.apache.camel.StreamCache if possible (stream caching is enabled, can be disabled globally or on the original route), to ensure the body can be read when the original message is being used later. If the body is converted to org.apache.camel.StreamCache then the message body on the current org.apache.camel.Exchange is replaced with the org.apache.camel.StreamCache body. If the body is not converted to org.apache.camel.StreamCache then the body will not be able to re-read when accessed later. Important: The original input means the input message that are bounded by the current org.apache.camel.spi.UnitOfWork . An unit of work typically spans one route, or multiple routes if they are connected using internal endpoints such as direct or seda. When messages is passed via external endpoints such as JMS or HTTP then the consumer will create a new unit of work, with the message it received as input as the original input. Also some EIP patterns such as splitter, multicast, will create a new unit of work boundary for the messages in their sub-route (eg the splitted message); however these EIPs have an option named shareUnitOfWork which allows to combine with the parent unit of work in regard to error handling and therefore use the parent original message. By default this feature is off.",title:"Use Original Body",required:!1,deprecated:!1},onRedeliveryRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered.",title:"On Redelivery Ref",required:!1,deprecated:!1},onExceptionOccurredRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor that should be processed just after an exception occurred. Can be used to perform custom logging about the occurred exception at the exact time it happened. Important: Any exception thrown from this processor will be ignored.",title:"On Exception Occurred Ref",required:!1,deprecated:!1},onPrepareFailureRef:{kind:"attribute",type:"object",description:"Sets a reference to a processor to prepare the org.apache.camel.Exchange before handled by the failure processor / dead letter channel. This allows for example to enrich the message before sending to a dead letter queue.",title:"On Prepare Failure Ref",required:!1,deprecated:!1},retryWhileRef:{kind:"attribute",type:"object",description:"Sets a retry while predicate. Will continue retrying until the predicate evaluates to false.",title:"Retry While Ref",required:!1,deprecated:!1},redeliveryPolicyRef:{kind:"attribute",type:"object",description:"Sets a reference to a RedeliveryPolicy to be used for redelivery settings.",title:"Redelivery Policy Ref",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"object",description:"Sets a reference to a thread pool to be used by the error handler",title:"Executor Service Ref",required:!1,deprecated:!1},redeliveryPolicy:{kind:"element",type:"object",description:"Sets the redelivery settings",title:"Redelivery Policy",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},staticServiceDiscovery:{type:"object",title:"Static Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{servers:{kind:"element",type:"array",description:"Sets the server list. Each entry can be a list of servers separated by comma in the format: servicehost:port,servicehost2:port,servicehost3:port",title:"Servers",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},step:{type:"object",title:"Step",group:"eip,routing",icon:"generic24.png",description:"Routes the message to a sequence of processors which is grouped together as one logical name",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},sticky:{type:"object",title:"Sticky",group:"eip,routing",icon:"generic24.png",description:"Sticky load balancing using an expression to calculate a correlation key to perform the sticky load balancing.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{correlationExpression:{kind:"expression",type:"object",description:"The correlation expression to use to calculate the correlation key",title:"Correlation Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},stop:{type:"object",title:"Stop",group:"eip,routing",icon:"generic24.png",description:"Stops the processing of the current message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},"stream-config":{type:"object",title:"Stream-config",group:"configuration,eip",icon:"generic24.png",description:"Configures stream-processing resequence eip.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{capacity:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Sets the capacity of the resequencer inbound queue.",title:"Capacity",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Sets minimum time (milliseconds) to wait for missing elements (messages).",title:"Timeout",required:!1,deprecated:!1},deliveryAttemptInterval:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Sets the interval in milliseconds the stream resequencer will at most wait while waiting for condition of being able to deliver.",title:"Delivery Attempt Interval",required:!1,deprecated:!1},ignoreInvalidExchanges:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore invalid exchanges",title:"Ignore Invalid Exchanges",required:!1,deprecated:!1},rejectOld:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If true, throws an exception when messages older than the last delivered message are processed",title:"Reject Old",required:!1,deprecated:!1},comparator:{kind:"attribute",type:"object",description:"To use a custom comparator as a org.apache.camel.processor.resequencer.ExpressionResultComparator type.",title:"Comparator",required:!1,deprecated:!1}}},templateBean:{type:"object",title:"Template Bean",group:"configuration",icon:"generic24.png",description:"A route template bean (local bean)",properties:{name:{kind:"attribute",type:"string",description:"Bean name",title:"Name",required:!0,deprecated:!1},type:{kind:"attribute",type:"string",description:"What type to use for creating the bean. Can be one of: #class,#type,bean,groovy,joor,language,mvel,ognl. #class or #type then the bean is created via the fully qualified classname, such as #class:com.foo.MyBean The others are scripting languages that gives more power to create the bean with an inlined code in the script section, such as using groovy.",title:"Type",required:!0,deprecated:!1},beanType:{kind:"attribute",type:"string",description:"To set the type (fully qualified class name) of the returned bean created by the script. Knowing the type of the bean can be needed when dependency injection by type is in use, or when looking in registry via class type.",title:"Bean Type",required:!1,deprecated:!1},property:{kind:"element",type:"array",description:"Optional properties to set on the created local bean",title:"Property",required:!1,deprecated:!1},properties:{kind:"element",type:"object",description:"Optional properties to set on the created local bean",title:"Properties",required:!1,deprecated:!1},script:{kind:"element",type:"string",description:"The script to execute that creates the bean when using scripting languages. If the script use the prefix resource: such as resource:classpath:com/foo/myscript.groovy, resource:file:/var/myscript.groovy, then its loaded from the external resource.",title:"Script",required:!1,deprecated:!1}}},templateParameter:{type:"object",title:"Template Parameter",group:"configuration",icon:"generic24.png",description:"A route template parameter",properties:{name:{kind:"attribute",type:"string",description:"The name of the parameter",title:"Name",required:!0,deprecated:!1},required:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the parameter is required or not. A parameter is required unless this option is set to false or a default value has been configured.",title:"Required",required:!1,deprecated:!1},defaultValue:{kind:"attribute",type:"string",description:"Default value of the parameter. If a default value is provided then the parameter is implied not to be required.",title:"Default Value",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"Description of the parameter",title:"Description",required:!1,deprecated:!1}}},templatedRoute:{type:"object",title:"Templated Route",group:"configuration",icon:"generic24.png",description:"Defines a templated route (a route built from a route template)",properties:{routeTemplateRef:{kind:"attribute",type:"string",description:"Sets the id of the route template to use to build the route.",title:"Route Template Ref",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"Sets the id of the route built from the route template.",title:"Route Id",required:!1,deprecated:!1},prefixId:{kind:"attribute",type:"string",description:"Sets a prefix to use for all node ids (not route id).",title:"Prefix Id",required:!1,deprecated:!1},parameter:{kind:"element",type:"array",description:"Adds an input parameter of the template to build the route",title:"Parameter",required:!1,deprecated:!1},bean:{kind:"element",type:"array",description:"Adds a local bean as input of the template to build the route",title:"Bean",required:!1,deprecated:!1}}},templatedRouteBean:{type:"object",title:"Templated Route Bean",group:"configuration",icon:"generic24.png",description:"A bean as input of a route template (local bean)",properties:{name:{kind:"attribute",type:"string",description:"Bean name",title:"Name",required:!0,deprecated:!1},type:{kind:"attribute",type:"string",description:"What type to use for creating the bean. Can be one of: #class,#type,bean,groovy,joor,language,mvel,ognl. #class or #type then the bean is created via the fully qualified classname, such as #class:com.foo.MyBean The others are scripting languages that gives more power to create the bean with an inlined code in the script section, such as using groovy.",title:"Type",required:!0,deprecated:!1},beanType:{kind:"attribute",type:"string",description:"To set the type (fully qualified class name) of the returned bean created by the script. Knowing the type of the bean can be needed when dependency injection by type is in use, or when looking in registry via class type.",title:"Bean Type",required:!1,deprecated:!1},property:{kind:"element",type:"array",description:"Optional properties to set on the created local bean",title:"Property",required:!1,deprecated:!1},properties:{kind:"element",type:"object",description:"Optional properties to set on the created local bean",title:"Properties",required:!1,deprecated:!1},script:{kind:"element",type:"string",description:"The script to execute that creates the bean when using scripting languages. If the script use the prefix resource: such as resource:classpath:com/foo/myscript.groovy, resource:file:/var/myscript.groovy, then its loaded from the external resource.",title:"Script",required:!1,deprecated:!1}}},templatedRouteParameter:{type:"object",title:"Templated Route Parameter",group:"configuration",icon:"generic24.png",description:"An input parameter of a route template.",properties:{name:{kind:"attribute",type:"string",description:"The name of the parameter",title:"Name",required:!0,deprecated:!1},value:{kind:"attribute",type:"string",description:"The value of the parameter.",title:"Value",required:!0,deprecated:!1}}},templatedRoutes:{type:"object",title:"Templated Routes",group:"configuration",icon:"generic24.png",description:"A series of templated routes",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},threadPoolProfile:{type:"object",title:"Thread Pool Profile",group:"configuration",icon:"generic24.png",description:"To configure thread pools",properties:{defaultProfile:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether this profile is the default thread pool profile",title:"Default Profile",required:!1,deprecated:!1},poolSize:{kind:"attribute",type:"integer",description:"Sets the core pool size",title:"Pool Size",required:!1,deprecated:!1},maxPoolSize:{kind:"attribute",type:"integer",description:"Sets the maximum pool size",title:"Max Pool Size",required:!1,deprecated:!1},keepAliveTime:{kind:"attribute",type:"integer",description:"Sets the keep alive time for idle threads in the pool",title:"Keep Alive Time",required:!1,deprecated:!1},timeUnit:{kind:"attribute",type:"enum",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Sets the time unit to use for keep alive time By default SECONDS is used.",title:"Time Unit",required:!1,deprecated:!1},maxQueueSize:{kind:"attribute",type:"integer",description:"Sets the maximum number of tasks in the work queue. Use -1 or Integer.MAX_VALUE for an unbounded queue",title:"Max Queue Size",required:!1,deprecated:!1},allowCoreThreadTimeOut:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether idle core threads is allowed to timeout and therefore can shrink the pool size below the core pool size Is by default true",title:"Allow Core Thread Time Out",required:!1,deprecated:!1},rejectedPolicy:{kind:"attribute",type:"enum",enum:["Abort","CallerRuns"],description:"Sets the handler for tasks which cannot be executed by the thread pool.",title:"Rejected Policy",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},threads:{type:"object",title:"Threads",group:"eip,routing",icon:"generic24.png",description:"Specifies that all steps after this node are processed asynchronously",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{executorService:{kind:"attribute",type:"object",description:"To use a custom thread pool",title:"Executor Service",required:!1,deprecated:!1},poolSize:{kind:"attribute",type:"integer",description:"Sets the core pool size",title:"Pool Size",required:!1,deprecated:!1},maxPoolSize:{kind:"attribute",type:"integer",description:"Sets the maximum pool size",title:"Max Pool Size",required:!1,deprecated:!1},keepAliveTime:{kind:"attribute",type:"integer",description:"Sets the keep alive time for idle threads",title:"Keep Alive Time",required:!1,deprecated:!1},timeUnit:{kind:"attribute",type:"enum",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Sets the keep alive time unit. By default SECONDS is used.",title:"Time Unit",required:!1,deprecated:!1},maxQueueSize:{kind:"attribute",type:"integer",description:"Sets the maximum number of tasks in the work queue. Use -1 or Integer.MAX_VALUE for an unbounded queue",title:"Max Queue Size",required:!1,deprecated:!1},allowCoreThreadTimeOut:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether idle core threads are allowed to timeout and therefore can shrink the pool size below the core pool size Is by default false",title:"Allow Core Thread Time Out",required:!1,deprecated:!1},threadName:{kind:"attribute",type:"string",defaultValue:"Threads",description:"Sets the thread name to use.",title:"Thread Name",required:!1,deprecated:!1},rejectedPolicy:{kind:"attribute",type:"enum",enum:["Abort","CallerRuns"],description:"Sets the handler for tasks which cannot be executed by the thread pool.",title:"Rejected Policy",required:!1,deprecated:!1},callerRunsWhenRejected:{kind:"attribute",type:"string",defaultValue:"true",description:"Whether or not to use as caller runs as fallback when a task is rejected being added to the thread pool (when its full). This is only used as fallback if no rejectedPolicy has been configured, or the thread pool has no configured rejection handler. Is by default true",title:"Caller Runs When Rejected",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},throttle:{type:"object",title:"Throttle",group:"eip,routing",icon:"generic24.png",description:"Controls the rate at which messages are passed to the next node in the route",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to configure the maximum number of messages to throttle per request",title:"Expression",required:!0,deprecated:!1},correlationExpression:{kind:"expression",type:"object",description:"The expression used to calculate the correlation key to use for throttle grouping. The Exchange which has the same correlation key is throttled together.",title:"Correlation Expression",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"To use a custom thread pool (ScheduledExecutorService) by the throttler.",title:"Executor Service",required:!1,deprecated:!1},timePeriodMillis:{kind:"attribute",type:"duration",defaultValue:"1000",description:"Sets the time period during which the maximum request count is valid for",title:"Time Period Millis",required:!1,deprecated:!1},asyncDelayed:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables asynchronous delay which means the thread will not block while delaying.",title:"Async Delayed",required:!1,deprecated:!1},callerRunsWhenRejected:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the caller should run the task when it was rejected by the thread pool. Is by default true",title:"Caller Runs When Rejected",required:!1,deprecated:!1},rejectExecution:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not throttler throws the ThrottlerRejectedExecutionException when the exchange exceeds the request limit Is by default false",title:"Reject Execution",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},throwException:{type:"object",title:"Throw Exception",group:"error",icon:"generic24.png",description:"Throws an exception",properties:{message:{kind:"attribute",type:"string",description:"To create a new exception instance and use the given message as caused message (supports simple language)",title:"Message",required:!1,deprecated:!1},exceptionType:{kind:"attribute",type:"string",description:"The class of the exception to create using the message.",title:"Exception Type",required:!1,deprecated:!1},ref:{kind:"attribute",type:"string",description:"Reference to the exception instance to lookup from the registry to throw",title:"Ref",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},to:{type:"object",title:"To",group:"eip,routing",icon:"endpoint24.png",description:"Sends the message to a static endpoint",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{uri:{kind:"attribute",type:"string",description:"Sets the uri of the endpoint to send to.",title:"Uri",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},pattern:{kind:"attribute",type:"enum",enum:["InOnly","InOut"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},toD:{type:"object",title:"To D",group:"eip,routing",icon:"endpoint24.png",description:"Sends the message to a dynamic endpoint",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the org.apache.camel.language.simple.SimpleLanguage expression.",title:"Uri",required:!0,deprecated:!1},pattern:{kind:"attribute",type:"enum",enum:["InOnly","InOut"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.spi.ProducerCache which is used to cache and reuse producers when using this recipient list, when uris are reused. Beware that when using dynamic endpoints then it affects how well the cache can be utilized. If each dynamic endpoint is unique then its best to turn off caching by setting this to -1, which allows Camel to not cache both the producers and endpoints; they are regarded as prototype scoped and will be stopped and discarded after use. This reduces memory usage as otherwise producers/endpoints are stored in memory in the caches. However if there are a high degree of dynamic endpoints that have been used before, then it can benefit to use the cache to reuse both producers and endpoints and therefore the cache size can be set accordingly or rely on the default size (1000). If there is a mix of unique and used before dynamic endpoints, then setting a reasonable cache size can help reduce memory usage to avoid storing too many non frequent used producers.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore invalid endpoint URIs and skip sending the message.",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},allowOptimisedComponents:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow components to optimise toD if they are org.apache.camel.spi.SendDynamicAware .",title:"Allow Optimised Components",required:!1,deprecated:!1},autoStartComponents:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to auto startup components when toD is starting up.",title:"Auto Start Components",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},topic:{type:"object",title:"Topic",group:"eip,routing",icon:"generic24.png",description:"Topic which sends to all destinations.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},transacted:{type:"object",title:"Transacted",group:"configuration",icon:"transactionalClient24.png",description:"Enables transaction on the route",properties:{ref:{kind:"attribute",type:"string",description:"Sets a reference to use for lookup the policy in the registry.",title:"Ref",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},transform:{type:"object",title:"Transform",group:"eip,transformation",icon:"transform24.png",description:"Transforms the message body based on an expression",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to return the transformed message body (the new message body to use)",title:"Expression",required:!0,deprecated:!1},fromType:{kind:"attribute",type:"string",description:"From type used in data type transformation.",title:"From Type",required:!1,deprecated:!1},toType:{kind:"attribute",type:"string",description:"To type used as a target data type in the transformation.",title:"To Type",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},transformers:{type:"object",title:"Transformations",group:"transformation",icon:"generic24.png",description:"To configure transformers.",properties:{transformers:{kind:"element",type:"array",description:"The configured transformers",title:"Transformers",required:!0,deprecated:!1}}},validate:{type:"object",title:"Validate",group:"eip,transformation",icon:"generic24.png",description:"Validates a message based on an expression",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to use for validation as a predicate. The expression should return either true or false. If returning false the message is invalid and an exception is thrown.",title:"Expression",required:!0,deprecated:!1},predicateExceptionFactory:{kind:"attribute",type:"object",description:"The bean id of custom PredicateExceptionFactory to use for creating the exception when the validation fails. By default, Camel will throw PredicateValidationException. By using a custom factory you can control which exception to throw instead.",title:"Predicate Exception Factory",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},validators:{type:"object",title:"Validations",group:"validation",icon:"generic24.png",description:"To configure validators.",properties:{validators:{kind:"element",type:"array",description:"The configured transformers",title:"Validators",required:!0,deprecated:!1}}},value:{type:"object",title:"Value",group:"configuration",icon:"generic24.png",description:"A single value",properties:{value:{kind:"value",type:"string",description:"Property value",title:"Value",required:!0,deprecated:!1}}},weighted:{type:"object",title:"Weighted",group:"eip,routing",icon:"generic24.png",description:"Uses a weighted load distribution ratio for each server with respect to others.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{distributionRatio:{kind:"attribute",type:"string",description:"The distribution ratio is a delimited String consisting on integer weights separated by delimiters for example 2,3,5. The distributionRatio must match the number of endpoints and/or processors specified in the load balancer list.",title:"Distribution Ratio",required:!0,deprecated:!1},distributionRatioDelimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Delimiter used to specify the distribution ratio. The default value is , (comma)",title:"Distribution Ratio Delimiter",required:!1,deprecated:!1},roundRobin:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable round robin mode. By default the weighted distribution mode is used. The default value is false.",title:"Round Robin",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},when:{type:"object",title:"When",group:"eip,routing",icon:"generic24.png",description:"Triggers a route when the expression evaluates to true",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression used as the predicate to evaluate whether this when should trigger and route the message or not.",title:"Expression",required:!0,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},whenSkipSendToEndpoint:{type:"object",title:"When Skip Send To Endpoint",group:"configuration",icon:"generic24.png",description:"Predicate to determine if the message should be sent or not to the endpoint, when using interceptSentToEndpoint.",properties:{expression:{kind:"expression",type:"object",description:"Expression used as the predicate to evaluate whether the message should be sent or not to the endpoint",title:"Expression",required:!0,deprecated:!1},outputs:{kind:"element",type:"array",description:"",title:"Outputs",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},wireTap:{type:"object",title:"Wire Tap",group:"eip,routing",icon:"wireTap24.png",description:"Routes a copy of a message (or creates a new message) to a secondary destination while continue routing the original message.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{copy:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Uses a copy of the original exchange",title:"Copy",required:!1,deprecated:!1},dynamicUri:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the uri is dynamic or static. If the uri is dynamic then the simple language is used to evaluate a dynamic uri to use as the wire-tap destination, for each incoming message. This works similar to how the toD EIP pattern works. If static then the uri is used as-is as the wire-tap destination.",title:"Dynamic Uri",required:!1,deprecated:!1},onPrepare:{kind:"attribute",type:"object",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be sent. This can be used to deep-clone messages that should be sent, or any custom logic needed before the exchange is sent.",title:"On Prepare",required:!1,deprecated:!1},executorService:{kind:"attribute",type:"object",description:"Uses a custom thread pool",title:"Executor Service",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the org.apache.camel.language.simple.SimpleLanguage expression.",title:"Uri",required:!0,deprecated:!1},pattern:{kind:"attribute",type:"enum",enum:["InOnly","InOut"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.spi.ProducerCache which is used to cache and reuse producers when using this recipient list, when uris are reused. Beware that when using dynamic endpoints then it affects how well the cache can be utilized. If each dynamic endpoint is unique then its best to turn off caching by setting this to -1, which allows Camel to not cache both the producers and endpoints; they are regarded as prototype scoped and will be stopped and discarded after use. This reduces memory usage as otherwise producers/endpoints are stored in memory in the caches. However if there are a high degree of dynamic endpoints that have been used before, then it can benefit to use the cache to reuse both producers and endpoints and therefore the cache size can be set accordingly or rely on the default size (1000). If there is a mix of unique and used before dynamic endpoints, then setting a reasonable cache size can help reduce memory usage to avoid storing too many non frequent used producers.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore invalid endpoint URIs and skip sending the message.",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},allowOptimisedComponents:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow components to optimise toD if they are org.apache.camel.spi.SendDynamicAware .",title:"Allow Optimised Components",required:!1,deprecated:!1},autoStartComponents:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to auto startup components when toD is starting up.",title:"Auto Start Components",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},zookeeperServiceDiscovery:{type:"object",title:"Zookeeper Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",properties:{nodes:{kind:"attribute",type:"string",description:"A comma separate list of servers to connect to in the form host:port",title:"Nodes",required:!0,deprecated:!1},namespace:{kind:"attribute",type:"string",description:"As ZooKeeper is a shared space, users of a given cluster should stay within a pre-defined namespace. If a namespace is set here, all paths will get pre-pended with the namespace",title:"Namespace",required:!1,deprecated:!1},reconnectBaseSleepTime:{kind:"attribute",type:"string",description:"Initial amount of time to wait between retries.",title:"Reconnect Base Sleep Time",required:!1,deprecated:!1},reconnectMaxSleepTime:{kind:"attribute",type:"string",description:"Max time in ms to sleep on each retry",title:"Reconnect Max Sleep Time",required:!1,deprecated:!1},reconnectMaxRetries:{kind:"attribute",type:"string",description:"Max number of times to retry",title:"Reconnect Max Retries",required:!1,deprecated:!1},sessionTimeout:{kind:"attribute",type:"string",description:"Session timeout.",title:"Session Timeout",required:!1,deprecated:!1},connectionTimeout:{kind:"attribute",type:"string",description:"Connection timeout.",title:"Connection Timeout",required:!1,deprecated:!1},basePath:{kind:"attribute",type:"string",description:"Set the base path to store in ZK",title:"Base Path",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using a different one, then the client properties are defined according to the specific service in use.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}}},d={apiKey:{type:"object",title:"Api Key",group:"rest,security,configuration",icon:"generic24.png",description:"Rest security basic auth definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{name:{kind:"attribute",type:"string",description:"The name of the header or query parameter to be used.",title:"Name",required:!0,deprecated:!1},key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},inHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To use header as the location of the API key.",title:"In Header",required:!1,deprecated:!1},inQuery:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To use query parameter as the location of the API key.",title:"In Query",required:!1,deprecated:!1},inCookie:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To use a cookie as the location of the API key.",title:"In Cookie",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},basicAuth:{type:"object",title:"Basic Auth",group:"rest,security,configuration",icon:"generic24.png",description:"Rest security basic auth definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},bearerToken:{type:"object",title:"Bearer Token",group:"rest,security,configuration",icon:"generic24.png",description:"Rest security bearer token authentication definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},format:{kind:"attribute",type:"string",description:"A hint to the client to identify how the bearer token is formatted.",title:"Format",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},delete:{type:"object",title:"Delete",group:"rest",icon:"generic24.png",description:"Rest DELETE command",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{path:{kind:"attribute",type:"string",description:"The path mapping URIs of this REST operation such as /{id}.",title:"Path",required:!1,deprecated:!1},to:{kind:"element",type:"object",description:"The Camel endpoint this REST service will call, such as a direct endpoint to link to an existing route that handles this REST call.",title:"To",required:!0,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this REST service from the route during build time. Once an REST service has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to include or exclude this rest operation in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},deprecated:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Marks this rest operation as deprecated in OpenApi documentation.",title:"Deprecated",required:!1,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"Sets the id of the route",title:"Route Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},get:{type:"object",title:"Get",group:"rest",icon:"generic24.png",description:"Rest GET command",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{path:{kind:"attribute",type:"string",description:"The path mapping URIs of this REST operation such as /{id}.",title:"Path",required:!1,deprecated:!1},to:{kind:"element",type:"object",description:"The Camel endpoint this REST service will call, such as a direct endpoint to link to an existing route that handles this REST call.",title:"To",required:!0,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this REST service from the route during build time. Once an REST service has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to include or exclude this rest operation in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},deprecated:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Marks this rest operation as deprecated in OpenApi documentation.",title:"Deprecated",required:!1,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"Sets the id of the route",title:"Route Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},head:{type:"object",title:"Head",group:"rest",icon:"generic24.png",description:"Rest HEAD command",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{path:{kind:"attribute",type:"string",description:"The path mapping URIs of this REST operation such as /{id}.",title:"Path",required:!1,deprecated:!1},to:{kind:"element",type:"object",description:"The Camel endpoint this REST service will call, such as a direct endpoint to link to an existing route that handles this REST call.",title:"To",required:!0,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this REST service from the route during build time. Once an REST service has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to include or exclude this rest operation in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},deprecated:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Marks this rest operation as deprecated in OpenApi documentation.",title:"Deprecated",required:!1,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"Sets the id of the route",title:"Route Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},mutualTLS:{type:"object",title:"Mutual TLS",group:"rest,security,configuration",icon:"generic24.png",description:"Rest security mutual TLS authentication definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},oauth2:{type:"object",title:"Oauth2",group:"rest,security,configuration",icon:"generic24.png",description:"Rest security OAuth2 definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},authorizationUrl:{kind:"attribute",type:"string",description:"The authorization URL to be used for this flow. This SHOULD be in the form of a URL. Required for implicit and access code flows",title:"Authorization Url",required:!1,deprecated:!1},tokenUrl:{kind:"attribute",type:"string",description:"The token URL to be used for this flow. This SHOULD be in the form of a URL. Required for password, application, and access code flows.",title:"Token Url",required:!1,deprecated:!1},refreshUrl:{kind:"attribute",type:"string",description:"The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL.",title:"Refresh Url",required:!1,deprecated:!1},flow:{kind:"attribute",type:"enum",enum:["implicit","password","application","clientCredentials","accessCode","authorizationCode"],description:"The flow used by the OAuth2 security scheme. Valid values are implicit, password, application or accessCode.",title:"Flow",required:!1,deprecated:!1},scopes:{kind:"element",type:"array",description:"The available scopes for an OAuth2 security scheme",title:"Scopes",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},openIdConnect:{type:"object",title:"Open Id Connect",group:"rest,security,configuration",icon:"generic24.png",description:"Rest security OpenID Connect definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},url:{kind:"attribute",type:"string",description:"OpenId Connect URL to discover OAuth2 configuration values.",title:"Url",required:!0,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},param:{type:"object",title:"Param",group:"rest",icon:"generic24.png",description:"To specify the rest operation parameters.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{name:{kind:"attribute",type:"string",description:"Sets the parameter name.",title:"Name",required:!0,deprecated:!1},type:{kind:"attribute",type:"enum",defaultValue:"path",enum:["body","formData","header","path","query"],description:"Sets the parameter type.",title:"Type",required:!1,deprecated:!1},defaultValue:{kind:"attribute",type:"string",description:"Sets the parameter default value.",title:"Default Value",required:!1,deprecated:!1},required:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets the parameter required flag.",title:"Required",required:!1,deprecated:!1},collectionFormat:{kind:"attribute",type:"enum",defaultValue:"csv",enum:["csv","multi","pipes","ssv","tsv"],description:"Sets the parameter collection format.",title:"Collection Format",required:!1,deprecated:!1},arrayType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the parameter array type. Required if data type is array. Describes the type of items in the array.",title:"Array Type",required:!1,deprecated:!1},dataType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the parameter data type.",title:"Data Type",required:!1,deprecated:!1},dataFormat:{kind:"attribute",type:"string",description:"Sets the parameter data format.",title:"Data Format",required:!1,deprecated:!1},allowableValues:{kind:"element",type:"array",description:"Sets the parameter list of allowable values (enum).",title:"Allowable Values",required:!1,deprecated:!1},examples:{kind:"element",type:"array",description:"Sets the parameter examples.",title:"Examples",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"Sets the parameter description.",title:"Description",required:!1,deprecated:!1}}},patch:{type:"object",title:"Patch",group:"rest",icon:"generic24.png",description:"Rest PATCH command",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{path:{kind:"attribute",type:"string",description:"The path mapping URIs of this REST operation such as /{id}.",title:"Path",required:!1,deprecated:!1},to:{kind:"element",type:"object",description:"The Camel endpoint this REST service will call, such as a direct endpoint to link to an existing route that handles this REST call.",title:"To",required:!0,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this REST service from the route during build time. Once an REST service has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to include or exclude this rest operation in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},deprecated:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Marks this rest operation as deprecated in OpenApi documentation.",title:"Deprecated",required:!1,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"Sets the id of the route",title:"Route Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},post:{type:"object",title:"Post",group:"rest",icon:"generic24.png",description:"Rest POST command",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{path:{kind:"attribute",type:"string",description:"The path mapping URIs of this REST operation such as /{id}.",title:"Path",required:!1,deprecated:!1},to:{kind:"element",type:"object",description:"The Camel endpoint this REST service will call, such as a direct endpoint to link to an existing route that handles this REST call.",title:"To",required:!0,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this REST service from the route during build time. Once an REST service has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to include or exclude this rest operation in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},deprecated:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Marks this rest operation as deprecated in OpenApi documentation.",title:"Deprecated",required:!1,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"Sets the id of the route",title:"Route Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},put:{type:"object",title:"Put",group:"rest",icon:"generic24.png",description:"Rest PUT command",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{path:{kind:"attribute",type:"string",description:"The path mapping URIs of this REST operation such as /{id}.",title:"Path",required:!1,deprecated:!1},to:{kind:"element",type:"object",description:"The Camel endpoint this REST service will call, such as a direct endpoint to link to an existing route that handles this REST call.",title:"To",required:!0,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this REST service from the route during build time. Once an REST service has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to include or exclude this rest operation in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},deprecated:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Marks this rest operation as deprecated in OpenApi documentation.",title:"Deprecated",required:!1,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"Sets the id of the route",title:"Route Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},responseHeader:{type:"object",title:"Response Header",group:"rest",icon:"generic24.png",description:"To specify the rest operation response headers.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{name:{kind:"attribute",type:"string",description:"Name of the parameter. This option is mandatory.",title:"Name",required:!0,deprecated:!1},collectionFormat:{kind:"attribute",type:"enum",defaultValue:"csv",enum:["csv","multi","pipes","ssv","tsv"],description:"Sets the parameter collection format.",title:"Collection Format",required:!1,deprecated:!1},arrayType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the parameter array type. Required if data type is array. Describes the type of items in the array.",title:"Array Type",required:!1,deprecated:!1},dataType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the header data type.",title:"Data Type",required:!1,deprecated:!1},dataFormat:{kind:"attribute",type:"string",description:"Sets the parameter data format.",title:"Data Format",required:!1,deprecated:!1},allowableValues:{kind:"element",type:"array",description:"Sets the parameter list of allowable values.",title:"Allowable Values",required:!1,deprecated:!1},example:{kind:"attribute",type:"string",description:"Sets the example",title:"Example",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"Description of the parameter.",title:"Description",required:!1,deprecated:!1}}},responseMessage:{type:"object",title:"Response Message",group:"rest",icon:"generic24.png",description:"To specify the rest operation response messages.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{code:{kind:"attribute",type:"string",defaultValue:"200",description:"The response code such as a HTTP status code",title:"Code",required:!1,deprecated:!1},message:{kind:"attribute",type:"string",description:"The response message (description)",title:"Message",required:!0,deprecated:!1},responseModel:{kind:"attribute",type:"string",description:"The response model",title:"Response Model",required:!1,deprecated:!1},header:{kind:"element",type:"array",description:"Adds a response header",title:"Header",required:!1,deprecated:!1},examples:{kind:"element",type:"array",description:"Examples of response messages",title:"Examples",required:!1,deprecated:!1}}},rest:{type:"object",title:"Rest",group:"rest",icon:"generic24.png",description:"Defines a rest service using the rest-dsl",acceptInput:"false",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{path:{kind:"attribute",type:"string",description:"Path of the rest service, such as /foo",title:"Path",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this REST service from the route during build time. Once an REST service has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to include or exclude this rest operation in API documentation. This option will override what may be configured on a parent level. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},tag:{kind:"attribute",type:"string",description:"To configure a special tag for the operations within this rest definition.",title:"Tag",required:!1,deprecated:!1},securityDefinitions:{kind:"element",type:"object",description:"Sets the security definitions such as Basic, OAuth2 etc.",title:"Security Definitions",required:!1,deprecated:!1},securityRequirements:{kind:"element",type:"array",description:"Sets the security requirement(s) for all endpoints.",title:"Security Requirements",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},restBinding:{type:"object",title:"Rest Binding",group:"rest",icon:"generic24.png",description:"To configure rest binding",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. The default value is off",title:"Binding Mode",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data The name of the class of the input data. Append a to the end of the name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do.",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},component:{kind:"attribute",type:"string",description:"Sets the component name that this definition will apply to",title:"Component",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},restConfiguration:{type:"object",title:"Rest Configuration",group:"rest",icon:"generic24.png",description:"To configure rest",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{component:{kind:"attribute",type:"enum",enum:["platform-http","servlet","jetty","undertow","netty-http","coap"],description:"The Camel Rest component to use for the REST transport (consumer), such as netty-http, jetty, servlet, undertow. If no component has been explicit configured, then Camel will lookup if there is a Camel component that integrates with the Rest DSL, or if a org.apache.camel.spi.RestConsumerFactory is registered in the registry. If either one is found, then that is being used.",title:"Component",required:!1,deprecated:!1},apiComponent:{kind:"attribute",type:"enum",enum:["openapi","swagger"],description:"The name of the Camel component to use as the REST API. If no API Component has been explicit configured, then Camel will lookup if there is a Camel component responsible for servicing and generating the REST API documentation, or if a org.apache.camel.spi.RestApiProcessorFactory is registered in the registry. If either one is found, then that is being used.",title:"Api Component",required:!1,deprecated:!1},producerComponent:{kind:"attribute",type:"enum",enum:["vertx-http","http","undertow","netty-http"],description:"Sets the name of the Camel component to use as the REST producer",title:"Producer Component",required:!1,deprecated:!1},scheme:{kind:"attribute",type:"string",description:"The scheme to use for exposing the REST service. Usually http or https is supported. The default value is http",title:"Scheme",required:!1,deprecated:!1},host:{kind:"attribute",type:"string",description:"The hostname to use for exposing the REST service.",title:"Host",required:!1,deprecated:!1},port:{kind:"attribute",type:"string",description:"The port number to use for exposing the REST service. Notice if you use servlet component then the port number configured here does not apply, as the port number in use is the actual port number the servlet component is using. eg if using Apache Tomcat its the tomcat http port, if using Apache Karaf its the HTTP service in Karaf that uses port 8181 by default etc. Though in those situations setting the port number here, allows tooling and JMX to know the port number, so its recommended to set the port number to the number that the servlet engine uses.",title:"Port",required:!1,deprecated:!1},apiHost:{kind:"attribute",type:"string",description:"To use a specific hostname for the API documentation (such as swagger or openapi) This can be used to override the generated host with this configured hostname",title:"Api Host",required:!1,deprecated:!1},useXForwardHeaders:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to use X-Forward headers for Host and related setting. The default value is true.",title:"Use XForward Headers",required:!1,deprecated:!1},producerApiDoc:{kind:"attribute",type:"string",description:"Sets the location of the api document the REST producer will use to validate the REST uri and query parameters are valid accordingly to the api document. The location of the api document is loaded from classpath by default, but you can use file: or http: to refer to resources to load from file or http url.",title:"Producer Api Doc",required:!1,deprecated:!1},contextPath:{kind:"attribute",type:"string",description:"Sets a leading context-path the REST services will be using. This can be used when using components such as camel-servlet where the deployed web application is deployed using a context-path. Or for components such as camel-jetty or camel-netty-http that includes a HTTP server.",title:"Context Path",required:!1,deprecated:!1},apiContextPath:{kind:"attribute",type:"string",description:"Sets a leading API context-path the REST API services will be using. This can be used when using components such as camel-servlet where the deployed web application is deployed using a context-path.",title:"Api Context Path",required:!1,deprecated:!1},apiContextRouteId:{kind:"attribute",type:"string",description:"Sets the route id to use for the route that services the REST API. The route will by default use an auto assigned route id.",title:"Api Context Route Id",required:!1,deprecated:!1},apiVendorExtension:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether vendor extension is enabled in the Rest APIs. If enabled then Camel will include additional information as vendor extension (eg keys starting with x-) such as route ids, class names etc. Not all 3rd party API gateways and tools supports vendor-extensions when importing your API docs.",title:"Api Vendor Extension",required:!1,deprecated:!1},hostNameResolver:{kind:"attribute",type:"enum",defaultValue:"allLocalIp",enum:["allLocalIp","localHostName","localIp"],description:"If no hostname has been explicit configured, then this resolver is used to compute the hostname the REST service will be using.",title:"Host Name Resolver",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"enum",defaultValue:"off",enum:["off","auto","json","xml","json_xml"],description:"Sets the binding mode to use. The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do.",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check: 1) Content-Type header matches what the Rest DSL consumes; returns HTTP Status 415 if validation error. 2) Accept header matches what the Rest DSL produces; returns HTTP Status 406 if validation error. 3) Missing required data (query parameters, HTTP headers, body); returns HTTP Status 400 if validation error. 4) Parsing error of the message body (JSon, XML or Auto binding mode must be enabled); returns HTTP Status 400 if validation error.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. The default value is false.",title:"Enable CORS",required:!1,deprecated:!1},inlineRoutes:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Inline routes in rest-dsl which are linked using direct endpoints. By default, each service in Rest DSL is an individual route, meaning that you would have at least two routes per service (rest-dsl, and the route linked from rest-dsl). Enabling this allows Camel to optimize and inline this as a single route, however this requires to use direct endpoints, which must be unique per service. This option is default false.",title:"Inline Routes",required:!1,deprecated:!1},jsonDataFormat:{kind:"attribute",type:"string",description:"Name of specific json data format to use. By default jackson will be used. Important: This option is only for setting a custom name of the data format, not to refer to an existing data format instance.",title:"Json Data Format",required:!1,deprecated:!1},xmlDataFormat:{kind:"attribute",type:"string",description:"Name of specific XML data format to use. By default jaxb will be used. Important: This option is only for setting a custom name of the data format, not to refer to an existing data format instance.",title:"Xml Data Format",required:!1,deprecated:!1},componentProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the rest component in use.",title:"Component Property",required:!1,deprecated:!1},endpointProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the rest endpoint in use.",title:"Endpoint Property",required:!1,deprecated:!1},consumerProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the rest consumer in use.",title:"Consumer Property",required:!1,deprecated:!1},dataFormatProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the data formats in use. For example set property prettyPrint to true to have json outputted in pretty mode. The properties can be prefixed to denote the option is only for either JSON or XML and for either the IN or the OUT. The prefixes are: json.in. json.out. xml.in. xml.out. For example a key with value xml.out.mustBeJAXBElement is only for the XML data format for the outgoing. A key without a prefix is a common key for all situations.",title:"Data Format Property",required:!1,deprecated:!1},apiProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the api documentation. For example set property api.title to my cool stuff",title:"Api Property",required:!1,deprecated:!1},corsHeaders:{kind:"element",type:"array",description:"Allows to configure custom CORS headers.",title:"Cors Headers",required:!1,deprecated:!1}}},restContextRef:{type:"object",title:"Rest Context Ref",group:"configuration,rest",icon:"generic24.png",description:"To refer to an XML file with rest services defined using the rest-dsl",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the rest-dsl",title:"Ref",required:!0,deprecated:!1}}},restProperty:{type:"object",title:"Rest Property",group:"rest",icon:"generic24.png",description:"A key value pair",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Property key",title:"Key",required:!0,deprecated:!1},value:{kind:"attribute",type:"string",description:"Property value",title:"Value",required:!0,deprecated:!1}}},rests:{type:"object",title:"Rests",group:"rest",icon:"generic24.png",description:"A series of rest services defined using the rest-dsl",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{rests:{kind:"element",type:"array",description:"Contains the rest services defined using the rest-dsl",title:"Rests",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},security:{type:"object",title:"Rest Security",group:"rest,security,configuration",icon:"generic24.png",description:"Rest security definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},scopes:{kind:"attribute",type:"string",description:"The scopes to allow (separate multiple scopes by comma)",title:"Scopes",required:!1,deprecated:!1}}},securityDefinitions:{type:"object",title:"Rest Security Definitions",group:"rest,security,configuration",icon:"generic24.png",description:"To configure rest security definitions.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{securityDefinitions:{kind:"element",type:"array",description:"Security definitions",title:"Security Definitions",required:!0,deprecated:!1}}}},l={asn1:{type:"object",title:"ASN.1 File",group:"dataformat,transformation,file",icon:"generic24.png",description:"Encode and decode data structures using Abstract Syntax Notation One (ASN.1).",properties:{unmarshalType:{kind:"attribute",type:"string",description:"Class to use when unmarshalling.",title:"Unmarshal Type",required:!1,deprecated:!1},usingIterator:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the asn1 file has more than one entry, the setting this option to true, allows working with the splitter EIP, to split the data using an iterator in a streaming mode.",title:"Using Iterator",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},avro:{type:"object",title:"Avro",group:"dataformat,transformation",icon:"generic24.png",description:"Serialize and deserialize messages using Apache Avro binary data format.",properties:{instanceClassName:{kind:"attribute",type:"string",description:"Class name to use for marshal and unmarshalling",title:"Instance Class Name",required:!1,deprecated:!1},library:{kind:"attribute",type:"enum",defaultValue:"ApacheAvro",enum:["ApacheAvro","Jackson"],description:"Which Avro library to use.",title:"Library",required:!1,deprecated:!1},objectMapper:{kind:"attribute",type:"string",description:"Lookup and use the existing ObjectMapper with the given id when using Jackson.",title:"Object Mapper",required:!1,deprecated:!1},useDefaultObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to lookup and use default Jackson ObjectMapper from the registry.",title:"Use Default Object Mapper",required:!1,deprecated:!1},unmarshalType:{kind:"attribute",type:"string",description:"Class name of the java type to use when unmarshalling",title:"Unmarshal Type",required:!1,deprecated:!1},jsonView:{kind:"attribute",type:"string",description:"When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations",title:"Json View",required:!1,deprecated:!1},include:{kind:"attribute",type:"string",description:"If you want to marshal a pojo to JSON, and the pojo has some fields with null values. And you want to skip these null values, you can set this option to NON_NULL",title:"Include",required:!1,deprecated:!1},allowJmsType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",title:"Allow Jms Type",required:!1,deprecated:!1},collectionType:{kind:"attribute",type:"string",description:"Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows to use different collection types than java.util.Collection based as default.",title:"Collection Type",required:!1,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unmarshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},moduleClassNames:{kind:"attribute",type:"string",description:"To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma.",title:"Module Class Names",required:!1,deprecated:!1},moduleRefs:{kind:"attribute",type:"string",description:"To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma.",title:"Module Refs",required:!1,deprecated:!1},enableFeatures:{kind:"attribute",type:"string",description:"Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Enable Features",required:!1,deprecated:!1},disableFeatures:{kind:"attribute",type:"string",description:"Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Disable Features",required:!1,deprecated:!1},allowUnmarshallType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Jackson is allowed to attempt to use the CamelJacksonUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",title:"Allow Unmarshall Type",required:!1,deprecated:!1},timezone:{kind:"attribute",type:"string",description:"If set then Jackson will use the Timezone when marshalling/unmarshalling.",title:"Timezone",required:!1,deprecated:!1},autoDiscoverObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true then Jackson will lookup for an objectMapper into the registry",title:"Auto Discover Object Mapper",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},schemaResolver:{kind:"attribute",type:"string",description:"Optional schema resolver used to lookup schemas for the data in transit.",title:"Schema Resolver",required:!1,deprecated:!1},autoDiscoverSchemaResolver:{kind:"attribute",type:"boolean",defaultValue:"true",description:"When not disabled, the SchemaResolver will be looked up into the registry",title:"Auto Discover Schema Resolver",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},barcode:{type:"object",title:"Barcode",group:"dataformat,transformation",icon:"generic24.png",description:"Transform strings to various 1D/2D barcode bitmap formats and back.",properties:{barcodeFormat:{kind:"attribute",type:"string",description:"Barcode format such as QR-Code",title:"Barcode Format",required:!1,deprecated:!1},imageType:{kind:"attribute",type:"string",description:"Image type of the barcode such as png",title:"Image Type",required:!1,deprecated:!1},width:{kind:"attribute",type:"integer",description:"Width of the barcode",title:"Width",required:!1,deprecated:!1},height:{kind:"attribute",type:"integer",description:"Height of the barcode",title:"Height",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},base64:{type:"object",title:"Base64",group:"dataformat,transformation",icon:"generic24.png",description:"Encode and decode data using Base64.",properties:{lineLength:{kind:"attribute",type:"integer",defaultValue:"76",description:"To specific a maximum line length for the encoded data. By default 76 is used.",title:"Line Length",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separators to use. Uses new line characters (CRLF) by default.",title:"Line Separator",required:!1,deprecated:!1},urlSafe:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Instead of emitting '' and '/' we emit '-' and '_' respectively. urlSafe is only applied to encode operations. Decoding seamlessly handles both modes. Is by default false.",title:"Url Safe",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},bindy:{type:"object",title:"Bindy",group:"dataformat,transformation,csv",icon:"generic24.png",description:"Marshal and unmarshal Java beans from and to flat payloads (such as CSV, delimited, fixed length formats, or FIX messages).",properties:{type:{kind:"attribute",type:"enum",enum:["Csv","Fixed","KeyValue"],description:"Whether to use Csv, Fixed, or KeyValue.",title:"Type",required:!0,deprecated:!1},classType:{kind:"attribute",type:"string",description:"Name of model class to use.",title:"Class Type",required:!1,deprecated:!1},allowEmptyStream:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to allow empty streams in the unmarshal process. If true, no exception will be thrown when a body without records is provided.",title:"Allow Empty Stream",required:!1,deprecated:!1},unwrapSingleInstance:{kind:"attribute",type:"boolean",defaultValue:"true",description:"When unmarshalling should a single instance be unwrapped and returned instead of wrapped in a java.util.List.",title:"Unwrap Single Instance",required:!1,deprecated:!1},locale:{kind:"attribute",type:"string",description:"To configure a default locale to use, such as us for united states. To use the JVM platform default locale then use the name default",title:"Locale",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},cbor:{type:"object",title:"CBOR",group:"dataformat,transformation,json",icon:"generic24.png",description:"Unmarshal a CBOR payload to POJO and back.",properties:{objectMapper:{kind:"attribute",type:"string",description:"Lookup and use the existing CBOR ObjectMapper with the given id when using Jackson.",title:"Object Mapper",required:!1,deprecated:!1},useDefaultObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to lookup and use default Jackson CBOR ObjectMapper from the registry.",title:"Use Default Object Mapper",required:!1,deprecated:!1},unmarshalType:{kind:"attribute",type:"string",description:"Class name of the java type to use when unmarshalling",title:"Unmarshal Type",required:!1,deprecated:!1},collectionType:{kind:"attribute",type:"string",description:"Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows to use different collection types than java.util.Collection based as default.",title:"Collection Type",required:!1,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unmarshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},allowUnmarshallType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Jackson CBOR is allowed to attempt to use the CamelCBORUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",title:"Allow Unmarshall Type",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},allowJmsType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",title:"Allow Jms Type",required:!1,deprecated:!1},enableFeatures:{kind:"attribute",type:"string",description:"Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Enable Features",required:!1,deprecated:!1},disableFeatures:{kind:"attribute",type:"string",description:"Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Disable Features",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},crypto:{type:"object",title:"Crypto (Java Cryptographic Extension)",group:"dataformat,transformation,security",icon:"generic24.png",description:"Encrypt and decrypt messages using Java Cryptography Extension (JCE).",properties:{algorithm:{kind:"attribute",type:"string",description:"The JCE algorithm name indicating the cryptographic algorithm that will be used.",title:"Algorithm",required:!1,deprecated:!1},keyRef:{kind:"attribute",type:"string",description:"Refers to the secret key to lookup from the register to use.",title:"Key Ref",required:!1,deprecated:!1},cryptoProvider:{kind:"attribute",type:"string",description:"The name of the JCE Security Provider that should be used.",title:"Crypto Provider",required:!1,deprecated:!1},initVectorRef:{kind:"attribute",type:"string",description:"Refers to a byte array containing the Initialization Vector that will be used to initialize the Cipher.",title:"Init Vector Ref",required:!1,deprecated:!1},algorithmParameterRef:{kind:"attribute",type:"string",description:"A JCE AlgorithmParameterSpec used to initialize the Cipher. Will lookup the type using the given name as a java.security.spec.AlgorithmParameterSpec type.",title:"Algorithm Parameter Ref",required:!1,deprecated:!1},bufferSize:{kind:"attribute",type:"integer",defaultValue:"4096",description:"The size of the buffer used in the signature process.",title:"Buffer Size",required:!1,deprecated:!1},macAlgorithm:{kind:"attribute",type:"string",defaultValue:"HmacSHA1",description:"The JCE algorithm name indicating the Message Authentication algorithm.",title:"Mac Algorithm",required:!1,deprecated:!1},shouldAppendHMAC:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Flag indicating that a Message Authentication Code should be calculated and appended to the encrypted data.",title:"Should Append HMAC",required:!1,deprecated:!1},inline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Flag indicating that the configured IV should be inlined into the encrypted data stream. Is by default false.",title:"Inline",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},csv:{type:"object",title:"CSV",group:"dataformat,transformation,csv",icon:"generic24.png",description:"Handle CSV (Comma Separated Values) payloads.",properties:{formatRef:{kind:"attribute",type:"string",description:"The reference format to use, it will be updated with the other format options, the default value is CSVFormat.DEFAULT",title:"Format Ref",required:!1,deprecated:!1},formatName:{kind:"attribute",type:"enum",defaultValue:"DEFAULT",enum:["DEFAULT","EXCEL","INFORMIX_UNLOAD","INFORMIX_UNLOAD_CSV","MYSQL","RFC4180"],description:"The name of the format to use, the default value is CSVFormat.DEFAULT",title:"Format Name",required:!1,deprecated:!1},commentMarkerDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Disables the comment marker of the reference format.",title:"Comment Marker Disabled",required:!1,deprecated:!1},commentMarker:{kind:"attribute",type:"string",description:"Sets the comment marker of the reference format.",title:"Comment Marker",required:!1,deprecated:!1},delimiter:{kind:"attribute",type:"string",description:"Sets the delimiter to use. The default value is , (comma)",title:"Delimiter",required:!1,deprecated:!1},escapeDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Use for disabling using escape character",title:"Escape Disabled",required:!1,deprecated:!1},escape:{kind:"attribute",type:"string",description:"Sets the escape character to use",title:"Escape",required:!1,deprecated:!1},headerDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Use for disabling headers",title:"Header Disabled",required:!1,deprecated:!1},header:{kind:"element",type:"array",description:"To configure the CSV headers",title:"Header",required:!1,deprecated:!1},allowMissingColumnNames:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to allow missing column names.",title:"Allow Missing Column Names",required:!1,deprecated:!1},ignoreEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore empty lines.",title:"Ignore Empty Lines",required:!1,deprecated:!1},ignoreSurroundingSpaces:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore surrounding spaces",title:"Ignore Surrounding Spaces",required:!1,deprecated:!1},nullStringDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used to disable null strings",title:"Null String Disabled",required:!1,deprecated:!1},nullString:{kind:"attribute",type:"string",description:"Sets the null string",title:"Null String",required:!1,deprecated:!1},quoteDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used to disable quotes",title:"Quote Disabled",required:!1,deprecated:!1},quote:{kind:"attribute",type:"string",description:"Sets the quote which by default is",title:"Quote",required:!1,deprecated:!1},recordSeparatorDisabled:{kind:"attribute",type:"string",description:"Used for disabling record separator",title:"Record Separator Disabled",required:!1,deprecated:!1},recordSeparator:{kind:"attribute",type:"string",description:"Sets the record separator (aka new line) which by default is new line characters (CRLF)",title:"Record Separator",required:!1,deprecated:!1},skipHeaderRecord:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip the header record in the output",title:"Skip Header Record",required:!1,deprecated:!1},quoteMode:{kind:"attribute",type:"enum",enum:["ALL","ALL_NON_NULL","MINIMAL","NON_NUMERIC","NONE"],description:"Sets the quote mode",title:"Quote Mode",required:!1,deprecated:!1},ignoreHeaderCase:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to ignore case when accessing header names.",title:"Ignore Header Case",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to trim leading and trailing blanks.",title:"Trim",required:!1,deprecated:!1},trailingDelimiter:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to add a trailing delimiter.",title:"Trailing Delimiter",required:!1,deprecated:!1},marshallerFactoryRef:{kind:"attribute",type:"string",description:"Sets the implementation of the CsvMarshallerFactory interface which is able to customize marshalling/unmarshalling behavior by extending CsvMarshaller or creating it from scratch.",title:"Marshaller Factory Ref",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one.",title:"Lazy Load",required:!1,deprecated:!1},useMaps:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps (HashMap)for the lines values instead of lists. It requires to have header (either defined or collected).",title:"Use Maps",required:!1,deprecated:!1},useOrderedMaps:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce ordered maps (LinkedHashMap) for the lines values instead of lists. It requires to have header (either defined or collected).",title:"Use Ordered Maps",required:!1,deprecated:!1},recordConverterRef:{kind:"attribute",type:"string",description:"Refers to a custom CsvRecordConverter to lookup from the registry to use.",title:"Record Converter Ref",required:!1,deprecated:!1},captureHeaderRecord:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should capture the header record and store it in the message header",title:"Capture Header Record",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},custom:{type:"object",title:"Custom",group:"dataformat,transformation",icon:"generic24.png",description:"Delegate to a custom org.apache.camel.spi.DataFormat implementation via Camel registry.",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the custom org.apache.camel.spi.DataFormat to lookup from the Camel registry.",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},dataFormats:{type:"object",title:"Data formats",group:"dataformat,transformation",icon:"generic24.png",description:"Configure data formats.",properties:{dataFormats:{kind:"element",type:"array",description:"A list holding the configured data formats",title:"Data Formats",required:!0,deprecated:!1}}},fhirJson:{type:"object",title:"FHIR JSon",group:"dataformat,transformation,hl7,json",icon:"generic24.png",description:"Marshall and unmarshall FHIR objects to/from JSON.",properties:{fhirVersion:{kind:"attribute",type:"enum",defaultValue:"R4",enum:["DSTU2","DSTU2_HL7ORG","DSTU2_1","DSTU3","R4","R5"],description:"The version of FHIR to use. Possible values are: DSTU2,DSTU2_HL7ORG,DSTU2_1,DSTU3,R4,R5",title:"Fhir Version",required:!1,deprecated:!1},fhirContext:{kind:"attribute",type:"string",description:"To use a custom fhir context. Reference to object of type ca.uhn.fhir.context.FhirContext",title:"Fhir Context",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets the pretty print flag, meaning that the parser will encode resources with human-readable spacing and newlines between elements instead of condensing output as much as possible.",title:"Pretty Print",required:!1,deprecated:!1},parserErrorHandler:{kind:"attribute",type:"string",description:"Registers an error handler which will be invoked when any parse errors are found. Reference to object of type ca.uhn.fhir.parser.IParserErrorHandler",title:"Parser Error Handler",required:!1,deprecated:!1},parserOptions:{kind:"attribute",type:"string",description:"Sets the parser options object which will be used to supply default options to newly created parsers. Reference to object of type ca.uhn.fhir.context.ParserOptions.",title:"Parser Options",required:!1,deprecated:!1},preferTypes:{kind:"attribute",type:"string",description:"If set (FQN class names), when parsing resources the parser will try to use the given types when possible, in the order that they are provided (from highest to lowest priority). For example, if a custom type which declares to implement the Patient resource is passed in here, and the parser is parsing a Bundle containing a Patient resource, the parser will use the given custom type. Multiple class names can be separated by comma.",title:"Prefer Types",required:!1,deprecated:!1},forceResourceId:{kind:"attribute",type:"string",description:"When encoding, force this resource ID to be encoded as the resource ID. Reference to object of type org.hl7.fhir.instance.model.api.IIdType",title:"Force Resource Id",required:!1,deprecated:!1},serverBaseUrl:{kind:"attribute",type:"string",description:"Sets the server's base URL used by this parser. If a value is set, resource references will be turned into relative references if they are provided as absolute URLs but have a base matching the given base.",title:"Server Base Url",required:!1,deprecated:!1},omitResourceId:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) the ID of any resources being encoded will not be included in the output. Note that this does not apply to contained resources, only to root resources. In other words, if this is set to true, contained resources will still have local IDs but the outer/containing ID will not have an ID.",title:"Omit Resource Id",required:!1,deprecated:!1},encodeElementsAppliesToChildResourcesOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), the values supplied to setEncodeElements(Set) will not be applied to the root resource (typically a Bundle), but will be applied to any sub-resources contained within it (i.e. search result resources in that bundle)",title:"Encode Elements Applies To Child Resources Only",required:!1,deprecated:!1},encodeElements:{kind:"attribute",type:"string",description:"If provided, specifies the elements which should be encoded, to the exclusion of all others. Multiple elements can be separated by comma when using String parameter. Valid values for this field would include: Patient - Encode patient and all its children Patient.name - Encode only the patient's name Patient.name.family - Encode only the patient's family name .text - Encode the text element on any resource (only the very first position may contain a wildcard) .(mandatory) - This is a special case which causes any mandatory fields (min 0) to be encoded",title:"Encode Elements",required:!1,deprecated:!1},dontEncodeElements:{kind:"attribute",type:"string",description:"If provided, specifies the elements which should NOT be encoded. Multiple elements can be separated by comma when using String parameter. Valid values for this field would include: Patient - Don't encode patient and all its children Patient.name - Don't encode the patient's name Patient.name.family - Don't encode the patient's family name .text - Don't encode the text element on any resource (only the very first position may contain a wildcard) DSTU2 note: Note that values including meta, such as Patient.meta will work for DSTU2 parsers, but values with subelements on meta such as Patient.meta.lastUpdated will only work in DSTU3 mode.",title:"Dont Encode Elements",required:!1,deprecated:!1},stripVersionsFromReferences:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), resource references containing a version will have the version removed when the resource is encoded. This is generally good behaviour because in most situations, references from one resource to another should be to the resource by ID, not by ID and version. In some cases though, it may be desirable to preserve the version in resource links. In that case, this value should be set to false. This method provides the ability to globally disable reference encoding. If finer-grained control is needed, use setDontStripVersionsFromReferencesAtPaths(List)",title:"Strip Versions From References",required:!1,deprecated:!1},overrideResourceIdWithBundleEntryFullUrl:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), the Bundle.entry.fullUrl will override the Bundle.entry.resource's resource id if the fullUrl is defined. This behavior happens when parsing the source data into a Bundle object. Set this to false if this is not the desired behavior (e.g. the client code wishes to perform additional validation checks between the fullUrl and the resource id).",title:"Override Resource Id With Bundle Entry Full Url",required:!1,deprecated:!1},summaryMode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) only elements marked by the FHIR specification as being summary elements will be included.",title:"Summary Mode",required:!1,deprecated:!1},suppressNarratives:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), narratives will not be included in the encoded values.",title:"Suppress Narratives",required:!1,deprecated:!1},dontStripVersionsFromReferencesAtPaths:{kind:"attribute",type:"string",description:"If supplied value(s), any resource references at the specified paths will have their resource versions encoded instead of being automatically stripped during the encoding process. This setting has no effect on the parsing process. Multiple elements can be separated by comma when using String parameter. This method provides a finer-grained level of control than setStripVersionsFromReferences(String) and any paths specified by this method will be encoded even if setStripVersionsFromReferences(String) has been set to true (which is the default)",title:"Dont Strip Versions From References At Paths",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},fhirXml:{type:"object",title:"FHIR XML",group:"dataformat,transformation,hl7,xml",icon:"generic24.png",description:"Marshall and unmarshall FHIR objects to/from XML.",properties:{fhirVersion:{kind:"attribute",type:"enum",defaultValue:"R4",enum:["DSTU2","DSTU2_HL7ORG","DSTU2_1","DSTU3","R4","R5"],description:"The version of FHIR to use. Possible values are: DSTU2,DSTU2_HL7ORG,DSTU2_1,DSTU3,R4,R5",title:"Fhir Version",required:!1,deprecated:!1},fhirContext:{kind:"attribute",type:"string",description:"To use a custom fhir context. Reference to object of type ca.uhn.fhir.context.FhirContext",title:"Fhir Context",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets the pretty print flag, meaning that the parser will encode resources with human-readable spacing and newlines between elements instead of condensing output as much as possible.",title:"Pretty Print",required:!1,deprecated:!1},parserErrorHandler:{kind:"attribute",type:"string",description:"Registers an error handler which will be invoked when any parse errors are found. Reference to object of type ca.uhn.fhir.parser.IParserErrorHandler",title:"Parser Error Handler",required:!1,deprecated:!1},parserOptions:{kind:"attribute",type:"string",description:"Sets the parser options object which will be used to supply default options to newly created parsers. Reference to object of type ca.uhn.fhir.context.ParserOptions.",title:"Parser Options",required:!1,deprecated:!1},preferTypes:{kind:"attribute",type:"string",description:"If set (FQN class names), when parsing resources the parser will try to use the given types when possible, in the order that they are provided (from highest to lowest priority). For example, if a custom type which declares to implement the Patient resource is passed in here, and the parser is parsing a Bundle containing a Patient resource, the parser will use the given custom type. Multiple class names can be separated by comma.",title:"Prefer Types",required:!1,deprecated:!1},forceResourceId:{kind:"attribute",type:"string",description:"When encoding, force this resource ID to be encoded as the resource ID. Reference to object of type org.hl7.fhir.instance.model.api.IIdType",title:"Force Resource Id",required:!1,deprecated:!1},serverBaseUrl:{kind:"attribute",type:"string",description:"Sets the server's base URL used by this parser. If a value is set, resource references will be turned into relative references if they are provided as absolute URLs but have a base matching the given base.",title:"Server Base Url",required:!1,deprecated:!1},omitResourceId:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) the ID of any resources being encoded will not be included in the output. Note that this does not apply to contained resources, only to root resources. In other words, if this is set to true, contained resources will still have local IDs but the outer/containing ID will not have an ID.",title:"Omit Resource Id",required:!1,deprecated:!1},encodeElementsAppliesToChildResourcesOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), the values supplied to setEncodeElements(Set) will not be applied to the root resource (typically a Bundle), but will be applied to any sub-resources contained within it (i.e. search result resources in that bundle)",title:"Encode Elements Applies To Child Resources Only",required:!1,deprecated:!1},encodeElements:{kind:"attribute",type:"string",description:"If provided, specifies the elements which should be encoded, to the exclusion of all others. Multiple elements can be separated by comma when using String parameter. Valid values for this field would include: Patient - Encode patient and all its children Patient.name - Encode only the patient's name Patient.name.family - Encode only the patient's family name .text - Encode the text element on any resource (only the very first position may contain a wildcard) .(mandatory) - This is a special case which causes any mandatory fields (min 0) to be encoded",title:"Encode Elements",required:!1,deprecated:!1},dontEncodeElements:{kind:"attribute",type:"string",description:"If provided, specifies the elements which should NOT be encoded. Multiple elements can be separated by comma when using String parameter. Valid values for this field would include: Patient - Don't encode patient and all its children Patient.name - Don't encode the patient's name Patient.name.family - Don't encode the patient's family name .text - Don't encode the text element on any resource (only the very first position may contain a wildcard) DSTU2 note: Note that values including meta, such as Patient.meta will work for DSTU2 parsers, but values with subelements on meta such as Patient.meta.lastUpdated will only work in DSTU3 mode.",title:"Dont Encode Elements",required:!1,deprecated:!1},stripVersionsFromReferences:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), resource references containing a version will have the version removed when the resource is encoded. This is generally good behaviour because in most situations, references from one resource to another should be to the resource by ID, not by ID and version. In some cases though, it may be desirable to preserve the version in resource links. In that case, this value should be set to false. This method provides the ability to globally disable reference encoding. If finer-grained control is needed, use setDontStripVersionsFromReferencesAtPaths(List)",title:"Strip Versions From References",required:!1,deprecated:!1},overrideResourceIdWithBundleEntryFullUrl:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), the Bundle.entry.fullUrl will override the Bundle.entry.resource's resource id if the fullUrl is defined. This behavior happens when parsing the source data into a Bundle object. Set this to false if this is not the desired behavior (e.g. the client code wishes to perform additional validation checks between the fullUrl and the resource id).",title:"Override Resource Id With Bundle Entry Full Url",required:!1,deprecated:!1},summaryMode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) only elements marked by the FHIR specification as being summary elements will be included.",title:"Summary Mode",required:!1,deprecated:!1},suppressNarratives:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), narratives will not be included in the encoded values.",title:"Suppress Narratives",required:!1,deprecated:!1},dontStripVersionsFromReferencesAtPaths:{kind:"attribute",type:"string",description:"If supplied value(s), any resource references at the specified paths will have their resource versions encoded instead of being automatically stripped during the encoding process. This setting has no effect on the parsing process. Multiple elements can be separated by comma when using String parameter. This method provides a finer-grained level of control than setStripVersionsFromReferences(String) and any paths specified by this method will be encoded even if setStripVersionsFromReferences(String) has been set to true (which is the default)",title:"Dont Strip Versions From References At Paths",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},flatpack:{type:"object",title:"Flatpack",group:"dataformat,transformation,csv",icon:"generic24.png",description:"Marshal and unmarshal Java lists and maps to/from flat files (such as CSV, delimited, or fixed length formats) using Flatpack library.",properties:{definition:{kind:"attribute",type:"string",description:"The flatpack pzmap configuration file. Can be omitted in simpler situations, but its preferred to use the pzmap.",title:"Definition",required:!1,deprecated:!1},fixed:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Delimited or fixed. Is by default false = delimited",title:"Fixed",required:!1,deprecated:!1},delimiter:{kind:"attribute",type:"string",defaultValue:",",description:"The delimiter char (could be ; , or similar)",title:"Delimiter",required:!1,deprecated:!1},ignoreFirstRecord:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the first line is ignored for delimited files (for the column headers). Is by default true.",title:"Ignore First Record",required:!1,deprecated:!1},allowShortLines:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allows for lines to be shorter than expected and ignores the extra characters",title:"Allow Short Lines",required:!1,deprecated:!1},ignoreExtraColumns:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allows for lines to be longer than expected and ignores the extra characters.",title:"Ignore Extra Columns",required:!1,deprecated:!1},textQualifier:{kind:"attribute",type:"string",description:"If the text is qualified with a character. Uses quote character by default.",title:"Text Qualifier",required:!1,deprecated:!1},parserFactoryRef:{kind:"attribute",type:"string",description:"References to a custom parser factory to lookup in the registry",title:"Parser Factory Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},grok:{type:"object",title:"Grok",group:"dataformat,transformation",icon:"generic24.png",description:"Unmarshal unstructured data to objects using Logstash based Grok patterns.",properties:{pattern:{kind:"attribute",type:"string",description:"The grok pattern to match lines of input",title:"Pattern",required:!1,deprecated:!1},flattened:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Turns on flattened mode. In flattened mode the exception is thrown when there are multiple pattern matches with same key.",title:"Flattened",required:!1,deprecated:!1},allowMultipleMatchesPerLine:{kind:"attribute",type:"boolean",defaultValue:"true",description:"If false, every line of input is matched for pattern only once. Otherwise the line can be scanned multiple times when non-terminal pattern is used.",title:"Allow Multiple Matches Per Line",required:!1,deprecated:!1},namedOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to capture named expressions only or not (i.e. %{IP:ip} but not ${IP})",title:"Named Only",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},gzipDeflater:{type:"object",title:"GZip Deflater",group:"dataformat,transformation",icon:"generic24.png",description:"Compress and decompress messages using java.util.zip.GZIPStream.",properties:{id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},hl7:{type:"object",title:"HL7",group:"dataformat,transformation,hl7",icon:"generic24.png",description:"Marshal and unmarshal HL7 (Health Care) model objects using the HL7 MLLP codec.",properties:{validate:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to validate the HL7 message Is by default true.",title:"Validate",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},ical:{type:"object",title:"iCal",group:"dataformat,transformation",icon:"generic24.png",description:"Marshal and unmarshal iCal (.ics) documents to/from model objects.",properties:{validating:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to validate.",title:"Validating",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},jacksonXml:{type:"object",title:"Jackson XML",group:"dataformat,transformation,xml",icon:"generic24.png",description:"Unmarshal an XML payloads to POJOs and back using XMLMapper extension of Jackson.",properties:{xmlMapper:{kind:"attribute",type:"string",description:"Lookup and use the existing XmlMapper with the given id.",title:"Xml Mapper",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},unmarshalType:{kind:"attribute",type:"string",description:"Class name of the java type to use when unmarshalling",title:"Unmarshal Type",required:!1,deprecated:!1},allowUnmarshallType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Jackson is allowed to attempt to use the CamelJacksonUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",title:"Allow Unmarshall Type",required:!1,deprecated:!1},jsonView:{kind:"attribute",type:"string",description:"When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations",title:"Json View",required:!1,deprecated:!1},include:{kind:"attribute",type:"string",description:"If you want to marshal a pojo to JSON, and the pojo has some fields with null values. And you want to skip these null values, you can set this option to NON_NULL",title:"Include",required:!1,deprecated:!1},allowJmsType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",title:"Allow Jms Type",required:!1,deprecated:!1},collectionType:{kind:"attribute",type:"string",description:"Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows to use different collection types than java.util.Collection based as default.",title:"Collection Type",required:!1,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unmarshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},timezone:{kind:"attribute",type:"string",description:"If set then Jackson will use the Timezone when marshalling/unmarshalling.",title:"Timezone",required:!1,deprecated:!1},enableJaxbAnnotationModule:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable the JAXB annotations module when using jackson. When enabled then JAXB annotations can be used by Jackson.",title:"Enable Jaxb Annotation Module",required:!1,deprecated:!1},moduleClassNames:{kind:"attribute",type:"string",description:"To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma.",title:"Module Class Names",required:!1,deprecated:!1},moduleRefs:{kind:"attribute",type:"string",description:"To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma.",title:"Module Refs",required:!1,deprecated:!1},enableFeatures:{kind:"attribute",type:"string",description:"Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Enable Features",required:!1,deprecated:!1},disableFeatures:{kind:"attribute",type:"string",description:"Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Disable Features",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},jaxb:{type:"object",title:"JAXB",group:"dataformat,transformation,xml",icon:"generic24.png",description:"Unmarshal XML payloads to POJOs and back using JAXB2 XML marshalling standard.",properties:{contextPath:{kind:"attribute",type:"string",description:"Package name where your JAXB classes are located.",title:"Context Path",required:!0,deprecated:!1},contextPathIsClassName:{kind:"attribute",type:"boolean",defaultValue:"false",description:"This can be set to true to mark that the contextPath is referring to a classname and not a package name.",title:"Context Path Is Class Name",required:!1,deprecated:!1},schema:{kind:"attribute",type:"string",description:"To validate against an existing schema. Your can use the prefix classpath:, file: or http: to specify how the resource should be resolved. You can separate multiple schema files by using the ',' character.",title:"Schema",required:!1,deprecated:!1},schemaSeverityLevel:{kind:"attribute",type:"enum",defaultValue:"0",enum:["0","1","2"],description:"Sets the schema severity level to use when validating against a schema. This level determines the minimum severity error that triggers JAXB to stop continue parsing. The default value of 0 (warning) means that any error (warning, error or fatal error) will trigger JAXB to stop. There are the following three levels: 0=warning, 1=error, 2=fatal error.",title:"Schema Severity Level",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},objectFactory:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to allow using ObjectFactory classes to create the POJO classes during marshalling. This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.",title:"Object Factory",required:!1,deprecated:!1},ignoreJAXBElement:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore JAXBElement elements - only needed to be set to false in very special use-cases.",title:"Ignore JAXBElement",required:!1,deprecated:!1},mustBeJAXBElement:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether marhsalling must be java objects with JAXB annotations. And if not then it fails. This option can be set to false to relax that, such as when the data is already in XML format.",title:"Must Be JAXBElement",required:!1,deprecated:!1},filterNonXmlChars:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To ignore non xml characheters and replace them with an empty space.",title:"Filter Non Xml Chars",required:!1,deprecated:!1},encoding:{kind:"attribute",type:"string",description:"To overrule and use a specific encoding",title:"Encoding",required:!1,deprecated:!1},fragment:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To turn on marshalling XML fragment trees. By default JAXB looks for XmlRootElement annotation on given class to operate on whole XML tree. This is useful but not always - sometimes generated code does not have XmlRootElement annotation, sometimes you need unmarshall only part of tree. In that case you can use partial unmarshalling. To enable this behaviours you need set property partClass. Camel will pass this class to JAXB's unmarshaler.",title:"Fragment",required:!1,deprecated:!1},partClass:{kind:"attribute",type:"string",description:"Name of class used for fragment parsing. See more details at the fragment option.",title:"Part Class",required:!1,deprecated:!1},partNamespace:{kind:"attribute",type:"string",description:"XML namespace to use for fragment parsing. See more details at the fragment option.",title:"Part Namespace",required:!1,deprecated:!1},namespacePrefixRef:{kind:"attribute",type:"string",description:"When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes, such as ns2, ns3, ns4 etc. To control this mapping, Camel allows you to refer to a map which contains the desired mapping.",title:"Namespace Prefix Ref",required:!1,deprecated:!1},xmlStreamWriterWrapper:{kind:"attribute",type:"string",description:"To use a custom xml stream writer.",title:"Xml Stream Writer Wrapper",required:!1,deprecated:!1},schemaLocation:{kind:"attribute",type:"string",description:"To define the location of the schema",title:"Schema Location",required:!1,deprecated:!1},noNamespaceSchemaLocation:{kind:"attribute",type:"string",description:"To define the location of the namespaceless schema",title:"No Namespace Schema Location",required:!1,deprecated:!1},jaxbProviderProperties:{kind:"attribute",type:"string",description:"Refers to a custom java.util.Map to lookup in the registry containing custom JAXB provider properties to be used with the JAXB marshaller.",title:"Jaxb Provider Properties",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},accessExternalSchemaProtocols:{kind:"attribute",type:"string",defaultValue:"false",description:"Only in use if schema validation has been enabled. Restrict access to the protocols specified for external reference set by the schemaLocation attribute, Import and Include element. Examples of protocols are file, http, jar:file. false or none to deny all access to external references; a specific protocol, such as file, to give permission to only the protocol; the keyword all to grant permission to all protocols.",title:"Access External Schema Protocols",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},json:{type:"object",title:"JSon",group:"dataformat,transformation,json",icon:"generic24.png",description:"Marshal POJOs to JSON and back.",properties:{objectMapper:{kind:"attribute",type:"string",description:"Lookup and use the existing ObjectMapper with the given id when using Jackson.",title:"Object Mapper",required:!1,deprecated:!1},useDefaultObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to lookup and use default Jackson ObjectMapper from the registry.",title:"Use Default Object Mapper",required:!1,deprecated:!1},autoDiscoverObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true then Jackson will look for an objectMapper to use from the registry",title:"Auto Discover Object Mapper",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},library:{kind:"attribute",type:"enum",defaultValue:"Jackson",enum:["Fastjson","Gson","Jackson","Johnzon","Jsonb"],description:"Which json library to use.",title:"Library",required:!1,deprecated:!1},unmarshalType:{kind:"attribute",type:"string",description:"Class name of the java type to use when unmarshalling",title:"Unmarshal Type",required:!1,deprecated:!1},jsonView:{kind:"attribute",type:"string",description:"When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations",title:"Json View",required:!1,deprecated:!1},include:{kind:"attribute",type:"string",description:"If you want to marshal a pojo to JSON, and the pojo has some fields with null values. And you want to skip these null values, you can set this option to NON_NULL",title:"Include",required:!1,deprecated:!1},allowJmsType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",title:"Allow Jms Type",required:!1,deprecated:!1},collectionType:{kind:"attribute",type:"string",description:"Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows using different collection types than java.util.Collection based as default.",title:"Collection Type",required:!1,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unmarshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},moduleClassNames:{kind:"attribute",type:"string",description:"To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma.",title:"Module Class Names",required:!1,deprecated:!1},moduleRefs:{kind:"attribute",type:"string",description:"To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma.",title:"Module Refs",required:!1,deprecated:!1},enableFeatures:{kind:"attribute",type:"string",description:"Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Enable Features",required:!1,deprecated:!1},disableFeatures:{kind:"attribute",type:"string",description:"Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Disable Features",required:!1,deprecated:!1},allowUnmarshallType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Jackson is allowed to attempt to use the CamelJacksonUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",title:"Allow Unmarshall Type",required:!1,deprecated:!1},timezone:{kind:"attribute",type:"string",description:"If set then Jackson will use the Timezone when marshalling/unmarshalling. This option will have no effect on the others Json DataFormat, like gson and fastjson.",title:"Timezone",required:!1,deprecated:!1},schemaResolver:{kind:"attribute",type:"string",description:"Optional schema resolver used to lookup schemas for the data in transit.",title:"Schema Resolver",required:!1,deprecated:!1},autoDiscoverSchemaResolver:{kind:"attribute",type:"boolean",defaultValue:"true",description:"When not disabled, the SchemaResolver will be looked up into the registry",title:"Auto Discover Schema Resolver",required:!1,deprecated:!1},namingStrategy:{kind:"attribute",type:"string",description:"If set then Jackson will use the the defined Property Naming Strategy.Possible values are: LOWER_CAMEL_CASE, LOWER_DOT_CASE, LOWER_CASE, KEBAB_CASE, SNAKE_CASE and UPPER_CAMEL_CASE",title:"Naming Strategy",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},dateFormatPattern:{kind:"attribute",type:"string",description:"To configure the date format while marshall or unmarshall Date fields in JSON using Gson",title:"Date Format Pattern",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},jsonApi:{type:"object",title:"JSonApi",group:"dataformat,transformation",icon:"generic24.png",description:"Marshal and unmarshal JSON:API resources using JSONAPI-Converter library.",properties:{dataFormatTypes:{kind:"attribute",type:"string",description:"The classes to take into account for the marshalling. Multiple classes can be separated by comma.",title:"Data Format Types",required:!1,deprecated:!1},mainFormatType:{kind:"attribute",type:"string",description:"The class to take into account while unmarshalling.",title:"Main Format Type",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},lzf:{type:"object",title:"LZF Deflate Compression",group:"dataformat,transformation",icon:"generic24.png",description:"Compress and decompress streams using LZF deflate algorithm.",properties:{usingParallelCompression:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enable encoding (compress) using multiple processing cores.",title:"Using Parallel Compression",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},marshal:{type:"object",title:"Marshal",group:"dataformat,transformation",icon:"marshal24.png",description:"Marshals data into a specified format for transmission over a transport or component",properties:{dataFormatType:{kind:"element",type:"object",description:"The data format to be used",title:"Data Format Type",required:!0,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},mimeMultipart:{type:"object",title:"MIME Multipart",group:"dataformat,transformation",icon:"generic24.png",description:"Marshal Camel messages with attachments into MIME-Multipart messages and back.",properties:{multipartSubType:{kind:"attribute",type:"string",defaultValue:"mixed",description:"Specify the subtype of the MIME Multipart. Default is mixed.",title:"Multipart Sub Type",required:!1,deprecated:!1},multipartWithoutAttachment:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Defines whether a message without attachment is also marshaled into a MIME Multipart (with only one body part). Default is false.",title:"Multipart Without Attachment",required:!1,deprecated:!1},headersInline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Defines whether the MIME-Multipart headers are part of the message body (true) or are set as Camel headers (false). Default is false.",title:"Headers Inline",required:!1,deprecated:!1},includeHeaders:{kind:"attribute",type:"string",description:"A regex that defines which Camel headers are also included as MIME headers into the MIME multipart. This will only work if headersInline is set to true. Default is to include no headers",title:"Include Headers",required:!1,deprecated:!1},binaryContent:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Defines whether the content of binary parts in the MIME multipart is binary (true) or Base-64 encoded (false) Default is false.",title:"Binary Content",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},parquetAvro:{type:"object",title:"Parquet File",group:"dataformat,transformation,file",icon:"generic24.png",description:"Parquet Avro serialization and de-serialization.",properties:{compressionCodecName:{kind:"attribute",type:"string",defaultValue:"GZIP",description:"Compression codec to use when marshalling.",title:"Compression Codec Name",required:!1,deprecated:!1},unmarshalType:{kind:"attribute",type:"string",description:"Class to use when (un)marshalling. If omitted, parquet files are converted into Avro's GenericRecords for unmarshalling and input objects are assumed as GenericRecords for marshalling.",title:"Unmarshal Type",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},pgp:{type:"object",title:"PGP",group:"dataformat,transformation,security",icon:"generic24.png",description:"Encrypt and decrypt messages using Java Cryptographic Extension (JCE) and PGP.",properties:{keyUserid:{kind:"attribute",type:"string",description:"The user ID of the key in the PGP keyring used during encryption. Can also be only a part of a user ID. For example, if the user ID is Test User then you can use the part Test User or to address the user ID.",title:"Key Userid",required:!1,deprecated:!1},signatureKeyUserid:{kind:"attribute",type:"string",description:"User ID of the key in the PGP keyring used for signing (during encryption) or signature verification (during decryption). During the signature verification process the specified User ID restricts the public keys from the public keyring which can be used for the verification. If no User ID is specified for the signature verficiation then any public key in the public keyring can be used for the verification. Can also be only a part of a user ID. For example, if the user ID is Test User then you can use the part Test User or to address the User ID.",title:"Signature Key Userid",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"Password used when opening the private key (not used for encryption).",title:"Password",required:!1,deprecated:!1},signaturePassword:{kind:"attribute",type:"string",description:"Password used when opening the private key used for signing (during encryption).",title:"Signature Password",required:!1,deprecated:!1},keyFileName:{kind:"attribute",type:"string",description:"Filename of the keyring; must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix).",title:"Key File Name",required:!1,deprecated:!1},signatureKeyFileName:{kind:"attribute",type:"string",description:"Filename of the keyring to use for signing (during encryption) or for signature verification (during decryption); must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix).",title:"Signature Key File Name",required:!1,deprecated:!1},signatureKeyRing:{kind:"attribute",type:"string",description:"Keyring used for signing/verifying as byte array. You can not set the signatureKeyFileName and signatureKeyRing at the same time.",title:"Signature Key Ring",required:!1,deprecated:!1},armored:{kind:"attribute",type:"boolean",defaultValue:"false",description:"This option will cause PGP to base64 encode the encrypted text, making it available for copy/paste, etc.",title:"Armored",required:!1,deprecated:!1},integrity:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Adds an integrity check/sign into the encryption file. The default value is true.",title:"Integrity",required:!1,deprecated:!1},provider:{kind:"attribute",type:"string",description:"Java Cryptography Extension (JCE) provider, default is Bouncy Castle (BC). Alternatively you can use, for example, the IAIK JCE provider; in this case the provider must be registered beforehand and the Bouncy Castle provider must not be registered beforehand. The Sun JCE provider does not work.",title:"Provider",required:!1,deprecated:!1},algorithm:{kind:"attribute",type:"integer",description:"Symmetric key encryption algorithm; possible values are defined in org.bouncycastle.bcpg.SymmetricKeyAlgorithmTags; for example 2 (= TRIPLE DES), 3 (= CAST5), 4 (= BLOWFISH), 6 (= DES), 7 (= AES_128). Only relevant for encrypting.",title:"Algorithm",required:!1,deprecated:!1},compressionAlgorithm:{kind:"attribute",type:"integer",description:"Compression algorithm; possible values are defined in org.bouncycastle.bcpg.CompressionAlgorithmTags; for example 0 (= UNCOMPRESSED), 1 (= ZIP), 2 (= ZLIB), 3 (= BZIP2). Only relevant for encrypting.",title:"Compression Algorithm",required:!1,deprecated:!1},hashAlgorithm:{kind:"attribute",type:"integer",description:"Signature hash algorithm; possible values are defined in org.bouncycastle.bcpg.HashAlgorithmTags; for example 2 (= SHA1), 8 (= SHA256), 9 (= SHA384), 10 (= SHA512), 11 (=SHA224). Only relevant for signing.",title:"Hash Algorithm",required:!1,deprecated:!1},signatureVerificationOption:{kind:"attribute",type:"string",description:"Controls the behavior for verifying the signature during unmarshaling. There are 4 values possible: optional: The PGP message may or may not contain signatures; if it does contain signatures, then a signature verification is executed. required: The PGP message must contain at least one signature; if this is not the case an exception (PGPException) is thrown. A signature verification is executed. ignore: Contained signatures in the PGP message are ignored; no signature verification is executed. no_signature_allowed: The PGP message must not contain a signature; otherwise an exception (PGPException) is thrown.",title:"Signature Verification Option",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},protobuf:{type:"object",title:"Protobuf",group:"dataformat,transformation",icon:"generic24.png",description:"Serialize and deserialize Java objects using Google's Protocol buffers.",properties:{instanceClass:{kind:"attribute",type:"string",description:"Name of class to use when unmarshalling",title:"Instance Class",required:!1,deprecated:!1},objectMapper:{kind:"attribute",type:"string",description:"Lookup and use the existing ObjectMapper with the given id when using Jackson.",title:"Object Mapper",required:!1,deprecated:!1},useDefaultObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to lookup and use default Jackson ObjectMapper from the registry.",title:"Use Default Object Mapper",required:!1,deprecated:!1},autoDiscoverObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true then Jackson will lookup for an objectMapper into the registry",title:"Auto Discover Object Mapper",required:!1,deprecated:!1},library:{kind:"attribute",type:"enum",defaultValue:"GoogleProtobuf",enum:["GoogleProtobuf","Jackson"],description:"Which Protobuf library to use.",title:"Library",required:!1,deprecated:!1},unmarshalType:{kind:"attribute",type:"string",description:"Class name of the java type to use when unmarshalling",title:"Unmarshal Type",required:!1,deprecated:!1},jsonView:{kind:"attribute",type:"string",description:"When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations",title:"Json View",required:!1,deprecated:!1},include:{kind:"attribute",type:"string",description:"If you want to marshal a pojo to JSON, and the pojo has some fields with null values. And you want to skip these null values, you can set this option to NON_NULL",title:"Include",required:!1,deprecated:!1},allowJmsType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",title:"Allow Jms Type",required:!1,deprecated:!1},collectionType:{kind:"attribute",type:"string",description:"Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows to use different collection types than java.util.Collection based as default.",title:"Collection Type",required:!1,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unmarshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},moduleClassNames:{kind:"attribute",type:"string",description:"To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma.",title:"Module Class Names",required:!1,deprecated:!1},moduleRefs:{kind:"attribute",type:"string",description:"To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma.",title:"Module Refs",required:!1,deprecated:!1},enableFeatures:{kind:"attribute",type:"string",description:"Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Enable Features",required:!1,deprecated:!1},disableFeatures:{kind:"attribute",type:"string",description:"Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Disable Features",required:!1,deprecated:!1},allowUnmarshallType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Jackson is allowed to attempt to use the CamelJacksonUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",title:"Allow Unmarshall Type",required:!1,deprecated:!1},timezone:{kind:"attribute",type:"string",description:"If set then Jackson will use the Timezone when marshalling/unmarshalling.",title:"Timezone",required:!1,deprecated:!1},schemaResolver:{kind:"attribute",type:"string",description:"Optional schema resolver used to lookup schemas for the data in transit.",title:"Schema Resolver",required:!1,deprecated:!1},autoDiscoverSchemaResolver:{kind:"attribute",type:"boolean",defaultValue:"true",description:"When not disabled, the SchemaResolver will be looked up into the registry",title:"Auto Discover Schema Resolver",required:!1,deprecated:!1},contentTypeFormat:{kind:"attribute",type:"enum",defaultValue:"native",enum:["native","json"],description:"Defines a content type format in which protobuf message will be serialized/deserialized from(to) the Java been. The format can either be native or json for either native protobuf or json fields representation. The default value is native.",title:"Content Type Format",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},rss:{type:"object",title:"RSS",group:"dataformat,transformation",icon:"generic24.png",description:"Transform from ROME SyndFeed Java Objects to XML and vice-versa.",properties:{id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},soap:{type:"object",title:"SOAP",group:"dataformat,transformation,xml",icon:"generic24.png",description:"Marshal Java objects to SOAP messages and back.",properties:{contextPath:{kind:"attribute",type:"string",description:"Package name where your JAXB classes are located.",title:"Context Path",required:!0,deprecated:!1},encoding:{kind:"attribute",type:"string",description:"To overrule and use a specific encoding",title:"Encoding",required:!1,deprecated:!1},elementNameStrategyRef:{kind:"attribute",type:"string",description:"Refers to an element strategy to lookup from the registry. An element name strategy is used for two purposes. The first is to find a xml element name for a given object and soap action when marshaling the object into a SOAP message. The second is to find an Exception class for a given soap fault name. The following three element strategy class name is provided out of the box. QNameStrategy - Uses a fixed qName that is configured on instantiation. Exception lookup is not supported TypeNameStrategy - Uses the name and namespace from the XMLType annotation of the given type. If no namespace is set then package-info is used. Exception lookup is not supported ServiceInterfaceStrategy - Uses information from a webservice interface to determine the type name and to find the exception class for a SOAP fault All three classes is located in the package name org.apache.camel.dataformat.soap.name If you have generated the web service stub code with cxf-codegen or a similar tool then you probably will want to use the ServiceInterfaceStrategy. In the case you have no annotated service interface you should use QNameStrategy or TypeNameStrategy.",title:"Element Name Strategy Ref",required:!1,deprecated:!1},version:{kind:"attribute",type:"enum",defaultValue:"1.1",enum:["1.1","1.2"],description:"SOAP version should either be 1.1 or 1.2. Is by default 1.1",title:"Version",required:!1,deprecated:!1},namespacePrefixRef:{kind:"attribute",type:"string",description:"When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes, such as ns2, ns3, ns4 etc. To control this mapping, Camel allows you to refer to a map which contains the desired mapping.",title:"Namespace Prefix Ref",required:!1,deprecated:!1},schema:{kind:"attribute",type:"string",description:"To validate against an existing schema. Your can use the prefix classpath:, file: or http: to specify how the resource should be resolved. You can separate multiple schema files by using the ',' character.",title:"Schema",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},swiftMt:{type:"object",title:"SWIFT MT",group:"dataformat,transformation,swift",icon:"generic24.png",description:"Encode and decode SWIFT MT messages.",properties:{writeInJson:{kind:"attribute",type:"boolean",defaultValue:"false",description:"The flag indicating that messages must be marshalled in a JSON format.",title:"Write In Json",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},swiftMx:{type:"object",title:"SWIFT MX",group:"dataformat,transformation,swift",icon:"generic24.png",description:"Encode and decode SWIFT MX messages.",properties:{writeConfigRef:{kind:"attribute",type:"string",description:"Refers to a specific configuration to use when marshalling a message to lookup from the registry.",title:"Write Config Ref",required:!1,deprecated:!1},writeInJson:{kind:"attribute",type:"boolean",defaultValue:"false",description:"The flag indicating that messages must be marshalled in a JSON format.",title:"Write In Json",required:!1,deprecated:!1},readMessageId:{kind:"attribute",type:"string",description:"The type of MX message to produce when unmarshalling an input stream. If not set, it will be automatically detected from the namespace used.",title:"Read Message Id",required:!1,deprecated:!1},readConfigRef:{kind:"attribute",type:"string",description:"Refers to a specific configuration to use when unmarshalling an input stream to lookup from the registry.",title:"Read Config Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},syslog:{type:"object",title:"Syslog",group:"dataformat,transformation,monitoring",icon:"generic24.png",description:"Marshall SyslogMessages to RFC3164 and RFC5424 messages and back.",properties:{id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},tarFile:{type:"object",title:"Tar File",group:"dataformat,transformation,file",icon:"generic24.png",description:"Archive files into tarballs or extract files from tarballs.",properties:{usingIterator:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the tar file has more than one entry, the setting this option to true, allows working with the splitter EIP, to split the data using an iterator in a streaming mode.",title:"Using Iterator",required:!1,deprecated:!1},allowEmptyDirectory:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the tar file has more than one entry, setting this option to true, allows to get the iterator even if the directory is empty",title:"Allow Empty Directory",required:!1,deprecated:!1},preservePathElements:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the file name contains path elements, setting this option to true, allows the path to be maintained in the tar file.",title:"Preserve Path Elements",required:!1,deprecated:!1},maxDecompressedSize:{kind:"attribute",type:"integer",defaultValue:"1073741824",description:"Set the maximum decompressed size of a tar file (in bytes). The default value if not specified corresponds to 1 gigabyte. An IOException will be thrown if the decompressed size exceeds this amount. Set to -1 to disable setting a maximum decompressed size.",title:"Max Decompressed Size",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},thrift:{type:"object",title:"Thrift",group:"dataformat,transformation",icon:"generic24.png",description:"Serialize and deserialize messages using Apache Thrift binary data format.",properties:{instanceClass:{kind:"attribute",type:"string",description:"Name of class to use when unmarshalling",title:"Instance Class",required:!1,deprecated:!1},contentTypeFormat:{kind:"attribute",type:"enum",defaultValue:"binary",enum:["binary","json","sjson"],description:"Defines a content type format in which thrift message will be serialized/deserialized from(to) the Java been. The format can either be native or json for either native binary thrift, json or simple json fields representation. The default value is binary.",title:"Content Type Format",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the data format should set the Content-Type header with the type from the data format. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSON",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},tidyMarkup:{type:"object",title:"TidyMarkup",group:"dataformat,transformation",icon:"generic24.png",description:"Parse (potentially invalid) HTML into valid HTML or DOM.",properties:{dataObjectType:{kind:"attribute",type:"enum",defaultValue:"org.w3c.dom.Node",enum:["org.w3c.dom.Node","java.lang.String"],description:"What data type to unmarshal as, can either be org.w3c.dom.Node or java.lang.String. Is by default org.w3c.dom.Node",title:"Data Object Type",required:!1,deprecated:!1},omitXmlDeclaration:{kind:"attribute",type:"boolean",defaultValue:"false",description:"When returning a String, do we omit the XML declaration in the top.",title:"Omit Xml Declaration",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},typeFilter:{type:"object",title:"YAML Type Filter",group:"dataformat,transformation,yaml",icon:"generic24.png",description:"",properties:{value:{kind:"attribute",type:"string",description:"Value of type such as class name or regular expression",title:"Value",required:!1,deprecated:!1},type:{kind:"attribute",type:"object",description:"Whether to filter by class type or regular expression",title:"Type",required:!1,deprecated:!1}}},univocityCsv:{type:"object",title:"uniVocity CSV",group:"dataformat,transformation,csv",icon:"generic24.png",description:"Marshal and unmarshal Java objects from and to CSV (Comma Separated Values) using UniVocity Parsers.",properties:{delimiter:{kind:"attribute",type:"string",defaultValue:",",description:"The delimiter of values",title:"Delimiter",required:!1,deprecated:!1},quoteAllFields:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not all values must be quoted when writing them.",title:"Quote All Fields",required:!1,deprecated:!1},quote:{kind:"attribute",type:"string",defaultValue:'\\"',description:"The quote symbol.",title:"Quote",required:!1,deprecated:!1},quoteEscape:{kind:"attribute",type:"string",defaultValue:'\\"',description:"The quote escape symbol",title:"Quote Escape",required:!1,deprecated:!1},nullValue:{kind:"attribute",type:"string",description:"The string representation of a null value. The default value is null",title:"Null Value",required:!1,deprecated:!1},skipEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the empty lines must be ignored. The default value is true",title:"Skip Empty Lines",required:!1,deprecated:!1},ignoreTrailingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the trailing white spaces must be ignored. The default value is true",title:"Ignore Trailing Whitespaces",required:!1,deprecated:!1},ignoreLeadingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the leading white spaces must be ignored. The default value is true",title:"Ignore Leading Whitespaces",required:!1,deprecated:!1},headersDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the headers are disabled. When defined, this option explicitly sets the headers as null which indicates that there is no header. The default value is false",title:"Headers Disabled",required:!1,deprecated:!1},headerExtractionEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the header must be read in the first line of the test document The default value is false",title:"Header Extraction Enabled",required:!1,deprecated:!1},numberOfRecordsToRead:{kind:"attribute",type:"integer",description:"The maximum number of record to read.",title:"Number Of Records To Read",required:!1,deprecated:!1},emptyValue:{kind:"attribute",type:"string",description:"The String representation of an empty value",title:"Empty Value",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separator of the files The default value is to use the JVM platform line separator",title:"Line Separator",required:!1,deprecated:!1},normalizedLineSeparator:{kind:"attribute",type:"string",defaultValue:"\\n",description:"The normalized line separator of the files The default value is a new line character.",title:"Normalized Line Separator",required:!1,deprecated:!1},comment:{kind:"attribute",type:"string",defaultValue:"#",description:"The comment symbol. The default value is #",title:"Comment",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false",title:"Lazy Load",required:!1,deprecated:!1},asMap:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false",title:"As Map",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},univocityFixed:{type:"object",title:"uniVocity Fixed Length",group:"dataformat,transformation,csv",icon:"generic24.png",description:"Marshal and unmarshal Java objects from and to fixed length records using UniVocity Parsers.",properties:{padding:{kind:"attribute",type:"string",description:"The padding character. The default value is a space",title:"Padding",required:!1,deprecated:!1},skipTrailingCharsUntilNewline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the trailing characters until new line must be ignored. The default value is false",title:"Skip Trailing Chars Until Newline",required:!1,deprecated:!1},recordEndsOnNewline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the record ends on new line. The default value is false",title:"Record Ends On Newline",required:!1,deprecated:!1},nullValue:{kind:"attribute",type:"string",description:"The string representation of a null value. The default value is null",title:"Null Value",required:!1,deprecated:!1},skipEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the empty lines must be ignored. The default value is true",title:"Skip Empty Lines",required:!1,deprecated:!1},ignoreTrailingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the trailing white spaces must be ignored. The default value is true",title:"Ignore Trailing Whitespaces",required:!1,deprecated:!1},ignoreLeadingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the leading white spaces must be ignored. The default value is true",title:"Ignore Leading Whitespaces",required:!1,deprecated:!1},headersDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the headers are disabled. When defined, this option explicitly sets the headers as null which indicates that there is no header. The default value is false",title:"Headers Disabled",required:!1,deprecated:!1},headerExtractionEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the header must be read in the first line of the test document The default value is false",title:"Header Extraction Enabled",required:!1,deprecated:!1},numberOfRecordsToRead:{kind:"attribute",type:"integer",description:"The maximum number of record to read.",title:"Number Of Records To Read",required:!1,deprecated:!1},emptyValue:{kind:"attribute",type:"string",description:"The String representation of an empty value",title:"Empty Value",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separator of the files The default value is to use the JVM platform line separator",title:"Line Separator",required:!1,deprecated:!1},normalizedLineSeparator:{kind:"attribute",type:"string",defaultValue:"\\n",description:"The normalized line separator of the files The default value is a new line character.",title:"Normalized Line Separator",required:!1,deprecated:!1},comment:{kind:"attribute",type:"string",defaultValue:"#",description:"The comment symbol. The default value is #",title:"Comment",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false",title:"Lazy Load",required:!1,deprecated:!1},asMap:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false",title:"As Map",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},univocityHeader:{type:"object",title:"uniVocity Header",group:"dataformat,transformation,csv",icon:"generic24.png",description:"To configure headers for UniVocity data formats.",properties:{name:{kind:"value",type:"string",description:"Header name",title:"Name",required:!0,deprecated:!1},length:{kind:"attribute",type:"string",description:"Header length",title:"Length",required:!1,deprecated:!1}}},univocityTsv:{type:"object",title:"uniVocity TSV",group:"dataformat,transformation,csv",icon:"generic24.png",description:"Marshal and unmarshal Java objects from and to TSV (Tab-Separated Values) records using UniVocity Parsers.",properties:{escapeChar:{kind:"attribute",type:"string",defaultValue:"\\\\",description:"The escape character.",title:"Escape Char",required:!1,deprecated:!1},nullValue:{kind:"attribute",type:"string",description:"The string representation of a null value. The default value is null",title:"Null Value",required:!1,deprecated:!1},skipEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the empty lines must be ignored. The default value is true",title:"Skip Empty Lines",required:!1,deprecated:!1},ignoreTrailingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the trailing white spaces must be ignored. The default value is true",title:"Ignore Trailing Whitespaces",required:!1,deprecated:!1},ignoreLeadingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the leading white spaces must be ignored. The default value is true",title:"Ignore Leading Whitespaces",required:!1,deprecated:!1},headersDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the headers are disabled. When defined, this option explicitly sets the headers as null which indicates that there is no header. The default value is false",title:"Headers Disabled",required:!1,deprecated:!1},headerExtractionEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the header must be read in the first line of the test document The default value is false",title:"Header Extraction Enabled",required:!1,deprecated:!1},numberOfRecordsToRead:{kind:"attribute",type:"integer",description:"The maximum number of record to read.",title:"Number Of Records To Read",required:!1,deprecated:!1},emptyValue:{kind:"attribute",type:"string",description:"The String representation of an empty value",title:"Empty Value",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separator of the files The default value is to use the JVM platform line separator",title:"Line Separator",required:!1,deprecated:!1},normalizedLineSeparator:{kind:"attribute",type:"string",defaultValue:"\\n",description:"The normalized line separator of the files The default value is a new line character.",title:"Normalized Line Separator",required:!1,deprecated:!1},comment:{kind:"attribute",type:"string",defaultValue:"#",description:"The comment symbol. The default value is #",title:"Comment",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false",title:"Lazy Load",required:!1,deprecated:!1},asMap:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false",title:"As Map",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},unmarshal:{type:"object",title:"Unmarshal",group:"dataformat,transformation",icon:"unmarshal24.png",description:"Converts the message data received from the wire into a format that Apache Camel processors can consume",properties:{dataFormatType:{kind:"element",type:"object",description:"The data format to be used",title:"Data Format Type",required:!0,deprecated:!1},allowNullBody:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Indicates whether null is allowed as value of a body to unmarshall.",title:"Allow Null Body",required:!1,deprecated:!1},disabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to disable this EIP from the route during build time. Once an EIP has been disabled then it cannot be enabled later at runtime.",title:"Disabled",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"string",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},xmlSecurity:{type:"object",title:"XML Security",group:"dataformat,transformation,xml",icon:"generic24.png",description:"Encrypt and decrypt XML payloads using Apache Santuario.",properties:{xmlCipherAlgorithm:{kind:"attribute",type:"enum",defaultValue:"AES-256-GCM",enum:["TRIPLEDES","AES_128","AES_128_GCM","AES_192","AES_192_GCM","AES_256","AES_256_GCM","SEED_128","CAMELLIA_128","CAMELLIA_192","CAMELLIA_256"],description:"The cipher algorithm to be used for encryption/decryption of the XML message content. The available choices are: XMLCipher.TRIPLEDES XMLCipher.AES_128 XMLCipher.AES_128_GCM XMLCipher.AES_192 XMLCipher.AES_192_GCM XMLCipher.AES_256 XMLCipher.AES_256_GCM XMLCipher.SEED_128 XMLCipher.CAMELLIA_128 XMLCipher.CAMELLIA_192 XMLCipher.CAMELLIA_256 The default value is XMLCipher.AES_256_GCM",title:"Xml Cipher Algorithm",required:!1,deprecated:!1},passPhrase:{kind:"attribute",type:"string",description:"A String used as passPhrase to encrypt/decrypt content. The passPhrase has to be provided. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key",title:"Pass Phrase",required:!1,deprecated:!1},passPhraseByte:{kind:"attribute",type:"string",description:"A byte used as passPhrase to encrypt/decrypt content. The passPhrase has to be provided. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key",title:"Pass Phrase Byte",required:!1,deprecated:!1},secureTag:{kind:"attribute",type:"string",description:"The XPath reference to the XML Element selected for encryption/decryption. If no tag is specified, the entire payload is encrypted/decrypted.",title:"Secure Tag",required:!1,deprecated:!1},secureTagContents:{kind:"attribute",type:"boolean",defaultValue:"false",description:"A boolean value to specify whether the XML Element is to be encrypted or the contents of the XML Element. false = Element Level. true = Element Content Level.",title:"Secure Tag Contents",required:!1,deprecated:!1},keyCipherAlgorithm:{kind:"attribute",type:"enum",defaultValue:"RSA_OAEP",enum:["RSA_v1dot5","RSA_OAEP","RSA_OAEP_11"],description:"The cipher algorithm to be used for encryption/decryption of the asymmetric key. The available choices are: XMLCipher.RSA_v1dot5 XMLCipher.RSA_OAEP XMLCipher.RSA_OAEP_11 The default value is XMLCipher.RSA_OAEP",title:"Key Cipher Algorithm",required:!1,deprecated:!1},recipientKeyAlias:{kind:"attribute",type:"string",description:"The key alias to be used when retrieving the recipient's public or private key from a KeyStore when performing asymmetric key encryption or decryption.",title:"Recipient Key Alias",required:!1,deprecated:!1},keyOrTrustStoreParametersRef:{kind:"attribute",type:"string",description:"Refers to a KeyStore instance to lookup in the registry, which is used for configuration options for creating and loading a KeyStore instance that represents the sender's trustStore or recipient's keyStore.",title:"Key Or Trust Store Parameters Ref",required:!1,deprecated:!1},keyPassword:{kind:"attribute",type:"string",description:"The password to be used for retrieving the private key from the KeyStore. This key is used for asymmetric decryption.",title:"Key Password",required:!1,deprecated:!1},digestAlgorithm:{kind:"attribute",type:"enum",defaultValue:"SHA1",enum:["SHA1","SHA256","SHA512"],description:"The digest algorithm to use with the RSA OAEP algorithm. The available choices are: XMLCipher.SHA1 XMLCipher.SHA256 XMLCipher.SHA512 The default value is XMLCipher.SHA1",title:"Digest Algorithm",required:!1,deprecated:!1},mgfAlgorithm:{kind:"attribute",type:"enum",defaultValue:"MGF1_SHA1",enum:["MGF1_SHA1","MGF1_SHA256","MGF1_SHA512"],description:"The MGF Algorithm to use with the RSA OAEP algorithm. The available choices are: EncryptionConstants.MGF1_SHA1 EncryptionConstants.MGF1_SHA256 EncryptionConstants.MGF1_SHA512 The default value is EncryptionConstants.MGF1_SHA1",title:"Mgf Algorithm",required:!1,deprecated:!1},addKeyValueForEncryptedKey:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to add the public key used to encrypt the session key as a KeyValue in the EncryptedKey structure or not.",title:"Add Key Value For Encrypted Key",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},yaml:{type:"object",title:"YAML",group:"dataformat,transformation,yaml",icon:"generic24.png",description:"Marshal and unmarshal Java objects to and from YAML.",properties:{library:{kind:"attribute",type:"enum",defaultValue:"SnakeYAML",enum:["SnakeYAML"],description:"Which yaml library to use. By default it is SnakeYAML",title:"Library",required:!1,deprecated:!1},unmarshalType:{kind:"attribute",type:"string",description:"Class name of the java type to use when unmarshalling",title:"Unmarshal Type",required:!1,deprecated:!1},constructor:{kind:"attribute",type:"string",description:"BaseConstructor to construct incoming documents.",title:"Constructor",required:!1,deprecated:!1},representer:{kind:"attribute",type:"string",description:"Representer to emit outgoing objects.",title:"Representer",required:!1,deprecated:!1},dumperOptions:{kind:"attribute",type:"string",description:"DumperOptions to configure outgoing objects.",title:"Dumper Options",required:!1,deprecated:!1},resolver:{kind:"attribute",type:"string",description:"Resolver to detect implicit type",title:"Resolver",required:!1,deprecated:!1},useApplicationContextClassLoader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Use ApplicationContextClassLoader as custom ClassLoader",title:"Use Application Context Class Loader",required:!1,deprecated:!1},prettyFlow:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Force the emitter to produce a pretty YAML document when using the flow style.",title:"Pretty Flow",required:!1,deprecated:!1},allowAnyType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allow any class to be un-marshaled",title:"Allow Any Type",required:!1,deprecated:!1},typeFilter:{kind:"element",type:"array",description:"Set the types SnakeYAML is allowed to un-marshall",title:"Type Filter",required:!1,deprecated:!1},maxAliasesForCollections:{kind:"attribute",type:"integer",defaultValue:"50",description:"Set the maximum amount of aliases allowed for collections.",title:"Max Aliases For Collections",required:!1,deprecated:!1},allowRecursiveKeys:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Set whether recursive keys are allowed.",title:"Allow Recursive Keys",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},zipDeflater:{type:"object",title:"Zip Deflater",group:"dataformat,transformation",icon:"generic24.png",description:"Compress and decompress streams using java.util.zip.Deflater and java.util.zip.Inflater.",properties:{compressionLevel:{kind:"attribute",type:"enum",defaultValue:"-1",enum:["-1","0","1","2","3","4","5","6","7","8","9"],description:"To specify a specific compression between 0-9. -1 is default compression, 0 is no compression, and 9 is the best compression.",title:"Compression Level",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}},zipFile:{type:"object",title:"Zip File",group:"dataformat,transformation,file",icon:"generic24.png",description:"Compression and decompress streams using java.util.zip.ZipStream.",properties:{usingIterator:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the zip file has more than one entry, the setting this option to true, allows working with the splitter EIP, to split the data using an iterator in a streaming mode.",title:"Using Iterator",required:!1,deprecated:!1},allowEmptyDirectory:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the zip file has more than one entry, setting this option to true, allows to get the iterator even if the directory is empty",title:"Allow Empty Directory",required:!1,deprecated:!1},preservePathElements:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the file name contains path elements, setting this option to true, allows the path to be maintained in the zip file.",title:"Preserve Path Elements",required:!1,deprecated:!1},maxDecompressedSize:{kind:"attribute",type:"integer",defaultValue:"1073741824",description:"Set the maximum decompressed size of a zip file (in bytes). The default value if not specified corresponds to 1 gigabyte. An IOException will be thrown if the decompressed size exceeds this amount. Set to -1 to disable setting a maximum decompressed size.",title:"Max Decompressed Size",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"The id of this node",title:"Id",required:!1,deprecated:!1}}}},p={constant:{type:"object",title:"Constant",group:"language,core",icon:"generic24.png",description:"A fixed value set only once during the route startup.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},csimple:{type:"object",title:"CSimple",group:"language,java",icon:"generic24.png",description:"Evaluate a compiled simple expression.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},datasonnet:{type:"object",title:"DataSonnet",group:"language,transformation",icon:"generic24.png",description:"To use DataSonnet scripts for message transformations.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},bodyMediaType:{kind:"attribute",type:"string",description:"The String representation of the message's body MediaType",title:"Body Media Type",required:!1,deprecated:!1},outputMediaType:{kind:"attribute",type:"string",description:"The String representation of the MediaType to output",title:"Output Media Type",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},exchangeProperty:{type:"object",title:"ExchangeProperty",group:"language,core",icon:"generic24.png",description:"Gets a property from the Exchange.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},expression:{type:"object",title:"Expression",group:"language",icon:"generic24.png",description:"A useful base class for an expression",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},groovy:{type:"object",title:"Groovy",group:"language,script",icon:"generic24.png",description:"Evaluates a Groovy script.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},header:{type:"object",title:"Header",group:"language,core",icon:"generic24.png",description:"Gets a header from the Exchange.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},hl7terser:{type:"object",title:"HL7 Terser",group:"language,hl7",icon:"generic24.png",description:"Get the value of a HL7 message field specified by terse location specification syntax.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",title:"Header Name",required:!1,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",title:"Property Name",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},joor:{type:"object",title:"jOOR",group:"language",icon:"generic24.png",description:"Evaluates a jOOR (Java compiled once at runtime) expression.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},preCompile:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the expression should be pre compiled once during initialization phase. If this is turned off, then the expression is reloaded and compiled on each evaluation.",title:"Pre Compile",required:!1,deprecated:!1},singleQuotes:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether single quotes can be used as replacement for double quotes. This is convenient when you need to work with strings inside strings.",title:"Single Quotes",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},jq:{type:"object",title:"JQ",group:"language,json",icon:"generic24.png",description:"Evaluates a JQ expression against a JSON message body.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",title:"Header Name",required:!1,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",title:"Property Name",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},js:{type:"object",title:"JavaScript",group:"language,javascript",icon:"generic24.png",description:"Evaluates a JavaScript expression.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},jsonpath:{type:"object",title:"JSONPath",group:"language,json",icon:"generic24.png",description:"Evaluates a JSONPath expression against a JSON message body.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},suppressExceptions:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to suppress exceptions such as PathNotFoundException.",title:"Suppress Exceptions",required:!1,deprecated:!1},allowSimple:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow in inlined Simple exceptions in the JSONPath expression",title:"Allow Simple",required:!1,deprecated:!1},allowEasyPredicate:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow using the easy predicate parser to pre-parse predicates.",title:"Allow Easy Predicate",required:!1,deprecated:!1},writeAsString:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to write the output of each row/element as a JSON String value instead of a Map/POJO value.",title:"Write As String",required:!1,deprecated:!1},unpackArray:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to unpack a single element json-array into an object.",title:"Unpack Array",required:!1,deprecated:!1},option:{kind:"attribute",type:"enum",enum:["DEFAULT_PATH_LEAF_TO_NULL","ALWAYS_RETURN_LIST","AS_PATH_LIST","SUPPRESS_EXCEPTIONS","REQUIRE_PROPERTIES"],description:"To configure additional options on JSONPath. Multiple values can be separated by comma.",title:"Option",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",title:"Header Name",required:!1,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",title:"Property Name",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},language:{type:"object",title:"Language",group:"language,core",icon:"generic24.png",description:"Evaluates a custom language.",properties:{language:{kind:"attribute",type:"string",description:"The name of the language to use",title:"Language",required:!0,deprecated:!1},expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},method:{type:"object",title:"Bean Method",group:"language,core,java",icon:"generic24.png",description:"Calls a Java bean method.",properties:{ref:{kind:"attribute",type:"string",description:"Reference to an existing bean (bean id) to lookup in the registry",title:"Ref",required:!1,deprecated:!1},method:{kind:"attribute",type:"string",description:"Name of method to call",title:"Method",required:!1,deprecated:!1},beanType:{kind:"attribute",type:"string",description:"Class name (fully qualified) of the bean to use Will lookup in registry and if there is a single instance of the same type, then the existing bean is used, otherwise a new bean is created (requires a default no-arg constructor).",title:"Bean Type",required:!1,deprecated:!1},scope:{kind:"attribute",type:"enum",defaultValue:"Singleton",enum:["Singleton","Request","Prototype"],description:"Scope of bean. When using singleton scope (default) the bean is created or looked up only once and reused for the lifetime of the endpoint. The bean should be thread-safe in case concurrent threads is calling the bean at the same time. When using request scope the bean is created or looked up once per request (exchange). This can be used if you want to store state on a bean while processing a request and you want to call the same bean instance multiple times while processing the request. The bean does not have to be thread-safe as the instance is only called from the same request. When using prototype scope, then the bean will be looked up or created per call. However in case of lookup then this is delegated to the bean registry such as Spring or CDI (if in use), which depends on their configuration can act as either singleton or prototype scope. So when using prototype scope then this depends on the bean registry implementation.",title:"Scope",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},mvel:{type:"object",title:"MVEL",group:"language,java",icon:"generic24.png",description:"Evaluates a MVEL template.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},ognl:{type:"object",title:"OGNL",group:"language,java",icon:"generic24.png",description:"Evaluates an OGNL expression (Apache Commons OGNL).",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},python:{type:"object",title:"Python",group:"language,python",icon:"generic24.png",description:"Evaluates a Python expression.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},ref:{type:"object",title:"Ref",group:"language,core",icon:"generic24.png",description:"Uses an existing expression from the registry.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},simple:{type:"object",title:"Simple",group:"language,core,java",icon:"generic24.png",description:"Evaluates a Camel simple expression.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},spel:{type:"object",title:"SpEL",group:"language,spring",icon:"generic24.png",description:"Evaluates a Spring expression (SpEL).",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},tokenize:{type:"object",title:"Tokenize",group:"language,core",icon:"generic24.png",description:"Tokenize text payloads using delimiter patterns.",properties:{token:{kind:"attribute",type:"string",description:"The (start) token to use as tokenizer, for example you can use the new line token. You can use simple language as the token to support dynamic tokens.",title:"Token",required:!0,deprecated:!1},endToken:{kind:"attribute",type:"string",description:"The end token to use as tokenizer if using start/end token pairs. You can use simple language as the token to support dynamic tokens.",title:"End Token",required:!1,deprecated:!1},inheritNamespaceTagName:{kind:"attribute",type:"string",description:"To inherit namespaces from a root/parent tag name when using XML You can use simple language as the tag name to support dynamic names.",title:"Inherit Namespace Tag Name",required:!1,deprecated:!1},regex:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the token is a regular expression pattern. The default value is false",title:"Regex",required:!1,deprecated:!1},xml:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the input is XML messages. This option must be set to true if working with XML payloads.",title:"Xml",required:!1,deprecated:!1},includeTokens:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include the tokens in the parts when using pairs. When including tokens then the endToken property must also be configured (to use pair mode). The default value is false",title:"Include Tokens",required:!1,deprecated:!1},group:{kind:"attribute",type:"string",description:"To group N parts together, for example to split big files into chunks of 1000 lines. You can use simple language as the group to support dynamic group sizes.",title:"Group",required:!1,deprecated:!1},groupDelimiter:{kind:"attribute",type:"string",description:"Sets the delimiter to use when grouping. If this has not been set then token will be used as the delimiter.",title:"Group Delimiter",required:!1,deprecated:!1},skipFirst:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To skip the very first element",title:"Skip First",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",title:"Header Name",required:!1,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",title:"Property Name",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},xpath:{type:"object",title:"XPath",group:"language,core,xml",icon:"generic24.png",description:"Evaluates an XPath expression against an XML payload.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},documentType:{kind:"attribute",type:"string",description:"Name of class for document type The default value is org.w3c.dom.Document",title:"Document Type",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"enum",defaultValue:"NODESET",enum:["NUMBER","STRING","BOOLEAN","NODESET","NODE"],description:"Sets the class name of the result type (type from output) The default result type is NodeSet",title:"Result Type",required:!1,deprecated:!1},saxon:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to use Saxon.",title:"Saxon",required:!1,deprecated:!1},factoryRef:{kind:"attribute",type:"string",description:"References to a custom XPathFactory to lookup in the registry",title:"Factory Ref",required:!1,deprecated:!1},objectModel:{kind:"attribute",type:"string",description:"The XPath object model to use",title:"Object Model",required:!1,deprecated:!1},logNamespaces:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to log namespaces which can assist during troubleshooting",title:"Log Namespaces",required:!1,deprecated:!1},threadSafety:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable thread-safety for the returned result of the xpath expression. This applies to when using NODESET as the result type, and the returned set has multiple elements. In this situation there can be thread-safety issues if you process the NODESET concurrently such as from a Camel Splitter EIP in parallel processing mode. This option prevents concurrency issues by doing defensive copies of the nodes. It is recommended to turn this option on if you are using camel-saxon or Saxon in your application. Saxon has thread-safety issues which can be prevented by turning this option on.",title:"Thread Safety",required:!1,deprecated:!1},preCompile:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to enable pre-compiling the xpath expression during initialization phase. pre-compile is enabled by default. This can be used to turn off, for example in cases the compilation phase is desired at the starting phase, such as if the application is ahead of time compiled (for example with camel-quarkus) which would then load the xpath factory of the built operating system, and not a JVM runtime.",title:"Pre Compile",required:!1,deprecated:!1},namespace:{kind:"element",type:"array",description:"Injects the XML Namespaces of prefix - uri mappings",title:"Namespace",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",title:"Header Name",required:!1,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",title:"Property Name",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},xquery:{type:"object",title:"XQuery",group:"language,xml",icon:"generic24.png",description:"Evaluates an XQuery expressions against an XML payload.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name of the result type (type from output) The default result type is NodeSet",title:"Type",required:!1,deprecated:!1},configurationRef:{kind:"attribute",type:"string",description:"Reference to a saxon configuration instance in the registry to use for xquery (requires camel-saxon). This may be needed to add custom functions to a saxon configuration, so these custom functions can be used in xquery expressions.",title:"Configuration Ref",required:!1,deprecated:!1},namespace:{kind:"element",type:"array",description:"Injects the XML Namespaces of prefix - uri mappings",title:"Namespace",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",title:"Header Name",required:!1,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",title:"Property Name",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},xtokenize:{type:"object",title:"XML Tokenize",group:"language,core,xml",icon:"generic24.png",description:"Tokenize XML payloads.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},mode:{kind:"attribute",type:"enum",defaultValue:"i",enum:["i","w","u","t"],description:"The extraction mode. The available extraction modes are: i - injecting the contextual namespace bindings into the extracted token (default) w - wrapping the extracted token in its ancestor context u - unwrapping the extracted token to its child content t - extracting the text content of the specified element",title:"Mode",required:!1,deprecated:!1},group:{kind:"attribute",type:"integer",description:"To group N parts together",title:"Group",required:!1,deprecated:!1},namespace:{kind:"element",type:"array",description:"Injects the XML Namespaces of prefix - uri mappings",title:"Namespace",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",title:"Header Name",required:!1,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",title:"Property Name",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}}},c={activemq:{type:"object",title:"ActiveMQ",group:"messaging",icon:"generic24.png",description:"Send messages to (or consume from) Apache ActiveMQ. This component extends the Camel JMS component.",properties:{destinationType:{kind:"path",type:"string",defaultValue:"queue",enum:["queue","topic","temp-queue","temp-topic"],description:"The kind of destination to use",title:"Destination Type",required:!1,deprecated:!1},destinationName:{kind:"path",type:"string",description:"Name of the queue or topic to use as destination",title:"Destination Name",required:!0,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Sets the JMS client ID to use. Note that this value, if specified, must be unique and can only be used by a single JMS connection instance. It is typically only required for durable topic subscriptions. If using Apache ActiveMQ you may prefer to use Virtual Topics instead.",title:"Client Id",required:!1,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"The connection factory to be use. A connection factory must be configured either on the component or endpoint.",title:"Connection Factory",required:!1,deprecated:!1},disableReplyTo:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether Camel ignores the JMSReplyTo header in messages. If true, Camel does not send a reply back to the destination specified in the JMSReplyTo header. You can use this option if you want Camel to consume from a route and you do not want Camel to automatically send back a reply message because another component in your code handles the reply message. You can also use this option if you want to use Camel as a proxy between different message brokers and you want to route message from one system to another.",title:"Disable Reply To",required:!1,deprecated:!1},durableSubscriptionName:{kind:"parameter",type:"string",description:"The durable subscriber name for specifying durable topic subscriptions. The clientId option must be configured as well.",title:"Durable Subscription Name",required:!1,deprecated:!1},jmsMessageType:{kind:"parameter",type:"object",enum:["Bytes","Map","Object","Stream","Text"],description:"Allows you to force the use of a specific jakarta.jms.Message implementation for sending JMS messages. Possible values are: Bytes, Map, Object, Stream, Text. By default, Camel would determine which JMS message type to use from the In body type. This option allows you to specify it.",title:"Jms Message Type",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination (overrides any incoming value of Message.getJMSReplyTo() in consumer).",title:"Reply To",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to test the connection on startup. This ensures that when Camel starts that all the JMS consumers have a valid connection to the JMS broker. If a connection cannot be granted then Camel throws an exception on startup. This ensures that Camel is not started with failed connections. The JMS producers is tested as well.",title:"Test Connection On Startup",required:!1,deprecated:!1},acknowledgementModeName:{kind:"parameter",type:"string",defaultValue:"AUTO_ACKNOWLEDGE",enum:["SESSION_TRANSACTED","CLIENT_ACKNOWLEDGE","AUTO_ACKNOWLEDGE","DUPS_OK_ACKNOWLEDGE"],description:"The JMS acknowledgement name, which is one of: SESSION_TRANSACTED, CLIENT_ACKNOWLEDGE, AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE",title:"Acknowledgement Mode Name",required:!1,deprecated:!1},artemisConsumerPriority:{kind:"parameter",type:"integer",description:"Consumer priorities allow you to ensure that high priority consumers receive messages while they are active. Normally, active consumers connected to a queue receive messages from it in a round-robin fashion. When consumer priorities are in use, messages are delivered round-robin if multiple active consumers exist with the same high priority. Messages will only going to lower priority consumers when the high priority consumers do not have credit available to consume the message, or those high priority consumers have declined to accept the message (for instance because it does not meet the criteria of any selectors associated with the consumer).",title:"Artemis Consumer Priority",required:!1,deprecated:!1},asyncConsumer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the JmsConsumer processes the Exchange asynchronously. If enabled then the JmsConsumer may pickup the next message from the JMS queue, while the previous message is being processed asynchronously (by the Asynchronous Routing Engine). This means that messages may be processed not 100% strictly in order. If disabled (as default) then the Exchange is fully processed before the JmsConsumer will pickup the next message from the JMS queue. Note if transacted has been enabled, then asyncConsumer=true does not run asynchronously, as transaction must be executed synchronously (Camel 3.0 may support async transactions).",title:"Async Consumer",required:!1,deprecated:!1},autoStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether the consumer container should auto-startup.",title:"Auto Startup",required:!1,deprecated:!1},cacheLevel:{kind:"parameter",type:"integer",description:"Sets the cache level by ID for the underlying JMS resources. See cacheLevelName option for more details.",title:"Cache Level",required:!1,deprecated:!1},cacheLevelName:{kind:"parameter",type:"string",defaultValue:"CACHE_AUTO",enum:["CACHE_AUTO","CACHE_CONNECTION","CACHE_CONSUMER","CACHE_NONE","CACHE_SESSION"],description:"Sets the cache level by name for the underlying JMS resources. Possible values are: CACHE_AUTO, CACHE_CONNECTION, CACHE_CONSUMER, CACHE_NONE, and CACHE_SESSION. The default setting is CACHE_AUTO. See the Spring documentation and Transactions Cache Levels for more information.",title:"Cache Level Name",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Concurrent Consumers",required:!1,deprecated:!1},maxConcurrentConsumers:{kind:"parameter",type:"integer",description:"Specifies the maximum number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToMaxConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Max Concurrent Consumers",required:!1,deprecated:!1},replyToDeliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether to use persistent delivery by default for replies.",title:"Reply To Delivery Persistent",required:!1,deprecated:!1},selector:{kind:"parameter",type:"string",description:"Sets the JMS selector to use",title:"Selector",required:!1,deprecated:!1},subscriptionDurable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether to make the subscription durable. The durable subscription name to be used can be specified through the subscriptionName property. Default is false. Set this to true to register a durable subscription, typically in combination with a subscriptionName value (unless your message listener class name is good enough as subscription name). Only makes sense when listening to a topic (pub-sub domain), therefore this method switches the pubSubDomain flag as well.",title:"Subscription Durable",required:!1,deprecated:!1},subscriptionName:{kind:"parameter",type:"string",description:"Set the name of a subscription to create. To be applied in case of a topic (pub-sub domain) with a shared or durable subscription. The subscription name needs to be unique within this client's JMS client id. Default is the class name of the specified message listener. Note: Only 1 concurrent consumer (which is the default of this message listener container) is allowed for each subscription, except for a shared subscription (which requires JMS 2.0).",title:"Subscription Name",required:!1,deprecated:!1},subscriptionShared:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether to make the subscription shared. The shared subscription name to be used can be specified through the subscriptionName property. Default is false. Set this to true to register a shared subscription, typically in combination with a subscriptionName value (unless your message listener class name is good enough as subscription name). Note that shared subscriptions may also be durable, so this flag can (and often will) be combined with subscriptionDurable as well. Only makes sense when listening to a topic (pub-sub domain), therefore this method switches the pubSubDomain flag as well. Requires a JMS 2.0 compatible message broker.",title:"Subscription Shared",required:!1,deprecated:!1},acceptMessagesWhileStopping:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether the consumer accept messages while it is stopping. You may consider enabling this option, if you start and stop JMS routes at runtime, while there are still messages enqueued on the queue. If this option is false, and you stop the JMS route, then messages may be rejected, and the JMS broker would have to attempt redeliveries, which yet again may be rejected, and eventually the message may be moved at a dead letter queue on the JMS broker. To avoid this its recommended to enable this option.",title:"Accept Messages While Stopping",required:!1,deprecated:!1},allowReplyManagerQuickStop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the DefaultMessageListenerContainer used in the reply managers for request-reply messaging allow the DefaultMessageListenerContainer.runningAllowed flag to quick stop in case JmsConfiguration#isAcceptMessagesWhileStopping is enabled, and org.apache.camel.CamelContext is currently being stopped. This quick stop ability is enabled by default in the regular JMS consumers but to enable for reply managers you must enable this flag.",title:"Allow Reply Manager Quick Stop",required:!1,deprecated:!1},consumerType:{kind:"parameter",type:"object",defaultValue:"Default",enum:["Simple","Default","Custom"],description:"The consumer type to use, which can be one of: Simple, Default, or Custom. The consumer type determines which Spring JMS listener to use. Default will use org.springframework.jms.listener.DefaultMessageListenerContainer, Simple will use org.springframework.jms.listener.SimpleMessageListenerContainer. When Custom is specified, the MessageListenerContainerFactory defined by the messageListenerContainerFactory option will determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use.",title:"Consumer Type",required:!1,deprecated:!1},defaultTaskExecutorType:{kind:"parameter",type:"object",enum:["ThreadPool","SimpleAsync"],description:"Specifies what default TaskExecutor type to use in the DefaultMessageListenerContainer, for both consumer endpoints and the ReplyTo consumer of producer endpoints. Possible values: SimpleAsync (uses Spring's SimpleAsyncTaskExecutor) or ThreadPool (uses Spring's ThreadPoolTaskExecutor with optimal values - cached threadpool-like). If not set, it defaults to the previous behaviour, which uses a cached thread pool for consumer endpoints and SimpleAsync for reply consumers. The use of ThreadPool is recommended to reduce thread trash in elastic configurations with dynamically increasing and decreasing concurrent consumers.",title:"Default Task Executor Type",required:!1,deprecated:!1},destinationOptions:{kind:"parameter",type:"object",description:"Destination Options are a way to provide extended configuration options to a JMS consumer without having to extend the JMS API. The options are encoded using URL query syntax in the destination name that the consumer is created on. See more details at https://activemq.apache.org/destination-options.",title:"Destination Options",required:!1,deprecated:!1},eagerLoadingOfProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables eager loading of JMS properties and payload as soon as a message is loaded which generally is inefficient as the JMS properties may not be required but sometimes can catch early any issues with the underlying JMS provider and the use of JMS properties. See also the option eagerPoisonBody.",title:"Eager Loading Of Properties",required:!1,deprecated:!1},eagerPoisonBody:{kind:"parameter",type:"string",defaultValue:"Poison JMS message due to ${exception.message}",description:"If eagerLoadingOfProperties is enabled and the JMS message payload (JMS body or JMS properties) is poison (cannot be read/mapped), then set this text as the message body instead so the message can be processed (the cause of the poison are already stored as exception on the Exchange). This can be turned off by setting eagerPoisonBody=false. See also the option eagerLoadingOfProperties.",title:"Eager Poison Body",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},exposeListenerSession:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether the listener session should be exposed when consuming messages.",title:"Expose Listener Session",required:!1,deprecated:!1},replyToConsumerType:{kind:"parameter",type:"object",defaultValue:"Default",enum:["Simple","Default","Custom"],description:"The consumer type of the reply consumer (when doing request/reply), which can be one of: Simple, Default, or Custom. The consumer type determines which Spring JMS listener to use. Default will use org.springframework.jms.listener.DefaultMessageListenerContainer, Simple will use org.springframework.jms.listener.SimpleMessageListenerContainer. When Custom is specified, the MessageListenerContainerFactory defined by the messageListenerContainerFactory option will determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use.",title:"Reply To Consumer Type",required:!1,deprecated:!1},replyToSameDestinationAllowed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a JMS consumer is allowed to send a reply message to the same destination that the consumer is using to consume from. This prevents an endless loop by consuming and sending back the same message to itself.",title:"Reply To Same Destination Allowed",required:!1,deprecated:!1},taskExecutor:{kind:"parameter",type:"object",description:"Allows you to specify a custom task executor for consuming messages.",title:"Task Executor",required:!1,deprecated:!1},deliveryDelay:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets delivery delay to use for send calls for JMS. This option requires JMS 2.0 compliant broker.",title:"Delivery Delay",required:!1,deprecated:!1},deliveryMode:{kind:"parameter",type:"integer",enum:["1","2"],description:"Specifies the delivery mode to be used. Possible values are those defined by jakarta.jms.DeliveryMode. NON_PERSISTENT = 1 and PERSISTENT = 2.",title:"Delivery Mode",required:!1,deprecated:!1},deliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether persistent delivery is used by default.",title:"Delivery Persistent",required:!1,deprecated:!1},explicitQosEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set if the deliveryMode, priority or timeToLive qualities of service should be used when sending messages. This option is based on Spring's JmsTemplate. The deliveryMode, priority and timeToLive options are applied to the current endpoint. This contrasts with the preserveMessageQos option, which operates at message granularity, reading QoS properties exclusively from the Camel In message headers.",title:"Explicit Qos Enabled",required:!1,deprecated:!1},formatDateHeadersToIso8601:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether JMS date properties should be formatted according to the ISO 8601 standard.",title:"Format Date Headers To Iso8601",required:!1,deprecated:!1},preserveMessageQos:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set to true, if you want to send message using the QoS settings specified on the message, instead of the QoS settings on the JMS endpoint. The following three headers are considered JMSPriority, JMSDeliveryMode, and JMSExpiration. You can provide all or only some of them. If not provided, Camel will fall back to use the values from the endpoint instead. So, when using this option, the headers override the values from the endpoint. The explicitQosEnabled option, by contrast, will only use options set on the endpoint, and not values from the message header.",title:"Preserve Message Qos",required:!1,deprecated:!1},priority:{kind:"parameter",type:"integer",defaultValue:"4",enum:["1","2","3","4","5","6","7","8","9"],description:"Values greater than 1 specify the message priority when sending (where 1 is the lowest priority and 9 is the highest). The explicitQosEnabled option must also be enabled in order for this option to have any effect.",title:"Priority",required:!1,deprecated:!1},replyToConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when doing request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Concurrent Consumers",required:!1,deprecated:!1},replyToMaxConcurrentConsumers:{kind:"parameter",type:"integer",description:"Specifies the maximum number of concurrent consumers when using request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Max Concurrent Consumers",required:!1,deprecated:!1},replyToOnTimeoutMaxConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the maximum number of concurrent consumers for continue routing when timeout occurred when using request/reply over JMS.",title:"Reply To On Timeout Max Concurrent Consumers",required:!1,deprecated:!1},replyToOverride:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination in the JMS message, which overrides the setting of replyTo. It is useful if you want to forward the message to a remote Queue and receive the reply message from the ReplyTo destination.",title:"Reply To Override",required:!1,deprecated:!1},replyToType:{kind:"parameter",type:"object",enum:["Temporary","Shared","Exclusive"],description:"Allows for explicitly specifying which kind of strategy to use for replyTo queues when doing request/reply over JMS. Possible values are: Temporary, Shared, or Exclusive. By default Camel will use temporary queues. However if replyTo has been configured, then Shared is used by default. This option allows you to use exclusive queues instead of shared ones. See Camel JMS documentation for more details, and especially the notes about the implications if running in a clustered environment, and the fact that Shared reply queues has lower performance than its alternatives Temporary and Exclusive.",title:"Reply To Type",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"duration",defaultValue:"20000",description:"The timeout for waiting for a reply when using the InOut Exchange Pattern (in milliseconds). The default is 20 seconds. You can include the header CamelJmsRequestTimeout to override this endpoint configured timeout value, and thus have per message individual timeout values. See also the requestTimeoutCheckerInterval option.",title:"Request Timeout",required:!1,deprecated:!1},timeToLive:{kind:"parameter",type:"integer",defaultValue:"-1",description:"When sending messages, specifies the time-to-live of the message (in milliseconds).",title:"Time To Live",required:!1,deprecated:!1},allowAdditionalHeaders:{kind:"parameter",type:"string",description:"This option is used to allow additional headers which may have values that are invalid according to JMS specification. For example some message systems such as WMQ do this with header names using prefix JMS_IBM_MQMD_ containing values with byte array or other invalid types. You can specify multiple header names separated by comma, and use as suffix for wildcard matching.",title:"Allow Additional Headers",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow sending messages with no body. If this option is false and the message body is null, then an JMSException is thrown.",title:"Allow Null Body",required:!1,deprecated:!1},alwaysCopyMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, Camel will always make a JMS message copy of the message when it is passed to the producer for sending. Copying the message is needed in some situations, such as when a replyToDestinationSelectorName is set (incidentally, Camel will set the alwaysCopyMessage option to true, if a replyToDestinationSelectorName is set)",title:"Always Copy Message",required:!1,deprecated:!1},correlationProperty:{kind:"parameter",type:"string",description:"When using InOut exchange pattern use this JMS property instead of JMSCorrelationID JMS property to correlate messages. If set messages will be correlated solely on the value of this property JMSCorrelationID property will be ignored and not set by Camel.",title:"Correlation Property",required:!1,deprecated:!1},disableTimeToLive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use this option to force disabling time to live. For example when you do request/reply over JMS, then Camel will by default use the requestTimeout value as time to live on the message being sent. The problem is that the sender and receiver systems have to have their clocks synchronized, so they are in sync. This is not always so easy to archive. So you can use disableTimeToLive=true to not set a time to live value on the sent message. Then the message will not expire on the receiver system. See below in section About time to live for more details.",title:"Disable Time To Live",required:!1,deprecated:!1},forceSendOriginalMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When using mapJmsMessage=false Camel will create a new JMS message to send to a new JMS destination if you touch the headers (get or set) during the route. Set this option to true to force Camel to send the original JMS message that was received.",title:"Force Send Original Message",required:!1,deprecated:!1},includeSentJMSMessageID:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only applicable when sending to JMS destination using InOnly (eg fire and forget). Enabling this option will enrich the Camel Exchange with the actual JMSMessageID that was used by the JMS client when the message was sent to the JMS destination.",title:"Include Sent JMSMessage ID",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},replyToCacheLevelName:{kind:"parameter",type:"string",enum:["CACHE_AUTO","CACHE_CONNECTION","CACHE_CONSUMER","CACHE_NONE","CACHE_SESSION"],description:"Sets the cache level by name for the reply consumer when doing request/reply over JMS. This option only applies when using fixed reply queues (not temporary). Camel will by default use: CACHE_CONSUMER for exclusive or shared w/ replyToSelectorName. And CACHE_SESSION for shared without replyToSelectorName. Some JMS brokers such as IBM WebSphere may require to set the replyToCacheLevelName=CACHE_NONE to work. Note: If using temporary queues then CACHE_NONE is not allowed, and you must use a higher value such as CACHE_CONSUMER or CACHE_SESSION.",title:"Reply To Cache Level Name",required:!1,deprecated:!1},replyToDestinationSelectorName:{kind:"parameter",type:"string",description:"Sets the JMS Selector using the fixed name to be used so you can filter out your own replies from the others when using a shared queue (that is, if you are not using a temporary reply queue).",title:"Reply To Destination Selector Name",required:!1,deprecated:!1},streamMessageTypeEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether StreamMessage type is enabled or not. Message payloads of streaming kind such as files, InputStream, etc will either by sent as BytesMessage or StreamMessage. This option controls which kind will be used. By default BytesMessage is used which enforces the entire message payload to be read into memory. By enabling this option the message payload is read into memory in chunks and each chunk is then written to the StreamMessage until no more data.",title:"Stream Message Type Enabled",required:!1,deprecated:!1},allowSerializedHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls whether or not to include serialized headers. Applies only when transferExchange is true. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level.",title:"Allow Serialized Headers",required:!1,deprecated:!1},artemisStreamingEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether optimizing for Apache Artemis streaming mode. This can reduce memory overhead when using Artemis with JMS StreamMessage types. This option must only be enabled if Apache Artemis is being used.",title:"Artemis Streaming Enabled",required:!1,deprecated:!1},asyncStartListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to startup the JmsConsumer message listener asynchronously, when starting a route. For example if a JmsConsumer cannot get a connection to a remote JMS broker, then it may block while retrying and/or failover. This will cause Camel to block while starting routes. By setting this option to true, you will let routes startup, while the JmsConsumer connects to the JMS broker using a dedicated thread in asynchronous mode. If this option is used, then beware that if the connection could not be established, then an exception is logged at WARN level, and the consumer will not be able to receive messages; You can then restart the route to retry.",title:"Async Start Listener",required:!1,deprecated:!1},asyncStopListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to stop the JmsConsumer message listener asynchronously, when stopping a route.",title:"Async Stop Listener",required:!1,deprecated:!1},destinationResolver:{kind:"parameter",type:"object",description:"A pluggable org.springframework.jms.support.destination.DestinationResolver that allows you to use your own resolver (for example, to lookup the real destination in a JNDI registry).",title:"Destination Resolver",required:!1,deprecated:!1},errorHandler:{kind:"parameter",type:"object",description:"Specifies a org.springframework.util.ErrorHandler to be invoked in case of any uncaught exceptions thrown while processing a Message. By default these exceptions will be logged at the WARN level, if no errorHandler has been configured. You can configure logging level and whether stack traces should be logged using errorHandlerLoggingLevel and errorHandlerLogStackTrace options. This makes it much easier to configure, than having to code a custom errorHandler.",title:"Error Handler",required:!1,deprecated:!1},exceptionListener:{kind:"parameter",type:"object",description:"Specifies the JMS Exception Listener that is to be notified of any underlying JMS exceptions.",title:"Exception Listener",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},idleConsumerLimit:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specify the limit for the number of consumers that are allowed to be idle at any given time.",title:"Idle Consumer Limit",required:!1,deprecated:!1},idleTaskExecutionLimit:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the limit for idle executions of a receive task, not having received any message within its execution. If this limit is reached, the task will shut down and leave receiving to other executing tasks (in the case of dynamic scheduling; see the maxConcurrentConsumers setting). There is additional doc available from Spring.",title:"Idle Task Execution Limit",required:!1,deprecated:!1},includeAllJMSXProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to include all JMSXxxx properties when mapping from JMS to Camel Message. Setting this to true will include properties such as JMSXAppID, and JMSXUserID etc. Note: If you are using a custom headerFilterStrategy then this option does not apply.",title:"Include All JMSXProperties",required:!1,deprecated:!1},jmsKeyFormatStrategy:{kind:"parameter",type:"object",enum:["default","passthrough"],description:"Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification. Camel provides two implementations out of the box: default and passthrough. The default strategy will safely marshal dots and hyphens (. and -). The passthrough strategy leaves the key as is. Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters. You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy and refer to it using the # notation.",title:"Jms Key Format Strategy",required:!1,deprecated:!1},mapJmsMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should auto map the received JMS message to a suited payload type, such as jakarta.jms.TextMessage to a String etc.",title:"Map Jms Message",required:!1,deprecated:!1},maxMessagesPerTask:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The number of messages per task. -1 is unlimited. If you use a range for concurrent consumers (eg min max), then this option can be used to set a value to eg 100 to control how fast the consumers will shrink when less work is required.",title:"Max Messages Per Task",required:!1,deprecated:!1},messageConverter:{kind:"parameter",type:"object",description:"To use a custom Spring org.springframework.jms.support.converter.MessageConverter so you can be in control how to map to/from a jakarta.jms.Message.",title:"Message Converter",required:!1,deprecated:!1},messageCreatedStrategy:{kind:"parameter",type:"object",description:"To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of jakarta.jms.Message objects when Camel is sending a JMS message.",title:"Message Created Strategy",required:!1,deprecated:!1},messageIdEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When sending, specifies whether message IDs should be added. This is just an hint to the JMS broker. If the JMS provider accepts this hint, these messages must have the message ID set to null; if the provider ignores the hint, the message ID must be set to its normal unique value.",title:"Message Id Enabled",required:!1,deprecated:!1},messageListenerContainerFactory:{kind:"parameter",type:"object",description:"Registry ID of the MessageListenerContainerFactory used to determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use to consume messages. Setting this will automatically set consumerType to Custom.",title:"Message Listener Container Factory",required:!1,deprecated:!1},messageTimestampEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether timestamps should be enabled by default on sending messages. This is just an hint to the JMS broker. If the JMS provider accepts this hint, these messages must have the timestamp set to zero; if the provider ignores the hint the timestamp must be set to its normal value.",title:"Message Timestamp Enabled",required:!1,deprecated:!1},pubSubNoLocal:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to inhibit the delivery of messages published by its own connection.",title:"Pub Sub No Local",required:!1,deprecated:!1},receiveTimeout:{kind:"parameter",type:"duration",defaultValue:"1000",description:"The timeout for receiving messages (in milliseconds).",title:"Receive Timeout",required:!1,deprecated:!1},recoveryInterval:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Specifies the interval between recovery attempts, i.e. when a connection is being refreshed, in milliseconds. The default is 5000 ms, that is, 5 seconds.",title:"Recovery Interval",required:!1,deprecated:!1},requestTimeoutCheckerInterval:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Configures how often Camel should check for timed out Exchanges when doing request/reply over JMS. By default Camel checks once per second. But if you must react faster when a timeout occurs, then you can lower this interval, to check more frequently. The timeout is determined by the option requestTimeout.",title:"Request Timeout Checker Interval",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and you are using Request Reply messaging (InOut) and an Exchange failed on the consumer side, then the caused Exception will be send back in response as a jakarta.jms.ObjectMessage. If the client is Camel, the returned Exception is rethrown. This allows you to use Camel JMS as a bridge in your routing - for example, using persistent queues to enable robust routing. Notice that if you also have transferExchange enabled, this option takes precedence. The caught exception is required to be serializable. The original Exception on the consumer side can be wrapped in an outer exception such as org.apache.camel.RuntimeCamelException when returned to the producer. Use this with caution as the data is using Java Object serialization and requires the received to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumer!",title:"Transfer Exception",required:!1,deprecated:!1},transferExchange:{kind:"parameter",type:"boolean",defaultValue:"false",description:"You can transfer the exchange over the wire instead of just the body and headers. The following fields are transferred: In body, Out body, Fault body, In headers, Out headers, Fault headers, exchange properties, exchange exception. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level. You must enable this option on both the producer and consumer side, so Camel knows the payloads is an Exchange and not a regular payload. Use this with caution as the data is using Java Object serialization and requires the receiver to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumers having to use compatible Camel versions!",title:"Transfer Exchange",required:!1,deprecated:!1},useMessageIDAsCorrelationID:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether JMSMessageID should always be used as JMSCorrelationID for InOut messages.",title:"Use Message IDAs Correlation ID",required:!1,deprecated:!1},waitForProvisionCorrelationToBeUpdatedCounter:{kind:"parameter",type:"integer",defaultValue:"50",description:"Number of times to wait for provisional correlation id to be updated to the actual correlation id when doing request/reply over JMS and when the option useMessageIDAsCorrelationID is enabled.",title:"Wait For Provision Correlation To Be Updated Counter",required:!1,deprecated:!1},waitForProvisionCorrelationToBeUpdatedThreadSleepingTime:{kind:"parameter",type:"duration",defaultValue:"100",description:"Interval in millis to sleep each time while waiting for provisional correlation id to be updated.",title:"Wait For Provision Correlation To Be Updated Thread Sleeping Time",required:!1,deprecated:!1},errorHandlerLoggingLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Allows to configure the default errorHandler logging level for logging uncaught exceptions.",title:"Error Handler Logging Level",required:!1,deprecated:!1},errorHandlerLogStackTrace:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows to control whether stacktraces should be logged or not, by the default errorHandler.",title:"Error Handler Log Stack Trace",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use with the ConnectionFactory. You can also configure username/password directly on the ConnectionFactory.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use with the ConnectionFactory. You can also configure username/password directly on the ConnectionFactory.",title:"Username",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to use transacted mode",title:"Transacted",required:!1,deprecated:!1},transactedInOut:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether InOut operations (request reply) default to using transacted mode If this flag is set to true, then Spring JmsTemplate will have sessionTransacted set to true, and the acknowledgeMode as transacted on the JmsTemplate used for InOut operations. Note from Spring JMS: that within a JTA transaction, the parameters passed to createQueue, createTopic methods are not taken into account. Depending on the Java EE transaction context, the container makes its own decisions on these values. Analogously, these parameters are not taken into account within a locally managed transaction either, since Spring JMS operates on an existing JMS Session in this case. Setting this flag to true will use a short local JMS transaction when running outside of a managed transaction, and a synchronized local JMS transaction in case of a managed transaction (other than an XA transaction) being present. This has the effect of a local JMS transaction being managed alongside the main transaction (which might be a native JDBC transaction), with the JMS transaction committing right after the main transaction.",title:"Transacted In Out",required:!1,deprecated:!1},lazyCreateTransactionManager:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, Camel will create a JmsTransactionManager, if there is no transactionManager injected when option transacted=true.",title:"Lazy Create Transaction Manager",required:!1,deprecated:!1},transactionManager:{kind:"parameter",type:"object",description:"The Spring transaction manager to use.",title:"Transaction Manager",required:!1,deprecated:!1},transactionName:{kind:"parameter",type:"string",description:"The name of the transaction to use.",title:"Transaction Name",required:!1,deprecated:!1},transactionTimeout:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The timeout value of the transaction (in seconds), if using transacted mode.",title:"Transaction Timeout",required:!1,deprecated:!1}}},amqp:{type:"object",title:"AMQP",group:"messaging",icon:"generic24.png",description:"Messaging with AMQP protocol using Apache QPid Client.",properties:{destinationType:{kind:"path",type:"string",defaultValue:"queue",enum:["queue","topic","temp-queue","temp-topic"],description:"The kind of destination to use",title:"Destination Type",required:!1,deprecated:!1},destinationName:{kind:"path",type:"string",description:"Name of the queue or topic to use as destination",title:"Destination Name",required:!0,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Sets the JMS client ID to use. Note that this value, if specified, must be unique and can only be used by a single JMS connection instance. It is typically only required for durable topic subscriptions. If using Apache ActiveMQ you may prefer to use Virtual Topics instead.",title:"Client Id",required:!1,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"The connection factory to be use. A connection factory must be configured either on the component or endpoint.",title:"Connection Factory",required:!1,deprecated:!1},disableReplyTo:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether Camel ignores the JMSReplyTo header in messages. If true, Camel does not send a reply back to the destination specified in the JMSReplyTo header. You can use this option if you want Camel to consume from a route and you do not want Camel to automatically send back a reply message because another component in your code handles the reply message. You can also use this option if you want to use Camel as a proxy between different message brokers and you want to route message from one system to another.",title:"Disable Reply To",required:!1,deprecated:!1},durableSubscriptionName:{kind:"parameter",type:"string",description:"The durable subscriber name for specifying durable topic subscriptions. The clientId option must be configured as well.",title:"Durable Subscription Name",required:!1,deprecated:!1},jmsMessageType:{kind:"parameter",type:"object",enum:["Bytes","Map","Object","Stream","Text"],description:"Allows you to force the use of a specific jakarta.jms.Message implementation for sending JMS messages. Possible values are: Bytes, Map, Object, Stream, Text. By default, Camel would determine which JMS message type to use from the In body type. This option allows you to specify it.",title:"Jms Message Type",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination (overrides any incoming value of Message.getJMSReplyTo() in consumer).",title:"Reply To",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to test the connection on startup. This ensures that when Camel starts that all the JMS consumers have a valid connection to the JMS broker. If a connection cannot be granted then Camel throws an exception on startup. This ensures that Camel is not started with failed connections. The JMS producers is tested as well.",title:"Test Connection On Startup",required:!1,deprecated:!1},acknowledgementModeName:{kind:"parameter",type:"string",defaultValue:"AUTO_ACKNOWLEDGE",enum:["SESSION_TRANSACTED","CLIENT_ACKNOWLEDGE","AUTO_ACKNOWLEDGE","DUPS_OK_ACKNOWLEDGE"],description:"The JMS acknowledgement name, which is one of: SESSION_TRANSACTED, CLIENT_ACKNOWLEDGE, AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE",title:"Acknowledgement Mode Name",required:!1,deprecated:!1},artemisConsumerPriority:{kind:"parameter",type:"integer",description:"Consumer priorities allow you to ensure that high priority consumers receive messages while they are active. Normally, active consumers connected to a queue receive messages from it in a round-robin fashion. When consumer priorities are in use, messages are delivered round-robin if multiple active consumers exist with the same high priority. Messages will only going to lower priority consumers when the high priority consumers do not have credit available to consume the message, or those high priority consumers have declined to accept the message (for instance because it does not meet the criteria of any selectors associated with the consumer).",title:"Artemis Consumer Priority",required:!1,deprecated:!1},asyncConsumer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the JmsConsumer processes the Exchange asynchronously. If enabled then the JmsConsumer may pickup the next message from the JMS queue, while the previous message is being processed asynchronously (by the Asynchronous Routing Engine). This means that messages may be processed not 100% strictly in order. If disabled (as default) then the Exchange is fully processed before the JmsConsumer will pickup the next message from the JMS queue. Note if transacted has been enabled, then asyncConsumer=true does not run asynchronously, as transaction must be executed synchronously (Camel 3.0 may support async transactions).",title:"Async Consumer",required:!1,deprecated:!1},autoStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether the consumer container should auto-startup.",title:"Auto Startup",required:!1,deprecated:!1},cacheLevel:{kind:"parameter",type:"integer",description:"Sets the cache level by ID for the underlying JMS resources. See cacheLevelName option for more details.",title:"Cache Level",required:!1,deprecated:!1},cacheLevelName:{kind:"parameter",type:"string",defaultValue:"CACHE_AUTO",enum:["CACHE_AUTO","CACHE_CONNECTION","CACHE_CONSUMER","CACHE_NONE","CACHE_SESSION"],description:"Sets the cache level by name for the underlying JMS resources. Possible values are: CACHE_AUTO, CACHE_CONNECTION, CACHE_CONSUMER, CACHE_NONE, and CACHE_SESSION. The default setting is CACHE_AUTO. See the Spring documentation and Transactions Cache Levels for more information.",title:"Cache Level Name",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Concurrent Consumers",required:!1,deprecated:!1},maxConcurrentConsumers:{kind:"parameter",type:"integer",description:"Specifies the maximum number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToMaxConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Max Concurrent Consumers",required:!1,deprecated:!1},replyToDeliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether to use persistent delivery by default for replies.",title:"Reply To Delivery Persistent",required:!1,deprecated:!1},selector:{kind:"parameter",type:"string",description:"Sets the JMS selector to use",title:"Selector",required:!1,deprecated:!1},subscriptionDurable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether to make the subscription durable. The durable subscription name to be used can be specified through the subscriptionName property. Default is false. Set this to true to register a durable subscription, typically in combination with a subscriptionName value (unless your message listener class name is good enough as subscription name). Only makes sense when listening to a topic (pub-sub domain), therefore this method switches the pubSubDomain flag as well.",title:"Subscription Durable",required:!1,deprecated:!1},subscriptionName:{kind:"parameter",type:"string",description:"Set the name of a subscription to create. To be applied in case of a topic (pub-sub domain) with a shared or durable subscription. The subscription name needs to be unique within this client's JMS client id. Default is the class name of the specified message listener. Note: Only 1 concurrent consumer (which is the default of this message listener container) is allowed for each subscription, except for a shared subscription (which requires JMS 2.0).",title:"Subscription Name",required:!1,deprecated:!1},subscriptionShared:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether to make the subscription shared. The shared subscription name to be used can be specified through the subscriptionName property. Default is false. Set this to true to register a shared subscription, typically in combination with a subscriptionName value (unless your message listener class name is good enough as subscription name). Note that shared subscriptions may also be durable, so this flag can (and often will) be combined with subscriptionDurable as well. Only makes sense when listening to a topic (pub-sub domain), therefore this method switches the pubSubDomain flag as well. Requires a JMS 2.0 compatible message broker.",title:"Subscription Shared",required:!1,deprecated:!1},acceptMessagesWhileStopping:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether the consumer accept messages while it is stopping. You may consider enabling this option, if you start and stop JMS routes at runtime, while there are still messages enqueued on the queue. If this option is false, and you stop the JMS route, then messages may be rejected, and the JMS broker would have to attempt redeliveries, which yet again may be rejected, and eventually the message may be moved at a dead letter queue on the JMS broker. To avoid this its recommended to enable this option.",title:"Accept Messages While Stopping",required:!1,deprecated:!1},allowReplyManagerQuickStop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the DefaultMessageListenerContainer used in the reply managers for request-reply messaging allow the DefaultMessageListenerContainer.runningAllowed flag to quick stop in case JmsConfiguration#isAcceptMessagesWhileStopping is enabled, and org.apache.camel.CamelContext is currently being stopped. This quick stop ability is enabled by default in the regular JMS consumers but to enable for reply managers you must enable this flag.",title:"Allow Reply Manager Quick Stop",required:!1,deprecated:!1},consumerType:{kind:"parameter",type:"object",defaultValue:"Default",enum:["Simple","Default","Custom"],description:"The consumer type to use, which can be one of: Simple, Default, or Custom. The consumer type determines which Spring JMS listener to use. Default will use org.springframework.jms.listener.DefaultMessageListenerContainer, Simple will use org.springframework.jms.listener.SimpleMessageListenerContainer. When Custom is specified, the MessageListenerContainerFactory defined by the messageListenerContainerFactory option will determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use.",title:"Consumer Type",required:!1,deprecated:!1},defaultTaskExecutorType:{kind:"parameter",type:"object",enum:["ThreadPool","SimpleAsync"],description:"Specifies what default TaskExecutor type to use in the DefaultMessageListenerContainer, for both consumer endpoints and the ReplyTo consumer of producer endpoints. Possible values: SimpleAsync (uses Spring's SimpleAsyncTaskExecutor) or ThreadPool (uses Spring's ThreadPoolTaskExecutor with optimal values - cached threadpool-like). If not set, it defaults to the previous behaviour, which uses a cached thread pool for consumer endpoints and SimpleAsync for reply consumers. The use of ThreadPool is recommended to reduce thread trash in elastic configurations with dynamically increasing and decreasing concurrent consumers.",title:"Default Task Executor Type",required:!1,deprecated:!1},eagerLoadingOfProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables eager loading of JMS properties and payload as soon as a message is loaded which generally is inefficient as the JMS properties may not be required but sometimes can catch early any issues with the underlying JMS provider and the use of JMS properties. See also the option eagerPoisonBody.",title:"Eager Loading Of Properties",required:!1,deprecated:!1},eagerPoisonBody:{kind:"parameter",type:"string",defaultValue:"Poison JMS message due to ${exception.message}",description:"If eagerLoadingOfProperties is enabled and the JMS message payload (JMS body or JMS properties) is poison (cannot be read/mapped), then set this text as the message body instead so the message can be processed (the cause of the poison are already stored as exception on the Exchange). This can be turned off by setting eagerPoisonBody=false. See also the option eagerLoadingOfProperties.",title:"Eager Poison Body",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},exposeListenerSession:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether the listener session should be exposed when consuming messages.",title:"Expose Listener Session",required:!1,deprecated:!1},replyToConsumerType:{kind:"parameter",type:"object",defaultValue:"Default",enum:["Simple","Default","Custom"],description:"The consumer type of the reply consumer (when doing request/reply), which can be one of: Simple, Default, or Custom. The consumer type determines which Spring JMS listener to use. Default will use org.springframework.jms.listener.DefaultMessageListenerContainer, Simple will use org.springframework.jms.listener.SimpleMessageListenerContainer. When Custom is specified, the MessageListenerContainerFactory defined by the messageListenerContainerFactory option will determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use.",title:"Reply To Consumer Type",required:!1,deprecated:!1},replyToSameDestinationAllowed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a JMS consumer is allowed to send a reply message to the same destination that the consumer is using to consume from. This prevents an endless loop by consuming and sending back the same message to itself.",title:"Reply To Same Destination Allowed",required:!1,deprecated:!1},taskExecutor:{kind:"parameter",type:"object",description:"Allows you to specify a custom task executor for consuming messages.",title:"Task Executor",required:!1,deprecated:!1},deliveryDelay:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets delivery delay to use for send calls for JMS. This option requires JMS 2.0 compliant broker.",title:"Delivery Delay",required:!1,deprecated:!1},deliveryMode:{kind:"parameter",type:"integer",enum:["1","2"],description:"Specifies the delivery mode to be used. Possible values are those defined by jakarta.jms.DeliveryMode. NON_PERSISTENT = 1 and PERSISTENT = 2.",title:"Delivery Mode",required:!1,deprecated:!1},deliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether persistent delivery is used by default.",title:"Delivery Persistent",required:!1,deprecated:!1},explicitQosEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set if the deliveryMode, priority or timeToLive qualities of service should be used when sending messages. This option is based on Spring's JmsTemplate. The deliveryMode, priority and timeToLive options are applied to the current endpoint. This contrasts with the preserveMessageQos option, which operates at message granularity, reading QoS properties exclusively from the Camel In message headers.",title:"Explicit Qos Enabled",required:!1,deprecated:!1},formatDateHeadersToIso8601:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether JMS date properties should be formatted according to the ISO 8601 standard.",title:"Format Date Headers To Iso8601",required:!1,deprecated:!1},preserveMessageQos:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set to true, if you want to send message using the QoS settings specified on the message, instead of the QoS settings on the JMS endpoint. The following three headers are considered JMSPriority, JMSDeliveryMode, and JMSExpiration. You can provide all or only some of them. If not provided, Camel will fall back to use the values from the endpoint instead. So, when using this option, the headers override the values from the endpoint. The explicitQosEnabled option, by contrast, will only use options set on the endpoint, and not values from the message header.",title:"Preserve Message Qos",required:!1,deprecated:!1},priority:{kind:"parameter",type:"integer",defaultValue:"4",enum:["1","2","3","4","5","6","7","8","9"],description:"Values greater than 1 specify the message priority when sending (where 1 is the lowest priority and 9 is the highest). The explicitQosEnabled option must also be enabled in order for this option to have any effect.",title:"Priority",required:!1,deprecated:!1},replyToConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when doing request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Concurrent Consumers",required:!1,deprecated:!1},replyToMaxConcurrentConsumers:{kind:"parameter",type:"integer",description:"Specifies the maximum number of concurrent consumers when using request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Max Concurrent Consumers",required:!1,deprecated:!1},replyToOnTimeoutMaxConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the maximum number of concurrent consumers for continue routing when timeout occurred when using request/reply over JMS.",title:"Reply To On Timeout Max Concurrent Consumers",required:!1,deprecated:!1},replyToOverride:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination in the JMS message, which overrides the setting of replyTo. It is useful if you want to forward the message to a remote Queue and receive the reply message from the ReplyTo destination.",title:"Reply To Override",required:!1,deprecated:!1},replyToType:{kind:"parameter",type:"object",enum:["Temporary","Shared","Exclusive"],description:"Allows for explicitly specifying which kind of strategy to use for replyTo queues when doing request/reply over JMS. Possible values are: Temporary, Shared, or Exclusive. By default Camel will use temporary queues. However if replyTo has been configured, then Shared is used by default. This option allows you to use exclusive queues instead of shared ones. See Camel JMS documentation for more details, and especially the notes about the implications if running in a clustered environment, and the fact that Shared reply queues has lower performance than its alternatives Temporary and Exclusive.",title:"Reply To Type",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"duration",defaultValue:"20000",description:"The timeout for waiting for a reply when using the InOut Exchange Pattern (in milliseconds). The default is 20 seconds. You can include the header CamelJmsRequestTimeout to override this endpoint configured timeout value, and thus have per message individual timeout values. See also the requestTimeoutCheckerInterval option.",title:"Request Timeout",required:!1,deprecated:!1},timeToLive:{kind:"parameter",type:"integer",defaultValue:"-1",description:"When sending messages, specifies the time-to-live of the message (in milliseconds).",title:"Time To Live",required:!1,deprecated:!1},allowAdditionalHeaders:{kind:"parameter",type:"string",description:"This option is used to allow additional headers which may have values that are invalid according to JMS specification. For example some message systems such as WMQ do this with header names using prefix JMS_IBM_MQMD_ containing values with byte array or other invalid types. You can specify multiple header names separated by comma, and use as suffix for wildcard matching.",title:"Allow Additional Headers",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow sending messages with no body. If this option is false and the message body is null, then an JMSException is thrown.",title:"Allow Null Body",required:!1,deprecated:!1},alwaysCopyMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, Camel will always make a JMS message copy of the message when it is passed to the producer for sending. Copying the message is needed in some situations, such as when a replyToDestinationSelectorName is set (incidentally, Camel will set the alwaysCopyMessage option to true, if a replyToDestinationSelectorName is set)",title:"Always Copy Message",required:!1,deprecated:!1},correlationProperty:{kind:"parameter",type:"string",description:"When using InOut exchange pattern use this JMS property instead of JMSCorrelationID JMS property to correlate messages. If set messages will be correlated solely on the value of this property JMSCorrelationID property will be ignored and not set by Camel.",title:"Correlation Property",required:!1,deprecated:!1},disableTimeToLive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use this option to force disabling time to live. For example when you do request/reply over JMS, then Camel will by default use the requestTimeout value as time to live on the message being sent. The problem is that the sender and receiver systems have to have their clocks synchronized, so they are in sync. This is not always so easy to archive. So you can use disableTimeToLive=true to not set a time to live value on the sent message. Then the message will not expire on the receiver system. See below in section About time to live for more details.",title:"Disable Time To Live",required:!1,deprecated:!1},forceSendOriginalMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When using mapJmsMessage=false Camel will create a new JMS message to send to a new JMS destination if you touch the headers (get or set) during the route. Set this option to true to force Camel to send the original JMS message that was received.",title:"Force Send Original Message",required:!1,deprecated:!1},includeSentJMSMessageID:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only applicable when sending to JMS destination using InOnly (eg fire and forget). Enabling this option will enrich the Camel Exchange with the actual JMSMessageID that was used by the JMS client when the message was sent to the JMS destination.",title:"Include Sent JMSMessage ID",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},replyToCacheLevelName:{kind:"parameter",type:"string",enum:["CACHE_AUTO","CACHE_CONNECTION","CACHE_CONSUMER","CACHE_NONE","CACHE_SESSION"],description:"Sets the cache level by name for the reply consumer when doing request/reply over JMS. This option only applies when using fixed reply queues (not temporary). Camel will by default use: CACHE_CONSUMER for exclusive or shared w/ replyToSelectorName. And CACHE_SESSION for shared without replyToSelectorName. Some JMS brokers such as IBM WebSphere may require to set the replyToCacheLevelName=CACHE_NONE to work. Note: If using temporary queues then CACHE_NONE is not allowed, and you must use a higher value such as CACHE_CONSUMER or CACHE_SESSION.",title:"Reply To Cache Level Name",required:!1,deprecated:!1},replyToDestinationSelectorName:{kind:"parameter",type:"string",description:"Sets the JMS Selector using the fixed name to be used so you can filter out your own replies from the others when using a shared queue (that is, if you are not using a temporary reply queue).",title:"Reply To Destination Selector Name",required:!1,deprecated:!1},streamMessageTypeEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether StreamMessage type is enabled or not. Message payloads of streaming kind such as files, InputStream, etc will either by sent as BytesMessage or StreamMessage. This option controls which kind will be used. By default BytesMessage is used which enforces the entire message payload to be read into memory. By enabling this option the message payload is read into memory in chunks and each chunk is then written to the StreamMessage until no more data.",title:"Stream Message Type Enabled",required:!1,deprecated:!1},allowSerializedHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls whether or not to include serialized headers. Applies only when transferExchange is true. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level.",title:"Allow Serialized Headers",required:!1,deprecated:!1},artemisStreamingEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether optimizing for Apache Artemis streaming mode. This can reduce memory overhead when using Artemis with JMS StreamMessage types. This option must only be enabled if Apache Artemis is being used.",title:"Artemis Streaming Enabled",required:!1,deprecated:!1},asyncStartListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to startup the JmsConsumer message listener asynchronously, when starting a route. For example if a JmsConsumer cannot get a connection to a remote JMS broker, then it may block while retrying and/or failover. This will cause Camel to block while starting routes. By setting this option to true, you will let routes startup, while the JmsConsumer connects to the JMS broker using a dedicated thread in asynchronous mode. If this option is used, then beware that if the connection could not be established, then an exception is logged at WARN level, and the consumer will not be able to receive messages; You can then restart the route to retry.",title:"Async Start Listener",required:!1,deprecated:!1},asyncStopListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to stop the JmsConsumer message listener asynchronously, when stopping a route.",title:"Async Stop Listener",required:!1,deprecated:!1},destinationResolver:{kind:"parameter",type:"object",description:"A pluggable org.springframework.jms.support.destination.DestinationResolver that allows you to use your own resolver (for example, to lookup the real destination in a JNDI registry).",title:"Destination Resolver",required:!1,deprecated:!1},errorHandler:{kind:"parameter",type:"object",description:"Specifies a org.springframework.util.ErrorHandler to be invoked in case of any uncaught exceptions thrown while processing a Message. By default these exceptions will be logged at the WARN level, if no errorHandler has been configured. You can configure logging level and whether stack traces should be logged using errorHandlerLoggingLevel and errorHandlerLogStackTrace options. This makes it much easier to configure, than having to code a custom errorHandler.",title:"Error Handler",required:!1,deprecated:!1},exceptionListener:{kind:"parameter",type:"object",description:"Specifies the JMS Exception Listener that is to be notified of any underlying JMS exceptions.",title:"Exception Listener",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},idleConsumerLimit:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specify the limit for the number of consumers that are allowed to be idle at any given time.",title:"Idle Consumer Limit",required:!1,deprecated:!1},idleTaskExecutionLimit:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the limit for idle executions of a receive task, not having received any message within its execution. If this limit is reached, the task will shut down and leave receiving to other executing tasks (in the case of dynamic scheduling; see the maxConcurrentConsumers setting). There is additional doc available from Spring.",title:"Idle Task Execution Limit",required:!1,deprecated:!1},includeAllJMSXProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to include all JMSXxxx properties when mapping from JMS to Camel Message. Setting this to true will include properties such as JMSXAppID, and JMSXUserID etc. Note: If you are using a custom headerFilterStrategy then this option does not apply.",title:"Include All JMSXProperties",required:!1,deprecated:!1},jmsKeyFormatStrategy:{kind:"parameter",type:"object",enum:["default","passthrough"],description:"Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification. Camel provides two implementations out of the box: default and passthrough. The default strategy will safely marshal dots and hyphens (. and -). The passthrough strategy leaves the key as is. Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters. You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy and refer to it using the # notation.",title:"Jms Key Format Strategy",required:!1,deprecated:!1},mapJmsMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should auto map the received JMS message to a suited payload type, such as jakarta.jms.TextMessage to a String etc.",title:"Map Jms Message",required:!1,deprecated:!1},maxMessagesPerTask:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The number of messages per task. -1 is unlimited. If you use a range for concurrent consumers (eg min max), then this option can be used to set a value to eg 100 to control how fast the consumers will shrink when less work is required.",title:"Max Messages Per Task",required:!1,deprecated:!1},messageConverter:{kind:"parameter",type:"object",description:"To use a custom Spring org.springframework.jms.support.converter.MessageConverter so you can be in control how to map to/from a jakarta.jms.Message.",title:"Message Converter",required:!1,deprecated:!1},messageCreatedStrategy:{kind:"parameter",type:"object",description:"To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of jakarta.jms.Message objects when Camel is sending a JMS message.",title:"Message Created Strategy",required:!1,deprecated:!1},messageIdEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When sending, specifies whether message IDs should be added. This is just an hint to the JMS broker. If the JMS provider accepts this hint, these messages must have the message ID set to null; if the provider ignores the hint, the message ID must be set to its normal unique value.",title:"Message Id Enabled",required:!1,deprecated:!1},messageListenerContainerFactory:{kind:"parameter",type:"object",description:"Registry ID of the MessageListenerContainerFactory used to determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use to consume messages. Setting this will automatically set consumerType to Custom.",title:"Message Listener Container Factory",required:!1,deprecated:!1},messageTimestampEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether timestamps should be enabled by default on sending messages. This is just an hint to the JMS broker. If the JMS provider accepts this hint, these messages must have the timestamp set to zero; if the provider ignores the hint the timestamp must be set to its normal value.",title:"Message Timestamp Enabled",required:!1,deprecated:!1},pubSubNoLocal:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to inhibit the delivery of messages published by its own connection.",title:"Pub Sub No Local",required:!1,deprecated:!1},receiveTimeout:{kind:"parameter",type:"duration",defaultValue:"1000",description:"The timeout for receiving messages (in milliseconds).",title:"Receive Timeout",required:!1,deprecated:!1},recoveryInterval:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Specifies the interval between recovery attempts, i.e. when a connection is being refreshed, in milliseconds. The default is 5000 ms, that is, 5 seconds.",title:"Recovery Interval",required:!1,deprecated:!1},requestTimeoutCheckerInterval:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Configures how often Camel should check for timed out Exchanges when doing request/reply over JMS. By default Camel checks once per second. But if you must react faster when a timeout occurs, then you can lower this interval, to check more frequently. The timeout is determined by the option requestTimeout.",title:"Request Timeout Checker Interval",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and you are using Request Reply messaging (InOut) and an Exchange failed on the consumer side, then the caused Exception will be send back in response as a jakarta.jms.ObjectMessage. If the client is Camel, the returned Exception is rethrown. This allows you to use Camel JMS as a bridge in your routing - for example, using persistent queues to enable robust routing. Notice that if you also have transferExchange enabled, this option takes precedence. The caught exception is required to be serializable. The original Exception on the consumer side can be wrapped in an outer exception such as org.apache.camel.RuntimeCamelException when returned to the producer. Use this with caution as the data is using Java Object serialization and requires the received to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumer!",title:"Transfer Exception",required:!1,deprecated:!1},transferExchange:{kind:"parameter",type:"boolean",defaultValue:"false",description:"You can transfer the exchange over the wire instead of just the body and headers. The following fields are transferred: In body, Out body, Fault body, In headers, Out headers, Fault headers, exchange properties, exchange exception. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level. You must enable this option on both the producer and consumer side, so Camel knows the payloads is an Exchange and not a regular payload. Use this with caution as the data is using Java Object serialization and requires the receiver to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumers having to use compatible Camel versions!",title:"Transfer Exchange",required:!1,deprecated:!1},useMessageIDAsCorrelationID:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether JMSMessageID should always be used as JMSCorrelationID for InOut messages.",title:"Use Message IDAs Correlation ID",required:!1,deprecated:!1},waitForProvisionCorrelationToBeUpdatedCounter:{kind:"parameter",type:"integer",defaultValue:"50",description:"Number of times to wait for provisional correlation id to be updated to the actual correlation id when doing request/reply over JMS and when the option useMessageIDAsCorrelationID is enabled.",title:"Wait For Provision Correlation To Be Updated Counter",required:!1,deprecated:!1},waitForProvisionCorrelationToBeUpdatedThreadSleepingTime:{kind:"parameter",type:"duration",defaultValue:"100",description:"Interval in millis to sleep each time while waiting for provisional correlation id to be updated.",title:"Wait For Provision Correlation To Be Updated Thread Sleeping Time",required:!1,deprecated:!1},errorHandlerLoggingLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Allows to configure the default errorHandler logging level for logging uncaught exceptions.",title:"Error Handler Logging Level",required:!1,deprecated:!1},errorHandlerLogStackTrace:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows to control whether stacktraces should be logged or not, by the default errorHandler.",title:"Error Handler Log Stack Trace",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use with the ConnectionFactory. You can also configure username/password directly on the ConnectionFactory.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use with the ConnectionFactory. You can also configure username/password directly on the ConnectionFactory.",title:"Username",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to use transacted mode",title:"Transacted",required:!1,deprecated:!1},transactedInOut:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether InOut operations (request reply) default to using transacted mode If this flag is set to true, then Spring JmsTemplate will have sessionTransacted set to true, and the acknowledgeMode as transacted on the JmsTemplate used for InOut operations. Note from Spring JMS: that within a JTA transaction, the parameters passed to createQueue, createTopic methods are not taken into account. Depending on the Java EE transaction context, the container makes its own decisions on these values. Analogously, these parameters are not taken into account within a locally managed transaction either, since Spring JMS operates on an existing JMS Session in this case. Setting this flag to true will use a short local JMS transaction when running outside of a managed transaction, and a synchronized local JMS transaction in case of a managed transaction (other than an XA transaction) being present. This has the effect of a local JMS transaction being managed alongside the main transaction (which might be a native JDBC transaction), with the JMS transaction committing right after the main transaction.",title:"Transacted In Out",required:!1,deprecated:!1},lazyCreateTransactionManager:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, Camel will create a JmsTransactionManager, if there is no transactionManager injected when option transacted=true.",title:"Lazy Create Transaction Manager",required:!1,deprecated:!1},transactionManager:{kind:"parameter",type:"object",description:"The Spring transaction manager to use.",title:"Transaction Manager",required:!1,deprecated:!1},transactionName:{kind:"parameter",type:"string",description:"The name of the transaction to use.",title:"Transaction Name",required:!1,deprecated:!1},transactionTimeout:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The timeout value of the transaction (in seconds), if using transacted mode.",title:"Transaction Timeout",required:!1,deprecated:!1}}},arangodb:{type:"object",title:"ArangoDb",group:"database",icon:"generic24.png",description:"Perform operations on ArangoDb when used as a Document Database, or as a Graph Database",properties:{database:{kind:"path",type:"string",description:"database name",title:"Database",required:!0,deprecated:!1},documentCollection:{kind:"parameter",type:"string",description:"Collection name, when using ArangoDb as a Document Database. Set the documentCollection name when using the CRUD operation on the document database collections (SAVE_DOCUMENT , FIND_DOCUMENT_BY_KEY, UPDATE_DOCUMENT, DELETE_DOCUMENT).",title:"Document Collection",required:!1,deprecated:!1},edgeCollection:{kind:"parameter",type:"string",description:"Collection name of vertices, when using ArangoDb as a Graph Database. Set the edgeCollection name to perform CRUD operation on edges using these operations : SAVE_VERTEX, FIND_VERTEX_BY_KEY, UPDATE_VERTEX, DELETE_VERTEX. The graph attribute is mandatory.",title:"Edge Collection",required:!1,deprecated:!1},graph:{kind:"parameter",type:"string",description:"Graph name, when using ArangoDb as a Graph Database. Combine this attribute with one of the two attributes vertexCollection and edgeCollection.",title:"Graph",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",description:"ArangoDB host. If host and port are default, this field is Optional.",title:"Host",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["SAVE_DOCUMENT","FIND_DOCUMENT_BY_KEY","UPDATE_DOCUMENT","DELETE_DOCUMENT","AQL_QUERY","SAVE_VERTEX","FIND_VERTEX_BY_KEY","UPDATE_VERTEX","DELETE_VERTEX","SAVE_EDGE","FIND_EDGE_BY_KEY","UPDATE_EDGE","DELETE_EDGE"],description:"Operations to perform on ArangoDb. For the operation AQL_QUERY, no need to specify a collection or graph.",title:"Operation",required:!1,deprecated:!1},port:{kind:"parameter",type:"integer",description:"ArangoDB exposed port. If host and port are default, this field is Optional.",title:"Port",required:!1,deprecated:!1},vertexCollection:{kind:"parameter",type:"string",description:"Collection name of vertices, when using ArangoDb as a Graph Database. Set the vertexCollection name to perform CRUD operation on vertices using these operations : SAVE_EDGE, FIND_EDGE_BY_KEY, UPDATE_EDGE, DELETE_EDGE. The graph attribute is mandatory.",title:"Vertex Collection",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},arangoDB:{kind:"parameter",type:"object",description:"To use an existing ArangDB client.",title:"Arango DB",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"ArangoDB password. If user and password are default, this field is Optional.",title:"Password",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",description:"ArangoDB user. If user and password are default, this field is Optional.",title:"User",required:!1,deprecated:!1}}},as2:{type:"object",title:"AS2",group:"file",icon:"generic24.png",description:"Transfer data securely and reliably using the AS2 protocol (RFC4130).",properties:{apiName:{kind:"path",type:"object",enum:["CLIENT","SERVER"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},as2From:{kind:"parameter",type:"string",description:"The value of the AS2From header of AS2 message.",title:"As2 From",required:!1,deprecated:!1},as2MessageStructure:{kind:"parameter",type:"object",enum:["PLAIN","SIGNED","ENCRYPTED","SIGNED_ENCRYPTED","PLAIN_COMPRESSED","SIGNED_COMPRESSED","ENCRYPTED_COMPRESSED","ENCRYPTED_COMPRESSED_SIGNED"],description:"The structure of AS2 Message. One of: PLAIN - No encryption, no signature, SIGNED - No encryption, signature, ENCRYPTED - Encryption, no signature, ENCRYPTED_SIGNED - Encryption, signature",title:"As2 Message Structure",required:!1,deprecated:!1},as2To:{kind:"parameter",type:"string",description:"The value of the AS2To header of AS2 message.",title:"As2 To",required:!1,deprecated:!1},as2Version:{kind:"parameter",type:"string",defaultValue:"1.1",enum:["1.0","1.1"],description:"The version of the AS2 protocol.",title:"As2 Version",required:!1,deprecated:!1},attachedFileName:{kind:"parameter",type:"string",description:"The name of the attached file",title:"Attached File Name",required:!1,deprecated:!1},clientFqdn:{kind:"parameter",type:"string",defaultValue:"camel.apache.org",description:"The Client Fully Qualified Domain Name (FQDN). Used in message ids sent by endpoint.",title:"Client Fqdn",required:!1,deprecated:!1},compressionAlgorithm:{kind:"parameter",type:"object",enum:["ZLIB"],description:"The algorithm used to compress EDI message.",title:"Compression Algorithm",required:!1,deprecated:!1},dispositionNotificationTo:{kind:"parameter",type:"string",description:"The value of the Disposition-Notification-To header. Assigning a value to this parameter requests a message disposition notification (MDN) for the AS2 message.",title:"Disposition Notification To",required:!1,deprecated:!1},ediMessageTransferEncoding:{kind:"parameter",type:"string",description:"The transfer encoding of EDI message.",title:"Edi Message Transfer Encoding",required:!1,deprecated:!1},ediMessageType:{kind:"parameter",type:"object",description:"The content type of EDI message. One of application/edifact, application/edi-x12, application/edi-consent, application/xml",title:"Edi Message Type",required:!1,deprecated:!1},from:{kind:"parameter",type:"string",description:"The value of the From header of AS2 message.",title:"From",required:!1,deprecated:!1},hostnameVerifier:{kind:"parameter",type:"object",description:"Set hostname verifier for SSL session.",title:"Hostname Verifier",required:!1,deprecated:!1},httpConnectionPoolSize:{kind:"parameter",type:"integer",defaultValue:"5",description:"The maximum size of the connection pool for http connections (client only)",title:"Http Connection Pool Size",required:!1,deprecated:!1},httpConnectionPoolTtl:{kind:"parameter",type:"object",defaultValue:"15m",description:"The time to live for connections in the connection pool (client only)",title:"Http Connection Pool Ttl",required:!1,deprecated:!1},httpConnectionTimeout:{kind:"parameter",type:"object",defaultValue:"5s",description:"The timeout of the http connection (client only)",title:"Http Connection Timeout",required:!1,deprecated:!1},httpSocketTimeout:{kind:"parameter",type:"object",defaultValue:"5s",description:"The timeout of the underlying http socket (client only)",title:"Http Socket Timeout",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},mdnMessageTemplate:{kind:"parameter",type:"string",description:"The template used to format MDN message",title:"Mdn Message Template",required:!1,deprecated:!1},requestUri:{kind:"parameter",type:"string",defaultValue:"/",description:"The request URI of EDI message.",title:"Request Uri",required:!1,deprecated:!1},server:{kind:"parameter",type:"string",defaultValue:"Camel AS2 Server Endpoint",description:"The value included in the Server message header identifying the AS2 Server.",title:"Server",required:!1,deprecated:!1},serverFqdn:{kind:"parameter",type:"string",defaultValue:"camel.apache.org",description:"The Server Fully Qualified Domain Name (FQDN). Used in message ids sent by endpoint.",title:"Server Fqdn",required:!1,deprecated:!1},serverPortNumber:{kind:"parameter",type:"integer",description:"The port number of server.",title:"Server Port Number",required:!1,deprecated:!1},sslContext:{kind:"parameter",type:"object",description:"Set SSL context for connection to remote server.",title:"Ssl Context",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The value of Subject header of AS2 message.",title:"Subject",required:!1,deprecated:!1},targetHostname:{kind:"parameter",type:"string",description:"The host name (IP or DNS name) of target host.",title:"Target Hostname",required:!1,deprecated:!1},targetPortNumber:{kind:"parameter",type:"integer",defaultValue:"80",description:"The port number of target host. -1 indicates the scheme default port.",title:"Target Port Number",required:!1,deprecated:!1},userAgent:{kind:"parameter",type:"string",defaultValue:"Camel AS2 Client Endpoint",description:"The value included in the User-Agent message header identifying the AS2 user agent.",title:"User Agent",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},decryptingPrivateKey:{kind:"parameter",type:"object",description:"The key used to encrypt the EDI message.",title:"Decrypting Private Key",required:!1,deprecated:!1},encryptingAlgorithm:{kind:"parameter",type:"object",enum:["AES128_CBC","AES192_CBC","AES256_CBC","AES128_CCM","AES192_CCM","AES256_CCM","AES128_GCM","AES192_GCM","AES256_GCM","CAMELLIA128_CBC","CAMELLIA192_CBC","CAMELLIA256_CBC","CAST5_CBC","DES_CBC","DES_EDE3_CBC","GOST28147_GCFB","IDEA_CBC","RC2_CBC","RC4","SEED_CBC"],description:"The algorithm used to encrypt EDI message.",title:"Encrypting Algorithm",required:!1,deprecated:!1},encryptingCertificateChain:{kind:"parameter",type:"object",description:"The chain of certificates used to encrypt EDI message.",title:"Encrypting Certificate Chain",required:!1,deprecated:!1},signedReceiptMicAlgorithms:{kind:"parameter",type:"array",description:"The list of algorithms, in order of preference, requested to generate a message integrity check (MIC) returned in message dispostion notification (MDN)",title:"Signed Receipt Mic Algorithms",required:!1,deprecated:!1},signingAlgorithm:{kind:"parameter",type:"object",enum:["SHA3_224WITHRSA","SHA3_256WITHRSA","SHA3_384withRSA","SHA3_512WITHRSA","MD5WITHRSA","SHA1WITHRSA","MD2WITHRSA","SHA224WITHRSA","SHA256WITHRSA","SHA384WITHRSA","SHA512WITHRSA","RIPEMD128WITHRSA","RIPEMD160WITHRSA","RIPEMD256WITHRSA","SHA224WITHDSA","SHA256WITHDSA","SHA384WITHDSA","SHA512WITHDSA","SHA3_224WITHDSA","SHA3_256WITHDSA","SHA3_384WITHDSA","SHA3_512WITHDSA","SHA1WITHDSA","SHA3_224WITHECDSA","SHA3_256WITHECDSA","SHA3_384WITHECDSA","SHA3_512WITHECDSA","SHA1WITHECDSA","SHA224WITHECDSA","SHA256WITHECDSA","SHA384WITHECDSA","SHA512WITHECDSA","SHA1WITHPLAIN_ECDSA","SHA224WITHPLAIN_ECDSA","SHA256WITHPLAIN_ECDSA","SHA384WITHPLAIN_ECDSA","SHA512WITHPLAIN_ECDSA","RIPEMD160WITHPLAIN_ECDSA","SHA1WITHRSAANDMGF1","SHA224WITHRSAANDMGF1","SHA256WITHRSAANDMGF1","SHA384WITHRSAANDMGF1","SHA512WITHRSAANDMGF1","SHA3_224WITHRSAANDMGF1","SHA3_256WITHRSAANDMGF1","SHA3_384WITHRSAANDMGF1","SHA3_512WITHRSAANDMGF1"],description:"The algorithm used to sign EDI message.",title:"Signing Algorithm",required:!1,deprecated:!1},signingCertificateChain:{kind:"parameter",type:"object",description:"The chain of certificates used to sign EDI message.",title:"Signing Certificate Chain",required:!1,deprecated:!1},signingPrivateKey:{kind:"parameter",type:"object",description:"The key used to sign the EDI message.",title:"Signing Private Key",required:!1,deprecated:!1},validateSigningCertificateChain:{kind:"parameter",type:"object",description:"Certificates to validate the message's signature against. If not supplied, validation will not take place. Server: validates the received message. Client: not yet implemented, should validate the MDN",title:"Validate Signing Certificate Chain",required:!1,deprecated:!1}}},asterisk:{type:"object",title:"Asterisk",group:"mobile",icon:"generic24.png",description:"Interact with Asterisk PBX Server (VoIP).",properties:{name:{kind:"path",type:"string",description:"Name of component",title:"Name",required:!0,deprecated:!1},hostname:{kind:"parameter",type:"string",description:"The hostname of the asterisk server",title:"Hostname",required:!0,deprecated:!1},password:{kind:"parameter",type:"string",description:"Login password",title:"Password",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"Login username",title:"Username",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},action:{kind:"parameter",type:"object",enum:["QUEUE_STATUS","SIP_PEERS","EXTENSION_STATE"],description:"What action to perform such as getting queue status, sip peers or extension state.",title:"Action",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"atmosphere-websocket":{type:"object",title:"Atmosphere Websocket",group:"http,networking",icon:"generic24.png",description:"Expose WebSocket endpoints using the Atmosphere framework.",properties:{servicePath:{kind:"path",type:"string",description:"Name of websocket endpoint",title:"Service Path",required:!0,deprecated:!1},chunked:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is false the Servlet will disable the HTTP streaming and set the content-length header on the response",title:"Chunked",required:!1,deprecated:!1},disableStreamCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether or not the raw input stream from Servlet is cached or not (Camel will read the stream into a in memory/overflow to file, Stream caching) cache. By default Camel will cache the Servlet input stream to support reading it multiple times to ensure it Camel can retrieve all data from the stream. However you can set this option to true when you for example need to access the raw stream, such as streaming it directly to a file or other persistent store. DefaultHttpBinding will copy the request input stream into a stream cache and put it into message body if this option is false to support reading the stream multiple times. If you use Servlet to bridge/proxy an endpoint then consider enabling this option to improve performance, in case you do not need to read the message payload multiple times. The http producer will by default cache the response body stream. If setting this option to true, then the producers will not cache the response body stream but use the response stream as-is as the message body.",title:"Disable Stream Cache",required:!1,deprecated:!1},sendToAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to send to all (broadcast) or send to a single receiver.",title:"Send To All",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side, and if the caused Exception was send back serialized in the response as a application/x-java-serialized-object content type. On the producer side the exception will be deserialized and thrown as is, instead of the HttpOperationFailedException. The caused exception is required to be serialized. This is by default turned off. If you enable this then be aware that Java will deserialize the incoming data from the request to Java and that can be a potential security risk.",title:"Transfer Exception",required:!1,deprecated:!1},useStreaming:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To enable streaming to send data as multiple text fragments.",title:"Use Streaming",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},httpBinding:{kind:"parameter",type:"object",description:"To use a custom HttpBinding to control the mapping between Camel message and HttpClient.",title:"Http Binding",required:!1,deprecated:!1},async:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configure the consumer to work in async mode",title:"Async",required:!1,deprecated:!1},httpMethodRestrict:{kind:"parameter",type:"string",description:"Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc. Multiple methods can be specified separated by comma.",title:"Http Method Restrict",required:!1,deprecated:!1},matchOnUriPrefix:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found.",title:"Match On Uri Prefix",required:!1,deprecated:!1},muteException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side the response's body won't contain the exception's stack trace.",title:"Mute Exception",required:!1,deprecated:!1},responseBufferSize:{kind:"parameter",type:"integer",description:"To use a custom buffer size on the jakarta.servlet.ServletResponse.",title:"Response Buffer Size",required:!1,deprecated:!1},servletName:{kind:"parameter",type:"string",defaultValue:"CamelServlet",description:"Name of the servlet to use",title:"Servlet Name",required:!1,deprecated:!1},attachmentMultipartBinding:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to automatic bind multipart/form-data as attachments on the Camel Exchange. The options attachmentMultipartBinding=true and disableStreamCache=false cannot work together. Remove disableStreamCache to use AttachmentMultipartBinding. This is turn off by default as this may require servlet specific configuration to enable this when using Servlet's.",title:"Attachment Multipart Binding",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},eagerCheckContentAvailable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to eager check whether the HTTP requests has content if the content-length header is 0 or not present. This can be turned on in case HTTP clients do not send streamed data.",title:"Eager Check Content Available",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},fileNameExtWhitelist:{kind:"parameter",type:"string",description:"Whitelist of accepted filename extensions for accepting uploaded files. Multiple extensions can be separated by comma, such as txt,xml.",title:"File Name Ext Whitelist",required:!1,deprecated:!1},mapHttpMessageBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Body of the exchange will be mapped to HTTP body. Setting this to false will avoid the HTTP mapping.",title:"Map Http Message Body",required:!1,deprecated:!1},mapHttpMessageFormUrlEncodedBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Form Encoded body of the exchange will be mapped to HTTP. Setting this to false will avoid the HTTP Form Encoded body mapping.",title:"Map Http Message Form Url Encoded Body",required:!1,deprecated:!1},mapHttpMessageHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Headers of the exchange will be mapped to HTTP headers. Setting this to false will avoid the HTTP Headers mapping.",title:"Map Http Message Headers",required:!1,deprecated:!1},optionsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP OPTIONS for this Servlet consumer. By default OPTIONS is turned off.",title:"Options Enabled",required:!1,deprecated:!1},traceEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP TRACE for this Servlet consumer. By default TRACE is turned off.",title:"Trace Enabled",required:!1,deprecated:!1},bridgeEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request. You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.",title:"Bridge Endpoint",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},atom:{type:"object",title:"Atom",group:"document",icon:"generic24.png",description:"Poll Atom RSS feeds.",properties:{feedUri:{kind:"path",type:"string",description:"The URI to the feed to poll.",title:"Feed Uri",required:!0,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},sortEntries:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to sort entries by published date. Only works when splitEntries = true.",title:"Sort Entries",required:!1,deprecated:!1},splitEntries:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether or not entries should be sent individually or whether the entire feed should be sent as a single message",title:"Split Entries",required:!1,deprecated:!1},throttleEntries:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether all entries identified in a single feed poll should be delivered immediately. If true, only one entry is processed per delay. Only applicable when splitEntries = true.",title:"Throttle Entries",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},feedHeader:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to add the feed object as a header.",title:"Feed Header",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},avro:{type:"object",title:"Avro RPC",group:"rpc",icon:"generic24.png",description:"Produce or consume Apache Avro RPC services.",properties:{transport:{kind:"path",type:"object",enum:["http","netty"],description:"Transport to use, can be either http or netty",title:"Transport",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number to use",title:"Port",required:!0,deprecated:!1},host:{kind:"path",type:"string",description:"Hostname to use",title:"Host",required:!0,deprecated:!1},messageName:{kind:"path",type:"string",description:"The name of the message to send.",title:"Message Name",required:!1,deprecated:!1},protocol:{kind:"parameter",type:"object",description:"Avro protocol to use",title:"Protocol",required:!1,deprecated:!1},protocolClassName:{kind:"parameter",type:"string",description:"Avro protocol to use defined by the FQN class name",title:"Protocol Class Name",required:!1,deprecated:!1},protocolLocation:{kind:"parameter",type:"string",description:"Avro protocol location",title:"Protocol Location",required:!1,deprecated:!1},reflectionProtocol:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If protocol object provided is reflection protocol. Should be used only with protocol parameter because for protocolClassName protocol type will be auto detected",title:"Reflection Protocol",required:!1,deprecated:!1},singleParameter:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, consumer parameter won't be wrapped into array. Will fail if protocol specifies more then 1 parameter for the message",title:"Single Parameter",required:!1,deprecated:!1},uriAuthority:{kind:"parameter",type:"string",description:"Authority to use (username and password)",title:"Uri Authority",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"aws-cloudtrail":{type:"object",title:"AWS Cloudtrail",group:"cloud,management,monitoring",icon:"generic24.png",description:"Consume events from Amazon Cloudtrail using AWS SDK version 2.x.",properties:{label:{kind:"path",type:"string",description:"A label for indexing cloudtrail endpoints",title:"Label",required:!0,deprecated:!1},eventSource:{kind:"parameter",type:"string",description:"Specify an event source to select events",title:"Event Source",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"integer",defaultValue:"1",description:"Maximum number of records that will be fetched in each poll",title:"Max Results",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Cloudtrail client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},cloudTrailClient:{kind:"parameter",type:"object",description:"Amazon Cloudtrail client to use for all requests for this endpoint",title:"Cloud Trail Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Cloudtrail client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Cloudtrail client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Cloudtrail client",title:"Proxy Protocol",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name.",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Cloudtrail client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Cloudtrail client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws-secrets-manager":{type:"object",title:"AWS Secrets Manager",group:"cloud,management",icon:"generic24.png",description:"Manage secrets using AWS Secrets Manager.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},binaryPayload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set if the secret is binary or not",title:"Binary Payload",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listSecrets","createSecret","getSecret","describeSecret","deleteSecret","rotateSecret","updateSecret","restoreSecret","replicateSecretToRegions"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Secrets Manager client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Secrets Manager client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},secretsManagerClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS Secrets Manager as client",title:"Secrets Manager Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Secrets Manager client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Secrets Manager client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Secrets Manager client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Translate client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1}}},"aws2-athena":{type:"object",title:"AWS Athena",group:"cloud,database",icon:"generic24.png",description:"Access AWS Athena.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},database:{kind:"parameter",type:"string",description:"The Athena database to use.",title:"Database",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"2000",description:"Milliseconds before the next poll for query execution status. See the section Waiting for Query Completion and Retrying Failed Queries to learn more.",title:"Delay",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll for query execution status. See the section Waiting for Query Completion and Retrying Failed Queries to learn more.",title:"Initial Delay",required:!1,deprecated:!1},maxAttempts:{kind:"parameter",type:"integer",defaultValue:"1",description:"Maximum number of times to attempt a query. Set to 1 to disable retries. See the section Waiting for Query Completion and Retrying Failed Queries to learn more.",title:"Max Attempts",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"integer",description:"Max number of results to return for the given operation (if supported by the Athena API endpoint). If not set, will use the Athena API default for the given operation.",title:"Max Results",required:!1,deprecated:!1},nextToken:{kind:"parameter",type:"string",description:"Pagination token to use in the case where the response from the previous request was truncated.",title:"Next Token",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"startQueryExecution",enum:["getQueryExecution","getQueryResults","listQueryExecutions","startQueryExecution"],description:"The Athena API function to call.",title:"Operation",required:!1,deprecated:!1},outputLocation:{kind:"parameter",type:"string",description:"The location in Amazon S3 where query results are stored, such as s3://path/to/query/bucket/. Ensure this value ends with a forward slash.",title:"Output Location",required:!1,deprecated:!1},outputType:{kind:"parameter",type:"object",defaultValue:"StreamList",enum:["StreamList","SelectList","S3Pointer"],description:"How query results should be returned. One of StreamList (default - return a GetQueryResultsIterable that can page through all results), SelectList (returns at most 1000 rows at a time, plus a NextToken value as a header than can be used for manual pagination of results), S3Pointer (return an S3 path pointing to the results).",title:"Output Type",required:!1,deprecated:!1},queryExecutionId:{kind:"parameter",type:"string",description:"The unique ID identifying the query execution.",title:"Query Execution Id",required:!1,deprecated:!1},queryString:{kind:"parameter",type:"string",description:"The SQL query to run. Except for simple queries, prefer setting this as the body of the Exchange or as a header using Athena2Constants.QUERY_STRING to avoid having to deal with URL encoding issues.",title:"Query String",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Athena client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1).",title:"Region",required:!1,deprecated:!1},resetWaitTimeoutOnRetry:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Reset the waitTimeout countdown in the event of a query retry. If set to true, potential max time spent waiting for queries is equal to waitTimeout x maxAttempts. See the section Waiting for Query Completion and Retrying Failed Queries to learn more.",title:"Reset Wait Timeout On Retry",required:!1,deprecated:!1},retry:{kind:"parameter",type:"string",defaultValue:"never",enum:["never","always","retryable","exhausted","generic"],description:"Optional comma separated list of error types to retry the query for. Use: 'retryable' to retry all retryable failure conditions (e.g. generic errors and resources exhausted), 'generic' to retry 'GENERIC_INTERNAL_ERROR' failures, 'exhausted' to retry queries that have exhausted resource limits, 'always' to always retry regardless of failure condition, or 'never' or null to never retry (default). See the section Waiting for Query Completion and Retrying Failed Queries to learn more.",title:"Retry",required:!1,deprecated:!1},waitTimeout:{kind:"parameter",type:"integer",defaultValue:"0",description:"Optional max wait time in millis to wait for a successful query completion. See the section Waiting for Query Completion and Retrying Failed Queries to learn more.",title:"Wait Timeout",required:!1,deprecated:!1},workGroup:{kind:"parameter",type:"string",description:"The workgroup to use for running the query.",title:"Work Group",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonAthenaClient:{kind:"parameter",type:"object",description:"The AmazonAthena instance to use as the client.",title:"Amazon Athena Client",required:!1,deprecated:!1},clientRequestToken:{kind:"parameter",type:"string",description:"A unique string to ensure issues queries are idempotent. It is unlikely you will need to set this.",title:"Client Request Token",required:!1,deprecated:!1},includeTrace:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Include useful trace information at the beginning of queries as an SQL comment (prefixed with --).",title:"Include Trace",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Athena client.",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Athena client.",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Athena client.",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key.",title:"Access Key",required:!1,deprecated:!1},encryptionOption:{kind:"parameter",type:"object",enum:["SSE_S3","SSE_KMS","CSE_KMS","null"],description:"The encryption type to use when storing query results in S3. One of SSE_S3, SSE_KMS, or CSE_KMS.",title:"Encryption Option",required:!1,deprecated:!1},kmsKey:{kind:"parameter",type:"string",description:"For SSE-KMS and CSE-KMS, this is the KMS key ARN or ID.",title:"Kms Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key.",title:"Secret Key",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Athena client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Athena client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-cw":{type:"object",title:"AWS CloudWatch",group:"cloud,monitoring",icon:"generic24.png",description:"Sending metrics to AWS CloudWatch.",properties:{namespace:{kind:"path",type:"string",description:"The metric namespace",title:"Namespace",required:!0,deprecated:!1},name:{kind:"parameter",type:"string",description:"The metric name",title:"Name",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which CW client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},timestamp:{kind:"parameter",type:"object",description:"The metric timestamp",title:"Timestamp",required:!1,deprecated:!1},unit:{kind:"parameter",type:"string",description:"The metric unit",title:"Unit",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},value:{kind:"parameter",type:"number",description:"The metric value",title:"Value",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonCwClient:{kind:"parameter",type:"object",description:"To use the AmazonCloudWatch as the client",title:"Amazon Cw Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the CW client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the CW client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the CW client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the S3 client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Cloudwatch client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-ddb":{type:"object",title:"AWS DynamoDB",group:"cloud,database",icon:"generic24.png",description:"Store and retrieve data from AWS DynamoDB.",properties:{tableName:{kind:"path",type:"string",description:"The name of the table currently worked with.",title:"Table Name",required:!0,deprecated:!1},consistentRead:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether or not strong consistency should be enforced when data is read.",title:"Consistent Read",required:!1,deprecated:!1},enabledInitialDescribeTable:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Set whether the initial Describe table operation in the DDB Endpoint must be done, or not.",title:"Enabled Initial Describe Table",required:!1,deprecated:!1},keyAttributeName:{kind:"parameter",type:"string",description:"Attribute name when creating table",title:"Key Attribute Name",required:!1,deprecated:!1},keyAttributeType:{kind:"parameter",type:"string",description:"Attribute type when creating table",title:"Key Attribute Type",required:!1,deprecated:!1},keyScalarType:{kind:"parameter",type:"string",description:"The key scalar type, it can be S (String), N (Number) and B (Bytes)",title:"Key Scalar Type",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"PutItem",enum:["BatchGetItems","DeleteItem","DeleteTable","DescribeTable","GetItem","PutItem","Query","Scan","UpdateItem","UpdateTable"],description:"What operation to perform",title:"Operation",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},readCapacity:{kind:"parameter",type:"integer",description:"The provisioned throughput to reserve for reading resources from your table",title:"Read Capacity",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which DDB client needs to work",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},writeCapacity:{kind:"parameter",type:"integer",description:"The provisioned throughput to reserved for writing resources to your table",title:"Write Capacity",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonDDBClient:{kind:"parameter",type:"object",description:"To use the AmazonDynamoDB as the client",title:"Amazon DDBClient",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the DDB client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"The region in which DynamoDB client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the DDB client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the S3 client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the DDB client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-ddbstream":{type:"object",title:"AWS DynamoDB Streams",group:"cloud,messaging",icon:"generic24.png",description:"Receive messages from AWS DynamoDB Stream.",properties:{tableName:{kind:"path",type:"string",description:"Name of the dynamodb table",title:"Table Name",required:!0,deprecated:!1},maxResultsPerRequest:{kind:"parameter",type:"integer",description:"Maximum number of records that will be fetched in each poll",title:"Max Results Per Request",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which DDBStreams client needs to work",title:"Region",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},streamIteratorType:{kind:"parameter",type:"object",defaultValue:"FROM_LATEST",enum:["FROM_LATEST","FROM_START"],description:"Defines where in the DynamoDB stream to start getting records. Note that using FROM_START can cause a significant delay before the stream has caught up to real-time.",title:"Stream Iterator Type",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},amazonDynamoDbStreamsClient:{kind:"parameter",type:"object",description:"Amazon DynamoDB client to use for all requests for this endpoint",title:"Amazon Dynamo Db Streams Client",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the DDBStreams client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the DDBStreams client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the DDBStreams client",title:"Proxy Protocol",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name.",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the DynamoDB Streams client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Cloudtrail client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-ec2":{type:"object",title:"AWS Elastic Compute Cloud (EC2)",group:"cloud,management",icon:"generic24.png",description:"Manage AWS EC2 instances.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},amazonEc2Client:{kind:"parameter",type:"object",description:"To use a existing configured AmazonEC2Client as client",title:"Amazon Ec2 Client",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["createAndRunInstances","startInstances","stopInstances","terminateInstances","describeInstances","describeInstancesStatus","rebootInstances","monitorInstances","unmonitorInstances","createTags","deleteTags"],description:"The operation to perform. It can be createAndRunInstances, startInstances, stopInstances, terminateInstances, describeInstances, describeInstancesStatus, rebootInstances, monitorInstances, unmonitorInstances, createTags or deleteTags",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which EC2 client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the EC2 client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the EC2 client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the EC2 client",title:"Proxy Protocol",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the EC2 client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the EC2 client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-ecs":{type:"object",title:"AWS Elastic Container Service (ECS)",group:"cloud,management",icon:"generic24.png",description:"Manage AWS ECS cluster instances.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listClusters","describeCluster","createCluster","deleteCluster"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which ECS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},ecsClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS ECS as client",title:"Ecs Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the ECS client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the ECS client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the ECS client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the ECS client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the ECS client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-eks":{type:"object",title:"AWS Elastic Kubernetes Service (EKS)",group:"cloud,management",icon:"generic24.png",description:"Manage AWS EKS cluster instances.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listClusters","describeCluster","createCluster","deleteCluster"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",defaultValue:"false",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which EKS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the EKS client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the EKS client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},eksClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS EKS as client",title:"Eks Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the EKS client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the EKS client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the EKS client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1}}},"aws2-eventbridge":{type:"object",title:"AWS Eventbridge",group:"cloud,management",icon:"generic24.png",description:"Send events to AWS Eventbridge cluster instances.",properties:{eventbusNameOrArn:{kind:"path",type:"string",description:"Event bus name or ARN",title:"Eventbus Name Or Arn",required:!0,deprecated:!1},eventPatternFile:{kind:"parameter",type:"string",description:"EventPattern File",title:"Event Pattern File",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"putRule",enum:["putRule","putTargets","removeTargets","deleteRule","enableRule","disableRule","describeRule","listRules","listTargetsByRule","listRuleNamesByTarget","putEvent"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Eventbridge client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},eventbridgeClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS Eventbridge as client",title:"Eventbridge Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Eventbridge client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Eventbridge client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Eventbridge client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Eventbridge client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Eventbridge client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-iam":{type:"object",title:"AWS Identity and Access Management (IAM)",group:"cloud,management",icon:"generic24.png",description:"Manage AWS IAM instances.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},iamClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS IAM as client",title:"Iam Client",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listAccessKeys","createUser","deleteUser","getUser","listUsers","createAccessKey","deleteAccessKey","updateAccessKey","createGroup","deleteGroup","listGroups","addUserToGroup","removeUserFromGroup"],description:"The operation to perform. You can configure a default operation on the component level, or the operation as part of the endpoint, or via a message header with the key CamelAwsIAMOperation.",title:"Operation",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",defaultValue:"aws-global",description:"The region in which IAM client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the IAM client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the IAM client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the IAM client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the IAM client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the IAM client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-kinesis":{type:"object",title:"AWS Kinesis",group:"cloud,messaging",icon:"generic24.png",description:"Consume and produce records from and to AWS Kinesis Streams.",properties:{streamName:{kind:"path",type:"string",description:"Name of the stream",title:"Stream Name",required:!0,deprecated:!1},cborEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option will set the CBOR_ENABLED property during the execution",title:"Cbor Enabled",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Kinesis Firehose client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},iteratorType:{kind:"parameter",type:"object",defaultValue:"TRIM_HORIZON",enum:["AT_SEQUENCE_NUMBER","AFTER_SEQUENCE_NUMBER","TRIM_HORIZON","LATEST","AT_TIMESTAMP","null"],description:"Defines where in the Kinesis stream to start getting records",title:"Iterator Type",required:!1,deprecated:!1},maxResultsPerRequest:{kind:"parameter",type:"integer",defaultValue:"1",description:"Maximum number of records that will be fetched in each poll",title:"Max Results Per Request",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},sequenceNumber:{kind:"parameter",type:"string",description:"The sequence number to start polling from. Required if iteratorType is set to AFTER_SEQUENCE_NUMBER or AT_SEQUENCE_NUMBER",title:"Sequence Number",required:!1,deprecated:!1},shardClosed:{kind:"parameter",type:"object",defaultValue:"ignore",enum:["ignore","fail","silent"],description:"Define what will be the behavior in case of shard closed. Possible value are ignore, silent and fail. In case of ignore a message will be logged and the consumer will restart from the beginning,in case of silent there will be no logging and the consumer will start from the beginning,in case of fail a ReachedClosedStateException will be raised",title:"Shard Closed",required:!1,deprecated:!1},shardId:{kind:"parameter",type:"string",description:"Defines which shardId in the Kinesis stream to get records from",title:"Shard Id",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonKinesisClient:{kind:"parameter",type:"object",description:"Amazon Kinesis client to use for all requests for this endpoint",title:"Amazon Kinesis Client",required:!1,deprecated:!1},asyncClient:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to a KinesisAsyncClient instance set it to true",title:"Async Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Kinesis client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Kinesis client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Kinesis client",title:"Proxy Protocol",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name.",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Kinesis client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Kinesis client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-kinesis-firehose":{type:"object",title:"AWS Kinesis Firehose",group:"cloud,messaging",icon:"generic24.png",description:"Produce data to AWS Kinesis Firehose streams.",properties:{streamName:{kind:"path",type:"string",description:"Name of the stream",title:"Stream Name",required:!0,deprecated:!1},cborEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option will set the CBOR_ENABLED property during the execution",title:"Cbor Enabled",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["sendBatchRecord","createDeliveryStream","deleteDeliveryStream","describeDeliveryStream","updateDestination"],description:"The operation to do in case the user don't want to send only a record",title:"Operation",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Kinesis Firehose client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Kinesis Firehose client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonKinesisFirehoseClient:{kind:"parameter",type:"object",description:"Amazon Kinesis Firehose client to use for all requests for this endpoint",title:"Amazon Kinesis Firehose Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Kinesis Firehose client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Kinesis Firehose client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Kinesis Firehose client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name.",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Kinesis Firehose client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-kms":{type:"object",title:"AWS Key Management Service (KMS)",group:"cloud,management",icon:"generic24.png",description:"Manage keys stored in AWS KMS instances.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listKeys","createKey","disableKey","scheduleKeyDeletion","describeKey","enableKey"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which EKS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},kmsClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS KMS as client",title:"Kms Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the KMS client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the KMS client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the KMS client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the KMS client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the KMS client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-lambda":{type:"object",title:"AWS Lambda",group:"cloud,serverless",icon:"generic24.png",description:"Manage and invoke AWS Lambda functions.",properties:{function:{kind:"path",type:"string",description:"Name of the Lambda function.",title:"Function",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"invokeFunction",enum:["listFunctions","getFunction","createAlias","deleteAlias","getAlias","listAliases","createFunction","deleteFunction","invokeFunction","updateFunction","createEventSourceMapping","deleteEventSourceMapping","listEventSourceMapping","listTags","tagResource","untagResource","publishVersion","listVersions"],description:"The operation to perform. It can be listFunctions, getFunction, createFunction, deleteFunction or invokeFunction",title:"Operation",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Lambda client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},awsLambdaClient:{kind:"parameter",type:"object",description:"To use a existing configured AwsLambdaClient as client",title:"Aws Lambda Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Lambda client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Lambda client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Lambda client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Lambda client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Lambda client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-mq":{type:"object",title:"AWS MQ",group:"cloud,messaging",icon:"generic24.png",description:"Send messages to AWS MQ.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listBrokers","createBroker","deleteBroker","rebootBroker","updateBroker","describeBroker"],description:"The operation to perform. It can be listBrokers,createBroker,deleteBroker",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which MQ client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonMqClient:{kind:"parameter",type:"object",description:"To use a existing configured AmazonMQClient as client",title:"Amazon Mq Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the MQ client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the MQ client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the MQ client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the MQ client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the MQ client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-msk":{type:"object",title:"AWS Managed Streaming for Apache Kafka (MSK)",group:"cloud,management",icon:"generic24.png",description:"Manage AWS MSK instances.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listClusters","createCluster","deleteCluster","describeCluster"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which MSK client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},mskClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS MSK as client",title:"Msk Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the MSK client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the MSK client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the MSK client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Kafka client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the MSK client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-s3":{type:"object",title:"AWS S3 Storage Service",group:"cloud,file",icon:"generic24.png",description:"Store and retrieve objects from AWS S3 Storage Service.",properties:{bucketNameOrArn:{kind:"path",type:"string",description:"Bucket name or ARN",title:"Bucket Name Or Arn",required:!0,deprecated:!1},autoCreateBucket:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Setting the autocreation of the S3 bucket bucketName. This will apply also in case of moveAfterRead option enabled and it will create the destinationBucket if it doesn't exist already.",title:"Auto Create Bucket",required:!1,deprecated:!1},delimiter:{kind:"parameter",type:"string",description:"The delimiter which is used in the com.amazonaws.services.s3.model.ListObjectsRequest to only consume objects we are interested in.",title:"Delimiter",required:!1,deprecated:!1},forcePathStyle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the S3 client should use path-style URL instead of virtual-hosted-style",title:"Force Path Style",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},policy:{kind:"parameter",type:"string",description:"The policy for this queue to set in the com.amazonaws.services.s3.AmazonS3#setBucketPolicy() method.",title:"Policy",required:!1,deprecated:!1},prefix:{kind:"parameter",type:"string",description:"The prefix which is used in the com.amazonaws.services.s3.model.ListObjectsRequest to only consume objects we are interested in.",title:"Prefix",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which S3 client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},customerAlgorithm:{kind:"parameter",type:"string",description:"Define the customer algorithm to use in case CustomerKey is enabled",title:"Customer Algorithm",required:!1,deprecated:!1},customerKeyId:{kind:"parameter",type:"string",description:"Define the id of Customer key to use in case CustomerKey is enabled",title:"Customer Key Id",required:!1,deprecated:!1},customerKeyMD5:{kind:"parameter",type:"string",description:"Define the MD5 of Customer key to use in case CustomerKey is enabled",title:"Customer Key MD5",required:!1,deprecated:!1},deleteAfterRead:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Delete objects from S3 after they have been retrieved. The delete is only performed if the Exchange is committed. If a rollback occurs, the object is not deleted. If this option is false, then the same objects will be retrieve over and over again on the polls. Therefore you need to use the Idempotent Consumer EIP in the route to filter out duplicates. You can filter using the AWS2S3Constants#BUCKET_NAME and AWS2S3Constants#KEY headers, or only the AWS2S3Constants#KEY header.",title:"Delete After Read",required:!1,deprecated:!1},destinationBucket:{kind:"parameter",type:"string",description:"Define the destination bucket where an object must be moved when moveAfterRead is set to true.",title:"Destination Bucket",required:!1,deprecated:!1},destinationBucketPrefix:{kind:"parameter",type:"string",description:"Define the destination bucket prefix to use when an object must be moved and moveAfterRead is set to true.",title:"Destination Bucket Prefix",required:!1,deprecated:!1},destinationBucketSuffix:{kind:"parameter",type:"string",description:"Define the destination bucket suffix to use when an object must be moved and moveAfterRead is set to true.",title:"Destination Bucket Suffix",required:!1,deprecated:!1},doneFileName:{kind:"parameter",type:"string",description:"If provided, Camel will only consume files if a done file exists.",title:"Done File Name",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"To get the object from the bucket with the given file name",title:"File Name",required:!1,deprecated:!1},ignoreBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If it is true, the S3 Object Body will be ignored completely, if it is set to false the S3 Object will be put in the body. Setting this to true, will override any behavior defined by includeBody option.",title:"Ignore Body",required:!1,deprecated:!1},includeBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If it is true, the S3Object exchange will be consumed and put into the body and closed. If false the S3Object stream will be put raw into the body and the headers will be set with the S3 object metadata. This option is strongly related to autocloseBody option. In case of setting includeBody to true because the S3Object stream will be consumed then it will also be closed, while in case of includeBody false then it will be up to the caller to close the S3Object stream. However setting autocloseBody to true when includeBody is false it will schedule to close the S3Object stream automatically on exchange completion.",title:"Include Body",required:!1,deprecated:!1},includeFolders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If it is true, the folders/directories will be consumed. If it is false, they will be ignored, and Exchanges will not be created for those",title:"Include Folders",required:!1,deprecated:!1},maxConnections:{kind:"parameter",type:"integer",defaultValue:"60",description:"Set the maxConnections parameter in the S3 client configuration",title:"Max Connections",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",defaultValue:"10",description:"Gets the maximum number of messages as a limit to poll at each polling. Gets the maximum number of messages as a limit to poll at each polling. The default value is 10. Use 0 or a negative number to set it as unlimited.",title:"Max Messages Per Poll",required:!1,deprecated:!1},moveAfterRead:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Move objects from S3 bucket to a different bucket after they have been retrieved. To accomplish the operation the destinationBucket option must be set. The copy bucket operation is only performed if the Exchange is committed. If a rollback occurs, the object is not moved.",title:"Move After Read",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},autocloseBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true and includeBody is false, then the S3Object.close() method will be called on exchange completion. This option is strongly related to includeBody option. In case of setting includeBody to false and autocloseBody to false, it will be up to the caller to close the S3Object stream. Setting autocloseBody to true, will close the S3Object stream automatically.",title:"Autoclose Body",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},batchMessageNumber:{kind:"parameter",type:"integer",defaultValue:"10",description:"The number of messages composing a batch in streaming upload mode",title:"Batch Message Number",required:!1,deprecated:!1},batchSize:{kind:"parameter",type:"integer",defaultValue:"1000000",description:"The batch size (in bytes) in streaming upload mode",title:"Batch Size",required:!1,deprecated:!1},deleteAfterWrite:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Delete file object after the S3 file has been uploaded",title:"Delete After Write",required:!1,deprecated:!1},keyName:{kind:"parameter",type:"string",description:"Setting the key name for an element in the bucket through endpoint parameter",title:"Key Name",required:!1,deprecated:!1},multiPartUpload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If it is true, camel will upload the file with multi part format, the part size is decided by the option of partSize",title:"Multi Part Upload",required:!1,deprecated:!1},namingStrategy:{kind:"parameter",type:"object",defaultValue:"progressive",enum:["progressive","random"],description:"The naming strategy to use in streaming upload mode",title:"Naming Strategy",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["copyObject","listObjects","deleteObject","deleteBucket","listBuckets","getObject","getObjectRange","createDownloadLink"],description:"The operation to do in case the user don't want to do only an upload",title:"Operation",required:!1,deprecated:!1},partSize:{kind:"parameter",type:"integer",defaultValue:"26214400",description:"Setup the partSize which is used in multi part upload, the default size is 25M.",title:"Part Size",required:!1,deprecated:!1},restartingPolicy:{kind:"parameter",type:"object",defaultValue:"override",enum:["override","lastPart"],description:"The restarting policy to use in streaming upload mode",title:"Restarting Policy",required:!1,deprecated:!1},storageClass:{kind:"parameter",type:"string",description:"The storage class to set in the com.amazonaws.services.s3.model.PutObjectRequest request.",title:"Storage Class",required:!1,deprecated:!1},streamingUploadMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When stream mode is true the upload to bucket will be done in streaming",title:"Streaming Upload Mode",required:!1,deprecated:!1},streamingUploadTimeout:{kind:"parameter",type:"integer",description:"While streaming upload mode is true, this option set the timeout to complete upload",title:"Streaming Upload Timeout",required:!1,deprecated:!1},awsKMSKeyId:{kind:"parameter",type:"string",description:"Define the id of KMS key to use in case KMS is enabled",title:"Aws KMSKey Id",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},useAwsKMS:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if KMS must be used or not",title:"Use Aws KMS",required:!1,deprecated:!1},useCustomerKey:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if Customer Key must be used or not",title:"Use Customer Key",required:!1,deprecated:!1},useSSES3:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if SSE S3 must be used or not",title:"Use SSES3",required:!1,deprecated:!1},amazonS3Client:{kind:"parameter",type:"object",description:"Reference to a com.amazonaws.services.s3.AmazonS3 in the registry.",title:"Amazon S3 Client",required:!1,deprecated:!1},amazonS3Presigner:{kind:"parameter",type:"object",description:"An S3 Presigner for Request, used mainly in createDownloadLink operation",title:"Amazon S3 Presigner",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the SQS client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Specify a proxy port to be used inside the client definition.",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the S3 client",title:"Proxy Protocol",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the S3 client should expect to load credentials through a default credentials provider.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the S3 client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-ses":{type:"object",title:"AWS Simple Email Service (SES)",group:"cloud,mail",icon:"generic24.png",description:"Send e-mails through AWS SES service.",properties:{from:{kind:"path",type:"string",description:"The sender's email address.",title:"From",required:!0,deprecated:!1},bcc:{kind:"parameter",type:"string",description:"List of comma separated destination blind carbon copy (bcc) email address. Can be overridden with 'CamelAwsSesBcc' header.",title:"Bcc",required:!1,deprecated:!1},cc:{kind:"parameter",type:"string",description:"List of comma separated destination carbon copy (cc) email address. Can be overridden with 'CamelAwsSesCc' header.",title:"Cc",required:!1,deprecated:!1},configurationSet:{kind:"parameter",type:"string",description:"Set the configuration set to send with every request. Override it with 'CamelAwsSesConfigurationSet' header.",title:"Configuration Set",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which SES client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},replyToAddresses:{kind:"parameter",type:"string",description:"List of comma separated reply-to email address(es) for the message, override it using 'CamelAwsSesReplyToAddresses' header.",title:"Reply To Addresses",required:!1,deprecated:!1},returnPath:{kind:"parameter",type:"string",description:"The email address to which bounce notifications are to be forwarded, override it using 'CamelAwsSesReturnPath' header.",title:"Return Path",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The subject which is used if the message header 'CamelAwsSesSubject' is not present.",title:"Subject",required:!1,deprecated:!1},to:{kind:"parameter",type:"string",description:"List of comma separated destination email address. Can be overridden with 'CamelAwsSesTo' header.",title:"To",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonSESClient:{kind:"parameter",type:"object",description:"To use the AmazonSimpleEmailService as the client",title:"Amazon SESClient",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the SES client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the SES client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the SES client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Ses client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the SES client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-sns":{type:"object",title:"AWS Simple Notification System (SNS)",group:"cloud,messaging,mobile",icon:"generic24.png",description:"Send messages to AWS Simple Notification Topic.",properties:{topicNameOrArn:{kind:"path",type:"string",description:"Topic name or ARN",title:"Topic Name Or Arn",required:!0,deprecated:!1},autoCreateTopic:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Setting the autocreation of the topic",title:"Auto Create Topic",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to map headers to/from Camel.",title:"Header Filter Strategy",required:!1,deprecated:!1},kmsMasterKeyId:{kind:"parameter",type:"string",description:"The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK.",title:"Kms Master Key Id",required:!1,deprecated:!1},messageDeduplicationIdStrategy:{kind:"parameter",type:"string",defaultValue:"useExchangeId",enum:["useExchangeId","useContentBasedDeduplication"],description:"Only for FIFO Topic. Strategy for setting the messageDeduplicationId on the message. Can be one of the following options: useExchangeId, useContentBasedDeduplication. For the useContentBasedDeduplication option, no messageDeduplicationId will be set on the message.",title:"Message Deduplication Id Strategy",required:!1,deprecated:!1},messageGroupIdStrategy:{kind:"parameter",type:"string",enum:["useConstant","useExchangeId","usePropertyValue"],description:"Only for FIFO Topic. Strategy for setting the messageGroupId on the message. Can be one of the following options: useConstant, useExchangeId, usePropertyValue. For the usePropertyValue option, the value of property CamelAwsMessageGroupId will be used.",title:"Message Group Id Strategy",required:!1,deprecated:!1},messageStructure:{kind:"parameter",type:"string",description:"The message structure to use such as json",title:"Message Structure",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},policy:{kind:"parameter",type:"string",description:"The policy for this topic. Is loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Policy",required:!1,deprecated:!1},queueArn:{kind:"parameter",type:"string",description:"The ARN endpoint to subscribe to",title:"Queue Arn",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which SNS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},serverSideEncryptionEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if Server Side Encryption is enabled or not on the topic",title:"Server Side Encryption Enabled",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The subject which is used if the message header 'CamelAwsSnsSubject' is not present.",title:"Subject",required:!1,deprecated:!1},subscribeSNStoSQS:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if the subscription between SNS Topic and SQS must be done or not",title:"Subscribe SNSto SQS",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonSNSClient:{kind:"parameter",type:"object",description:"To use the AmazonSNS as the client",title:"Amazon SNSClient",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the SNS client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the SNS client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the SNS client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the SNS client should expect to load credentials on an AWS infra instance or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the SNS client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-sqs":{type:"object",title:"AWS Simple Queue Service (SQS)",group:"cloud,messaging",icon:"generic24.png",description:"Send and receive messages to/from AWS SQS.",properties:{queueNameOrArn:{kind:"path",type:"string",description:"Queue name or ARN",title:"Queue Name Or Arn",required:!0,deprecated:!1},amazonAWSHost:{kind:"parameter",type:"string",defaultValue:"amazonaws.com",description:"The hostname of the Amazon AWS cloud.",title:"Amazon AWSHost",required:!1,deprecated:!1},autoCreateQueue:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Setting the autocreation of the queue",title:"Auto Create Queue",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to map headers to/from Camel.",title:"Header Filter Strategy",required:!1,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overriding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},protocol:{kind:"parameter",type:"string",defaultValue:"https",description:"The underlying protocol used to communicate with SQS",title:"Protocol",required:!1,deprecated:!1},queueOwnerAWSAccountId:{kind:"parameter",type:"string",description:"Specify the queue owner aws account id when you need to connect the queue with different account owner.",title:"Queue Owner AWSAccount Id",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which SQS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},attributeNames:{kind:"parameter",type:"string",description:"A list of attribute names to receive when consuming. Multiple names can be separated by comma.",title:"Attribute Names",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Allows you to use multiple threads to poll the sqs queue to increase throughput",title:"Concurrent Consumers",required:!1,deprecated:!1},defaultVisibilityTimeout:{kind:"parameter",type:"integer",description:"The default visibility timeout (in seconds)",title:"Default Visibility Timeout",required:!1,deprecated:!1},deleteAfterRead:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Delete message from SQS after it has been read",title:"Delete After Read",required:!1,deprecated:!1},deleteIfFiltered:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to send the DeleteMessage to the SQS queue if the exchange has property with key Sqs2Constants#SQS_DELETE_FILTERED (CamelAwsSqsDeleteFiltered) set to true.",title:"Delete If Filtered",required:!1,deprecated:!1},extendMessageVisibility:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled then a scheduled background task will keep extending the message visibility on SQS. This is needed if it takes a long time to process the message. If set to true defaultVisibilityTimeout must be set. See details at Amazon docs.",title:"Extend Message Visibility",required:!1,deprecated:!1},kmsDataKeyReusePeriodSeconds:{kind:"parameter",type:"integer",description:"The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). Default: 300 (5 minutes).",title:"Kms Data Key Reuse Period Seconds",required:!1,deprecated:!1},kmsMasterKeyId:{kind:"parameter",type:"string",description:"The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK.",title:"Kms Master Key Id",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Gets the maximum number of messages as a limit to poll at each polling. Is default unlimited, but use 0 or negative number to disable it as unlimited.",title:"Max Messages Per Poll",required:!1,deprecated:!1},messageAttributeNames:{kind:"parameter",type:"string",description:"A list of message attribute names to receive when consuming. Multiple names can be separated by comma.",title:"Message Attribute Names",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},serverSideEncryptionEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if Server Side Encryption is enabled or not on the queue",title:"Server Side Encryption Enabled",required:!1,deprecated:!1},visibilityTimeout:{kind:"parameter",type:"integer",description:"The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request to set in the com.amazonaws.services.sqs.model.SetQueueAttributesRequest. This only make sense if its different from defaultVisibilityTimeout. It changes the queue visibility timeout attribute permanently.",title:"Visibility Timeout",required:!1,deprecated:!1},waitTimeSeconds:{kind:"parameter",type:"integer",description:"Duration in seconds (0 to 20) that the ReceiveMessage action call will wait until a message is in the queue to include in the response.",title:"Wait Time Seconds",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},batchSeparator:{kind:"parameter",type:"string",defaultValue:",",description:"Set the separator when passing a String to send batch message operation",title:"Batch Separator",required:!1,deprecated:!1},delaySeconds:{kind:"parameter",type:"integer",description:"Delay sending messages for a number of seconds.",title:"Delay Seconds",required:!1,deprecated:!1},messageDeduplicationIdStrategy:{kind:"parameter",type:"string",defaultValue:"useExchangeId",enum:["useExchangeId","useContentBasedDeduplication"],description:"Only for FIFO queues. Strategy for setting the messageDeduplicationId on the message. Can be one of the following options: useExchangeId, useContentBasedDeduplication. For the useContentBasedDeduplication option, no messageDeduplicationId will be set on the message.",title:"Message Deduplication Id Strategy",required:!1,deprecated:!1},messageGroupIdStrategy:{kind:"parameter",type:"string",enum:["useConstant","useExchangeId","usePropertyValue"],description:"Only for FIFO queues. Strategy for setting the messageGroupId on the message. Can be one of the following options: useConstant, useExchangeId, usePropertyValue. For the usePropertyValue option, the value of property CamelAwsMessageGroupId will be used.",title:"Message Group Id Strategy",required:!1,deprecated:!1},messageHeaderExceededLimit:{kind:"parameter",type:"string",defaultValue:"WARN",enum:["WARN","WARN_ONCE","IGNORE","FAIL"],description:"What to do if sending to AWS SQS has more messages than AWS allows (currently only maximum 10 message headers is allowed). WARN will log a WARN about the limit is for each additional header, so the message can be sent to AWS. WARN_ONCE will only log one time a WARN about the limit is hit, and drop additional headers, so the message can be sent to AWS. IGNORE will ignore (no logging) and drop additional headers, so the message can be sent to AWS. FAIL will cause an exception to be thrown and the message is not sent to AWS.",title:"Message Header Exceeded Limit",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["sendBatchMessage","deleteMessage","listQueues","purgeQueue","deleteQueue"],description:"The operation to do in case the user don't want to send only a message",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},amazonSQSClient:{kind:"parameter",type:"object",description:"To use the AmazonSQS as client",title:"Amazon SQSClient",required:!1,deprecated:!1},delayQueue:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if you want to apply delaySeconds option to the queue or on single messages",title:"Delay Queue",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the SQS client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the SQS client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the SQS client",title:"Proxy Protocol",required:!1,deprecated:!1},maximumMessageSize:{kind:"parameter",type:"integer",description:"The maximumMessageSize (in bytes) an SQS message can contain for this queue.",title:"Maximum Message Size",required:!1,deprecated:!1},messageRetentionPeriod:{kind:"parameter",type:"integer",description:"The messageRetentionPeriod (in seconds) a message will be retained by SQS for this queue.",title:"Message Retention Period",required:!1,deprecated:!1},policy:{kind:"parameter",type:"string",description:"The policy for this queue. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Policy",required:!1,deprecated:!1},queueUrl:{kind:"parameter",type:"string",description:"To define the queueUrl explicitly. All other parameters, which would influence the queueUrl, are ignored. This parameter is intended to be used, to connect to a mock implementation of SQS, for testing purposes.",title:"Queue Url",required:!1,deprecated:!1},receiveMessageWaitTimeSeconds:{kind:"parameter",type:"integer",description:"If you do not specify WaitTimeSeconds in the request, the queue attribute ReceiveMessageWaitTimeSeconds is used to determine how long to wait.",title:"Receive Message Wait Time Seconds",required:!1,deprecated:!1},redrivePolicy:{kind:"parameter",type:"string",description:"Specify the policy that send message to DeadLetter queue. See detail at Amazon docs.",title:"Redrive Policy",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the SQS client should expect to load credentials on an AWS infra instance or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the SQS client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-step-functions":{type:"object",title:"AWS StepFunctions",group:"cloud,serverless",icon:"generic24.png",description:"Manage and invoke AWS Step functions.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["createStateMachine","deleteStateMachine","updateStateMachine","describeStateMachine","listStateMachines","createActivity","deleteActivity","describeActivity","getActivityTask","listActivities","startExecution","startSyncExecution","stopExecution","describeExecution","listExecutions","getExecutionHistory"],description:"The operation to perform. It can be listFunctions, getFunction, createFunction, deleteFunction or invokeFunction",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which StepFunctions client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the StepFunctions client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the StepFunctions client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},awsSfnClient:{kind:"parameter",type:"object",description:"To use a existing configured AwsStepFunctionsClient as client",title:"Aws Sfn Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the StepFunctions client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the StepFunctions client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the StepFunctions client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1}}},"aws2-sts":{type:"object",title:"AWS Security Token Service (STS)",group:"cloud,management",icon:"generic24.png",description:"Manage AWS STS cluster instances.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"assumeRole",enum:["assumeRole","getSessionToken","getFederationToken"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",defaultValue:"aws-global",description:"The region in which STS client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},stsClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS STS as client",title:"Sts Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the STS client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the STS client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the STS client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the STS client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the STS client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"aws2-translate":{type:"object",title:"AWS Translate",group:"cloud,management",icon:"generic24.png",description:"Translate texts using AWS Translate and AWS SDK version 2.x.",properties:{label:{kind:"path",type:"string",description:"Logical name",title:"Label",required:!0,deprecated:!1},autodetectSourceLanguage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Being able to autodetect the source language",title:"Autodetect Source Language",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"translateText",enum:["translateText"],description:"The operation to perform",title:"Operation",required:!0,deprecated:!1},overrideEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",title:"Override Endpoint",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not",title:"Pojo Request",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Translate client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},sourceLanguage:{kind:"parameter",type:"string",description:"Source language to use",title:"Source Language",required:!1,deprecated:!1},targetLanguage:{kind:"parameter",type:"string",description:"Target language to use",title:"Target Language",required:!1,deprecated:!1},uriEndpointOverride:{kind:"parameter",type:"string",description:"Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",title:"Uri Endpoint Override",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},translateClient:{kind:"parameter",type:"object",description:"To use a existing configured AWS Translate as client",title:"Translate Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"To define a proxy host when instantiating the Translate client",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"To define a proxy port when instantiating the Translate client",title:"Proxy Port",required:!1,deprecated:!1},proxyProtocol:{kind:"parameter",type:"object",defaultValue:"HTTPS",enum:["HTTP","HTTPS"],description:"To define a proxy protocol when instantiating the Translate client",title:"Proxy Protocol",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key",title:"Access Key",required:!1,deprecated:!1},profileCredentialsName:{kind:"parameter",type:"string",description:"If using a profile credentials provider this parameter will set the profile name",title:"Profile Credentials Name",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Key",title:"Secret Key",required:!1,deprecated:!1},trustAllCertificates:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to trust all certificates in case of overriding the endpoint",title:"Trust All Certificates",required:!1,deprecated:!1},useDefaultCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Translate client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",title:"Use Default Credentials Provider",required:!1,deprecated:!1},useProfileCredentialsProvider:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether the Translate client should expect to load credentials through a profile credentials provider.",title:"Use Profile Credentials Provider",required:!1,deprecated:!1}}},"azure-cosmosdb":{type:"object",title:"Azure CosmosDB",group:"cloud,database",icon:"generic24.png",description:"To read and write records to the CosmosDB database on Azure cloud platform.",properties:{databaseName:{kind:"path",type:"string",description:"The name of the Cosmos database that component should connect to. In case you are producing data and have createDatabaseIfNotExists=true, the component will automatically auto create a Cosmos database.",title:"Database Name",required:!1,deprecated:!1},containerName:{kind:"path",type:"string",description:"The name of the Cosmos container that component should connect to. In case you are producing data and have createContainerIfNotExists=true, the component will automatically auto create a Cosmos container.",title:"Container Name",required:!1,deprecated:!1},clientTelemetryEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the flag to enable client telemetry which will periodically collect database operations aggregation statistics, system information like cpu/memory and send it to cosmos monitoring service, which will be helpful during debugging. DEFAULT value is false indicating this is opt in feature, by default no telemetry collection.",title:"Client Telemetry Enabled",required:!1,deprecated:!1},connectionSharingAcrossClientsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables connections sharing across multiple Cosmos Clients. The default is false. When you have multiple instances of Cosmos Client in the same JVM interacting to multiple Cosmos accounts, enabling this allows connection sharing in Direct mode if possible between instances of Cosmos Client. Please note, when setting this option, the connection configuration (e.g., socket timeout config, idle timeout config) of the first instantiated client will be used for all other client instances.",title:"Connection Sharing Across Clients Enabled",required:!1,deprecated:!1},consistencyLevel:{kind:"parameter",type:"object",defaultValue:"SESSION",enum:["Strong","BoundedStaleness","Session","Eventual","ConsistentPrefix"],description:"Sets the consistency levels supported for Azure Cosmos DB client operations in the Azure Cosmos DB service. The requested ConsistencyLevel must match or be weaker than that provisioned for the database account. Consistency levels by order of strength are STRONG, BOUNDED_STALENESS, SESSION and EVENTUAL. Refer to consistency level documentation for additional details: https://docs.microsoft.com/en-us/azure/cosmos-db/consistency-levels",title:"Consistency Level",required:!1,deprecated:!1},containerPartitionKeyPath:{kind:"parameter",type:"string",description:"Sets the container partition key path.",title:"Container Partition Key Path",required:!1,deprecated:!1},contentResponseOnWriteEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on CosmosItem. In Consumer, it is enabled by default because of the ChangeFeed in the consumer that needs this flag to be enabled and thus is shouldn't be overridden. In Producer, it advised to disable it since it reduces the network overhead",title:"Content Response On Write Enabled",required:!1,deprecated:!1},cosmosAsyncClient:{kind:"parameter",type:"object",description:"Inject an external CosmosAsyncClient into the component which provides a client-side logical representation of the Azure Cosmos DB service. This asynchronous client is used to configure and execute requests against the service.",title:"Cosmos Async Client",required:!1,deprecated:!1},createContainerIfNotExists:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets if the component should create Cosmos container automatically in case it doesn't exist in Cosmos database",title:"Create Container If Not Exists",required:!1,deprecated:!1},createDatabaseIfNotExists:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets if the component should create Cosmos database automatically in case it doesn't exist in Cosmos account",title:"Create Database If Not Exists",required:!1,deprecated:!1},databaseEndpoint:{kind:"parameter",type:"string",description:"Sets the Azure Cosmos database endpoint the component will connect to.",title:"Database Endpoint",required:!0,deprecated:!1},multipleWriteRegionsEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets the flag to enable writes on any regions for geo-replicated database accounts in the Azure Cosmos DB service. When the value of this property is true, the SDK will direct write operations to available writable regions of geo-replicated database account. Writable regions are ordered by PreferredRegions property. Setting the property value to true has no effect until EnableMultipleWriteRegions in DatabaseAccount is also set to true. DEFAULT value is true indicating that writes are directed to available writable regions of geo-replicated database account.",title:"Multiple Write Regions Enabled",required:!1,deprecated:!1},preferredRegions:{kind:"parameter",type:"string",description:"Sets the comma separated preferred regions for geo-replicated database accounts. For example, East US as the preferred region. When EnableEndpointDiscovery is true and PreferredRegions is non-empty, the SDK will prefer to use the regions in the container in the order they are specified to perform operations.",title:"Preferred Regions",required:!1,deprecated:!1},readRequestsFallbackEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to allow for reads to go to multiple regions configured on an account of Azure Cosmos DB service. DEFAULT value is true. If this property is not set, the default is true for all Consistency Levels other than Bounded Staleness, The default is false for Bounded Staleness. 1. endpointDiscoveryEnabled is true 2. the Azure Cosmos DB account has more than one region",title:"Read Requests Fallback Enabled",required:!1,deprecated:!1},throughputProperties:{kind:"parameter",type:"object",description:"Sets throughput of the resources in the Azure Cosmos DB service.",title:"Throughput Properties",required:!1,deprecated:!1},changeFeedProcessorOptions:{kind:"parameter",type:"object",description:"Sets the ChangeFeedProcessorOptions to be used. Unless specifically set the default values that will be used are: maximum items per page or FeedResponse: 100 lease renew interval: 17 seconds lease acquire interval: 13 seconds lease expiration interval: 60 seconds feed poll delay: 5 seconds maximum scale count: unlimited",title:"Change Feed Processor Options",required:!1,deprecated:!1},createLeaseContainerIfNotExists:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets if the component should create Cosmos lease container for the consumer automatically in case it doesn't exist in Cosmos database",title:"Create Lease Container If Not Exists",required:!1,deprecated:!1},createLeaseDatabaseIfNotExists:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets if the component should create Cosmos lease database for the consumer automatically in case it doesn't exist in Cosmos account",title:"Create Lease Database If Not Exists",required:!1,deprecated:!1},hostName:{kind:"parameter",type:"string",description:"Sets the hostname. The host: a host is an application instance that uses the change feed processor to listen for changes. Multiple instances with the same lease configuration can run in parallel, but each instance should have a different instance name. If not specified, this will be a generated random hostname.",title:"Host Name",required:!1,deprecated:!1},leaseContainerName:{kind:"parameter",type:"string",defaultValue:"camel-lease",description:"Sets the lease container which acts as a state storage and coordinates processing the change feed across multiple workers. The lease container can be stored in the same account as the monitored container or in a separate account. It will be auto created if createLeaseContainerIfNotExists is set to true.",title:"Lease Container Name",required:!1,deprecated:!1},leaseDatabaseName:{kind:"parameter",type:"string",description:"Sets the lease database where the leaseContainerName will be stored. If it is not specified, this component will store the lease container in the same database that is specified in databaseName. It will be auto created if createLeaseDatabaseIfNotExists is set to true.",title:"Lease Database Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},itemId:{kind:"parameter",type:"string",description:"Sets the itemId in case needed for operation on item like delete, replace",title:"Item Id",required:!1,deprecated:!1},itemPartitionKey:{kind:"parameter",type:"string",description:"Sets partition key. Represents a partition key value in the Azure Cosmos DB database service. A partition key identifies the partition where the item is stored in.",title:"Item Partition Key",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"listDatabases",enum:["listDatabases","createDatabase","queryDatabases","deleteDatabase","createContainer","replaceDatabaseThroughput","listContainers","queryContainers","deleteContainer","replaceContainerThroughput","createItem","upsertItem","deleteItem","replaceItem","readItem","readAllItems","queryItems"],description:"The CosmosDB operation that can be used with this component on the producer.",title:"Operation",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"An SQL query to execute on a given resources. To learn more about Cosmos SQL API, check this link {link https://docs.microsoft.com/en-us/azure/cosmos-db/sql-query-getting-started}",title:"Query",required:!1,deprecated:!1},queryRequestOptions:{kind:"parameter",type:"object",description:"Set additional QueryRequestOptions that can be used with queryItems, queryContainers, queryDatabases, listDatabases, listItems, listContainers operations",title:"Query Request Options",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},accountKey:{kind:"parameter",type:"string",description:"Sets either a master or readonly key used to perform authentication for accessing resource.",title:"Account Key",required:!1,deprecated:!1},useDefaultIdentity:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicates whether to use the default identity mechanism instead of the access key.",title:"Use Default Identity",required:!1,deprecated:!1}}},"azure-eventhubs":{type:"object",title:"Azure Event Hubs",group:"cloud,messaging",icon:"generic24.png",description:"Send and receive events to/from Azure Event Hubs using AMQP protocol.",properties:{namespace:{kind:"path",type:"string",description:"EventHubs namespace created in Azure Portal.",title:"Namespace",required:!1,deprecated:!1},eventHubName:{kind:"path",type:"string",description:"EventHubs name under a specific namespace.",title:"Event Hub Name",required:!1,deprecated:!1},amqpRetryOptions:{kind:"parameter",type:"object",description:"Sets the retry policy for EventHubAsyncClient. If not specified, the default retry options are used.",title:"Amqp Retry Options",required:!1,deprecated:!1},amqpTransportType:{kind:"parameter",type:"object",defaultValue:"AMQP",enum:["Amqp","AmqpWebSockets"],description:"Sets the transport type by which all the communication with Azure Event Hubs occurs. Default value is AmqpTransportType#AMQP.",title:"Amqp Transport Type",required:!1,deprecated:!1},blobAccessKey:{kind:"parameter",type:"string",description:"In case you chose the default BlobCheckpointStore, this sets access key for the associated azure account name to be used for authentication with azure blob services.",title:"Blob Access Key",required:!1,deprecated:!1},blobAccountName:{kind:"parameter",type:"string",description:"In case you chose the default BlobCheckpointStore, this sets Azure account name to be used for authentication with azure blob services.",title:"Blob Account Name",required:!1,deprecated:!1},blobContainerName:{kind:"parameter",type:"string",description:"In case you chose the default BlobCheckpointStore, this sets the blob container that shall be used by the BlobCheckpointStore to store the checkpoint offsets.",title:"Blob Container Name",required:!1,deprecated:!1},blobStorageSharedKeyCredential:{kind:"parameter",type:"object",description:"In case you chose the default BlobCheckpointStore, StorageSharedKeyCredential can be injected to create the azure client, this holds the important authentication information.",title:"Blob Storage Shared Key Credential",required:!1,deprecated:!1},checkpointBatchSize:{kind:"parameter",type:"integer",defaultValue:"500",description:"Sets the batch size between each checkpoint updates. Works jointly with checkpointBatchTimeout.",title:"Checkpoint Batch Size",required:!1,deprecated:!1},checkpointBatchTimeout:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Sets the batch timeout between each checkpoint updates. Works jointly with checkpointBatchSize.",title:"Checkpoint Batch Timeout",required:!1,deprecated:!1},checkpointStore:{kind:"parameter",type:"object",defaultValue:"BlobCheckpointStore",description:"Sets the CheckpointStore the EventProcessorClient will use for storing partition ownership and checkpoint information. Users can, optionally, provide their own implementation of CheckpointStore which will store ownership and checkpoint information. By default it set to use com.azure.messaging.eventhubs.checkpointstore.blob.BlobCheckpointStore which stores all checkpoint offsets into Azure Blob Storage.",title:"Checkpoint Store",required:!1,deprecated:!1},consumerGroupName:{kind:"parameter",type:"string",defaultValue:"$Default",description:"Sets the name of the consumer group this consumer is associated with. Events are read in the context of this group. The name of the consumer group that is created by default is {code $Default}.",title:"Consumer Group Name",required:!1,deprecated:!1},eventPosition:{kind:"parameter",type:"object",description:"Sets the map containing the event position to use for each partition if a checkpoint for the partition does not exist in CheckpointStore. This map is keyed off of the partition id. If there is no checkpoint in CheckpointStore and there is no entry in this map, the processing of the partition will start from {link EventPosition#latest() latest} position.",title:"Event Position",required:!1,deprecated:!1},prefetchCount:{kind:"parameter",type:"integer",defaultValue:"500",description:"Sets the count used by the receiver to control the number of events the Event Hub consumer will actively receive and queue locally without regard to whether a receive operation is currently active.",title:"Prefetch Count",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},partitionId:{kind:"parameter",type:"string",description:"Sets the identifier of the Event Hub partition that the events will be sent to. If the identifier is not specified, the Event Hubs service will be responsible for routing events that are sent to an available partition.",title:"Partition Id",required:!1,deprecated:!1},partitionKey:{kind:"parameter",type:"string",description:"Sets a hashing key to be provided for the batch of events, which instructs the Event Hubs service to map this key to a specific partition. The selection of a partition is stable for a given partition hashing key. Should any other batches of events be sent using the same exact partition hashing key, the Event Hubs service will route them all to the same partition. This should be specified only when there is a need to group events by partition, but there is flexibility into which partition they are routed. If ensuring that a batch of events is sent only to a specific partition, it is recommended that the {link #setPartitionId(String) identifier of the position be specified directly} when sending the batch.",title:"Partition Key",required:!1,deprecated:!1},producerAsyncClient:{kind:"parameter",type:"object",description:"Sets the EventHubProducerAsyncClient.An asynchronous producer responsible for transmitting EventData to a specific Event Hub, grouped together in batches. Depending on the options specified when creating an {linkEventDataBatch}, the events may be automatically routed to an available partition or specific to a partition. Use by this component to produce the data in camel producer.",title:"Producer Async Client",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionString:{kind:"parameter",type:"string",description:"Instead of supplying namespace, sharedAccessKey, sharedAccessName ... etc, you can just supply the connection string for your eventHub. The connection string for EventHubs already include all the necessary information to connection to your EventHub. To learn on how to generate the connection string, take a look at this documentation: https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string",title:"Connection String",required:!1,deprecated:!1},sharedAccessKey:{kind:"parameter",type:"string",description:"The generated value for the SharedAccessName.",title:"Shared Access Key",required:!1,deprecated:!1},sharedAccessName:{kind:"parameter",type:"string",description:"The name you chose for your EventHubs SAS keys.",title:"Shared Access Name",required:!1,deprecated:!1},tokenCredential:{kind:"parameter",type:"object",description:"Still another way of authentication (beside supplying namespace, sharedAccessKey, sharedAccessName or connection string) is through Azure-AD authentication using an implementation instance of TokenCredential.",title:"Token Credential",required:!1,deprecated:!1}}},"azure-files":{type:"object",title:"Azure Files",group:"cloud,file",icon:"generic24.png",description:"Send and receive files to Azure storage file share",properties:{account:{kind:"path",type:"string",description:"The account to use",title:"Account",required:!0,deprecated:!1},share:{kind:"path",type:"string",description:"The share to use",title:"Share",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port of the FTP server",title:"Port",required:!1,deprecated:!1},directoryName:{kind:"path",type:"string",description:"The starting directory",title:"Directory Name",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after use. Disconnect will only disconnect the current connection to the FTP server. If you have a consumer which you want to stop, then you need to stop the consumer/route instead.",title:"Disconnect",required:!1,deprecated:!1},doneFileName:{kind:"parameter",type:"string",description:"Producer: If provided, then Camel will write a 2nd done file when the original file has been written. The done file will be empty. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders. The done file will always be written in the same folder as the original file. Consumer: If provided, Camel will only consume files if a done file exists. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders.The done file is always expected in the same folder as the original file. Only ${file.name} and ${file.name.next} is supported as dynamic placeholders.",title:"Done File Name",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"Use Expression such as File Language to dynamically set the filename. For consumers, it's used as a filename filter. For producers, it's used to evaluate the filename to write. If an expression is set, it take precedence over the CamelFileName header. (Note: The header itself can also be an Expression). The expression options support both String and Expression types. If the expression is a String type, it is always evaluated using the File Language. If the expression is an Expression type, the specified Expression type is used - this allows you, for instance, to use OGNL expressions. For the consumer, you can use it to filter filenames, so you can for instance consume today's file using the File Language syntax: mydata-${date:now:yyyyMMdd}.txt. The producers support the CamelOverruleFileName header which takes precedence over any existing CamelFileName header; the CamelOverruleFileName is a header that is used only once, and makes it easier as this avoids to temporary store CamelFileName and have to restore it afterwards.",title:"File Name",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file will be deleted after it is processed successfully.",title:"Delete",required:!1,deprecated:!1},moveFailed:{kind:"parameter",type:"string",description:"Sets the move failure expression based on Simple language. For example, to move files into a .error subdirectory use: .error. Note: When moving the files to the fail location Camel will handle the error and will not pick up the file again.",title:"Move Failed",required:!1,deprecated:!1},noop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file is not moved or deleted in any way. This option is good for readonly data, or for ETL type requirements. If noop=true, Camel will set idempotent=true as well, to avoid consuming the same files over and over again.",title:"Noop",required:!1,deprecated:!1},preMove:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to dynamically set the filename when moving it before processing. For example to move in-progress files into the order directory set this value to order.",title:"Pre Move",required:!1,deprecated:!1},preSort:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When pre-sort is enabled then the consumer will sort the file and directory names during polling, that was retrieved from the file system. You may want to do this in case you need to operate on the files in a sorted order. The pre-sort is executed before the consumer starts to filter, and accept files to process by Camel. This option is default=false meaning disabled.",title:"Pre Sort",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If a directory, will look for files in all the sub-directories as well.",title:"Recursive",required:!1,deprecated:!1},resumeDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configures whether resume download is enabled. In addition the options localWorkDirectory must be configured so downloaded files are stored in a local directory, which is required to support resuming of downloads.",title:"Resume Download",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},streamDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the download method to use when not using a local working directory. If set to true, the remote files are streamed to the route as they are read. When set to false, the remote files are loaded into memory before being sent into the route. If enabling this option then you must set stepwise=false as both cannot be enabled at the same time.",title:"Stream Download",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},download:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the FTP consumer should download the file. If this option is set to false, then the message body will be null, but the consumer will still trigger a Camel Exchange that has details about the file such as file name, file size, etc. It's just that the file will not be downloaded.",title:"Download",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},inProgressRepository:{kind:"parameter",type:"object",description:"A pluggable in-progress repository org.apache.camel.spi.IdempotentRepository. The in-progress repository is used to account the current in progress files being consumed. By default a memory based repository is used.",title:"In Progress Repository",required:!1,deprecated:!1},localWorkDirectory:{kind:"parameter",type:"string",description:"When consuming, a local work directory can be used to store the remote file content directly in local files, to avoid loading the content into memory. This is beneficial, if you consume a very big remote file and thus can conserve memory.",title:"Local Work Directory",required:!1,deprecated:!1},onCompletionExceptionHandler:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.ExceptionHandler to handle any thrown exceptions that happens during the file on completion process where the consumer does either a commit or rollback. The default implementation will log any exception at WARN level and ignore.",title:"On Completion Exception Handler",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},processStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.component.file.GenericFileProcessStrategy allowing you to implement your own readLock option or similar. Can also be used when special conditions must be met before a file can be consumed, such as a special ready file exists. If this option is set then the readLock option does not apply.",title:"Process Strategy",required:!1,deprecated:!1},fileExist:{kind:"parameter",type:"object",defaultValue:"Override",enum:["Override","Append","Fail","Ignore","Move","TryRename"],description:"What to do if a file already exists with the same name. Override, which is the default, replaces the existing file. - Append - adds content to the existing file. - Fail - throws a GenericFileOperationException, indicating that there is already an existing file. - Ignore - silently ignores the problem and does not override the existing file, but assumes everything is okay. - Move - option requires to use the moveExisting option to be configured as well. The option eagerDeleteTargetFile can be used to control what to do if an moving the file, and there exists already an existing file, otherwise causing the move operation to fail. The Move option will move any existing files, before writing the target file. - TryRename is only applicable if tempFileName option is in use. This allows to try renaming the file from the temporary name to the actual name, without doing any exists check. This check may be faster on some file systems and especially FTP servers.",title:"File Exist",required:!1,deprecated:!1},flatten:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flatten is used to flatten the file name path to strip any leading paths, so it's just the file name. This allows you to consume recursively into sub-directories, but when you eg write the files to another directory they will be written in a single directory. Setting this to true on the producer enforces that any file name in CamelFileName header will be stripped for any leading paths.",title:"Flatten",required:!1,deprecated:!1},jailStartingDirectory:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for jailing (restricting) writing files to the starting directory (and sub) only. This is enabled by default to not allow Camel to write files to outside directories (to be more secured out of the box). You can turn this off to allow writing files to directories outside the starting directory, such as parent or root folders.",title:"Jail Starting Directory",required:!1,deprecated:!1},tempFileName:{kind:"parameter",type:"string",description:"The same as tempPrefix option but offering a more fine grained control on the naming of the temporary filename as it uses the File Language. The location for tempFilename is relative to the final file location in the option 'fileName', not the target directory in the base uri. For example if option fileName includes a directory prefix: dir/finalFilename then tempFileName is relative to that subdirectory dir.",title:"Temp File Name",required:!1,deprecated:!1},tempPrefix:{kind:"parameter",type:"string",description:"This option is used to write the file using a temporary name and then, after the write is complete, rename it to the real name. Can be used to identify files being written and also avoid consumers (not using exclusive read locks) reading in progress files. Is often used by FTP when uploading big files.",title:"Temp Prefix",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Used to specify if a null body is allowed during file writing. If set to true then an empty file will be created, when set to false, and attempting to send a null body to the file component, a GenericFileWriteException of 'Cannot write null body to file.' will be thrown. If the fileExist option is set to 'Override', then the file will be truncated, and if set to append the file will remain unchanged.",title:"Allow Null Body",required:!1,deprecated:!1},disconnectOnBatchComplete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after a Batch upload is complete. disconnectOnBatchComplete will only disconnect the current connection to the FTP server.",title:"Disconnect On Batch Complete",required:!1,deprecated:!1},eagerDeleteTargetFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to eagerly delete any existing target file. This option only applies when you use fileExists=Override and the tempFileName option as well. You can use this to disable (set it to false) deleting the target file before the temp file is written. For example you may write big files and want the target file to exists during the temp file is being written. This ensure the target file is only deleted until the very last moment, just before the temp file is being renamed to the target filename. This option is also used to control whether to delete any existing files when fileExist=Move is enabled, and an existing file exists. If this option copyAndDeleteOnRenameFails false, then an exception will be thrown if an existing file existed, if its true, then the existing file is deleted before the move operation.",title:"Eager Delete Target File",required:!1,deprecated:!1},keepLastModified:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will keep the last modified timestamp from the source file (if any). Will use the FileConstants.FILE_LAST_MODIFIED header to located the timestamp. This header can contain either a java.util.Date or long with the timestamp. If the timestamp exists and the option is enabled it will set this timestamp on the written file. Note: This option only applies to the file producer. You cannot use this option with any of the ftp producers.",title:"Keep Last Modified",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},moveExistingFileStrategy:{kind:"parameter",type:"object",description:"Strategy (Custom Strategy) used to move file with special naming token to use when fileExist=Move is configured. By default, there is an implementation used if no custom strategy is provided",title:"Move Existing File Strategy",required:!1,deprecated:!1},autoCreate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatically create missing directories in the file's pathname. For the file consumer, that means creating the starting directory. For the file producer, it means the directory the files should be written to.",title:"Auto Create",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"duration",defaultValue:"10000",description:"Sets the connect timeout for waiting for a connection to be established Used by both FTPClient and JSCH",title:"Connect Timeout",required:!1,deprecated:!1},maximumReconnectAttempts:{kind:"parameter",type:"integer",description:"Specifies the maximum reconnect attempts Camel performs when it tries to connect to the remote FTP server. Use 0 to disable this behavior.",title:"Maximum Reconnect Attempts",required:!1,deprecated:!1},reconnectDelay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Delay in millis Camel will wait before performing a reconnect attempt.",title:"Reconnect Delay",required:!1,deprecated:!1},throwExceptionOnConnectFailed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should an exception be thrown if connection failed (exhausted)By default exception is not thrown and a WARN is logged. You can use this to enable exception being thrown and handle the thrown exception from the org.apache.camel.spi.PollingConsumerPollStrategy rollback method.",title:"Throw Exception On Connect Failed",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Sets the data timeout for waiting for reply Used only by FTPClient",title:"Timeout",required:!1,deprecated:!1},sharedKey:{kind:"parameter",type:"string",description:"Shared key (storage account key)",title:"Shared Key",required:!1,deprecated:!1},antExclude:{kind:"parameter",type:"string",description:"Ant style filter exclusion. If both antInclude and antExclude are used, antExclude takes precedence over antInclude. Multiple exclusions may be specified in comma-delimited format.",title:"Ant Exclude",required:!1,deprecated:!1},antFilterCaseSensitive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets case sensitive flag on ant filter.",title:"Ant Filter Case Sensitive",required:!1,deprecated:!1},antInclude:{kind:"parameter",type:"string",description:"Ant style filter inclusion. Multiple inclusions may be specified in comma-delimited format.",title:"Ant Include",required:!1,deprecated:!1},eagerMaxMessagesPerPoll:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows for controlling whether the limit from maxMessagesPerPoll is eager or not. If eager then the limit is during the scanning of files. Where as false would scan all files, and then perform sorting. Setting this option to false allows for sorting all files first, and then limit the poll. Mind that this requires a higher memory usage as all file details are in memory to perform the sorting.",title:"Eager Max Messages Per Poll",required:!1,deprecated:!1},exclude:{kind:"parameter",type:"string",description:"Is used to exclude files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Exclude",required:!1,deprecated:!1},excludeExt:{kind:"parameter",type:"string",description:"Is used to exclude files matching file extension name (case insensitive). For example to exclude bak files, then use excludeExt=bak. Multiple extensions can be separated by comma, for example to exclude bak and dat files, use excludeExt=bak,dat. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Exclude Ext",required:!1,deprecated:!1},filter:{kind:"parameter",type:"object",description:"Pluggable filter as a org.apache.camel.component.file.GenericFileFilter class. Will skip files if filter returns false in its accept() method.",title:"Filter",required:!1,deprecated:!1},filterDirectory:{kind:"parameter",type:"string",description:"Filters the directory based on Simple language. For example to filter on current date, you can use a simple date pattern such as ${date:now:yyyMMdd}",title:"Filter Directory",required:!1,deprecated:!1},filterFile:{kind:"parameter",type:"string",description:"Filters the file based on Simple language. For example to filter on file size, you can use ${file:size} 5000",title:"Filter File",required:!1,deprecated:!1},idempotent:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to use the Idempotent Consumer EIP pattern to let Camel skip already processed files. Will by default use a memory based LRUCache that holds 1000 entries. If noop=true then idempotent will be enabled as well to avoid consuming the same files over and over again.",title:"Idempotent",required:!1,deprecated:!1},idempotentKey:{kind:"parameter",type:"string",description:"To use a custom idempotent key. By default the absolute path of the file is used. You can use the File Language, for example to use the file name and file size, you can do: idempotentKey=${file:name}-${file:size}",title:"Idempotent Key",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which by default use MemoryIdempotentRepository if none is specified and idempotent is true.",title:"Idempotent Repository",required:!1,deprecated:!1},include:{kind:"parameter",type:"string",description:"Is used to include files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Include",required:!1,deprecated:!1},includeExt:{kind:"parameter",type:"string",description:"Is used to include files matching file extension name (case insensitive). For example to include txt files, then use includeExt=txt. Multiple extensions can be separated by comma, for example to include txt and xml files, use includeExt=txt,xml. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Include Ext",required:!1,deprecated:!1},maxDepth:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"The maximum depth to traverse when recursively processing a directory.",title:"Max Depth",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"To define a maximum messages to gather per poll. By default no maximum is set. Can be used to set a limit of e.g. 1000 to avoid when starting up the server that there are thousands of files. Set a value of 0 or negative to disabled it. Notice: If this option is in use then the File and FTP components will limit before any sorting. For example if you have 100000 files and use maxMessagesPerPoll=500, then only the first 500 files will be picked up, and then sorted. You can use the eagerMaxMessagesPerPoll option and set this to false to allow to scan all files first and then sort afterwards.",title:"Max Messages Per Poll",required:!1,deprecated:!1},minDepth:{kind:"parameter",type:"integer",description:"The minimum depth to start processing when recursively processing a directory. Using minDepth=1 means the base directory. Using minDepth=2 means the first sub directory.",title:"Min Depth",required:!1,deprecated:!1},move:{kind:"parameter",type:"string",description:"Expression (such as Simple Language) used to dynamically set the filename when moving it after processing. To move files into a .done subdirectory just enter .done.",title:"Move",required:!1,deprecated:!1},exclusiveReadLockStrategy:{kind:"parameter",type:"object",description:"Pluggable read-lock as a org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy implementation.",title:"Exclusive Read Lock Strategy",required:!1,deprecated:!1},readLock:{kind:"parameter",type:"string",defaultValue:"none",enum:["none","markerFile","fileLock","rename","changed","idempotent","idempotent-changed","idempotent-rename"],description:"Used by consumer, to only poll the files if it has exclusive read-lock on the file (i.e. the file is not in-progress or being written). Camel will wait until the file lock is granted. This option provides the build in strategies: - none - No read lock is in use - markerFile - Camel creates a marker file (fileName.camelLock) and then holds a lock on it. This option is not available for the FTP component - changed - Changed is using file length/modification timestamp to detect whether the file is currently being copied or not. Will at least use 1 sec to determine this, so this option cannot consume files as fast as the others, but can be more reliable as the JDK IO API cannot always determine whether a file is currently being used by another process. The option readLockCheckInterval can be used to set the check frequency. - fileLock - is for using java.nio.channels.FileLock. This option is not avail for Windows OS and the FTP component. This approach should be avoided when accessing a remote file system via a mount/share unless that file system supports distributed file locks. - rename - rename is for using a try to rename the file as a test if we can get exclusive read-lock. - idempotent - (only for file component) idempotent is for using a idempotentRepository as the read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-changed - (only for file component) idempotent-changed is for using a idempotentRepository and changed as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-rename - (only for file component) idempotent-rename is for using a idempotentRepository and rename as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that.Notice: The various read locks is not all suited to work in clustered mode, where concurrent consumers on different nodes is competing for the same files on a shared file system. The markerFile using a close to atomic operation to create the empty marker file, but its not guaranteed to work in a cluster. The fileLock may work better but then the file system need to support distributed file locks, and so on. Using the idempotent read lock can support clustering if the idempotent repository supports clustering, such as Hazelcast Component or Infinispan.",title:"Read Lock",required:!1,deprecated:!1},readLockCheckInterval:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Interval in millis for the read-lock, if supported by the read lock. This interval is used for sleeping between attempts to acquire the read lock. For example when using the changed read lock, you can set a higher interval period to cater for slow writes. The default of 1 sec. may be too fast if the producer is very slow writing the file. Notice: For FTP the default readLockCheckInterval is 5000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Check Interval",required:!1,deprecated:!1},readLockDeleteOrphanLockFiles:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not read lock with marker files should upon startup delete any orphan read lock files, which may have been left on the file system, if Camel was not properly shutdown (such as a JVM crash). If turning this option to false then any orphaned lock file will cause Camel to not attempt to pickup that file, this could also be due another node is concurrently reading files from the same shared directory.",title:"Read Lock Delete Orphan Lock Files",required:!1,deprecated:!1},readLockLoggingLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level used when a read lock could not be acquired. By default a DEBUG is logged. You can change this level, for example to OFF to not have any logging. This option is only applicable for readLock of types: changed, fileLock, idempotent, idempotent-changed, idempotent-rename, rename.",title:"Read Lock Logging Level",required:!1,deprecated:!1},readLockMarkerFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use marker file with the changed, rename, or exclusive read lock types. By default a marker file is used as well to guard against other processes picking up the same files. This behavior can be turned off by setting this option to false. For example if you do not want to write marker files to the file systems by the Camel application.",title:"Read Lock Marker File",required:!1,deprecated:!1},readLockMinAge:{kind:"parameter",type:"integer",defaultValue:"0",description:"This option is applied only for readLock=changed. It allows to specify a minimum age the file must be before attempting to acquire the read lock. For example use readLockMinAge=300s to require the file is at last 5 minutes old. This can speedup the changed read lock as it will only attempt to acquire files which are at least that given age.",title:"Read Lock Min Age",required:!1,deprecated:!1},readLockMinLength:{kind:"parameter",type:"integer",defaultValue:"1",description:"This option is applied only for readLock=changed. It allows you to configure a minimum file length. By default Camel expects the file to contain data, and thus the default value is 1. You can set this option to zero, to allow consuming zero-length files.",title:"Read Lock Min Length",required:!1,deprecated:!1},readLockRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file is succeeded and a commit happens. By default the file is not removed which ensures that any race-condition do not occur so another active node may attempt to grab the file. Instead the idempotent repository may support eviction strategies that you can configure to evict the file name entry after X minutes - this ensures no problems with race conditions. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Remove On Commit",required:!1,deprecated:!1},readLockRemoveOnRollback:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file failed and a rollback happens. If this option is false, then the file name entry is confirmed (as if the file did a commit).",title:"Read Lock Remove On Rollback",required:!1,deprecated:!1},readLockTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Optional timeout in millis for the read-lock, if supported by the read-lock. If the read-lock could not be granted and the timeout triggered, then Camel will skip the file. At next poll Camel, will try the file again, and this time maybe the read-lock could be granted. Use a value of 0 or lower to indicate forever. Currently fileLock, changed and rename support the timeout. Notice: For FTP the default readLockTimeout value is 20000 instead of 10000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Timeout",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},sdd:{kind:"parameter",type:"string",description:"part of service SAS token",title:"Sdd",required:!1,deprecated:!1},se:{kind:"parameter",type:"string",description:"part of SAS token",title:"Se",required:!1,deprecated:!1},si:{kind:"parameter",type:"string",description:"part of service SAS token",title:"Si",required:!1,deprecated:!1},sig:{kind:"parameter",type:"string",description:"part of SAS token",title:"Sig",required:!1,deprecated:!1},sip:{kind:"parameter",type:"string",description:"part of SAS token",title:"Sip",required:!1,deprecated:!1},sp:{kind:"parameter",type:"string",description:"part of SAS token",title:"Sp",required:!1,deprecated:!1},spr:{kind:"parameter",type:"string",description:"part of SAS token",title:"Spr",required:!1,deprecated:!1},sr:{kind:"parameter",type:"string",description:"part of service SAS token",title:"Sr",required:!1,deprecated:!1},srt:{kind:"parameter",type:"string",description:"part of SAS token",title:"Srt",required:!1,deprecated:!1},ss:{kind:"parameter",type:"string",description:"part of account SAS token",title:"Ss",required:!1,deprecated:!1},st:{kind:"parameter",type:"string",description:"part of SAS token",title:"St",required:!1,deprecated:!1},sv:{kind:"parameter",type:"string",description:"part of SAS token",title:"Sv",required:!1,deprecated:!1},shuffle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To shuffle the list of files (sort in random order)",title:"Shuffle",required:!1,deprecated:!1},sortBy:{kind:"parameter",type:"string",description:"Built-in sort by using the File Language. Supports nested sorts, so you can have a sort by file name and as a 2nd group sort by modified date.",title:"Sort By",required:!1,deprecated:!1},sorter:{kind:"parameter",type:"object",description:"Pluggable sorter as a java.util.Comparator class.",title:"Sorter",required:!1,deprecated:!1}}},"azure-key-vault":{type:"object",title:"Azure Key Vault",group:"cloud,cloud",icon:"generic24.png",description:"Manage secrets and keys in Azure Key Vault Service",properties:{vaultName:{kind:"path",type:"string",description:"Vault Name to be used",title:"Vault Name",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["createSecret","getSecret","deleteSecret","purgeDeletedSecret"],description:"Operation to be performed",title:"Operation",required:!1,deprecated:!1},secretClient:{kind:"parameter",type:"object",description:"Instance of Secret client",title:"Secret Client",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client Id to be used",title:"Client Id",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client Secret to be used",title:"Client Secret",required:!1,deprecated:!1},tenantId:{kind:"parameter",type:"string",description:"Tenant Id to be used",title:"Tenant Id",required:!1,deprecated:!1}}},"azure-servicebus":{type:"object",title:"Azure ServiceBus",group:"cloud,messaging",icon:"generic24.png",description:"Send and receive messages to/from Azure Service Bus.",properties:{topicOrQueueName:{kind:"path",type:"string",description:"Selected topic name or the queue name, that is depending on serviceBusType config. For example if serviceBusType=queue, then this will be the queue name and if serviceBusType=topic, this will be the topic name.",title:"Topic Or Queue Name",required:!1,deprecated:!1},amqpRetryOptions:{kind:"parameter",type:"object",description:"Sets the retry options for Service Bus clients. If not specified, the default retry options are used.",title:"Amqp Retry Options",required:!1,deprecated:!1},amqpTransportType:{kind:"parameter",type:"object",defaultValue:"AMQP",enum:["Amqp","AmqpWebSockets"],description:"Sets the transport type by which all the communication with Azure Service Bus occurs. Default value is AMQP.",title:"Amqp Transport Type",required:!1,deprecated:!1},clientOptions:{kind:"parameter",type:"object",description:"Sets the ClientOptions to be sent from the client built from this builder, enabling customization of certain properties, as well as support the addition of custom header information.",title:"Client Options",required:!1,deprecated:!1},proxyOptions:{kind:"parameter",type:"object",description:"Sets the proxy configuration to use for ServiceBusSenderAsyncClient. When a proxy is configured, AMQP_WEB_SOCKETS must be used for the transport type.",title:"Proxy Options",required:!1,deprecated:!1},serviceBusType:{kind:"parameter",type:"object",defaultValue:"queue",enum:["queue","topic"],description:"The service bus type of connection to execute. Queue is for typical queue option and topic for subscription based model.",title:"Service Bus Type",required:!0,deprecated:!1},consumerOperation:{kind:"parameter",type:"object",defaultValue:"receiveMessages",enum:["receiveMessages","peekMessages"],description:"Sets the desired operation to be used in the consumer",title:"Consumer Operation",required:!1,deprecated:!1},disableAutoComplete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Disables auto-complete and auto-abandon of received messages. By default, a successfully processed message is completed. If an error happens when the message is abandoned.",title:"Disable Auto Complete",required:!1,deprecated:!1},maxAutoLockRenewDuration:{kind:"parameter",type:"object",defaultValue:"5m",description:"Sets the amount of time to continue auto-renewing the lock. Setting ZERO disables auto-renewal. For ServiceBus receive mode (RECEIVE_AND_DELETE RECEIVE_AND_DELETE), auto-renewal is disabled.",title:"Max Auto Lock Renew Duration",required:!1,deprecated:!1},peekNumMaxMessages:{kind:"parameter",type:"integer",description:"Set the max number of messages to be peeked during the peek operation.",title:"Peek Num Max Messages",required:!1,deprecated:!1},prefetchCount:{kind:"parameter",type:"integer",description:"Sets the prefetch count of the receiver. For both PEEK_LOCK PEEK_LOCK and RECEIVE_AND_DELETE RECEIVE_AND_DELETE receive modes the default value is 1. Prefetch speeds up the message flow by aiming to have a message readily available for local retrieval when and before the application asks for one using receive message. Setting a non-zero value will prefetch that number of messages. Setting the value to zero turns prefetch off.",title:"Prefetch Count",required:!1,deprecated:!1},receiverAsyncClient:{kind:"parameter",type:"object",description:"Sets the receiverAsyncClient in order to consume messages by the consumer",title:"Receiver Async Client",required:!1,deprecated:!1},serviceBusReceiveMode:{kind:"parameter",type:"object",defaultValue:"PEEK_LOCK",enum:["PEEK_LOCK","RECEIVE_AND_DELETE"],description:"Sets the receive mode for the receiver.",title:"Service Bus Receive Mode",required:!1,deprecated:!1},subQueue:{kind:"parameter",type:"object",enum:["NONE","DEAD_LETTER_QUEUE","TRANSFER_DEAD_LETTER_QUEUE"],description:"Sets the type of the SubQueue to connect to.",title:"Sub Queue",required:!1,deprecated:!1},subscriptionName:{kind:"parameter",type:"string",description:"Sets the name of the subscription in the topic to listen to. topicOrQueueName and serviceBusType=topic must also be set. This property is required if serviceBusType=topic and the consumer is in use.",title:"Subscription Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},producerOperation:{kind:"parameter",type:"object",defaultValue:"sendMessages",enum:["sendMessages","scheduleMessages"],description:"Sets the desired operation to be used in the producer",title:"Producer Operation",required:!1,deprecated:!1},scheduledEnqueueTime:{kind:"parameter",type:"object",description:"Sets OffsetDateTime at which the message should appear in the Service Bus queue or topic.",title:"Scheduled Enqueue Time",required:!1,deprecated:!1},senderAsyncClient:{kind:"parameter",type:"object",description:"Sets SenderAsyncClient to be used in the producer.",title:"Sender Async Client",required:!1,deprecated:!1},serviceBusTransactionContext:{kind:"parameter",type:"object",description:"Represents transaction in service. This object just contains transaction id.",title:"Service Bus Transaction Context",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionString:{kind:"parameter",type:"string",description:"Sets the connection string for a Service Bus namespace or a specific Service Bus resource.",title:"Connection String",required:!1,deprecated:!1},fullyQualifiedNamespace:{kind:"parameter",type:"string",description:"Fully Qualified Namespace of the service bus",title:"Fully Qualified Namespace",required:!1,deprecated:!1},tokenCredential:{kind:"parameter",type:"object",description:"A TokenCredential for Azure AD authentication.",title:"Token Credential",required:!1,deprecated:!1}}},"azure-storage-blob":{type:"object",title:"Azure Storage Blob Service",group:"cloud,file",icon:"generic24.png",description:"Store and retrieve blobs from Azure Storage Blob Service.",properties:{accountName:{kind:"path",type:"string",description:"Azure account name to be used for authentication with azure blob services",title:"Account Name",required:!1,deprecated:!1},containerName:{kind:"path",type:"string",description:"The blob container name",title:"Container Name",required:!1,deprecated:!1},blobName:{kind:"parameter",type:"string",description:"The blob name, to consume specific blob from a container. However, on producer it is only required for the operations on the blob level",title:"Blob Name",required:!1,deprecated:!1},blobOffset:{kind:"parameter",type:"integer",defaultValue:"0",description:"Set the blob offset for the upload or download operations, default is 0",title:"Blob Offset",required:!1,deprecated:!1},blobServiceClient:{kind:"parameter",type:"object",description:"Client to a storage account. This client does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs and containers. This client contains operations on a service account. Operations on a container are available on BlobContainerClient through getBlobContainerClient(String), and operations on a blob are available on BlobClient through getBlobContainerClient(String).getBlobClient(String).",title:"Blob Service Client",required:!1,deprecated:!1},blobType:{kind:"parameter",type:"object",defaultValue:"blockblob",enum:["blockblob","appendblob","pageblob"],description:"The blob type in order to initiate the appropriate settings for each blob type",title:"Blob Type",required:!1,deprecated:!1},closeStreamAfterRead:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Close the stream after read or keep it open, default is true",title:"Close Stream After Read",required:!1,deprecated:!1},credentials:{kind:"parameter",type:"object",description:"StorageSharedKeyCredential can be injected to create the azure client, this holds the important authentication information",title:"Credentials",required:!1,deprecated:!1},credentialType:{kind:"parameter",type:"object",defaultValue:"AZURE_IDENTITY",enum:["SHARED_ACCOUNT_KEY","SHARED_KEY_CREDENTIAL","AZURE_IDENTITY"],description:"Determines the credential strategy to adopt",title:"Credential Type",required:!1,deprecated:!1},dataCount:{kind:"parameter",type:"integer",description:"How many bytes to include in the range. Must be greater than or equal to 0 if specified.",title:"Data Count",required:!1,deprecated:!1},fileDir:{kind:"parameter",type:"string",description:"The file directory where the downloaded blobs will be saved to, this can be used in both, producer and consumer",title:"File Dir",required:!1,deprecated:!1},maxResultsPerPage:{kind:"parameter",type:"integer",description:"Specifies the maximum number of blobs to return, including all BlobPrefix elements. If the request does not specify maxResultsPerPage or specifies a value greater than 5,000, the server will return up to 5,000 items.",title:"Max Results Per Page",required:!1,deprecated:!1},maxRetryRequests:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies the maximum number of additional HTTP Get requests that will be made while reading the data from a response body.",title:"Max Retry Requests",required:!1,deprecated:!1},prefix:{kind:"parameter",type:"string",description:"Filters the results to return only blobs whose names begin with the specified prefix. May be null to return all blobs.",title:"Prefix",required:!1,deprecated:!1},regex:{kind:"parameter",type:"string",description:"Filters the results to return only blobs whose names match the specified regular expression. May be null to return all if both prefix and regex are set, regex takes the priority and prefix is ignored.",title:"Regex",required:!1,deprecated:!1},serviceClient:{kind:"parameter",type:"object",description:"Client to a storage account. This client does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. It may also be used to construct URLs to blobs and containers. This client contains operations on a service account. Operations on a container are available on BlobContainerClient through BlobServiceClient#getBlobContainerClient(String), and operations on a blob are available on BlobClient through BlobContainerClient#getBlobClient(String).",title:"Service Client",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"object",description:"An optional timeout value beyond which a RuntimeException will be raised.",title:"Timeout",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},blobSequenceNumber:{kind:"parameter",type:"integer",defaultValue:"0",description:"A user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 263 - 1.The default value is 0.",title:"Blob Sequence Number",required:!1,deprecated:!1},blockListType:{kind:"parameter",type:"object",defaultValue:"COMMITTED",enum:["committed","uncommitted","all"],description:"Specifies which type of blocks to return.",title:"Block List Type",required:!1,deprecated:!1},changeFeedContext:{kind:"parameter",type:"object",description:"When using getChangeFeed producer operation, this gives additional context that is passed through the Http pipeline during the service call.",title:"Change Feed Context",required:!1,deprecated:!1},changeFeedEndTime:{kind:"parameter",type:"object",description:"When using getChangeFeed producer operation, this filters the results to return events approximately before the end time. Note: A few events belonging to the next hour can also be returned. A few events belonging to this hour can be missing; to ensure all events from the hour are returned, round the end time up by an hour.",title:"Change Feed End Time",required:!1,deprecated:!1},changeFeedStartTime:{kind:"parameter",type:"object",description:"When using getChangeFeed producer operation, this filters the results to return events approximately after the start time. Note: A few events belonging to the previous hour can also be returned. A few events belonging to this hour can be missing; to ensure all events from the hour are returned, round the start time down by an hour.",title:"Change Feed Start Time",required:!1,deprecated:!1},closeStreamAfterWrite:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Close the stream after write or keep it open, default is true",title:"Close Stream After Write",required:!1,deprecated:!1},commitBlockListLater:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When is set to true, the staged blocks will not be committed directly.",title:"Commit Block List Later",required:!1,deprecated:!1},createAppendBlob:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When is set to true, the append blocks will be created when committing append blocks.",title:"Create Append Blob",required:!1,deprecated:!1},createPageBlob:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When is set to true, the page blob will be created when uploading page blob.",title:"Create Page Blob",required:!1,deprecated:!1},downloadLinkExpiration:{kind:"parameter",type:"integer",description:"Override the default expiration (millis) of URL download link.",title:"Download Link Expiration",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"listBlobContainers",enum:["listBlobContainers","createBlobContainer","deleteBlobContainer","listBlobs","getBlob","deleteBlob","downloadBlobToFile","downloadLink","uploadBlockBlob","stageBlockBlobList","commitBlobBlockList","getBlobBlockList","createAppendBlob","commitAppendBlob","createPageBlob","uploadPageBlob","resizePageBlob","clearPageBlob","getPageBlobRanges"],description:"The blob operation that can be used with this component on the producer",title:"Operation",required:!1,deprecated:!1},pageBlobSize:{kind:"parameter",type:"integer",defaultValue:"512",description:"Specifies the maximum size for the page blob, up to 8 TB. The page blob size must be aligned to a 512-byte boundary.",title:"Page Blob Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the associated azure account name to be used for authentication with azure blob services",title:"Access Key",required:!1,deprecated:!1},sourceBlobAccessKey:{kind:"parameter",type:"string",description:"Source Blob Access Key: for copyblob operation, sadly, we need to have an accessKey for the source blob we want to copy Passing an accessKey as header, it's unsafe so we could set as key.",title:"Source Blob Access Key",required:!1,deprecated:!1}}},"azure-storage-datalake":{type:"object",title:"Azure Storage Datalake Service",group:"cloud,file,bigdata",icon:"generic24.png",description:"Sends and receives files to/from Azure DataLake Storage.",properties:{accountName:{kind:"path",type:"string",description:"name of the azure account",title:"Account Name",required:!1,deprecated:!1},fileSystemName:{kind:"path",type:"string",description:"name of filesystem to be used",title:"File System Name",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"client id for azure account",title:"Client Id",required:!1,deprecated:!1},close:{kind:"parameter",type:"boolean",description:"Whether or not a file changed event raised indicates completion (true) or modification (false)",title:"Close",required:!1,deprecated:!1},closeStreamAfterRead:{kind:"parameter",type:"boolean",description:"check for closing stream after read",title:"Close Stream After Read",required:!1,deprecated:!1},dataCount:{kind:"parameter",type:"integer",description:"count number of bytes to download",title:"Data Count",required:!1,deprecated:!1},dataLakeServiceClient:{kind:"parameter",type:"object",description:"service client of datalake",title:"Data Lake Service Client",required:!1,deprecated:!1},directoryName:{kind:"parameter",type:"string",description:"directory of the file to be handled in component",title:"Directory Name",required:!1,deprecated:!1},downloadLinkExpiration:{kind:"parameter",type:"integer",description:"download link expiration time",title:"Download Link Expiration",required:!1,deprecated:!1},expression:{kind:"parameter",type:"string",description:"expression for queryInputStream",title:"Expression",required:!1,deprecated:!1},fileDir:{kind:"parameter",type:"string",description:"directory of file to do operations in the local system",title:"File Dir",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"name of file to be handled in component",title:"File Name",required:!1,deprecated:!1},fileOffset:{kind:"parameter",type:"integer",description:"offset position in file for different operations",title:"File Offset",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"integer",description:"maximum number of results to show at a time",title:"Max Results",required:!1,deprecated:!1},maxRetryRequests:{kind:"parameter",type:"integer",description:"no of retries to a given request",title:"Max Retry Requests",required:!1,deprecated:!1},openOptions:{kind:"parameter",type:"object",description:"set open options for creating file",title:"Open Options",required:!1,deprecated:!1},path:{kind:"parameter",type:"string",description:"path in azure datalake for operations",title:"Path",required:!1,deprecated:!1},permission:{kind:"parameter",type:"string",description:"permission string for the file",title:"Permission",required:!1,deprecated:!1},position:{kind:"parameter",type:"integer",description:"This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.",title:"Position",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",description:"recursively include all paths",title:"Recursive",required:!1,deprecated:!1},regex:{kind:"parameter",type:"string",description:"regular expression for matching file names",title:"Regex",required:!1,deprecated:!1},retainUncommitedData:{kind:"parameter",type:"boolean",description:"Whether or not uncommitted data is to be retained after the operation",title:"Retain Uncommited Data",required:!1,deprecated:!1},serviceClient:{kind:"parameter",type:"object",description:"datalake service client for azure storage datalake",title:"Service Client",required:!1,deprecated:!1},sharedKeyCredential:{kind:"parameter",type:"object",description:"shared key credential for azure datalake gen2",title:"Shared Key Credential",required:!1,deprecated:!1},tenantId:{kind:"parameter",type:"string",description:"tenant id for azure account",title:"Tenant Id",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"object",description:"Timeout for operation",title:"Timeout",required:!1,deprecated:!1},umask:{kind:"parameter",type:"string",description:"umask permission for file",title:"Umask",required:!1,deprecated:!1},userPrincipalNameReturned:{kind:"parameter",type:"boolean",description:"whether or not to use upn",title:"User Principal Name Returned",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"listFileSystem",enum:["listFileSystem","listFiles"],description:"operation to be performed",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accountKey:{kind:"parameter",type:"string",description:"account key for authentication",title:"Account Key",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"client secret for azure account",title:"Client Secret",required:!1,deprecated:!1},clientSecretCredential:{kind:"parameter",type:"object",description:"client secret credential for authentication",title:"Client Secret Credential",required:!1,deprecated:!1},sasCredential:{kind:"parameter",type:"object",description:"SAS token credential",title:"Sas Credential",required:!1,deprecated:!1},sasSignature:{kind:"parameter",type:"string",description:"SAS token signature",title:"Sas Signature",required:!1,deprecated:!1},useDefaultIdentity:{kind:"parameter",type:"boolean",description:"Use default identity",title:"Use Default Identity",required:!1,deprecated:!1}}},"azure-storage-queue":{type:"object",title:"Azure Storage Queue Service",group:"cloud,messaging",icon:"generic24.png",description:"Stores and retrieves messages to/from Azure Storage Queue.",properties:{accountName:{kind:"path",type:"string",description:"Azure account name to be used for authentication with azure queue services",title:"Account Name",required:!1,deprecated:!1},queueName:{kind:"path",type:"string",description:"The queue resource name",title:"Queue Name",required:!1,deprecated:!1},serviceClient:{kind:"parameter",type:"object",description:"Service client to a storage account to interact with the queue service. This client does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. This client contains all the operations for interacting with a queue account in Azure Storage. Operations allowed by the client are creating, listing, and deleting queues, retrieving and updating properties of the account, and retrieving statistics of the account.",title:"Service Client",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},createQueue:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When is set to true, the queue will be automatically created when sending messages to the queue.",title:"Create Queue",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listQueues","createQueue","deleteQueue","clearQueue","sendMessage","deleteMessage","receiveMessages","peekMessages","updateMessage"],description:"Queue service operation hint to the producer",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},maxMessages:{kind:"parameter",type:"integer",defaultValue:"1",description:"Maximum number of messages to get, if there are less messages exist in the queue than requested all the messages will be returned. If left empty only 1 message will be retrieved, the allowed range is 1 to 32 messages.",title:"Max Messages",required:!1,deprecated:!1},messageId:{kind:"parameter",type:"string",description:"The ID of the message to be deleted or updated.",title:"Message Id",required:!1,deprecated:!1},popReceipt:{kind:"parameter",type:"string",description:"Unique identifier that must match for the message to be deleted or updated.",title:"Pop Receipt",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"object",description:"An optional timeout applied to the operation. If a response is not returned before the timeout concludes a RuntimeException will be thrown.",title:"Timeout",required:!1,deprecated:!1},timeToLive:{kind:"parameter",type:"object",description:"How long the message will stay alive in the queue. If unset the value will default to 7 days, if -1 is passed the message will not expire. The time to live must be -1 or any positive number. The format should be in this form: PnDTnHnMn.nS., e.g: PT20.345S -- parses as 20.345 seconds, P2D -- parses as 2 days However, in case you are using EndpointDsl/ComponentDsl, you can do something like Duration.ofSeconds() since these Java APIs are typesafe.",title:"Time To Live",required:!1,deprecated:!1},visibilityTimeout:{kind:"parameter",type:"object",description:"The timeout period for how long the message is invisible in the queue. The timeout must be between 1 seconds and 7 days. The format should be in this form: PnDTnHnMn.nS., e.g: PT20.345S -- parses as 20.345 seconds, P2D -- parses as 2 days However, in case you are using EndpointDsl/ComponentDsl, you can do something like Duration.ofSeconds() since these Java APIs are typesafe.",title:"Visibility Timeout",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the associated azure account name to be used for authentication with azure queue services",title:"Access Key",required:!1,deprecated:!1},credentials:{kind:"parameter",type:"object",description:"StorageSharedKeyCredential can be injected to create the azure client, this holds the important authentication information",title:"Credentials",required:!1,deprecated:!1}}},bean:{type:"object",title:"Bean",group:"core,script",icon:"bean24.png",description:"Invoke methods of Java beans stored in Camel registry.",properties:{beanName:{kind:"path",type:"string",description:"Sets the name of the bean to invoke",title:"Bean Name",required:!0,deprecated:!1},method:{kind:"parameter",type:"string",description:"Sets the name of the method to invoke on the bean",title:"Method",required:!1,deprecated:!1},scope:{kind:"parameter",type:"object",defaultValue:"Singleton",enum:["Singleton","Request","Prototype"],description:"Scope of bean. When using singleton scope (default) the bean is created or looked up only once and reused for the lifetime of the endpoint. The bean should be thread-safe in case concurrent threads is calling the bean at the same time. When using request scope the bean is created or looked up once per request (exchange). This can be used if you want to store state on a bean while processing a request and you want to call the same bean instance multiple times while processing the request. The bean does not have to be thread-safe as the instance is only called from the same request. When using prototype scope, then the bean will be looked up or created per call. However in case of lookup then this is delegated to the bean registry such as Spring or CDI (if in use), which depends on their configuration can act as either singleton or prototype scope. so when using prototype then this depends on the delegated registry.",title:"Scope",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},parameters:{kind:"parameter",type:"object",description:"Used for configuring additional properties on the bean",title:"Parameters",required:!1,deprecated:!1}}},"bean-validator":{type:"object",title:"Bean Validator",group:"validation",icon:"generic24.png",description:"Validate the message body using the Java Bean Validation API.",properties:{label:{kind:"path",type:"string",description:"Where label is an arbitrary text value describing the endpoint",title:"Label",required:!0,deprecated:!1},group:{kind:"parameter",type:"string",defaultValue:"jakarta.validation.groups.Default",description:"To use a custom validation group",title:"Group",required:!1,deprecated:!1},ignoreXmlConfiguration:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to ignore data from the META-INF/validation.xml file.",title:"Ignore Xml Configuration",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},constraintValidatorFactory:{kind:"parameter",type:"object",description:"To use a custom ConstraintValidatorFactory",title:"Constraint Validator Factory",required:!1,deprecated:!1},messageInterpolator:{kind:"parameter",type:"object",description:"To use a custom MessageInterpolator",title:"Message Interpolator",required:!1,deprecated:!1},traversableResolver:{kind:"parameter",type:"object",description:"To use a custom TraversableResolver",title:"Traversable Resolver",required:!1,deprecated:!1},validationProviderResolver:{kind:"parameter",type:"object",description:"To use a a custom ValidationProviderResolver",title:"Validation Provider Resolver",required:!1,deprecated:!1},validatorFactory:{kind:"parameter",type:"object",description:"To use a custom ValidatorFactory",title:"Validator Factory",required:!1,deprecated:!1}}},bonita:{type:"object",title:"Bonita",group:"workflow",icon:"generic24.png",description:"Communicate with a remote Bonita BPM process engine.",properties:{operation:{kind:"path",type:"object",enum:["startCase"],description:"Operation to use",title:"Operation",required:!0,deprecated:!1},hostname:{kind:"parameter",type:"string",defaultValue:"localhost",description:"Hostname where Bonita engine runs",title:"Hostname",required:!1,deprecated:!1},port:{kind:"parameter",type:"string",defaultValue:"8080",description:"Port of the server hosting Bonita engine",title:"Port",required:!1,deprecated:!1},processName:{kind:"parameter",type:"string",description:"Name of the process involved in the operation",title:"Process Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to authenticate to Bonita engine.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to authenticate to Bonita engine.",title:"Username",required:!1,deprecated:!1}}},box:{type:"object",title:"Box",group:"cloud,file,api",icon:"generic24.png",description:"Upload, download and manage files, folders, groups, collaborations, etc. on box.com.",properties:{apiName:{kind:"path",type:"object",enum:["COLLABORATIONS","COMMENTS","EVENT_LOGS","FILES","FOLDERS","GROUPS","EVENTS","SEARCH","TASKS","USERS"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Box application client ID",title:"Client Id",required:!1,deprecated:!1},enterpriseId:{kind:"parameter",type:"string",description:"The enterprise ID to use for an App Enterprise.",title:"Enterprise Id",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},userId:{kind:"parameter",type:"string",description:"The user ID to use for an App User.",title:"User Id",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},httpParams:{kind:"parameter",type:"object",description:"Custom HTTP params for settings like proxy host",title:"Http Params",required:!1,deprecated:!1},authenticationType:{kind:"parameter",type:"string",defaultValue:"APP_USER_AUTHENTICATION",description:"The type of authentication for connection. Types of Authentication: STANDARD_AUTHENTICATION - OAuth 2.0 (3-legged) SERVER_AUTHENTICATION - OAuth 2.0 with JSON Web Tokens",title:"Authentication Type",required:!1,deprecated:!1},accessTokenCache:{kind:"parameter",type:"object",description:"Custom Access Token Cache for storing and retrieving access tokens.",title:"Access Token Cache",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Box application client secret",title:"Client Secret",required:!1,deprecated:!1},encryptionAlgorithm:{kind:"parameter",type:"object",defaultValue:"RSA_SHA_256",enum:["RSA_SHA_256","RSA_SHA_384","RSA_SHA_512"],description:"The type of encryption algorithm for JWT. Supported Algorithms: RSA_SHA_256 RSA_SHA_384 RSA_SHA_512",title:"Encryption Algorithm",required:!1,deprecated:!1},maxCacheEntries:{kind:"parameter",type:"integer",defaultValue:"100",description:"The maximum number of access tokens in cache.",title:"Max Cache Entries",required:!1,deprecated:!1},privateKeyFile:{kind:"parameter",type:"string",description:"The private key for generating the JWT signature.",title:"Private Key File",required:!1,deprecated:!1},privateKeyPassword:{kind:"parameter",type:"string",description:"The password for the private key.",title:"Private Key Password",required:!1,deprecated:!1},publicKeyId:{kind:"parameter",type:"string",description:"The ID for public key for validating the JWT signature.",title:"Public Key Id",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters.",title:"Ssl Context Parameters",required:!1,deprecated:!1},userName:{kind:"parameter",type:"string",description:"Box user name, MUST be provided",title:"User Name",required:!1,deprecated:!1},userPassword:{kind:"parameter",type:"string",description:"Box user password, MUST be provided if authSecureStorage is not set, or returns null on first call",title:"User Password",required:!1,deprecated:!1}}},braintree:{type:"object",title:"Braintree",group:"saas",icon:"generic24.png",description:"Process payments using Braintree Payments.",properties:{apiName:{kind:"path",type:"object",enum:["ADD_ON","ADDRESS","CLIENT_TOKEN","CREDIT_CARD_VERIFICATION","CUSTOMER","DISCOUNT","DISPUTE","DOCUMENT_UPLOAD","MERCHANT_ACCOUNT","PAYMENT_METHOD","PAYMENT_METHOD_NONCE","OAUTH","PLAN","REPORT","SETTLEMENT_BATCH_SUMMARY","SUBSCRIPTION","TRANSACTION","US_BANK_ACCOUNT","WEBHOOK_NOTIFICATION"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",enum:["accept","addFileEvidence","addTextEvidence","cancel","cancelRelease","cloneTransaction","create","createForCurrency","credit","delete","fetchMerchantAccounts","finalize","find","generate","grant","holdInEscrow","parse","refund","releaseFromEscrow","removeEvidence","retryCharge","revoke","sale","search","submitForPartialSettlement","submitForSettlement","transactionLevelFees","update","updateDetails","verify","voidTransaction"],description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},environment:{kind:"parameter",type:"string",description:"The environment Either SANDBOX or PRODUCTION",title:"Environment",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},merchantId:{kind:"parameter",type:"string",description:"The merchant id provided by Braintree.",title:"Merchant Id",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},httpReadTimeout:{kind:"parameter",type:"integer",description:"Set read timeout for http calls.",title:"Http Read Timeout",required:!1,deprecated:!1},httpLogLevel:{kind:"parameter",type:"string",enum:["OFF","SEVERE","WARNING","INFO","CONFIG","FINE","FINER","FINEST","ALL"],description:"Set logging level for http calls, see java.util.logging.Level",title:"Http Log Level",required:!1,deprecated:!1},httpLogName:{kind:"parameter",type:"string",defaultValue:"Braintree",description:"Set log category to use to log http calls.",title:"Http Log Name",required:!1,deprecated:!1},logHandlerEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to enable the BraintreeLogHandler. It may be desirable to set this to 'false' where an existing JUL - SLF4J logger bridge is on the classpath. This option can also be configured globally on the BraintreeComponent.",title:"Log Handler Enabled",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"The proxy host",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"The proxy port",title:"Proxy Port",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"The access token granted by a merchant to another in order to process transactions on their behalf. Used in place of environment, merchant id, public key and private key fields.",title:"Access Token",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"string",description:"The private key provided by Braintree.",title:"Private Key",required:!1,deprecated:!1},publicKey:{kind:"parameter",type:"string",description:"The public key provided by Braintree.",title:"Public Key",required:!1,deprecated:!1}}},browse:{type:"object",title:"Browse",group:"core,monitoring",icon:"generic24.png",description:"Inspect the messages received on endpoints supporting BrowsableEndpoint.",properties:{name:{kind:"path",type:"string",description:"A name which can be any string to uniquely identify the endpoint",title:"Name",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"caffeine-cache":{type:"object",title:"Caffeine Cache",group:"cache,clustering",icon:"generic24.png",description:"Perform caching operations using Caffeine Cache.",properties:{cacheName:{kind:"path",type:"string",description:"Cache name",title:"Cache Name",required:!0,deprecated:!1},action:{kind:"parameter",type:"string",enum:["GET","GET_ALL","PUT","PUT_ALL","INVALIDATE","INVALIDATE_ALL","CLEANUP","AS_MAP"],description:"To configure the default cache action. If an action is set in the message header, then the operation from the header takes precedence.",title:"Action",required:!1,deprecated:!1},createCacheIfNotExist:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatic create the Caffeine cache if none has been configured or exists in the registry.",title:"Create Cache If Not Exist",required:!1,deprecated:!1},evictionType:{kind:"parameter",type:"object",defaultValue:"SIZE_BASED",enum:["size_based","time_based"],description:"Set the eviction Type for this cache",title:"Eviction Type",required:!1,deprecated:!1},expireAfterAccessTime:{kind:"parameter",type:"integer",defaultValue:"300",description:"Specifies that each entry should be automatically removed from the cache once a fixed duration has elapsed after the entry's creation, the most recent replacement of its value, or its last read. Access time is reset by all cache read and write operations. The unit is in seconds.",title:"Expire After Access Time",required:!1,deprecated:!1},expireAfterWriteTime:{kind:"parameter",type:"integer",defaultValue:"300",description:"Specifies that each entry should be automatically removed from the cache once a fixed duration has elapsed after the entry's creation, or the most recent replacement of its value. The unit is in seconds.",title:"Expire After Write Time",required:!1,deprecated:!1},initialCapacity:{kind:"parameter",type:"integer",description:"Sets the minimum total size for the internal data structures. Providing a large enough estimate at construction time avoids the need for expensive resizing operations later, but setting this value unnecessarily high wastes memory.",title:"Initial Capacity",required:!1,deprecated:!1},key:{kind:"parameter",type:"string",description:"To configure the default action key. If a key is set in the message header, then the key from the header takes precedence.",title:"Key",required:!1,deprecated:!1},maximumSize:{kind:"parameter",type:"integer",description:"Specifies the maximum number of entries the cache may contain. Note that the cache may evict an entry before this limit is exceeded or temporarily exceed the threshold while evicting. As the cache size grows close to the maximum, the cache evicts entries that are less likely to be used again. For example, the cache may evict an entry because it hasn't been used recently or very often. When size is zero, elements will be evicted immediately after being loaded into the cache. This can be useful in testing, or to disable caching temporarily without a code change. As eviction is scheduled on the configured executor, tests may instead prefer to configure the cache to execute tasks directly on the same thread.",title:"Maximum Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},cacheLoader:{kind:"parameter",type:"object",description:"To configure a CacheLoader in case of a LoadCache use",title:"Cache Loader",required:!1,deprecated:!1},removalListener:{kind:"parameter",type:"object",description:"Set a specific removal Listener for the cache",title:"Removal Listener",required:!1,deprecated:!1},statsCounter:{kind:"parameter",type:"object",description:"Set a specific Stats Counter for the cache stats",title:"Stats Counter",required:!1,deprecated:!1},statsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To enable stats on the cache",title:"Stats Enabled",required:!1,deprecated:!1},valueType:{kind:"parameter",type:"string",description:"The cache value type, default java.lang.Object",title:"Value Type",required:!1,deprecated:!1}}},"caffeine-loadcache":{type:"object",title:"Caffeine LoadCache",group:"cache,clustering",icon:"generic24.png",description:"Perform caching operations using Caffeine Cache with an attached CacheLoader.",properties:{cacheName:{kind:"path",type:"string",description:"the cache name",title:"Cache Name",required:!0,deprecated:!1},action:{kind:"parameter",type:"string",enum:["GET","GET_ALL","PUT","PUT_ALL","INVALIDATE","INVALIDATE_ALL","CLEANUP","AS_MAP"],description:"To configure the default cache action. If an action is set in the message header, then the operation from the header takes precedence.",title:"Action",required:!1,deprecated:!1},createCacheIfNotExist:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatic create the Caffeine cache if none has been configured or exists in the registry.",title:"Create Cache If Not Exist",required:!1,deprecated:!1},evictionType:{kind:"parameter",type:"object",defaultValue:"SIZE_BASED",enum:["size_based","time_based"],description:"Set the eviction Type for this cache",title:"Eviction Type",required:!1,deprecated:!1},expireAfterAccessTime:{kind:"parameter",type:"integer",defaultValue:"300",description:"Specifies that each entry should be automatically removed from the cache once a fixed duration has elapsed after the entry's creation, the most recent replacement of its value, or its last read. Access time is reset by all cache read and write operations. The unit is in seconds.",title:"Expire After Access Time",required:!1,deprecated:!1},expireAfterWriteTime:{kind:"parameter",type:"integer",defaultValue:"300",description:"Specifies that each entry should be automatically removed from the cache once a fixed duration has elapsed after the entry's creation, or the most recent replacement of its value. The unit is in seconds.",title:"Expire After Write Time",required:!1,deprecated:!1},initialCapacity:{kind:"parameter",type:"integer",description:"Sets the minimum total size for the internal data structures. Providing a large enough estimate at construction time avoids the need for expensive resizing operations later, but setting this value unnecessarily high wastes memory.",title:"Initial Capacity",required:!1,deprecated:!1},key:{kind:"parameter",type:"string",description:"To configure the default action key. If a key is set in the message header, then the key from the header takes precedence.",title:"Key",required:!1,deprecated:!1},maximumSize:{kind:"parameter",type:"integer",description:"Specifies the maximum number of entries the cache may contain. Note that the cache may evict an entry before this limit is exceeded or temporarily exceed the threshold while evicting. As the cache size grows close to the maximum, the cache evicts entries that are less likely to be used again. For example, the cache may evict an entry because it hasn't been used recently or very often. When size is zero, elements will be evicted immediately after being loaded into the cache. This can be useful in testing, or to disable caching temporarily without a code change. As eviction is scheduled on the configured executor, tests may instead prefer to configure the cache to execute tasks directly on the same thread.",title:"Maximum Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},cacheLoader:{kind:"parameter",type:"object",description:"To configure a CacheLoader in case of a LoadCache use",title:"Cache Loader",required:!1,deprecated:!1},removalListener:{kind:"parameter",type:"object",description:"Set a specific removal Listener for the cache",title:"Removal Listener",required:!1,deprecated:!1},statsCounter:{kind:"parameter",type:"object",description:"Set a specific Stats Counter for the cache stats",title:"Stats Counter",required:!1,deprecated:!1},statsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To enable stats on the cache",title:"Stats Enabled",required:!1,deprecated:!1},valueType:{kind:"parameter",type:"string",description:"The cache value type, default java.lang.Object",title:"Value Type",required:!1,deprecated:!1}}},chatscript:{type:"object",title:"ChatScript",group:"ai,chat",icon:"generic24.png",description:"Chat with a ChatScript Server.",properties:{host:{kind:"path",type:"string",description:"Hostname or IP of the server on which CS server is running",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"1024",description:"Port on which ChatScript is listening to",title:"Port",required:!1,deprecated:!1},botName:{kind:"path",type:"string",description:"Name of the Bot in CS to converse with",title:"Bot Name",required:!0,deprecated:!1},chatUserName:{kind:"parameter",type:"string",description:"Username who initializes the CS conversation. To be set when chat is initialized from camel route",title:"Chat User Name",required:!1,deprecated:!1},resetChat:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Issues :reset command to start a new conversation everytime",title:"Reset Chat",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},chunk:{type:"object",title:"Chunk",group:"transformation",icon:"generic24.png",description:"Transform messages using Chunk templating engine.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"Define the encoding of the body",title:"Encoding",required:!1,deprecated:!1},extension:{kind:"parameter",type:"string",description:"Define the file extension of the template",title:"Extension",required:!1,deprecated:!1},themeFolder:{kind:"parameter",type:"string",description:"Define the themes folder to scan",title:"Theme Folder",required:!1,deprecated:!1},themeLayer:{kind:"parameter",type:"string",description:"Define the theme layer to elaborate",title:"Theme Layer",required:!1,deprecated:!1},themeSubfolder:{kind:"parameter",type:"string",description:"Define the themes subfolder to scan",title:"Theme Subfolder",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},class:{type:"object",title:"Class",group:"core,script",icon:"generic24.png",description:"Invoke methods of Java beans specified by class name.",properties:{beanName:{kind:"path",type:"string",description:"Sets the name of the bean to invoke",title:"Bean Name",required:!0,deprecated:!1},method:{kind:"parameter",type:"string",description:"Sets the name of the method to invoke on the bean",title:"Method",required:!1,deprecated:!1},scope:{kind:"parameter",type:"object",defaultValue:"Singleton",enum:["Singleton","Request","Prototype"],description:"Scope of bean. When using singleton scope (default) the bean is created or looked up only once and reused for the lifetime of the endpoint. The bean should be thread-safe in case concurrent threads is calling the bean at the same time. When using request scope the bean is created or looked up once per request (exchange). This can be used if you want to store state on a bean while processing a request and you want to call the same bean instance multiple times while processing the request. The bean does not have to be thread-safe as the instance is only called from the same request. When using prototype scope, then the bean will be looked up or created per call. However in case of lookup then this is delegated to the bean registry such as Spring or CDI (if in use), which depends on their configuration can act as either singleton or prototype scope. so when using prototype then this depends on the delegated registry.",title:"Scope",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},parameters:{kind:"parameter",type:"object",description:"Used for configuring additional properties on the bean",title:"Parameters",required:!1,deprecated:!1}}},"cm-sms":{type:"object",title:"CM SMS Gateway",group:"mobile",icon:"generic24.png",description:"Send SMS messages via CM SMS Gateway.",properties:{host:{kind:"path",type:"string",description:"SMS Provider HOST with scheme",title:"Host",required:!0,deprecated:!1},defaultFrom:{kind:"parameter",type:"string",description:"This is the sender name. The maximum length is 11 characters.",title:"Default From",required:!0,deprecated:!1},defaultMaxNumberOfParts:{kind:"parameter",type:"integer",defaultValue:"8",description:"If it is a multipart message forces the max number. Message can be truncated. Technically the gateway will first check if a message is larger than 160 characters, if so, the message will be cut into multiple 153 characters parts limited by these parameters.",title:"Default Max Number Of Parts",required:!1,deprecated:!1},productToken:{kind:"parameter",type:"string",description:"The unique token to use",title:"Product Token",required:!0,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to test the connection to the SMS Gateway on startup",title:"Test Connection On Startup",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},coap:{type:"object",title:"CoAP",group:"iot",icon:"generic24.png",description:"Send and receive messages to/from COAP capable devices.",properties:{uri:{kind:"path",type:"string",description:"The URI for the CoAP endpoint",title:"Uri",required:!1,deprecated:!1},coapMethodRestrict:{kind:"parameter",type:"string",enum:["DELETE","GET","POST","PUT"],description:"Comma separated list of methods that the CoAP consumer will bind to. The default is to bind to all methods (DELETE, GET, POST, PUT).",title:"Coap Method Restrict",required:!1,deprecated:!1},observable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Make CoAP resource observable for source endpoint, based on RFC 7641.",title:"Observable",required:!1,deprecated:!1},observe:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Send an observe request from a source endpoint, based on RFC 7641.",title:"Observe",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},notify:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Notify observers that the resource of this URI has changed, based on RFC 7641. Use this flag on a destination endpoint, with an URI that matches an existing source endpoint URI.",title:"Notify",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},alias:{kind:"parameter",type:"string",enum:["NONE","WANT","REQUIRE"],description:"Sets the alias used to query the KeyStore for the private key and certificate. This parameter is used when we are enabling TLS with certificates on the service side, and similarly on the client side when TLS is used with certificates and client authentication. If the parameter is not specified then the default behavior is to use the first alias in the keystore that contains a key entry. This configuration parameter does not apply to configuring TLS via a Raw Public Key or a Pre-Shared Key.",title:"Alias",required:!1,deprecated:!1},cipherSuites:{kind:"parameter",type:"string",description:"Sets the cipherSuites String. This is a comma separated String of ciphersuites to configure. If it is not specified, then it falls back to getting the ciphersuites from the sslContextParameters object.",title:"Cipher Suites",required:!1,deprecated:!1},clientAuthentication:{kind:"parameter",type:"string",description:"Sets the configuration options for server-side client-authentication requirements. The value must be one of NONE, WANT, REQUIRE. If this value is not specified, then it falls back to checking the sslContextParameters.getServerParameters().getClientAuthentication() value.",title:"Client Authentication",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"object",description:"Set the configured private key for use with Raw Public Key.",title:"Private Key",required:!1,deprecated:!1},pskStore:{kind:"parameter",type:"object",description:"Set the PskStore to use for pre-shared key.",title:"Psk Store",required:!1,deprecated:!1},publicKey:{kind:"parameter",type:"object",description:"Set the configured public key for use with Raw Public Key.",title:"Public Key",required:!1,deprecated:!1},recommendedCipherSuitesOnly:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The CBC cipher suites are not recommended. If you want to use them, you first need to set the recommendedCipherSuitesOnly option to false.",title:"Recommended Cipher Suites Only",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"Set the SSLContextParameters object for setting up TLS. This is required for coapstcp, and for coaps when we are using certificates for TLS (as opposed to RPK or PKS).",title:"Ssl Context Parameters",required:!1,deprecated:!1},trustedRpkStore:{kind:"parameter",type:"object",description:"Set the TrustedRpkStore to use to determine trust in raw public keys.",title:"Trusted Rpk Store",required:!1,deprecated:!1}}},"coap+tcp":{type:"object",title:"CoAP",group:"iot",icon:"generic24.png",description:"Send and receive messages to/from COAP capable devices.",properties:{uri:{kind:"path",type:"string",description:"The URI for the CoAP endpoint",title:"Uri",required:!1,deprecated:!1},coapMethodRestrict:{kind:"parameter",type:"string",enum:["DELETE","GET","POST","PUT"],description:"Comma separated list of methods that the CoAP consumer will bind to. The default is to bind to all methods (DELETE, GET, POST, PUT).",title:"Coap Method Restrict",required:!1,deprecated:!1},observable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Make CoAP resource observable for source endpoint, based on RFC 7641.",title:"Observable",required:!1,deprecated:!1},observe:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Send an observe request from a source endpoint, based on RFC 7641.",title:"Observe",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},notify:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Notify observers that the resource of this URI has changed, based on RFC 7641. Use this flag on a destination endpoint, with an URI that matches an existing source endpoint URI.",title:"Notify",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},alias:{kind:"parameter",type:"string",enum:["NONE","WANT","REQUIRE"],description:"Sets the alias used to query the KeyStore for the private key and certificate. This parameter is used when we are enabling TLS with certificates on the service side, and similarly on the client side when TLS is used with certificates and client authentication. If the parameter is not specified then the default behavior is to use the first alias in the keystore that contains a key entry. This configuration parameter does not apply to configuring TLS via a Raw Public Key or a Pre-Shared Key.",title:"Alias",required:!1,deprecated:!1},cipherSuites:{kind:"parameter",type:"string",description:"Sets the cipherSuites String. This is a comma separated String of ciphersuites to configure. If it is not specified, then it falls back to getting the ciphersuites from the sslContextParameters object.",title:"Cipher Suites",required:!1,deprecated:!1},clientAuthentication:{kind:"parameter",type:"string",description:"Sets the configuration options for server-side client-authentication requirements. The value must be one of NONE, WANT, REQUIRE. If this value is not specified, then it falls back to checking the sslContextParameters.getServerParameters().getClientAuthentication() value.",title:"Client Authentication",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"object",description:"Set the configured private key for use with Raw Public Key.",title:"Private Key",required:!1,deprecated:!1},pskStore:{kind:"parameter",type:"object",description:"Set the PskStore to use for pre-shared key.",title:"Psk Store",required:!1,deprecated:!1},publicKey:{kind:"parameter",type:"object",description:"Set the configured public key for use with Raw Public Key.",title:"Public Key",required:!1,deprecated:!1},recommendedCipherSuitesOnly:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The CBC cipher suites are not recommended. If you want to use them, you first need to set the recommendedCipherSuitesOnly option to false.",title:"Recommended Cipher Suites Only",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"Set the SSLContextParameters object for setting up TLS. This is required for coapstcp, and for coaps when we are using certificates for TLS (as opposed to RPK or PKS).",title:"Ssl Context Parameters",required:!1,deprecated:!1},trustedRpkStore:{kind:"parameter",type:"object",description:"Set the TrustedRpkStore to use to determine trust in raw public keys.",title:"Trusted Rpk Store",required:!1,deprecated:!1}}},coaps:{type:"object",title:"CoAP (Secure)",group:"iot",icon:"generic24.png",description:"Send and receive messages to/from COAP capable devices.",properties:{uri:{kind:"path",type:"string",description:"The URI for the CoAP endpoint",title:"Uri",required:!1,deprecated:!1},coapMethodRestrict:{kind:"parameter",type:"string",enum:["DELETE","GET","POST","PUT"],description:"Comma separated list of methods that the CoAP consumer will bind to. The default is to bind to all methods (DELETE, GET, POST, PUT).",title:"Coap Method Restrict",required:!1,deprecated:!1},observable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Make CoAP resource observable for source endpoint, based on RFC 7641.",title:"Observable",required:!1,deprecated:!1},observe:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Send an observe request from a source endpoint, based on RFC 7641.",title:"Observe",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},notify:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Notify observers that the resource of this URI has changed, based on RFC 7641. Use this flag on a destination endpoint, with an URI that matches an existing source endpoint URI.",title:"Notify",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},alias:{kind:"parameter",type:"string",enum:["NONE","WANT","REQUIRE"],description:"Sets the alias used to query the KeyStore for the private key and certificate. This parameter is used when we are enabling TLS with certificates on the service side, and similarly on the client side when TLS is used with certificates and client authentication. If the parameter is not specified then the default behavior is to use the first alias in the keystore that contains a key entry. This configuration parameter does not apply to configuring TLS via a Raw Public Key or a Pre-Shared Key.",title:"Alias",required:!1,deprecated:!1},cipherSuites:{kind:"parameter",type:"string",description:"Sets the cipherSuites String. This is a comma separated String of ciphersuites to configure. If it is not specified, then it falls back to getting the ciphersuites from the sslContextParameters object.",title:"Cipher Suites",required:!1,deprecated:!1},clientAuthentication:{kind:"parameter",type:"string",description:"Sets the configuration options for server-side client-authentication requirements. The value must be one of NONE, WANT, REQUIRE. If this value is not specified, then it falls back to checking the sslContextParameters.getServerParameters().getClientAuthentication() value.",title:"Client Authentication",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"object",description:"Set the configured private key for use with Raw Public Key.",title:"Private Key",required:!1,deprecated:!1},pskStore:{kind:"parameter",type:"object",description:"Set the PskStore to use for pre-shared key.",title:"Psk Store",required:!1,deprecated:!1},publicKey:{kind:"parameter",type:"object",description:"Set the configured public key for use with Raw Public Key.",title:"Public Key",required:!1,deprecated:!1},recommendedCipherSuitesOnly:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The CBC cipher suites are not recommended. If you want to use them, you first need to set the recommendedCipherSuitesOnly option to false.",title:"Recommended Cipher Suites Only",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"Set the SSLContextParameters object for setting up TLS. This is required for coapstcp, and for coaps when we are using certificates for TLS (as opposed to RPK or PKS).",title:"Ssl Context Parameters",required:!1,deprecated:!1},trustedRpkStore:{kind:"parameter",type:"object",description:"Set the TrustedRpkStore to use to determine trust in raw public keys.",title:"Trusted Rpk Store",required:!1,deprecated:!1}}},"coaps+tcp":{type:"object",title:"CoAP",group:"iot",icon:"generic24.png",description:"Send and receive messages to/from COAP capable devices.",properties:{uri:{kind:"path",type:"string",description:"The URI for the CoAP endpoint",title:"Uri",required:!1,deprecated:!1},coapMethodRestrict:{kind:"parameter",type:"string",enum:["DELETE","GET","POST","PUT"],description:"Comma separated list of methods that the CoAP consumer will bind to. The default is to bind to all methods (DELETE, GET, POST, PUT).",title:"Coap Method Restrict",required:!1,deprecated:!1},observable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Make CoAP resource observable for source endpoint, based on RFC 7641.",title:"Observable",required:!1,deprecated:!1},observe:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Send an observe request from a source endpoint, based on RFC 7641.",title:"Observe",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},notify:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Notify observers that the resource of this URI has changed, based on RFC 7641. Use this flag on a destination endpoint, with an URI that matches an existing source endpoint URI.",title:"Notify",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},alias:{kind:"parameter",type:"string",enum:["NONE","WANT","REQUIRE"],description:"Sets the alias used to query the KeyStore for the private key and certificate. This parameter is used when we are enabling TLS with certificates on the service side, and similarly on the client side when TLS is used with certificates and client authentication. If the parameter is not specified then the default behavior is to use the first alias in the keystore that contains a key entry. This configuration parameter does not apply to configuring TLS via a Raw Public Key or a Pre-Shared Key.",title:"Alias",required:!1,deprecated:!1},cipherSuites:{kind:"parameter",type:"string",description:"Sets the cipherSuites String. This is a comma separated String of ciphersuites to configure. If it is not specified, then it falls back to getting the ciphersuites from the sslContextParameters object.",title:"Cipher Suites",required:!1,deprecated:!1},clientAuthentication:{kind:"parameter",type:"string",description:"Sets the configuration options for server-side client-authentication requirements. The value must be one of NONE, WANT, REQUIRE. If this value is not specified, then it falls back to checking the sslContextParameters.getServerParameters().getClientAuthentication() value.",title:"Client Authentication",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"object",description:"Set the configured private key for use with Raw Public Key.",title:"Private Key",required:!1,deprecated:!1},pskStore:{kind:"parameter",type:"object",description:"Set the PskStore to use for pre-shared key.",title:"Psk Store",required:!1,deprecated:!1},publicKey:{kind:"parameter",type:"object",description:"Set the configured public key for use with Raw Public Key.",title:"Public Key",required:!1,deprecated:!1},recommendedCipherSuitesOnly:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The CBC cipher suites are not recommended. If you want to use them, you first need to set the recommendedCipherSuitesOnly option to false.",title:"Recommended Cipher Suites Only",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"Set the SSLContextParameters object for setting up TLS. This is required for coapstcp, and for coaps when we are using certificates for TLS (as opposed to RPK or PKS).",title:"Ssl Context Parameters",required:!1,deprecated:!1},trustedRpkStore:{kind:"parameter",type:"object",description:"Set the TrustedRpkStore to use to determine trust in raw public keys.",title:"Trusted Rpk Store",required:!1,deprecated:!1}}},cometd:{type:"object",title:"CometD",group:"networking,messaging",icon:"generic24.png",description:"Offers publish/subscribe, peer-to-peer (via a server), and RPC style messaging using the CometD/Bayeux protocol.",properties:{host:{kind:"path",type:"string",description:"Hostname",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Host port number",title:"Port",required:!0,deprecated:!1},channelName:{kind:"path",type:"string",description:"The channelName represents a topic that can be subscribed to by the Camel endpoints.",title:"Channel Name",required:!0,deprecated:!1},allowedOrigins:{kind:"parameter",type:"string",defaultValue:"*",description:"The origins domain that support to cross, if the crosssOriginFilterOn is true",title:"Allowed Origins",required:!1,deprecated:!1},baseResource:{kind:"parameter",type:"string",description:"The root directory for the web resources or classpath. Use the protocol file: or classpath: depending if you want that the component loads the resource from file system or classpath. Classpath is required for OSGI deployment where the resources are packaged in the jar",title:"Base Resource",required:!1,deprecated:!1},crossOriginFilterOn:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the server will support for cross-domain filtering",title:"Cross Origin Filter On",required:!1,deprecated:!1},filterPath:{kind:"parameter",type:"string",description:"The filterPath will be used by the CrossOriginFilter, if the crosssOriginFilterOn is true",title:"Filter Path",required:!1,deprecated:!1},interval:{kind:"parameter",type:"integer",description:"The client side poll timeout in milliseconds. How long a client will wait between reconnects",title:"Interval",required:!1,deprecated:!1},jsonCommented:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, the server will accept JSON wrapped in a comment and will generate JSON wrapped in a comment. This is a defence against Ajax Hijacking.",title:"Json Commented",required:!1,deprecated:!1},logLevel:{kind:"parameter",type:"integer",defaultValue:"1",enum:["0","1","2"],description:"Logging level. 0=none, 1=info, 2=debug.",title:"Log Level",required:!1,deprecated:!1},maxInterval:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The max client side poll timeout in milliseconds. A client will be removed if a connection is not received in this time.",title:"Max Interval",required:!1,deprecated:!1},multiFrameInterval:{kind:"parameter",type:"integer",defaultValue:"1500",description:"The client side poll timeout, if multiple connections are detected from the same browser.",title:"Multi Frame Interval",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"240000",description:"The server side poll timeout in milliseconds. This is how long the server will hold a reconnect request before responding.",title:"Timeout",required:!1,deprecated:!1},sessionHeadersEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to include the server session headers in the Camel message when creating a Camel Message for incoming requests.",title:"Session Headers Enabled",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},disconnectLocalSession:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to disconnect local sessions after publishing a message to its channel. Disconnecting local session is needed as they are not swept by default by CometD, and therefore you can run out of memory.",title:"Disconnect Local Session",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},cometds:{type:"object",title:"CometD (Secure)",group:"networking,messaging",icon:"generic24.png",description:"Offers publish/subscribe, peer-to-peer (via a server), and RPC style messaging using the CometD/Bayeux protocol.",properties:{host:{kind:"path",type:"string",description:"Hostname",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Host port number",title:"Port",required:!0,deprecated:!1},channelName:{kind:"path",type:"string",description:"The channelName represents a topic that can be subscribed to by the Camel endpoints.",title:"Channel Name",required:!0,deprecated:!1},allowedOrigins:{kind:"parameter",type:"string",defaultValue:"*",description:"The origins domain that support to cross, if the crosssOriginFilterOn is true",title:"Allowed Origins",required:!1,deprecated:!1},baseResource:{kind:"parameter",type:"string",description:"The root directory for the web resources or classpath. Use the protocol file: or classpath: depending if you want that the component loads the resource from file system or classpath. Classpath is required for OSGI deployment where the resources are packaged in the jar",title:"Base Resource",required:!1,deprecated:!1},crossOriginFilterOn:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the server will support for cross-domain filtering",title:"Cross Origin Filter On",required:!1,deprecated:!1},filterPath:{kind:"parameter",type:"string",description:"The filterPath will be used by the CrossOriginFilter, if the crosssOriginFilterOn is true",title:"Filter Path",required:!1,deprecated:!1},interval:{kind:"parameter",type:"integer",description:"The client side poll timeout in milliseconds. How long a client will wait between reconnects",title:"Interval",required:!1,deprecated:!1},jsonCommented:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, the server will accept JSON wrapped in a comment and will generate JSON wrapped in a comment. This is a defence against Ajax Hijacking.",title:"Json Commented",required:!1,deprecated:!1},logLevel:{kind:"parameter",type:"integer",defaultValue:"1",enum:["0","1","2"],description:"Logging level. 0=none, 1=info, 2=debug.",title:"Log Level",required:!1,deprecated:!1},maxInterval:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The max client side poll timeout in milliseconds. A client will be removed if a connection is not received in this time.",title:"Max Interval",required:!1,deprecated:!1},multiFrameInterval:{kind:"parameter",type:"integer",defaultValue:"1500",description:"The client side poll timeout, if multiple connections are detected from the same browser.",title:"Multi Frame Interval",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"240000",description:"The server side poll timeout in milliseconds. This is how long the server will hold a reconnect request before responding.",title:"Timeout",required:!1,deprecated:!1},sessionHeadersEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to include the server session headers in the Camel message when creating a Camel Message for incoming requests.",title:"Session Headers Enabled",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},disconnectLocalSession:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to disconnect local sessions after publishing a message to its channel. Disconnecting local session is needed as they are not swept by default by CometD, and therefore you can run out of memory.",title:"Disconnect Local Session",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},consul:{type:"object",title:"Consul",group:"cloud,api",icon:"generic24.png",description:"Integrate with Consul service discovery and configuration store.",properties:{apiEndpoint:{kind:"path",type:"string",description:"The API endpoint",title:"Api Endpoint",required:!0,deprecated:!1},connectTimeout:{kind:"parameter",type:"object",description:"Connect timeout for OkHttpClient",title:"Connect Timeout",required:!1,deprecated:!1},consulClient:{kind:"parameter",type:"object",description:"Reference to a com.orbitz.consul.Consul in the registry.",title:"Consul Client",required:!1,deprecated:!1},key:{kind:"parameter",type:"string",description:"The default key. Can be overridden by CamelConsulKey",title:"Key",required:!1,deprecated:!1},pingInstance:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Configure if the AgentClient should attempt a ping before returning the Consul instance",title:"Ping Instance",required:!1,deprecated:!1},readTimeout:{kind:"parameter",type:"object",description:"Read timeout for OkHttpClient",title:"Read Timeout",required:!1,deprecated:!1},tags:{kind:"parameter",type:"string",description:"Set tags. You can separate multiple tags by comma.",title:"Tags",required:!1,deprecated:!1},url:{kind:"parameter",type:"string",description:"The Consul agent URL",title:"Url",required:!1,deprecated:!1},writeTimeout:{kind:"parameter",type:"object",description:"Write timeout for OkHttpClient",title:"Write Timeout",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},action:{kind:"parameter",type:"string",description:"The default action. Can be overridden by CamelConsulAction",title:"Action",required:!1,deprecated:!1},valueAsString:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Default to transform values retrieved from Consul i.e. on KV endpoint to string.",title:"Value As String",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},consistencyMode:{kind:"parameter",type:"object",defaultValue:"DEFAULT",enum:["DEFAULT","STALE","CONSISTENT"],description:"The consistencyMode used for queries, default ConsistencyMode.DEFAULT",title:"Consistency Mode",required:!1,deprecated:!1},datacenter:{kind:"parameter",type:"string",description:"The data center",title:"Datacenter",required:!1,deprecated:!1},nearNode:{kind:"parameter",type:"string",description:"The near node to use for queries.",title:"Near Node",required:!1,deprecated:!1},nodeMeta:{kind:"parameter",type:"array",description:"The note meta-data to use for queries.",title:"Node Meta",required:!1,deprecated:!1},aclToken:{kind:"parameter",type:"string",description:"Sets the ACL token to be used with Consul",title:"Acl Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Sets the password to be used for basic authentication",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"SSL configuration using an org.apache.camel.support.jsse.SSLContextParameters instance.",title:"Ssl Context Parameters",required:!1,deprecated:!1},userName:{kind:"parameter",type:"string",description:"Sets the username to be used for basic authentication",title:"User Name",required:!1,deprecated:!1},blockSeconds:{kind:"parameter",type:"integer",defaultValue:"10",description:"The second to wait for a watch event, default 10 seconds",title:"Block Seconds",required:!1,deprecated:!1},firstIndex:{kind:"parameter",type:"object",defaultValue:"0",description:"The first index for watch for, default 0",title:"First Index",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Recursively watch, default false",title:"Recursive",required:!1,deprecated:!1}}},controlbus:{type:"object",title:"Control Bus",group:"core,monitoring",icon:"generic24.png",description:"Manage and monitor Camel routes.",properties:{command:{kind:"path",type:"string",enum:["route","language"],description:"Command can be either route or language",title:"Command",required:!0,deprecated:!1},language:{kind:"path",type:"object",enum:["bean","constant","csimple","datasonnet","exchangeProperty","file","groovy","header","hl7terser","joor","jq","jsonpath","mvel","ognl","python","ref","simple","spel","tokenize","xpath","xquery","xtokenize"],description:"Allows you to specify the name of a Language to use for evaluating the message body. If there is any result from the evaluation, then the result is put in the message body.",title:"Language",required:!1,deprecated:!1},action:{kind:"parameter",type:"string",enum:["start","stop","fail","suspend","resume","restart","status","stats"],description:"To denote an action that can be either: start, stop, or status. To either start or stop a route, or to get the status of the route as output in the message body. You can use suspend and resume to either suspend or resume a route. You can use stats to get performance statics returned in XML format; the routeId option can be used to define which route to get the performance stats for, if routeId is not defined, then you get statistics for the entire CamelContext. The restart action will restart the route. And the fail action will stop and mark the route as failed (stopped due to an exception)",title:"Action",required:!1,deprecated:!1},async:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to execute the control bus task asynchronously. Important: If this option is enabled, then any result from the task is not set on the Exchange. This is only possible if executing tasks synchronously.",title:"Async",required:!1,deprecated:!1},loggingLevel:{kind:"parameter",type:"object",defaultValue:"INFO",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level used for logging when task is done, or if any exceptions occurred during processing the task.",title:"Logging Level",required:!1,deprecated:!1},restartDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The delay in millis to use when restarting a route.",title:"Restart Delay",required:!1,deprecated:!1},routeId:{kind:"parameter",type:"string",description:"To specify a route by its id. The special keyword current indicates the current route.",title:"Route Id",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},couchbase:{type:"object",title:"Couchbase",group:"database",icon:"generic24.png",description:"Query Couchbase Views with a poll strategy and/or perform various operations against Couchbase databases.",properties:{protocol:{kind:"path",type:"string",description:"The protocol to use",title:"Protocol",required:!0,deprecated:!1},hostname:{kind:"path",type:"string",description:"The hostname to use",title:"Hostname",required:!0,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"8091",description:"The port number to use",title:"Port",required:!1,deprecated:!1},bucket:{kind:"parameter",type:"string",description:"The bucket to use",title:"Bucket",required:!0,deprecated:!1},collection:{kind:"parameter",type:"string",description:"The collection to use",title:"Collection",required:!1,deprecated:!1},key:{kind:"parameter",type:"string",description:"The key to use",title:"Key",required:!1,deprecated:!1},scope:{kind:"parameter",type:"string",description:"The scope to use",title:"Scope",required:!1,deprecated:!1},consumerProcessedStrategy:{kind:"parameter",type:"string",defaultValue:"none",description:"Define the consumer Processed strategy to use",title:"Consumer Processed Strategy",required:!1,deprecated:!1},descending:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if this operation is descending or not",title:"Descending",required:!1,deprecated:!1},designDocumentName:{kind:"parameter",type:"string",defaultValue:"beer",description:"The design document name to use",title:"Design Document Name",required:!1,deprecated:!1},fullDocument:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true consumer will return complete document instead data defined in view",title:"Full Document",required:!1,deprecated:!1},limit:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The output limit to use",title:"Limit",required:!1,deprecated:!1},rangeEndKey:{kind:"parameter",type:"string",description:"Define a range for the end key",title:"Range End Key",required:!1,deprecated:!1},rangeStartKey:{kind:"parameter",type:"string",description:"Define a range for the start key",title:"Range Start Key",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skip:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Define the skip to use",title:"Skip",required:!1,deprecated:!1},viewName:{kind:"parameter",type:"string",defaultValue:"brewery_beers",description:"The view name to use",title:"View Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},autoStartIdForInserts:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if we want an autostart Id when we are doing an insert operation",title:"Auto Start Id For Inserts",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",defaultValue:"CCB_PUT",description:"The operation to do",title:"Operation",required:!1,deprecated:!1},persistTo:{kind:"parameter",type:"integer",defaultValue:"0",description:"Where to persist the data",title:"Persist To",required:!1,deprecated:!1},producerRetryAttempts:{kind:"parameter",type:"integer",defaultValue:"2",description:"Define the number of retry attempts",title:"Producer Retry Attempts",required:!1,deprecated:!1},producerRetryPause:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Define the retry pause between different attempts",title:"Producer Retry Pause",required:!1,deprecated:!1},replicateTo:{kind:"parameter",type:"integer",defaultValue:"0",description:"Where to replicate the data",title:"Replicate To",required:!1,deprecated:!1},startingIdForInsertsFrom:{kind:"parameter",type:"integer",description:"Define the starting Id where we are doing an insert operation",title:"Starting Id For Inserts From",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},additionalHosts:{kind:"parameter",type:"string",description:"The additional hosts",title:"Additional Hosts",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Define the timeoutconnect in milliseconds",title:"Connect Timeout",required:!1,deprecated:!1},queryTimeout:{kind:"parameter",type:"duration",defaultValue:"2500",description:"Define the operation timeout in milliseconds",title:"Query Timeout",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password to use",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username to use",title:"Username",required:!1,deprecated:!1}}},couchdb:{type:"object",title:"CouchDB",group:"database",icon:"generic24.png",description:"Consume changesets for inserts, updates and deletes in a CouchDB database, as well as get, save, update and delete documents from a CouchDB database.",properties:{protocol:{kind:"path",type:"string",enum:["http","https"],description:"The protocol to use for communicating with the database.",title:"Protocol",required:!0,deprecated:!1},hostname:{kind:"path",type:"string",description:"Hostname of the running couchdb instance",title:"Hostname",required:!0,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"5984",description:"Port number for the running couchdb instance",title:"Port",required:!1,deprecated:!1},database:{kind:"path",type:"string",description:"Name of the database to use",title:"Database",required:!0,deprecated:!1},createDatabase:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Creates the database if it does not already exist",title:"Create Database",required:!1,deprecated:!1},deletes:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Document deletes are published as events",title:"Deletes",required:!1,deprecated:!1},heartbeat:{kind:"parameter",type:"duration",defaultValue:"30000",description:"How often to send an empty message to keep socket alive in millis",title:"Heartbeat",required:!1,deprecated:!1},style:{kind:"parameter",type:"string",defaultValue:"main_only",enum:["all_docs","main_only"],description:"Specifies how many revisions are returned in the changes array. The default, main_only, will only return the current winning revision; all_docs will return all leaf revisions (including conflicts and deleted former conflicts.)",title:"Style",required:!1,deprecated:!1},updates:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Document inserts/updates are published as events",title:"Updates",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password for authenticated databases",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username in case of authenticated databases",title:"Username",required:!1,deprecated:!1}}},cql:{type:"object",title:"Cassandra CQL",group:"database,bigdata",icon:"generic24.png",description:"Integrate with Cassandra 2.0 using the CQL3 API (not the Thrift API). Based on Cassandra Java Driver provided by DataStax.",properties:{beanRef:{kind:"path",type:"string",description:"beanRef is defined using bean:id",title:"Bean Ref",required:!1,deprecated:!1},hosts:{kind:"path",type:"string",description:"Hostname(s) Cassandra server(s). Multiple hosts can be separated by comma.",title:"Hosts",required:!1,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number of Cassandra server(s)",title:"Port",required:!1,deprecated:!1},keyspace:{kind:"path",type:"string",description:"Keyspace to use",title:"Keyspace",required:!1,deprecated:!1},clusterName:{kind:"parameter",type:"string",description:"Cluster name",title:"Cluster Name",required:!1,deprecated:!1},consistencyLevel:{kind:"parameter",type:"object",enum:["ANY","ONE","TWO","THREE","QUORUM","ALL","LOCAL_ONE","LOCAL_QUORUM","EACH_QUORUM","SERIAL","LOCAL_SERIAL"],description:"Consistency level to use",title:"Consistency Level",required:!1,deprecated:!1},cql:{kind:"parameter",type:"string",description:"CQL query to perform. Can be overridden with the message header with key CamelCqlQuery.",title:"Cql",required:!1,deprecated:!1},datacenter:{kind:"parameter",type:"string",defaultValue:"datacenter1",description:"Datacenter to use",title:"Datacenter",required:!1,deprecated:!1},extraTypeCodecs:{kind:"parameter",type:"string",description:"To use a specific comma separated list of Extra Type codecs. Possible values are: BLOB_TO_ARRAY, BOOLEAN_LIST_TO_ARRAY, BYTE_LIST_TO_ARRAY, SHORT_LIST_TO_ARRAY, INT_LIST_TO_ARRAY, LONG_LIST_TO_ARRAY, FLOAT_LIST_TO_ARRAY, DOUBLE_LIST_TO_ARRAY, TIMESTAMP_UTC, TIMESTAMP_MILLIS_SYSTEM, TIMESTAMP_MILLIS_UTC, ZONED_TIMESTAMP_SYSTEM, ZONED_TIMESTAMP_UTC, ZONED_TIMESTAMP_PERSISTED, LOCAL_TIMESTAMP_SYSTEM and LOCAL_TIMESTAMP_UTC",title:"Extra Type Codecs",required:!1,deprecated:!1},loadBalancingPolicyClass:{kind:"parameter",type:"string",description:"To use a specific LoadBalancingPolicyClass",title:"Load Balancing Policy Class",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password for session authentication",title:"Password",required:!1,deprecated:!1},prepareStatements:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use PreparedStatements or regular Statements",title:"Prepare Statements",required:!1,deprecated:!1},resultSetConversionStrategy:{kind:"parameter",type:"object",description:"To use a custom class that implements logic for converting ResultSet into message body ALL, ONE, LIMIT_10, LIMIT_100...",title:"Result Set Conversion Strategy",required:!1,deprecated:!1},session:{kind:"parameter",type:"object",description:"To use the Session instance (you would normally not use this option)",title:"Session",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username for session authentication",title:"Username",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},cron:{type:"object",title:"Cron",group:"scheduling",icon:"generic24.png",description:"A generic interface for triggering events at times specified through the Unix cron syntax.",properties:{name:{kind:"path",type:"string",description:"The name of the cron trigger",title:"Name",required:!0,deprecated:!1},schedule:{kind:"parameter",type:"string",description:"A cron expression that will be used to generate events",title:"Schedule",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},crypto:{type:"object",title:"Crypto (JCE)",group:"security,transformation",icon:"generic24.png",description:"Sign and verify exchanges using the Signature Service of the Java Cryptographic Extension (JCE).",properties:{cryptoOperation:{kind:"path",type:"object",enum:["sign","verify"],description:"Set the Crypto operation from that supplied after the crypto scheme in the endpoint uri e.g. crypto:sign sets sign as the operation.",title:"Crypto Operation",required:!0,deprecated:!1},name:{kind:"path",type:"string",description:"The logical name of this operation.",title:"Name",required:!0,deprecated:!1},algorithm:{kind:"parameter",type:"string",defaultValue:"SHA256withRSA",description:"Sets the JCE name of the Algorithm that should be used for the signer.",title:"Algorithm",required:!1,deprecated:!1},alias:{kind:"parameter",type:"string",description:"Sets the alias used to query the KeyStore for keys and {link java.security.cert.Certificate Certificates} to be used in signing and verifying exchanges. This value can be provided at runtime via the message header org.apache.camel.component.crypto.DigitalSignatureConstants#KEYSTORE_ALIAS",title:"Alias",required:!1,deprecated:!1},certificateName:{kind:"parameter",type:"string",description:"Sets the reference name for a PrivateKey that can be found in the registry.",title:"Certificate Name",required:!1,deprecated:!1},keystore:{kind:"parameter",type:"object",description:"Sets the KeyStore that can contain keys and Certficates for use in signing and verifying exchanges. A KeyStore is typically used with an alias, either one supplied in the Route definition or dynamically via the message header CamelSignatureKeyStoreAlias. If no alias is supplied and there is only a single entry in the Keystore, then this single entry will be used.",title:"Keystore",required:!1,deprecated:!1},keystoreName:{kind:"parameter",type:"string",description:"Sets the reference name for a Keystore that can be found in the registry.",title:"Keystore Name",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"object",description:"Set the PrivateKey that should be used to sign the exchange",title:"Private Key",required:!1,deprecated:!1},privateKeyName:{kind:"parameter",type:"string",description:"Sets the reference name for a PrivateKey that can be found in the registry.",title:"Private Key Name",required:!1,deprecated:!1},provider:{kind:"parameter",type:"string",description:"Set the id of the security provider that provides the configured Signature algorithm.",title:"Provider",required:!1,deprecated:!1},publicKeyName:{kind:"parameter",type:"string",description:"references that should be resolved when the context changes",title:"Public Key Name",required:!1,deprecated:!1},secureRandomName:{kind:"parameter",type:"string",description:"Sets the reference name for a SecureRandom that can be found in the registry.",title:"Secure Random Name",required:!1,deprecated:!1},signatureHeaderName:{kind:"parameter",type:"string",description:"Set the name of the message header that should be used to store the base64 encoded signature. This defaults to 'CamelDigitalSignature'",title:"Signature Header Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},bufferSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Set the size of the buffer used to read in the Exchange payload data.",title:"Buffer Size",required:!1,deprecated:!1},certificate:{kind:"parameter",type:"object",description:"Set the Certificate that should be used to verify the signature in the exchange based on its payload.",title:"Certificate",required:!1,deprecated:!1},clearHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Determines if the Signature specific headers be cleared after signing and verification. Defaults to true, and should only be made otherwise at your extreme peril as vital private information such as Keys and passwords may escape if unset.",title:"Clear Headers",required:!1,deprecated:!1},keyStoreParameters:{kind:"parameter",type:"object",description:"Sets the KeyStore that can contain keys and Certficates for use in signing and verifying exchanges based on the given KeyStoreParameters. A KeyStore is typically used with an alias, either one supplied in the Route definition or dynamically via the message header CamelSignatureKeyStoreAlias. If no alias is supplied and there is only a single entry in the Keystore, then this single entry will be used.",title:"Key Store Parameters",required:!1,deprecated:!1},publicKey:{kind:"parameter",type:"object",description:"Set the PublicKey that should be used to verify the signature in the exchange.",title:"Public Key",required:!1,deprecated:!1},secureRandom:{kind:"parameter",type:"object",description:"Set the SecureRandom used to initialize the Signature service",title:"Secure Random",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Sets the password used to access an aliased PrivateKey in the KeyStore.",title:"Password",required:!1,deprecated:!1}}},cxf:{type:"object",title:"CXF",group:"http,webservice",icon:"generic24.png",description:"Expose SOAP WebServices using Apache CXF or connect to external WebServices using CXF WS client.",properties:{beanId:{kind:"path",type:"string",description:"To lookup an existing configured CxfEndpoint. Must used bean: as prefix.",title:"Bean Id",required:!1,deprecated:!1},address:{kind:"path",type:"string",description:"The service publish address.",title:"Address",required:!1,deprecated:!1},dataFormat:{kind:"parameter",type:"object",defaultValue:"POJO",enum:["PAYLOAD","RAW","MESSAGE","CXF_MESSAGE","POJO"],description:"The data type messages supported by the CXF endpoint.",title:"Data Format",required:!1,deprecated:!1},wrappedStyle:{kind:"parameter",type:"boolean",description:"The WSDL style that describes how parameters are represented in the SOAP body. If the value is false, CXF will chose the document-literal unwrapped style, If the value is true, CXF will chose the document-literal wrapped style",title:"Wrapped Style",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},cookieHandler:{kind:"parameter",type:"object",description:"Configure a cookie handler to maintain a HTTP session",title:"Cookie Handler",required:!1,deprecated:!1},defaultOperationName:{kind:"parameter",type:"string",description:"This option will set the default operationName that will be used by the CxfProducer which invokes the remote service.",title:"Default Operation Name",required:!1,deprecated:!1},defaultOperationNamespace:{kind:"parameter",type:"string",description:"This option will set the default operationNamespace that will be used by the CxfProducer which invokes the remote service.",title:"Default Operation Namespace",required:!1,deprecated:!1},hostnameVerifier:{kind:"parameter",type:"object",description:"The hostname verifier to be used. Use the # notation to reference a HostnameVerifier from the registry.",title:"Hostname Verifier",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"The Camel SSL setting reference. Use the # notation to reference the SSL Context.",title:"Ssl Context Parameters",required:!1,deprecated:!1},wrapped:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Which kind of operation that CXF endpoint producer will invoke",title:"Wrapped",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},allowStreaming:{kind:"parameter",type:"boolean",description:"This option controls whether the CXF component, when running in PAYLOAD mode, will DOM parse the incoming messages into DOM Elements or keep the payload as a javax.xml.transform.Source object that would allow streaming in some cases.",title:"Allow Streaming",required:!1,deprecated:!1},bus:{kind:"parameter",type:"object",description:"To use a custom configured CXF Bus.",title:"Bus",required:!1,deprecated:!1},continuationTimeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"This option is used to set the CXF continuation timeout which could be used in CxfConsumer by default when the CXF server is using Jetty or Servlet transport.",title:"Continuation Timeout",required:!1,deprecated:!1},cxfBinding:{kind:"parameter",type:"object",description:"To use a custom CxfBinding to control the binding between Camel Message and CXF Message.",title:"Cxf Binding",required:!1,deprecated:!1},cxfConfigurer:{kind:"parameter",type:"object",description:"This option could apply the implementation of org.apache.camel.component.cxf.CxfEndpointConfigurer which supports to configure the CXF endpoint in programmatic way. User can configure the CXF server and client by implementing configure{ServerClient} method of CxfEndpointConfigurer.",title:"Cxf Configurer",required:!1,deprecated:!1},defaultBus:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will set the default bus when CXF endpoint create a bus by itself",title:"Default Bus",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},mergeProtocolHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to merge protocol headers. If enabled then propagating headers between Camel and CXF becomes more consistent and similar. For more details see CAMEL-6393.",title:"Merge Protocol Headers",required:!1,deprecated:!1},mtomEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To enable MTOM (attachments). This requires to use POJO or PAYLOAD data format mode.",title:"Mtom Enabled",required:!1,deprecated:!1},properties:{kind:"parameter",type:"object",description:"To set additional CXF options using the key/value pairs from the Map. For example to turn on stacktraces in SOAP faults, properties.faultStackTraceEnabled=true",title:"Properties",required:!1,deprecated:!1},schemaValidationEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable schema validation for request and response. Disabled by default for performance reason",title:"Schema Validation Enabled",required:!1,deprecated:!1},skipPayloadMessagePartCheck:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether SOAP message validation should be disabled.",title:"Skip Payload Message Part Check",required:!1,deprecated:!1},loggingFeatureEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables CXF Logging Feature which writes inbound and outbound SOAP messages to log.",title:"Logging Feature Enabled",required:!1,deprecated:!1},loggingSizeLimit:{kind:"parameter",type:"integer",defaultValue:"49152",description:"To limit the total size of number of bytes the logger will output when logging feature has been enabled and -1 for no limit.",title:"Logging Size Limit",required:!1,deprecated:!1},skipFaultLogging:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option controls whether the PhaseInterceptorChain skips logging the Fault that it catches.",title:"Skip Fault Logging",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"This option is used to set the basic authentication information of password for the CXF client.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"This option is used to set the basic authentication information of username for the CXF client.",title:"Username",required:!1,deprecated:!1},bindingId:{kind:"parameter",type:"string",description:"The bindingId for the service model to use.",title:"Binding Id",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The endpoint name this service is implementing, it maps to the wsdl:portname. In the format of ns:PORT_NAME where ns is a namespace prefix valid at this scope.",title:"Port Name",required:!1,deprecated:!1},publishedEndpointUrl:{kind:"parameter",type:"string",description:"This option can override the endpointUrl that published from the WSDL which can be accessed with service address url plus wsd",title:"Published Endpoint Url",required:!1,deprecated:!1},serviceClass:{kind:"parameter",type:"string",description:"The class name of the SEI (Service Endpoint Interface) class which could have JSR181 annotation or not.",title:"Service Class",required:!1,deprecated:!1},serviceName:{kind:"parameter",type:"string",description:"The service name this service is implementing, it maps to the wsdl:servicename.",title:"Service Name",required:!1,deprecated:!1},wsdlURL:{kind:"parameter",type:"string",description:"The location of the WSDL. Can be on the classpath, file system, or be hosted remotely.",title:"Wsdl URL",required:!1,deprecated:!1}}},cxfrs:{type:"object",title:"CXF-RS",group:"rest",icon:"generic24.png",description:"Expose JAX-RS REST services using Apache CXF or connect to external REST services using CXF REST client.",acceptInput:"",acceptOutput:"",nextSiblingAddedAsChild:"false",properties:{beanId:{kind:"path",type:"string",description:"To lookup an existing configured CxfRsEndpoint. Must used bean: as prefix.",title:"Bean Id",required:!1,deprecated:!1},address:{kind:"path",type:"string",description:"The service publish address.",title:"Address",required:!1,deprecated:!1},features:{kind:"parameter",type:"array",description:"Set the feature list to the CxfRs endpoint.",title:"Features",required:!1,deprecated:!1},loggingFeatureEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables CXF Logging Feature which writes inbound and outbound REST messages to log.",title:"Logging Feature Enabled",required:!1,deprecated:!1},loggingSizeLimit:{kind:"parameter",type:"integer",description:"To limit the total size of number of bytes the logger will output when logging feature has been enabled.",title:"Logging Size Limit",required:!1,deprecated:!1},modelRef:{kind:"parameter",type:"string",description:"This option is used to specify the model file which is useful for the resource class without annotation. When using this option, then the service class can be omitted, to emulate document-only endpoints",title:"Model Ref",required:!1,deprecated:!1},providers:{kind:"parameter",type:"string",description:"Set custom JAX-RS provider(s) list to the CxfRs endpoint. You can specify a string with a list of providers to lookup in the registy separated by comma.",title:"Providers",required:!1,deprecated:!1},resourceClasses:{kind:"parameter",type:"array",description:"The resource classes which you want to export as REST service. Multiple classes can be separated by comma.",title:"Resource Classes",required:!1,deprecated:!1},schemaLocations:{kind:"parameter",type:"array",description:"Sets the locations of the schema(s) which can be used to validate the incoming XML or JAXB-driven JSON.",title:"Schema Locations",required:!1,deprecated:!1},skipFaultLogging:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option controls whether the PhaseInterceptorChain skips logging the Fault that it catches.",title:"Skip Fault Logging",required:!1,deprecated:!1},bindingStyle:{kind:"parameter",type:"object",defaultValue:"Default",enum:["SimpleConsumer","Default","Custom"],description:"Sets how requests and responses will be mapped to/from Camel. Two values are possible: SimpleConsumer: This binding style processes request parameters, multiparts, etc. and maps them to IN headers, IN attachments and to the message body. It aims to eliminate low-level processing of org.apache.cxf.message.MessageContentsList. It also also adds more flexibility and simplicity to the response mapping. Only available for consumers. Default: The default style. For consumers this passes on a MessageContentsList to the route, requiring low-level processing in the route. This is the traditional binding style, which simply dumps the org.apache.cxf.message.MessageContentsList coming in from the CXF stack onto the IN message body. The user is then responsible for processing it according to the contract defined by the JAX-RS method signature. Custom: allows you to specify a custom binding through the binding option.",title:"Binding Style",required:!1,deprecated:!1},publishedEndpointUrl:{kind:"parameter",type:"string",description:"This option can override the endpointUrl that published from the WADL which can be accessed with resource address url plus _wadl",title:"Published Endpoint Url",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},serviceBeans:{kind:"parameter",type:"string",description:"The service beans (the bean ids to lookup in the registry) which you want to export as REST service. Multiple beans can be separated by comma",title:"Service Beans",required:!1,deprecated:!1},cookieHandler:{kind:"parameter",type:"object",description:"Configure a cookie handler to maintain a HTTP session",title:"Cookie Handler",required:!1,deprecated:!1},hostnameVerifier:{kind:"parameter",type:"object",description:"The hostname verifier to be used. Use the # notation to reference a HostnameVerifier from the registry.",title:"Hostname Verifier",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"The Camel SSL setting reference. Use the # notation to reference the SSL Context.",title:"Ssl Context Parameters",required:!1,deprecated:!1},throwExceptionOnFailure:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option tells the CxfRsProducer to inspect return codes and will generate an Exception if the return code is larger than 207.",title:"Throw Exception On Failure",required:!1,deprecated:!1},httpClientAPI:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If it is true, the CxfRsProducer will use the HttpClientAPI to invoke the service. If it is false, the CxfRsProducer will use the ProxyClientAPI to invoke the service",title:"Http Client API",required:!1,deprecated:!1},ignoreDeleteMethodMessageBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option is used to tell CxfRsProducer to ignore the message body of the DELETE method when using HTTP API.",title:"Ignore Delete Method Message Body",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},maxClientCacheSize:{kind:"parameter",type:"integer",defaultValue:"10",description:"This option allows you to configure the maximum size of the cache. The implementation caches CXF clients or ClientFactoryBean in CxfProvider and CxfRsProvider.",title:"Max Client Cache Size",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"To use a custom CxfBinding to control the binding between Camel Message and CXF Message.",title:"Binding",required:!1,deprecated:!1},bus:{kind:"parameter",type:"object",description:"To use a custom configured CXF Bus.",title:"Bus",required:!1,deprecated:!1},continuationTimeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"This option is used to set the CXF continuation timeout which could be used in CxfConsumer by default when the CXF server is using Jetty or Servlet transport.",title:"Continuation Timeout",required:!1,deprecated:!1},cxfRsConfigurer:{kind:"parameter",type:"object",description:"This option could apply the implementation of org.apache.camel.component.cxf.jaxrs.CxfRsEndpointConfigurer which supports to configure the CXF endpoint in programmatic way. User can configure the CXF server and client by implementing configure{Server/Client} method of CxfEndpointConfigurer.",title:"Cxf Rs Configurer",required:!1,deprecated:!1},defaultBus:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will set the default bus when CXF endpoint create a bus by itself",title:"Default Bus",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},performInvocation:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When the option is true, Camel will perform the invocation of the resource class instance and put the response object into the exchange for further processing.",title:"Perform Invocation",required:!1,deprecated:!1},propagateContexts:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When the option is true, JAXRS UriInfo, HttpHeaders, Request and SecurityContext contexts will be available to custom CXFRS processors as typed Camel exchange properties. These contexts can be used to analyze the current requests using JAX-RS API.",title:"Propagate Contexts",required:!1,deprecated:!1}}},dataformat:{type:"object",title:"Data Format",group:"core,transformation",icon:"generic24.png",description:"Use a Camel Data Format as a regular Camel Component.",properties:{name:{kind:"path",type:"string",description:"Name of data format",title:"Name",required:!0,deprecated:!1},operation:{kind:"path",type:"string",enum:["marshal","unmarshal"],description:"Operation to use either marshal or unmarshal",title:"Operation",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},dataset:{type:"object",title:"Dataset",group:"core,testing",icon:"generic24.png",description:"Provide data for load and soak testing of your Camel application.",properties:{name:{kind:"path",type:"object",description:"Name of DataSet to lookup in the registry",title:"Name",required:!0,deprecated:!1},dataSetIndex:{kind:"parameter",type:"string",defaultValue:"lenient",enum:["strict","lenient","off"],description:"Controls the behaviour of the CamelDataSetIndex header. off (consumer) the header will not be set. strict (consumer) the header will be set. lenient (consumer) the header will be set. off (producer) the header value will not be verified, and will not be set if it is not present. strict (producer) the header value must be present and will be verified. lenient (producer) the header value will be verified if it is present, and will be set if it is not present.",title:"Data Set Index",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Time period in millis to wait before starting sending messages.",title:"Initial Delay",required:!1,deprecated:!1},minRate:{kind:"parameter",type:"integer",defaultValue:"0",description:"Wait until the DataSet contains at least this number of messages",title:"Min Rate",required:!1,deprecated:!1},preloadSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"Sets how many messages should be preloaded (sent) before the route completes its initialization",title:"Preload Size",required:!1,deprecated:!1},produceDelay:{kind:"parameter",type:"duration",defaultValue:"3",description:"Allows a delay to be specified which causes a delay when a message is sent by the consumer (to simulate slow processing)",title:"Produce Delay",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},assertPeriod:{kind:"parameter",type:"duration",description:"Sets a grace period after which the mock endpoint will re-assert to ensure the preliminary assertion is still valid. This is used for example to assert that exactly a number of messages arrives. For example if expected count was set to 5, then the assertion is satisfied when 5 or more message arrives. To ensure that exactly 5 messages arrives, then you would need to wait a little period to ensure no further message arrives. This is what you can use this method for. By default this period is disabled.",title:"Assert Period",required:!1,deprecated:!1},consumeDelay:{kind:"parameter",type:"duration",defaultValue:"0",description:"Allows a delay to be specified which causes a delay when a message is consumed by the producer (to simulate slow processing)",title:"Consume Delay",required:!1,deprecated:!1},expectedCount:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies the expected number of message exchanges that should be received by this endpoint. Beware: If you want to expect that 0 messages, then take extra care, as 0 matches when the tests starts, so you need to set a assert period time to let the test run for a while to make sure there are still no messages arrived; for that use setAssertPeriod(long). An alternative is to use NotifyBuilder, and use the notifier to know when Camel is done routing some messages, before you call the assertIsSatisfied() method on the mocks. This allows you to not use a fixed assert period, to speedup testing times. If you want to assert that exactly nth message arrives to this mock endpoint, then see also the setAssertPeriod(long) method for further details.",title:"Expected Count",required:!1,deprecated:!1},failFast:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether assertIsSatisfied() should fail fast at the first detected failed expectation while it may otherwise wait for all expected messages to arrive before performing expectations verifications. Is by default true. Set to false to use behavior as in Camel 2.x.",title:"Fail Fast",required:!1,deprecated:!1},log:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To turn on logging when the mock receives an incoming message. This will log only one time at INFO level for the incoming message. For more detailed logging then set the logger to DEBUG level for the org.apache.camel.component.mock.MockEndpoint class.",title:"Log",required:!1,deprecated:!1},reportGroup:{kind:"parameter",type:"integer",description:"A number that is used to turn on throughput logging based on groups of the size.",title:"Report Group",required:!1,deprecated:!1},resultMinimumWaitTime:{kind:"parameter",type:"duration",description:"Sets the minimum expected amount of time (in millis) the assertIsSatisfied() will wait on a latch until it is satisfied",title:"Result Minimum Wait Time",required:!1,deprecated:!1},resultWaitTime:{kind:"parameter",type:"duration",description:"Sets the maximum amount of time (in millis) the assertIsSatisfied() will wait on a latch until it is satisfied",title:"Result Wait Time",required:!1,deprecated:!1},retainFirst:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies to only retain the first nth number of received Exchanges. This is used when testing with big data, to reduce memory consumption by not storing copies of every Exchange this mock endpoint receives. Important: When using this limitation, then the getReceivedCounter() will still return the actual number of received Exchanges. For example if we have received 5000 Exchanges, and have configured to only retain the first 10 Exchanges, then the getReceivedCounter() will still return 5000 but there is only the first 10 Exchanges in the getExchanges() and getReceivedExchanges() methods. When using this method, then some of the other expectation methods is not supported, for example the expectedBodiesReceived(Object...) sets a expectation on the first number of bodies received. You can configure both setRetainFirst(int) and setRetainLast(int) methods, to limit both the first and last received.",title:"Retain First",required:!1,deprecated:!1},retainLast:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies to only retain the last nth number of received Exchanges. This is used when testing with big data, to reduce memory consumption by not storing copies of every Exchange this mock endpoint receives. Important: When using this limitation, then the getReceivedCounter() will still return the actual number of received Exchanges. For example if we have received 5000 Exchanges, and have configured to only retain the last 20 Exchanges, then the getReceivedCounter() will still return 5000 but there is only the last 20 Exchanges in the getExchanges() and getReceivedExchanges() methods. When using this method, then some of the other expectation methods is not supported, for example the expectedBodiesReceived(Object...) sets a expectation on the first number of bodies received. You can configure both setRetainFirst(int) and setRetainLast(int) methods, to limit both the first and last received.",title:"Retain Last",required:!1,deprecated:!1},sleepForEmptyTest:{kind:"parameter",type:"duration",description:"Allows a sleep to be specified to wait to check that this endpoint really is empty when expectedMessageCount(int) is called with zero",title:"Sleep For Empty Test",required:!1,deprecated:!1},copyOnExchange:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to make a deep copy of the incoming Exchange when received at this mock endpoint. Is by default true.",title:"Copy On Exchange",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"dataset-test":{type:"object",title:"DataSet Test",group:"core,testing",icon:"generic24.png",description:"Extends the mock component by pulling messages from another endpoint on startup to set the expected message bodies.",properties:{name:{kind:"path",type:"string",description:"Name of endpoint to lookup in the registry to use for polling messages used for testing",title:"Name",required:!0,deprecated:!1},anyOrder:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the expected messages should arrive in the same order or can be in any order.",title:"Any Order",required:!1,deprecated:!1},assertPeriod:{kind:"parameter",type:"duration",description:"Sets a grace period after which the mock endpoint will re-assert to ensure the preliminary assertion is still valid. This is used for example to assert that exactly a number of messages arrives. For example if expected count was set to 5, then the assertion is satisfied when 5 or more message arrives. To ensure that exactly 5 messages arrives, then you would need to wait a little period to ensure no further message arrives. This is what you can use this method for. By default this period is disabled.",title:"Assert Period",required:!1,deprecated:!1},delimiter:{kind:"parameter",type:"string",description:"The split delimiter to use when split is enabled. By default the delimiter is new line based. The delimiter can be a regular expression.",title:"Delimiter",required:!1,deprecated:!1},expectedCount:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies the expected number of message exchanges that should be received by this endpoint. Beware: If you want to expect that 0 messages, then take extra care, as 0 matches when the tests starts, so you need to set a assert period time to let the test run for a while to make sure there are still no messages arrived; for that use setAssertPeriod(long). An alternative is to use NotifyBuilder, and use the notifier to know when Camel is done routing some messages, before you call the assertIsSatisfied() method on the mocks. This allows you to not use a fixed assert period, to speedup testing times. If you want to assert that exactly nth message arrives to this mock endpoint, then see also the setAssertPeriod(long) method for further details.",title:"Expected Count",required:!1,deprecated:!1},failFast:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether assertIsSatisfied() should fail fast at the first detected failed expectation while it may otherwise wait for all expected messages to arrive before performing expectations verifications. Is by default true. Set to false to use behavior as in Camel 2.x.",title:"Fail Fast",required:!1,deprecated:!1},log:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To turn on logging when the mock receives an incoming message. This will log only one time at INFO level for the incoming message. For more detailed logging then set the logger to DEBUG level for the org.apache.camel.component.mock.MockEndpoint class.",title:"Log",required:!1,deprecated:!1},reportGroup:{kind:"parameter",type:"integer",description:"A number that is used to turn on throughput logging based on groups of the size.",title:"Report Group",required:!1,deprecated:!1},resultMinimumWaitTime:{kind:"parameter",type:"duration",description:"Sets the minimum expected amount of time (in millis) the assertIsSatisfied() will wait on a latch until it is satisfied",title:"Result Minimum Wait Time",required:!1,deprecated:!1},resultWaitTime:{kind:"parameter",type:"duration",description:"Sets the maximum amount of time (in millis) the assertIsSatisfied() will wait on a latch until it is satisfied",title:"Result Wait Time",required:!1,deprecated:!1},retainFirst:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies to only retain the first nth number of received Exchanges. This is used when testing with big data, to reduce memory consumption by not storing copies of every Exchange this mock endpoint receives. Important: When using this limitation, then the getReceivedCounter() will still return the actual number of received Exchanges. For example if we have received 5000 Exchanges, and have configured to only retain the first 10 Exchanges, then the getReceivedCounter() will still return 5000 but there is only the first 10 Exchanges in the getExchanges() and getReceivedExchanges() methods. When using this method, then some of the other expectation methods is not supported, for example the expectedBodiesReceived(Object...) sets a expectation on the first number of bodies received. You can configure both setRetainFirst(int) and setRetainLast(int) methods, to limit both the first and last received.",title:"Retain First",required:!1,deprecated:!1},retainLast:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies to only retain the last nth number of received Exchanges. This is used when testing with big data, to reduce memory consumption by not storing copies of every Exchange this mock endpoint receives. Important: When using this limitation, then the getReceivedCounter() will still return the actual number of received Exchanges. For example if we have received 5000 Exchanges, and have configured to only retain the last 20 Exchanges, then the getReceivedCounter() will still return 5000 but there is only the last 20 Exchanges in the getExchanges() and getReceivedExchanges() methods. When using this method, then some of the other expectation methods is not supported, for example the expectedBodiesReceived(Object...) sets a expectation on the first number of bodies received. You can configure both setRetainFirst(int) and setRetainLast(int) methods, to limit both the first and last received.",title:"Retain Last",required:!1,deprecated:!1},sleepForEmptyTest:{kind:"parameter",type:"duration",description:"Allows a sleep to be specified to wait to check that this endpoint really is empty when expectedMessageCount(int) is called with zero",title:"Sleep For Empty Test",required:!1,deprecated:!1},split:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled the messages loaded from the test endpoint will be split using new line delimiters so each line is an expected message. For example to use a file endpoint to load a file where each line is an expected message.",title:"Split",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"2000",description:"The timeout to use when polling for message bodies from the URI",title:"Timeout",required:!1,deprecated:!1},copyOnExchange:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to make a deep copy of the incoming Exchange when received at this mock endpoint. Is by default true.",title:"Copy On Exchange",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"debezium-db2":{type:"object",title:"Debezium DB2 Connector",group:"database",icon:"generic24.png",description:"Capture changes from a DB2 database.",properties:{name:{kind:"path",type:"string",description:"Unique name for the connector. Attempting to register again with the same name will fail.",title:"Name",required:!0,deprecated:!1},additionalProperties:{kind:"parameter",type:"object",description:"Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http://localhost:8811/avro",title:"Additional Properties",required:!1,deprecated:!1},internalKeyConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter.",title:"Internal Key Converter",required:!1,deprecated:!1},internalValueConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter.",title:"Internal Value Converter",required:!1,deprecated:!1},offsetCommitPolicy:{kind:"parameter",type:"string",description:"The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals.",title:"Offset Commit Policy",required:!1,deprecated:!1},offsetCommitTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds.",title:"Offset Commit Timeout Ms",required:!1,deprecated:!1},offsetFlushIntervalMs:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Interval at which to try committing offsets. The default is 1 minute.",title:"Offset Flush Interval Ms",required:!1,deprecated:!1},offsetStorage:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.storage.FileOffsetBackingStore",description:"The name of the Java class that is responsible for persistence of connector offsets.",title:"Offset Storage",required:!1,deprecated:!1},offsetStorageFileName:{kind:"parameter",type:"string",description:"Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore.",title:"Offset Storage File Name",required:!1,deprecated:!1},offsetStoragePartitions:{kind:"parameter",type:"integer",description:"The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'.",title:"Offset Storage Partitions",required:!1,deprecated:!1},offsetStorageReplicationFactor:{kind:"parameter",type:"integer",description:"Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore",title:"Offset Storage Replication Factor",required:!1,deprecated:!1},offsetStorageTopic:{kind:"parameter",type:"string",description:"The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore.",title:"Offset Storage Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},columnExcludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to exclude from change events",title:"Column Exclude List",required:!1,deprecated:!1},columnIncludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to include in change events",title:"Column Include List",required:!1,deprecated:!1},columnPropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching fully-qualified names of columns that adds the columns original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Column Propagate Source Type",required:!1,deprecated:!1},converters:{kind:"parameter",type:"string",description:"Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'",title:"Converters",required:!1,deprecated:!1},databaseDbname:{kind:"parameter",type:"string",description:"The name of the database from which the connector should capture changes",title:"Database Dbname",required:!1,deprecated:!1},databaseHostname:{kind:"parameter",type:"string",description:"Resolvable hostname or IP address of the database server.",title:"Database Hostname",required:!1,deprecated:!1},databasePassword:{kind:"parameter",type:"string",description:"Password of the database user to be used when connecting to the database.",title:"Database Password",required:!0,deprecated:!1},databasePort:{kind:"parameter",type:"integer",defaultValue:"50000",description:"Port of the database server.",title:"Database Port",required:!1,deprecated:!1},databaseUser:{kind:"parameter",type:"string",description:"Name of the database user to be used when connecting to the database.",title:"Database User",required:!1,deprecated:!1},datatypePropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching the database-specific data type names that adds the data type's original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Datatype Propagate Source Type",required:!1,deprecated:!1},decimalHandlingMode:{kind:"parameter",type:"string",defaultValue:"precise",description:"Specify how DECIMAL and NUMERIC columns should be represented in change events, including: 'precise' (the default) uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'string' uses string to represent values; 'double' represents values using Java's 'double', which may not offer the precision but will be far easier to use in consumers.",title:"Decimal Handling Mode",required:!1,deprecated:!1},errorsMaxRetries:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The maximum number of retries on connection errors before failing (-1 = no limit, 0 = disabled, 0 = num of retries).",title:"Errors Max Retries",required:!1,deprecated:!1},eventProcessingFailureHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped.",title:"Event Processing Failure Handling Mode",required:!1,deprecated:!1},heartbeatIntervalMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default.",title:"Heartbeat Interval Ms",required:!1,deprecated:!1},heartbeatTopicsPrefix:{kind:"parameter",type:"string",defaultValue:"__debezium-heartbeat",description:"The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",title:"Heartbeat Topics Prefix",required:!1,deprecated:!1},includeSchemaChanges:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the connector should publish changes in the database schema to a Kafka topic with the same name as the database server ID. Each schema change will be recorded using a key that contains the database name and whose value include logical description of the new schema and optionally the DDL statement(s). The default is 'true'. This is independent of how the connector internally records database schema history.",title:"Include Schema Changes",required:!1,deprecated:!1},incrementalSnapshotChunkSize:{kind:"parameter",type:"integer",defaultValue:"1024",description:"The maximum size of chunk (number of documents/rows) for incremental snapshotting",title:"Incremental Snapshot Chunk Size",required:!1,deprecated:!1},maxBatchSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Maximum size of each batch of source records. Defaults to 2048.",title:"Max Batch Size",required:!1,deprecated:!1},maxQueueSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",title:"Max Queue Size",required:!1,deprecated:!1},maxQueueSizeInBytes:{kind:"parameter",type:"integer",defaultValue:"0",description:"Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",title:"Max Queue Size In Bytes",required:!1,deprecated:!1},messageKeyColumns:{kind:"parameter",type:"string",description:"A semicolon-separated list of expressions that match fully-qualified tables and column(s) to be used as message key. Each expression must match the pattern ':', where the table names could be defined as (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connector, and the key columns are a comma-separated list of columns representing the custom key. For any table without an explicit key configuration the table's primary key column(s) will be used as message key. Example: dbserver1.inventory.orderlines:orderId,orderLineId;dbserver1.inventory.orders:id",title:"Message Key Columns",required:!1,deprecated:!1},notificationEnabledChannels:{kind:"parameter",type:"string",description:"List of notification channels names that are enabled.",title:"Notification Enabled Channels",required:!1,deprecated:!1},notificationSinkTopicName:{kind:"parameter",type:"string",description:"The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels",title:"Notification Sink Topic Name",required:!1,deprecated:!1},pollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"500ms",description:"Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms.",title:"Poll Interval Ms",required:!1,deprecated:!1},provideTransactionMetadata:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables transaction metadata extraction together with event counting",title:"Provide Transaction Metadata",required:!1,deprecated:!1},queryFetchSize:{kind:"parameter",type:"integer",defaultValue:"10000",description:"The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size. The default value is '10000'.",title:"Query Fetch Size",required:!1,deprecated:!1},retriableRestartConnectorWaitMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms.",title:"Retriable Restart Connector Wait Ms",required:!1,deprecated:!1},schemaHistoryInternal:{kind:"parameter",type:"string",defaultValue:"io.debezium.storage.kafka.history.KafkaSchemaHistory",description:"The name of the SchemaHistory class that should be used to store and recover database schema changes. The configuration properties for the history are prefixed with the 'schema.history.internal.' string.",title:"Schema History Internal",required:!1,deprecated:!1},schemaHistoryInternalFileFilename:{kind:"parameter",type:"string",description:"The path to the file that will be used to record the database schema history",title:"Schema History Internal File Filename",required:!1,deprecated:!1},schemaHistoryInternalSkipUnparseableDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls the action Debezium will take when it meets a DDL statement in binlog, that it cannot parse.By default the connector will stop operating but by changing the setting it can ignore the statements which it cannot parse. If skipping is enabled then Debezium can miss metadata changes.",title:"Schema History Internal Skip Unparseable Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedDatabasesDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls what DDL will Debezium store in database schema history. By default (true) only DDL that manipulates a table from captured schema/database will be stored. If set to false, then Debezium will store all incoming DDL statements.",title:"Schema History Internal Store Only Captured Databases Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedTablesDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls what DDL will Debezium store in database schema history. By default (false) Debezium will store all incoming DDL statements. If set to true, then only DDL that manipulates a captured table will be stored.",title:"Schema History Internal Store Only Captured Tables Ddl",required:!1,deprecated:!1},schemaNameAdjustmentMode:{kind:"parameter",type:"string",defaultValue:"none",description:"Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)",title:"Schema Name Adjustment Mode",required:!1,deprecated:!1},signalDataCollection:{kind:"parameter",type:"string",description:"The name of the data collection that is used to send signals/commands to Debezium. Signaling is disabled when not set.",title:"Signal Data Collection",required:!1,deprecated:!1},signalEnabledChannels:{kind:"parameter",type:"string",defaultValue:"source",description:"List of channels names that are enabled. Source channel is enabled by default",title:"Signal Enabled Channels",required:!1,deprecated:!1},signalPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"5s",description:"Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds.",title:"Signal Poll Interval Ms",required:!1,deprecated:!1},skippedOperations:{kind:"parameter",type:"string",defaultValue:"t",description:"The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped.",title:"Skipped Operations",required:!1,deprecated:!1},snapshotDelayMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms.",title:"Snapshot Delay Ms",required:!1,deprecated:!1},snapshotFetchSize:{kind:"parameter",type:"integer",description:"The maximum number of records that should be loaded into memory while performing a snapshot.",title:"Snapshot Fetch Size",required:!1,deprecated:!1},snapshotIncludeCollectionList:{kind:"parameter",type:"string",description:"This setting must be set to specify a list of tables/collections whose snapshot must be taken on creating or restarting the connector.",title:"Snapshot Include Collection List",required:!1,deprecated:!1},snapshotLockTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The maximum number of millis to wait for table locks at the beginning of a snapshot. If locks cannot be acquired in this time frame, the snapshot will be aborted. Defaults to 10 seconds",title:"Snapshot Lock Timeout Ms",required:!1,deprecated:!1},snapshotMode:{kind:"parameter",type:"string",defaultValue:"initial",description:"The criteria for running a snapshot upon startup of the connector. Options include: 'initial' (the default) to specify the connector should run a snapshot only when no offsets are available for the logical server name; 'schema_only' to specify the connector should run a snapshot of the schema when no offsets are available for the logical server name.",title:"Snapshot Mode",required:!1,deprecated:!1},snapshotSelectStatementOverrides:{kind:"parameter",type:"string",description:"This property contains a comma-separated list of fully-qualified tables (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connectors. Select statements for the individual tables are specified in further configuration properties, one for each table, identified by the id 'snapshot.select.statement.overrides.DB_NAME.TABLE_NAME' or 'snapshot.select.statement.overrides.SCHEMA_NAME.TABLE_NAME', respectively. The value of those properties is the select statement to use when retrieving data from the specific table during snapshotting. A possible use case for large append-only tables is setting a specific point where to start (resume) snapshotting, in case a previous snapshotting was interrupted.",title:"Snapshot Select Statement Overrides",required:!1,deprecated:!1},snapshotTablesOrderByRowCount:{kind:"parameter",type:"string",defaultValue:"disabled",description:"Controls the order in which tables are processed in the initial snapshot. A descending value will order the tables by row count descending. A ascending value will order the tables by row count ascending. A value of disabled (the default) will disable ordering by row count.",title:"Snapshot Tables Order By Row Count",required:!1,deprecated:!1},sourceinfoStructMaker:{kind:"parameter",type:"string",defaultValue:"io.debezium.connector.db2.Db2SourceInfoStructMaker",description:"The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct.",title:"Sourceinfo Struct Maker",required:!1,deprecated:!1},tableExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring",title:"Table Exclude List",required:!1,deprecated:!1},tableIgnoreBuiltin:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Flag specifying whether built-in tables should be ignored.",title:"Table Ignore Builtin",required:!1,deprecated:!1},tableIncludeList:{kind:"parameter",type:"string",description:"The tables for which changes are to be captured",title:"Table Include List",required:!1,deprecated:!1},timePrecisionMode:{kind:"parameter",type:"string",defaultValue:"adaptive",description:"Time, date, and timestamps can be represented with different kinds of precisions, including: 'adaptive' (the default) bases the precision of time, date, and timestamp values on the database column's precision; 'adaptive_time_microseconds' like 'adaptive' mode, but TIME fields always use microseconds precision; 'connect' always represents time, date, and timestamp values using Kafka Connect's built-in representations for Time, Date, and Timestamp, which uses millisecond precision regardless of the database columns' precision.",title:"Time Precision Mode",required:!1,deprecated:!1},tombstonesOnDelete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",title:"Tombstones On Delete",required:!1,deprecated:!1},topicNamingStrategy:{kind:"parameter",type:"string",defaultValue:"io.debezium.schema.SchemaTopicNamingStrategy",description:"The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc.",title:"Topic Naming Strategy",required:!1,deprecated:!1},topicPrefix:{kind:"parameter",type:"string",description:"Topic prefix that identifies and provides a namespace for the particular database server/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted.",title:"Topic Prefix",required:!0,deprecated:!1}}},"debezium-mongodb":{type:"object",title:"Debezium MongoDB Connector",group:"database",icon:"generic24.png",description:"Capture changes from a MongoDB database.",properties:{name:{kind:"path",type:"string",description:"Unique name for the connector. Attempting to register again with the same name will fail.",title:"Name",required:!0,deprecated:!1},additionalProperties:{kind:"parameter",type:"object",description:"Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http://localhost:8811/avro",title:"Additional Properties",required:!1,deprecated:!1},internalKeyConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter.",title:"Internal Key Converter",required:!1,deprecated:!1},internalValueConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter.",title:"Internal Value Converter",required:!1,deprecated:!1},offsetCommitPolicy:{kind:"parameter",type:"string",description:"The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals.",title:"Offset Commit Policy",required:!1,deprecated:!1},offsetCommitTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds.",title:"Offset Commit Timeout Ms",required:!1,deprecated:!1},offsetFlushIntervalMs:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Interval at which to try committing offsets. The default is 1 minute.",title:"Offset Flush Interval Ms",required:!1,deprecated:!1},offsetStorage:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.storage.FileOffsetBackingStore",description:"The name of the Java class that is responsible for persistence of connector offsets.",title:"Offset Storage",required:!1,deprecated:!1},offsetStorageFileName:{kind:"parameter",type:"string",description:"Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore.",title:"Offset Storage File Name",required:!1,deprecated:!1},offsetStoragePartitions:{kind:"parameter",type:"integer",description:"The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'.",title:"Offset Storage Partitions",required:!1,deprecated:!1},offsetStorageReplicationFactor:{kind:"parameter",type:"integer",description:"Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore",title:"Offset Storage Replication Factor",required:!1,deprecated:!1},offsetStorageTopic:{kind:"parameter",type:"string",description:"The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore.",title:"Offset Storage Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},captureMode:{kind:"parameter",type:"string",defaultValue:"change_streams_update_full",description:"The method used to capture changes from MongoDB server. Options include: 'change_streams' to capture changes via MongoDB Change Streams, update events do not contain full documents; 'change_streams_update_full' (the default) to capture changes via MongoDB Change Streams, update events contain full documents",title:"Capture Mode",required:!1,deprecated:!1},collectionExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the collection names for which changes are to be excluded",title:"Collection Exclude List",required:!1,deprecated:!1},collectionIncludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the collection names for which changes are to be captured",title:"Collection Include List",required:!1,deprecated:!1},converters:{kind:"parameter",type:"string",description:"Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'",title:"Converters",required:!1,deprecated:!1},cursorMaxAwaitTimeMs:{kind:"parameter",type:"duration",description:"The maximum processing time in milliseconds to wait for the oplog cursor to process a single poll request",title:"Cursor Max Await Time Ms",required:!1,deprecated:!1},databaseExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the database names for which changes are to be excluded",title:"Database Exclude List",required:!1,deprecated:!1},databaseIncludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the database names for which changes are to be captured",title:"Database Include List",required:!1,deprecated:!1},errorsMaxRetries:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The maximum number of retries on connection errors before failing (-1 = no limit, 0 = disabled, 0 = num of retries).",title:"Errors Max Retries",required:!1,deprecated:!1},eventProcessingFailureHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped.",title:"Event Processing Failure Handling Mode",required:!1,deprecated:!1},fieldExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of the fully-qualified names of fields that should be excluded from change event message values",title:"Field Exclude List",required:!1,deprecated:!1},fieldRenames:{kind:"parameter",type:"string",description:"A comma-separated list of the fully-qualified replacements of fields that should be used to rename fields in change event message values. Fully-qualified replacements for fields are of the form databaseName.collectionName.fieldName.nestedFieldName:newNestedFieldName, where databaseName and collectionName may contain the wildcard () which matches any characters, the colon character (:) is used to determine rename mapping of field.",title:"Field Renames",required:!1,deprecated:!1},heartbeatIntervalMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default.",title:"Heartbeat Interval Ms",required:!1,deprecated:!1},heartbeatTopicsPrefix:{kind:"parameter",type:"string",defaultValue:"__debezium-heartbeat",description:"The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",title:"Heartbeat Topics Prefix",required:!1,deprecated:!1},maxBatchSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Maximum size of each batch of source records. Defaults to 2048.",title:"Max Batch Size",required:!1,deprecated:!1},maxQueueSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",title:"Max Queue Size",required:!1,deprecated:!1},maxQueueSizeInBytes:{kind:"parameter",type:"integer",defaultValue:"0",description:"Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",title:"Max Queue Size In Bytes",required:!1,deprecated:!1},mongodbAuthsource:{kind:"parameter",type:"string",defaultValue:"admin",description:"Database containing user credentials.",title:"Mongodb Authsource",required:!1,deprecated:!1},mongodbConnectionMode:{kind:"parameter",type:"string",defaultValue:"replica_set",description:"The method used to connect to MongoDB cluster. Options include: 'replica_set' (the default) to individually connect to each replica set / shard 'sharded' to connect via single connection obtained from connection string",title:"Mongodb Connection Mode",required:!1,deprecated:!1},mongodbConnectionString:{kind:"parameter",type:"string",description:"Database connection string.",title:"Mongodb Connection String",required:!1,deprecated:!1},mongodbConnectTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The connection timeout, given in milliseconds. Defaults to 10 seconds (10,000 ms).",title:"Mongodb Connect Timeout Ms",required:!1,deprecated:!1},mongodbHeartbeatFrequencyMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The frequency that the cluster monitor attempts to reach each server. Defaults to 10 seconds (10,000 ms).",title:"Mongodb Heartbeat Frequency Ms",required:!1,deprecated:!1},mongodbPassword:{kind:"parameter",type:"string",description:"Password to be used when connecting to MongoDB, if necessary.",title:"Mongodb Password",required:!0,deprecated:!1},mongodbPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"30s",description:"Interval for looking for new, removed, or changed replica sets, given in milliseconds. Defaults to 30 seconds (30,000 ms).",title:"Mongodb Poll Interval Ms",required:!1,deprecated:!1},mongodbServerSelectionTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"30s",description:"The server selection timeout, given in milliseconds. Defaults to 10 seconds (10,000 ms).",title:"Mongodb Server Selection Timeout Ms",required:!1,deprecated:!1},mongodbSocketTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"The socket timeout, given in milliseconds. Defaults to 0 ms.",title:"Mongodb Socket Timeout Ms",required:!1,deprecated:!1},mongodbSslEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should connector use SSL to connect to MongoDB instances",title:"Mongodb Ssl Enabled",required:!1,deprecated:!1},mongodbSslInvalidHostnameAllowed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether invalid host names are allowed when using SSL. If true the connection will not prevent man-in-the-middle attacks",title:"Mongodb Ssl Invalid Hostname Allowed",required:!1,deprecated:!1},mongodbUser:{kind:"parameter",type:"string",description:"Database user for connecting to MongoDB, if necessary.",title:"Mongodb User",required:!1,deprecated:!1},notificationEnabledChannels:{kind:"parameter",type:"string",description:"List of notification channels names that are enabled.",title:"Notification Enabled Channels",required:!1,deprecated:!1},notificationSinkTopicName:{kind:"parameter",type:"string",description:"The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels",title:"Notification Sink Topic Name",required:!1,deprecated:!1},pollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"500ms",description:"Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms.",title:"Poll Interval Ms",required:!1,deprecated:!1},provideTransactionMetadata:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables transaction metadata extraction together with event counting",title:"Provide Transaction Metadata",required:!1,deprecated:!1},queryFetchSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size.",title:"Query Fetch Size",required:!1,deprecated:!1},retriableRestartConnectorWaitMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms.",title:"Retriable Restart Connector Wait Ms",required:!1,deprecated:!1},schemaHistoryInternalFileFilename:{kind:"parameter",type:"string",description:"The path to the file that will be used to record the database schema history",title:"Schema History Internal File Filename",required:!1,deprecated:!1},schemaNameAdjustmentMode:{kind:"parameter",type:"string",defaultValue:"none",description:"Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)",title:"Schema Name Adjustment Mode",required:!1,deprecated:!1},signalDataCollection:{kind:"parameter",type:"string",description:"The name of the data collection that is used to send signals/commands to Debezium. Signaling is disabled when not set.",title:"Signal Data Collection",required:!1,deprecated:!1},signalEnabledChannels:{kind:"parameter",type:"string",defaultValue:"source",description:"List of channels names that are enabled. Source channel is enabled by default",title:"Signal Enabled Channels",required:!1,deprecated:!1},signalPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"5s",description:"Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds.",title:"Signal Poll Interval Ms",required:!1,deprecated:!1},skippedOperations:{kind:"parameter",type:"string",defaultValue:"t",description:"The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped.",title:"Skipped Operations",required:!1,deprecated:!1},snapshotCollectionFilterOverrides:{kind:"parameter",type:"string",description:"This property contains a comma-separated list of ., for which the initial snapshot may be a subset of data present in the data source. The subset would be defined by mongodb filter query specified as value for property snapshot.collection.filter.override..",title:"Snapshot Collection Filter Overrides",required:!1,deprecated:!1},snapshotDelayMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms.",title:"Snapshot Delay Ms",required:!1,deprecated:!1},snapshotFetchSize:{kind:"parameter",type:"integer",description:"The maximum number of records that should be loaded into memory while performing a snapshot.",title:"Snapshot Fetch Size",required:!1,deprecated:!1},snapshotIncludeCollectionList:{kind:"parameter",type:"string",description:"This setting must be set to specify a list of tables/collections whose snapshot must be taken on creating or restarting the connector.",title:"Snapshot Include Collection List",required:!1,deprecated:!1},snapshotMaxThreads:{kind:"parameter",type:"integer",defaultValue:"1",description:"The maximum number of threads used to perform the snapshot. Defaults to 1.",title:"Snapshot Max Threads",required:!1,deprecated:!1},snapshotMode:{kind:"parameter",type:"string",defaultValue:"initial",description:"The criteria for running a snapshot upon startup of the connector. Select one of the following snapshot options: 'initial' (default): If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures the current full state of the configured tables. After the snapshot completes, the connector begins to stream changes from the oplog. 'never': The connector does not run a snapshot. Upon first startup, the connector immediately begins reading from the beginning of the oplog.",title:"Snapshot Mode",required:!1,deprecated:!1},sourceinfoStructMaker:{kind:"parameter",type:"string",defaultValue:"io.debezium.connector.mongodb.MongoDbSourceInfoStructMaker",description:"The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct.",title:"Sourceinfo Struct Maker",required:!1,deprecated:!1},tombstonesOnDelete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",title:"Tombstones On Delete",required:!1,deprecated:!1},topicNamingStrategy:{kind:"parameter",type:"string",defaultValue:"io.debezium.schema.SchemaTopicNamingStrategy",description:"The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc.",title:"Topic Naming Strategy",required:!1,deprecated:!1},topicPrefix:{kind:"parameter",type:"string",description:"Topic prefix that identifies and provides a namespace for the particular database server/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted.",title:"Topic Prefix",required:!0,deprecated:!1}}},"debezium-mysql":{type:"object",title:"Debezium MySQL Connector",group:"database",icon:"generic24.png",description:"Capture changes from a MySQL database.",properties:{name:{kind:"path",type:"string",description:"Unique name for the connector. Attempting to register again with the same name will fail.",title:"Name",required:!0,deprecated:!1},additionalProperties:{kind:"parameter",type:"object",description:"Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http://localhost:8811/avro",title:"Additional Properties",required:!1,deprecated:!1},internalKeyConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter.",title:"Internal Key Converter",required:!1,deprecated:!1},internalValueConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter.",title:"Internal Value Converter",required:!1,deprecated:!1},offsetCommitPolicy:{kind:"parameter",type:"string",description:"The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals.",title:"Offset Commit Policy",required:!1,deprecated:!1},offsetCommitTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds.",title:"Offset Commit Timeout Ms",required:!1,deprecated:!1},offsetFlushIntervalMs:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Interval at which to try committing offsets. The default is 1 minute.",title:"Offset Flush Interval Ms",required:!1,deprecated:!1},offsetStorage:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.storage.FileOffsetBackingStore",description:"The name of the Java class that is responsible for persistence of connector offsets.",title:"Offset Storage",required:!1,deprecated:!1},offsetStorageFileName:{kind:"parameter",type:"string",description:"Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore.",title:"Offset Storage File Name",required:!1,deprecated:!1},offsetStoragePartitions:{kind:"parameter",type:"integer",description:"The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'.",title:"Offset Storage Partitions",required:!1,deprecated:!1},offsetStorageReplicationFactor:{kind:"parameter",type:"integer",description:"Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore",title:"Offset Storage Replication Factor",required:!1,deprecated:!1},offsetStorageTopic:{kind:"parameter",type:"string",description:"The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore.",title:"Offset Storage Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},bigintUnsignedHandlingMode:{kind:"parameter",type:"string",defaultValue:"long",description:"Specify how BIGINT UNSIGNED columns should be represented in change events, including: 'precise' uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'long' (the default) represents values using Java's 'long', which may not offer the precision but will be far easier to use in consumers.",title:"Bigint Unsigned Handling Mode",required:!1,deprecated:!1},binaryHandlingMode:{kind:"parameter",type:"string",defaultValue:"bytes",description:"Specify how binary (blob, binary, etc.) columns should be represented in change events, including: 'bytes' represents binary data as byte array (default); 'base64' represents binary data as base64-encoded string; 'base64-url-safe' represents binary data as base64-url-safe-encoded string; 'hex' represents binary data as hex-encoded (base16) string",title:"Binary Handling Mode",required:!1,deprecated:!1},binlogBufferSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The size of a look-ahead buffer used by the binlog reader to decide whether the transaction in progress is going to be committed or rolled back. Use 0 to disable look-ahead buffering. Defaults to 0 (i.e. buffering is disabled).",title:"Binlog Buffer Size",required:!1,deprecated:!1},columnExcludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to exclude from change events",title:"Column Exclude List",required:!1,deprecated:!1},columnIncludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to include in change events",title:"Column Include List",required:!1,deprecated:!1},columnPropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching fully-qualified names of columns that adds the columns original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Column Propagate Source Type",required:!1,deprecated:!1},connectKeepAlive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether a separate thread should be used to ensure the connection is kept alive.",title:"Connect Keep Alive",required:!1,deprecated:!1},connectKeepAliveIntervalMs:{kind:"parameter",type:"duration",defaultValue:"1m",description:"Interval for connection checking if keep alive thread is used, given in milliseconds Defaults to 1 minute (60,000 ms).",title:"Connect Keep Alive Interval Ms",required:!1,deprecated:!1},connectTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"30s",description:"Maximum time to wait after trying to connect to the database before timing out, given in milliseconds. Defaults to 30 seconds (30,000 ms).",title:"Connect Timeout Ms",required:!1,deprecated:!1},converters:{kind:"parameter",type:"string",description:"Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'",title:"Converters",required:!1,deprecated:!1},databaseExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match database names to be excluded from monitoring",title:"Database Exclude List",required:!1,deprecated:!1},databaseHostname:{kind:"parameter",type:"string",description:"Resolvable hostname or IP address of the database server.",title:"Database Hostname",required:!1,deprecated:!1},databaseIncludeList:{kind:"parameter",type:"string",description:"The databases for which changes are to be captured",title:"Database Include List",required:!1,deprecated:!1},databaseInitialStatements:{kind:"parameter",type:"string",description:"A semicolon separated list of SQL statements to be executed when a JDBC connection (not binlog reading connection) to the database is established. Note that the connector may establish JDBC connections at its own discretion, so this should typically be used for configuration of session parameters only, but not for executing DML statements. Use doubled semicolon (';;') to use a semicolon as a character and not as a delimiter.",title:"Database Initial Statements",required:!1,deprecated:!1},databaseJdbcDriver:{kind:"parameter",type:"string",defaultValue:"com.mysql.cj.jdbc.Driver",description:"JDBC Driver class name used to connect to the MySQL database server.",title:"Database Jdbc Driver",required:!1,deprecated:!1},databasePassword:{kind:"parameter",type:"string",description:"Password of the database user to be used when connecting to the database.",title:"Database Password",required:!0,deprecated:!1},databasePort:{kind:"parameter",type:"integer",defaultValue:"3306",description:"Port of the database server.",title:"Database Port",required:!1,deprecated:!1},databaseServerId:{kind:"parameter",type:"integer",description:"A numeric ID of this database client, which must be unique across all currently-running database processes in the cluster. This connector joins the MySQL database cluster as another server (with this unique ID) so it can read the binlog.",title:"Database Server Id",required:!1,deprecated:!1},databaseServerIdOffset:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Only relevant if parallel snapshotting is configured. During parallel snapshotting, multiple (4) connections open to the database client, and they each need their own unique connection ID. This offset is used to generate those IDs from the base configured cluster ID.",title:"Database Server Id Offset",required:!1,deprecated:!1},databaseSslKeystore:{kind:"parameter",type:"string",description:"The location of the key store file. This is optional and can be used for two-way authentication between the client and the MySQL Server.",title:"Database Ssl Keystore",required:!1,deprecated:!1},databaseSslKeystorePassword:{kind:"parameter",type:"string",description:"The password for the key store file. This is optional and only needed if 'database.ssl.keystore' is configured.",title:"Database Ssl Keystore Password",required:!1,deprecated:!1},databaseSslMode:{kind:"parameter",type:"string",defaultValue:"preferred",description:"Whether to use an encrypted connection to MySQL. Options include: 'disabled' to use an unencrypted connection; 'preferred' (the default) to establish a secure (encrypted) connection if the server supports secure connections, but fall back to an unencrypted connection otherwise; 'required' to use a secure (encrypted) connection, and fail if one cannot be established; 'verify_ca' like 'required' but additionally verify the server TLS certificate against the configured Certificate Authority (CA) certificates, or fail if no valid matching CA certificates are found; or'verify_identity' like 'verify_ca' but additionally verify that the server certificate matches the host to which the connection is attempted.",title:"Database Ssl Mode",required:!1,deprecated:!1},databaseSslTruststore:{kind:"parameter",type:"string",description:"The location of the trust store file for the server certificate verification.",title:"Database Ssl Truststore",required:!1,deprecated:!1},databaseSslTruststorePassword:{kind:"parameter",type:"string",description:"The password for the trust store file. Used to check the integrity of the truststore, and unlock the truststore.",title:"Database Ssl Truststore Password",required:!1,deprecated:!1},databaseUser:{kind:"parameter",type:"string",description:"Name of the database user to be used when connecting to the database.",title:"Database User",required:!1,deprecated:!1},datatypePropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching the database-specific data type names that adds the data type's original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Datatype Propagate Source Type",required:!1,deprecated:!1},decimalHandlingMode:{kind:"parameter",type:"string",defaultValue:"precise",description:"Specify how DECIMAL and NUMERIC columns should be represented in change events, including: 'precise' (the default) uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'string' uses string to represent values; 'double' represents values using Java's 'double', which may not offer the precision but will be far easier to use in consumers.",title:"Decimal Handling Mode",required:!1,deprecated:!1},enableTimeAdjuster:{kind:"parameter",type:"boolean",defaultValue:"true",description:"MySQL allows user to insert year value as either 2-digit or 4-digit. In case of two digit the value is automatically mapped into 1970 - 2069.false - delegates the implicit conversion to the databasetrue - (the default) Debezium makes the conversion",title:"Enable Time Adjuster",required:!1,deprecated:!1},errorsMaxRetries:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The maximum number of retries on connection errors before failing (-1 = no limit, 0 = disabled, 0 = num of retries).",title:"Errors Max Retries",required:!1,deprecated:!1},eventDeserializationFailureHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how failures during deserialization of binlog events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its binlog position is raised, causing the connector to be stopped; 'warn' the problematic event and its binlog position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped.",title:"Event Deserialization Failure Handling Mode",required:!1,deprecated:!1},eventProcessingFailureHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped.",title:"Event Processing Failure Handling Mode",required:!1,deprecated:!1},gtidSourceExcludes:{kind:"parameter",type:"string",description:"The source UUIDs used to exclude GTID ranges when determine the starting position in the MySQL server's binlog.",title:"Gtid Source Excludes",required:!1,deprecated:!1},gtidSourceFilterDmlEvents:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If set to true, we will only produce DML events into Kafka for transactions that were written on mysql servers with UUIDs matching the filters defined by the gtid.source.includes or gtid.source.excludes configuration options, if they are specified.",title:"Gtid Source Filter Dml Events",required:!1,deprecated:!1},gtidSourceIncludes:{kind:"parameter",type:"string",description:"The source UUIDs used to include GTID ranges when determine the starting position in the MySQL server's binlog.",title:"Gtid Source Includes",required:!1,deprecated:!1},heartbeatActionQuery:{kind:"parameter",type:"string",description:"The query executed with every heartbeat.",title:"Heartbeat Action Query",required:!1,deprecated:!1},heartbeatIntervalMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default.",title:"Heartbeat Interval Ms",required:!1,deprecated:!1},heartbeatTopicsPrefix:{kind:"parameter",type:"string",defaultValue:"__debezium-heartbeat",description:"The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",title:"Heartbeat Topics Prefix",required:!1,deprecated:!1},includeQuery:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the connector should include the original SQL query that generated the change event. Note: This option requires MySQL be configured with the binlog_rows_query_log_events option set to ON. Query will not be present for events generated from snapshot. WARNING: Enabling this option may expose tables or fields explicitly excluded or masked by including the original SQL statement in the change event. For this reason the default value is 'false'.",title:"Include Query",required:!1,deprecated:!1},includeSchemaChanges:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the connector should publish changes in the database schema to a Kafka topic with the same name as the database server ID. Each schema change will be recorded using a key that contains the database name and whose value include logical description of the new schema and optionally the DDL statement(s). The default is 'true'. This is independent of how the connector internally records database schema history.",title:"Include Schema Changes",required:!1,deprecated:!1},includeSchemaComments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the connector parse table and column's comment to metadata object. Note: Enable this option will bring the implications on memory usage. The number and size of ColumnImpl objects is what largely impacts how much memory is consumed by the Debezium connectors, and adding a String to each of them can potentially be quite heavy. The default is 'false'.",title:"Include Schema Comments",required:!1,deprecated:!1},inconsistentSchemaHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how binlog events that belong to a table missing from internal schema representation (i.e. internal representation is not consistent with database) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its binlog position is raised, causing the connector to be stopped; 'warn' the problematic event and its binlog position will be logged and the event will be skipped; 'skip' the problematic event will be skipped.",title:"Inconsistent Schema Handling Mode",required:!1,deprecated:!1},incrementalSnapshotAllowSchemaChanges:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Detect schema change during an incremental snapshot and re-select a current chunk to avoid locking DDLs. Note that changes to a primary key are not supported and can cause incorrect results if performed during an incremental snapshot. Another limitation is that if a schema change affects only columns' default values, then the change won't be detected until the DDL is processed from the binlog stream. This doesn't affect the snapshot events' values, but the schema of snapshot events may have outdated defaults.",title:"Incremental Snapshot Allow Schema Changes",required:!1,deprecated:!1},incrementalSnapshotChunkSize:{kind:"parameter",type:"integer",defaultValue:"1024",description:"The maximum size of chunk (number of documents/rows) for incremental snapshotting",title:"Incremental Snapshot Chunk Size",required:!1,deprecated:!1},maxBatchSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Maximum size of each batch of source records. Defaults to 2048.",title:"Max Batch Size",required:!1,deprecated:!1},maxQueueSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",title:"Max Queue Size",required:!1,deprecated:!1},maxQueueSizeInBytes:{kind:"parameter",type:"integer",defaultValue:"0",description:"Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",title:"Max Queue Size In Bytes",required:!1,deprecated:!1},messageKeyColumns:{kind:"parameter",type:"string",description:"A semicolon-separated list of expressions that match fully-qualified tables and column(s) to be used as message key. Each expression must match the pattern ':', where the table names could be defined as (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connector, and the key columns are a comma-separated list of columns representing the custom key. For any table without an explicit key configuration the table's primary key column(s) will be used as message key. Example: dbserver1.inventory.orderlines:orderId,orderLineId;dbserver1.inventory.orders:id",title:"Message Key Columns",required:!1,deprecated:!1},minRowCountToStreamResults:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The number of rows a table must contain to stream results rather than pull all into memory during snapshots. Defaults to 1,000. Use 0 to stream all results and completely avoid checking the size of each table.",title:"Min Row Count To Stream Results",required:!1,deprecated:!1},notificationEnabledChannels:{kind:"parameter",type:"string",description:"List of notification channels names that are enabled.",title:"Notification Enabled Channels",required:!1,deprecated:!1},notificationSinkTopicName:{kind:"parameter",type:"string",description:"The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels",title:"Notification Sink Topic Name",required:!1,deprecated:!1},pollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"500ms",description:"Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms.",title:"Poll Interval Ms",required:!1,deprecated:!1},provideTransactionMetadata:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables transaction metadata extraction together with event counting",title:"Provide Transaction Metadata",required:!1,deprecated:!1},queryFetchSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size.",title:"Query Fetch Size",required:!1,deprecated:!1},retriableRestartConnectorWaitMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms.",title:"Retriable Restart Connector Wait Ms",required:!1,deprecated:!1},schemaHistoryInternal:{kind:"parameter",type:"string",defaultValue:"io.debezium.storage.kafka.history.KafkaSchemaHistory",description:"The name of the SchemaHistory class that should be used to store and recover database schema changes. The configuration properties for the history are prefixed with the 'schema.history.internal.' string.",title:"Schema History Internal",required:!1,deprecated:!1},schemaHistoryInternalFileFilename:{kind:"parameter",type:"string",description:"The path to the file that will be used to record the database schema history",title:"Schema History Internal File Filename",required:!1,deprecated:!1},schemaHistoryInternalSkipUnparseableDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls the action Debezium will take when it meets a DDL statement in binlog, that it cannot parse.By default the connector will stop operating but by changing the setting it can ignore the statements which it cannot parse. If skipping is enabled then Debezium can miss metadata changes.",title:"Schema History Internal Skip Unparseable Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedDatabasesDdl:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls what DDL will Debezium store in database schema history. By default (true) only DDL that manipulates a table from captured schema/database will be stored. If set to false, then Debezium will store all incoming DDL statements.",title:"Schema History Internal Store Only Captured Databases Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedTablesDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls what DDL will Debezium store in database schema history. By default (false) Debezium will store all incoming DDL statements. If set to true, then only DDL that manipulates a captured table will be stored.",title:"Schema History Internal Store Only Captured Tables Ddl",required:!1,deprecated:!1},schemaNameAdjustmentMode:{kind:"parameter",type:"string",defaultValue:"none",description:"Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)",title:"Schema Name Adjustment Mode",required:!1,deprecated:!1},signalDataCollection:{kind:"parameter",type:"string",description:"The name of the data collection that is used to send signals/commands to Debezium. Signaling is disabled when not set.",title:"Signal Data Collection",required:!1,deprecated:!1},signalEnabledChannels:{kind:"parameter",type:"string",defaultValue:"source",description:"List of channels names that are enabled. Source channel is enabled by default",title:"Signal Enabled Channels",required:!1,deprecated:!1},signalPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"5s",description:"Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds.",title:"Signal Poll Interval Ms",required:!1,deprecated:!1},skippedOperations:{kind:"parameter",type:"string",defaultValue:"t",description:"The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped.",title:"Skipped Operations",required:!1,deprecated:!1},snapshotDelayMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms.",title:"Snapshot Delay Ms",required:!1,deprecated:!1},snapshotFetchSize:{kind:"parameter",type:"integer",description:"The maximum number of records that should be loaded into memory while performing a snapshot.",title:"Snapshot Fetch Size",required:!1,deprecated:!1},snapshotIncludeCollectionList:{kind:"parameter",type:"string",description:"This setting must be set to specify a list of tables/collections whose snapshot must be taken on creating or restarting the connector.",title:"Snapshot Include Collection List",required:!1,deprecated:!1},snapshotLockingMode:{kind:"parameter",type:"string",defaultValue:"minimal",description:"Controls how long the connector holds onto the global read lock while it is performing a snapshot. The default is 'minimal', which means the connector holds the global read lock (and thus prevents any updates) for just the initial portion of the snapshot while the database schemas and other metadata are being read. The remaining work in a snapshot involves selecting all rows from each table, and this can be done using the snapshot process' REPEATABLE READ transaction even when the lock is no longer held and other operations are updating the database. However, in some cases it may be desirable to block all writes for the entire duration of the snapshot; in such cases set this property to 'extended'. Using a value of 'none' will prevent the connector from acquiring any table locks during the snapshot process. This mode can only be used in combination with snapshot.mode values of 'schema_only' or 'schema_only_recovery' and is only safe to use if no schema changes are happening while the snapshot is taken.",title:"Snapshot Locking Mode",required:!1,deprecated:!1},snapshotLockTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The maximum number of millis to wait for table locks at the beginning of a snapshot. If locks cannot be acquired in this time frame, the snapshot will be aborted. Defaults to 10 seconds",title:"Snapshot Lock Timeout Ms",required:!1,deprecated:!1},snapshotMaxThreads:{kind:"parameter",type:"integer",defaultValue:"1",description:"The maximum number of threads used to perform the snapshot. Defaults to 1.",title:"Snapshot Max Threads",required:!1,deprecated:!1},snapshotMode:{kind:"parameter",type:"string",defaultValue:"initial",description:"The criteria for running a snapshot upon startup of the connector. Select one of the following snapshot options: 'when_needed': On startup, the connector runs a snapshot if one is needed.; 'schema_only': If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures only the schema (table structures), but not any table data. After the snapshot completes, the connector begins to stream changes from the binlog.; 'schema_only_recovery': The connector performs a snapshot that captures only the database schema history. The connector then transitions back to streaming. Use this setting to restore a corrupted or lost database schema history topic. Do not use if the database schema was modified after the connector stopped.; 'initial' (default): If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures the current full state of the configured tables. After the snapshot completes, the connector begins to stream changes from the binlog.; 'initial_only': The connector performs a snapshot as it does for the 'initial' option, but after the connector completes the snapshot, it stops, and does not stream changes from the binlog.; 'never': The connector does not run a snapshot. Upon first startup, the connector immediately begins reading from the beginning of the binlog. The 'never' mode should be used with care, and only when the binlog is known to contain all history.",title:"Snapshot Mode",required:!1,deprecated:!1},snapshotNewTables:{kind:"parameter",type:"string",defaultValue:"off",description:"BETA FEATURE: On connector restart, the connector will check if there have been any new tables added to the configuration, and snapshot them. There is presently only two options: 'off': Default behavior. Do not snapshot new tables. 'parallel': The snapshot of the new tables will occur in parallel to the continued binlog reading of the old tables. When the snapshot completes, an independent binlog reader will begin reading the events for the new tables until it catches up to present time. At this point, both old and new binlog readers will be momentarily halted and new binlog reader will start that will read the binlog for all configured tables. The parallel binlog reader will have a configured server id of 10000 the primary binlog reader's server id.",title:"Snapshot New Tables",required:!1,deprecated:!1},snapshotSelectStatementOverrides:{kind:"parameter",type:"string",description:"This property contains a comma-separated list of fully-qualified tables (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connectors. Select statements for the individual tables are specified in further configuration properties, one for each table, identified by the id 'snapshot.select.statement.overrides.DB_NAME.TABLE_NAME' or 'snapshot.select.statement.overrides.SCHEMA_NAME.TABLE_NAME', respectively. The value of those properties is the select statement to use when retrieving data from the specific table during snapshotting. A possible use case for large append-only tables is setting a specific point where to start (resume) snapshotting, in case a previous snapshotting was interrupted.",title:"Snapshot Select Statement Overrides",required:!1,deprecated:!1},snapshotTablesOrderByRowCount:{kind:"parameter",type:"string",defaultValue:"disabled",description:"Controls the order in which tables are processed in the initial snapshot. A descending value will order the tables by row count descending. A ascending value will order the tables by row count ascending. A value of disabled (the default) will disable ordering by row count.",title:"Snapshot Tables Order By Row Count",required:!1,deprecated:!1},sourceinfoStructMaker:{kind:"parameter",type:"string",defaultValue:"io.debezium.connector.mysql.MySqlSourceInfoStructMaker",description:"The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct.",title:"Sourceinfo Struct Maker",required:!1,deprecated:!1},tableExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring",title:"Table Exclude List",required:!1,deprecated:!1},tableIgnoreBuiltin:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Flag specifying whether built-in tables should be ignored.",title:"Table Ignore Builtin",required:!1,deprecated:!1},tableIncludeList:{kind:"parameter",type:"string",description:"The tables for which changes are to be captured",title:"Table Include List",required:!1,deprecated:!1},timePrecisionMode:{kind:"parameter",type:"string",defaultValue:"adaptive_time_microseconds",description:"Time, date and timestamps can be represented with different kinds of precisions, including: 'adaptive_time_microseconds': the precision of date and timestamp values is based the database column's precision; but time fields always use microseconds precision; 'connect': always represents time, date and timestamp values using Kafka Connect's built-in representations for Time, Date, and Timestamp, which uses millisecond precision regardless of the database columns' precision.",title:"Time Precision Mode",required:!1,deprecated:!1},tombstonesOnDelete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",title:"Tombstones On Delete",required:!1,deprecated:!1},topicNamingStrategy:{kind:"parameter",type:"string",defaultValue:"io.debezium.schema.SchemaTopicNamingStrategy",description:"The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc.",title:"Topic Naming Strategy",required:!1,deprecated:!1},topicPrefix:{kind:"parameter",type:"string",description:"Topic prefix that identifies and provides a namespace for the particular database server/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted.",title:"Topic Prefix",required:!0,deprecated:!1}}},"debezium-oracle":{type:"object",title:"Debezium Oracle Connector",group:"database",icon:"generic24.png",description:"Capture changes from a Oracle database.",properties:{name:{kind:"path",type:"string",description:"Unique name for the connector. Attempting to register again with the same name will fail.",title:"Name",required:!0,deprecated:!1},additionalProperties:{kind:"parameter",type:"object",description:"Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http://localhost:8811/avro",title:"Additional Properties",required:!1,deprecated:!1},internalKeyConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter.",title:"Internal Key Converter",required:!1,deprecated:!1},internalValueConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter.",title:"Internal Value Converter",required:!1,deprecated:!1},offsetCommitPolicy:{kind:"parameter",type:"string",description:"The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals.",title:"Offset Commit Policy",required:!1,deprecated:!1},offsetCommitTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds.",title:"Offset Commit Timeout Ms",required:!1,deprecated:!1},offsetFlushIntervalMs:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Interval at which to try committing offsets. The default is 1 minute.",title:"Offset Flush Interval Ms",required:!1,deprecated:!1},offsetStorage:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.storage.FileOffsetBackingStore",description:"The name of the Java class that is responsible for persistence of connector offsets.",title:"Offset Storage",required:!1,deprecated:!1},offsetStorageFileName:{kind:"parameter",type:"string",description:"Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore.",title:"Offset Storage File Name",required:!1,deprecated:!1},offsetStoragePartitions:{kind:"parameter",type:"integer",description:"The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'.",title:"Offset Storage Partitions",required:!1,deprecated:!1},offsetStorageReplicationFactor:{kind:"parameter",type:"integer",description:"Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore",title:"Offset Storage Replication Factor",required:!1,deprecated:!1},offsetStorageTopic:{kind:"parameter",type:"string",description:"The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore.",title:"Offset Storage Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},binaryHandlingMode:{kind:"parameter",type:"string",defaultValue:"bytes",description:"Specify how binary (blob, binary, etc.) columns should be represented in change events, including: 'bytes' represents binary data as byte array (default); 'base64' represents binary data as base64-encoded string; 'base64-url-safe' represents binary data as base64-url-safe-encoded string; 'hex' represents binary data as hex-encoded (base16) string",title:"Binary Handling Mode",required:!1,deprecated:!1},columnExcludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to exclude from change events",title:"Column Exclude List",required:!1,deprecated:!1},columnIncludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to include in change events",title:"Column Include List",required:!1,deprecated:!1},columnPropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching fully-qualified names of columns that adds the columns original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Column Propagate Source Type",required:!1,deprecated:!1},converters:{kind:"parameter",type:"string",description:"Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'",title:"Converters",required:!1,deprecated:!1},databaseConnectionAdapter:{kind:"parameter",type:"string",defaultValue:"LogMiner",description:"The adapter to use when capturing changes from the database. Options include: 'logminer': (the default) to capture changes using native Oracle LogMiner; 'xstream' to capture changes using Oracle XStreams",title:"Database Connection Adapter",required:!1,deprecated:!1},databaseDbname:{kind:"parameter",type:"string",description:"The name of the database from which the connector should capture changes",title:"Database Dbname",required:!1,deprecated:!1},databaseHostname:{kind:"parameter",type:"string",description:"Resolvable hostname or IP address of the database server.",title:"Database Hostname",required:!1,deprecated:!1},databaseOutServerName:{kind:"parameter",type:"string",description:"Name of the XStream Out server to connect to.",title:"Database Out Server Name",required:!1,deprecated:!1},databasePassword:{kind:"parameter",type:"string",description:"Password of the database user to be used when connecting to the database.",title:"Database Password",required:!0,deprecated:!1},databasePdbName:{kind:"parameter",type:"string",description:"Name of the pluggable database when working with a multi-tenant set-up. The CDB name must be given via database.dbname in this case.",title:"Database Pdb Name",required:!1,deprecated:!1},databasePort:{kind:"parameter",type:"integer",defaultValue:"1528",description:"Port of the database server.",title:"Database Port",required:!1,deprecated:!1},databaseUrl:{kind:"parameter",type:"string",description:"Complete JDBC URL as an alternative to specifying hostname, port and database provided as a way to support alternative connection scenarios.",title:"Database Url",required:!1,deprecated:!1},databaseUser:{kind:"parameter",type:"string",description:"Name of the database user to be used when connecting to the database.",title:"Database User",required:!1,deprecated:!1},datatypePropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching the database-specific data type names that adds the data type's original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Datatype Propagate Source Type",required:!1,deprecated:!1},decimalHandlingMode:{kind:"parameter",type:"string",defaultValue:"precise",description:"Specify how DECIMAL and NUMERIC columns should be represented in change events, including: 'precise' (the default) uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'string' uses string to represent values; 'double' represents values using Java's 'double', which may not offer the precision but will be far easier to use in consumers.",title:"Decimal Handling Mode",required:!1,deprecated:!1},errorsMaxRetries:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The maximum number of retries on connection errors before failing (-1 = no limit, 0 = disabled, 0 = num of retries).",title:"Errors Max Retries",required:!1,deprecated:!1},eventProcessingFailureHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped.",title:"Event Processing Failure Handling Mode",required:!1,deprecated:!1},heartbeatActionQuery:{kind:"parameter",type:"string",description:"The query executed with every heartbeat.",title:"Heartbeat Action Query",required:!1,deprecated:!1},heartbeatIntervalMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default.",title:"Heartbeat Interval Ms",required:!1,deprecated:!1},heartbeatTopicsPrefix:{kind:"parameter",type:"string",defaultValue:"__debezium-heartbeat",description:"The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",title:"Heartbeat Topics Prefix",required:!1,deprecated:!1},includeSchemaChanges:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the connector should publish changes in the database schema to a Kafka topic with the same name as the database server ID. Each schema change will be recorded using a key that contains the database name and whose value include logical description of the new schema and optionally the DDL statement(s). The default is 'true'. This is independent of how the connector internally records database schema history.",title:"Include Schema Changes",required:!1,deprecated:!1},includeSchemaComments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the connector parse table and column's comment to metadata object. Note: Enable this option will bring the implications on memory usage. The number and size of ColumnImpl objects is what largely impacts how much memory is consumed by the Debezium connectors, and adding a String to each of them can potentially be quite heavy. The default is 'false'.",title:"Include Schema Comments",required:!1,deprecated:!1},intervalHandlingMode:{kind:"parameter",type:"string",defaultValue:"numeric",description:"Specify how INTERVAL columns should be represented in change events, including: 'string' represents values as an exact ISO formatted string; 'numeric' (default) represents values using the inexact conversion into microseconds",title:"Interval Handling Mode",required:!1,deprecated:!1},lobEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When set to 'false', the default, LOB fields will not be captured nor emitted. When set to 'true', the connector will capture LOB fields and emit changes for those fields like any other column type.",title:"Lob Enabled",required:!1,deprecated:!1},logMiningArchiveDestinationName:{kind:"parameter",type:"string",description:"Sets the specific archive log destination as the source for reading archive logs.When not set, the connector will automatically select the first LOCAL and VALID destination.",title:"Log Mining Archive Destination Name",required:!1,deprecated:!1},logMiningArchiveLogHours:{kind:"parameter",type:"integer",defaultValue:"0",description:"The number of hours in the past from SYSDATE to mine archive logs. Using 0 mines all available archive logs",title:"Log Mining Archive Log Hours",required:!1,deprecated:!1},logMiningArchiveLogOnlyMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When set to 'false', the default, the connector will mine both archive log and redo logs to emit change events. When set to 'true', the connector will only mine archive logs. There are circumstances where its advantageous to only mine archive logs and accept latency in event emission due to frequent revolving redo logs.",title:"Log Mining Archive Log Only Mode",required:!1,deprecated:!1},logMiningArchiveLogOnlyScnPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The interval in milliseconds to wait between polls checking to see if the SCN is in the archive logs.",title:"Log Mining Archive Log Only Scn Poll Interval Ms",required:!1,deprecated:!1},logMiningBatchSizeDefault:{kind:"parameter",type:"integer",defaultValue:"20000",description:"The starting SCN interval size that the connector will use for reading data from redo/archive logs.",title:"Log Mining Batch Size Default",required:!1,deprecated:!1},logMiningBatchSizeMax:{kind:"parameter",type:"integer",defaultValue:"100000",description:"The maximum SCN interval size that this connector will use when reading from redo/archive logs.",title:"Log Mining Batch Size Max",required:!1,deprecated:!1},logMiningBatchSizeMin:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The minimum SCN interval size that this connector will try to read from redo/archive logs. Active batch size will be also increased/decreased by this amount for tuning connector throughput when needed.",title:"Log Mining Batch Size Min",required:!1,deprecated:!1},logMiningBufferDropOnStop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When set to true the underlying buffer cache is not retained when the connector is stopped. When set to false (the default), the buffer cache is retained across restarts.",title:"Log Mining Buffer Drop On Stop",required:!1,deprecated:!1},logMiningBufferInfinispanCacheEvents:{kind:"parameter",type:"string",description:"Specifies the XML configuration for the Infinispan 'events' cache",title:"Log Mining Buffer Infinispan Cache Events",required:!1,deprecated:!1},logMiningBufferInfinispanCacheProcessedTransactions:{kind:"parameter",type:"string",description:"Specifies the XML configuration for the Infinispan 'processed-transactions' cache",title:"Log Mining Buffer Infinispan Cache Processed Transactions",required:!1,deprecated:!1},logMiningBufferInfinispanCacheSchemaChanges:{kind:"parameter",type:"string",description:"Specifies the XML configuration for the Infinispan 'schema-changes' cache",title:"Log Mining Buffer Infinispan Cache Schema Changes",required:!1,deprecated:!1},logMiningBufferInfinispanCacheTransactions:{kind:"parameter",type:"string",description:"Specifies the XML configuration for the Infinispan 'transactions' cache",title:"Log Mining Buffer Infinispan Cache Transactions",required:!1,deprecated:!1},logMiningBufferTransactionEventsThreshold:{kind:"parameter",type:"integer",defaultValue:"0",description:"The number of events a transaction can include before the transaction is discarded. This is useful for managing buffer memory and/or space when dealing with very large transactions. Defaults to 0, meaning that no threshold is applied and transactions can have unlimited events.",title:"Log Mining Buffer Transaction Events Threshold",required:!1,deprecated:!1},logMiningBufferType:{kind:"parameter",type:"string",defaultValue:"memory",description:"The buffer type controls how the connector manages buffering transaction data. memory - Uses the JVM process' heap to buffer all transaction data. infinispan_embedded - This option uses an embedded Infinispan cache to buffer transaction data and persist it to disk. infinispan_remote - This option uses a remote Infinispan cluster to buffer transaction data and persist it to disk.",title:"Log Mining Buffer Type",required:!1,deprecated:!1},logMiningFlushTableName:{kind:"parameter",type:"string",defaultValue:"LOG_MINING_FLUSH",description:"The name of the flush table used by the connector, defaults to LOG_MINING_FLUSH.",title:"Log Mining Flush Table Name",required:!1,deprecated:!1},logMiningQueryFilterMode:{kind:"parameter",type:"string",defaultValue:"none",description:"Specifies how the filter configuration is applied to the LogMiner database query. none - The query does not apply any schema or table filters, all filtering is at runtime by the connector. in - The query uses SQL in-clause expressions to specify the schema or table filters. regex - The query uses Oracle REGEXP_LIKE expressions to specify the schema or table filters.",title:"Log Mining Query Filter Mode",required:!1,deprecated:!1},logMiningRestartConnection:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Debezium opens a database connection and keeps that connection open throughout the entire streaming phase. In some situations, this can lead to excessive SGA memory usage. By setting this option to 'true' (the default is 'false'), the connector will close and re-open a database connection after every detected log switch or if the log.mining.session.max.ms has been reached.",title:"Log Mining Restart Connection",required:!1,deprecated:!1},logMiningScnGapDetectionGapSizeMin:{kind:"parameter",type:"integer",defaultValue:"1000000",description:"Used for SCN gap detection, if the difference between current SCN and previous end SCN is bigger than this value, and the time difference of current SCN and previous end SCN is smaller than log.mining.scn.gap.detection.time.interval.max.ms, consider it a SCN gap.",title:"Log Mining Scn Gap Detection Gap Size Min",required:!1,deprecated:!1},logMiningScnGapDetectionTimeIntervalMaxMs:{kind:"parameter",type:"duration",defaultValue:"20s",description:"Used for SCN gap detection, if the difference between current SCN and previous end SCN is bigger than log.mining.scn.gap.detection.gap.size.min, and the time difference of current SCN and previous end SCN is smaller than this value, consider it a SCN gap.",title:"Log Mining Scn Gap Detection Time Interval Max Ms",required:!1,deprecated:!1},logMiningSessionMaxMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"The maximum number of milliseconds that a LogMiner session lives for before being restarted. Defaults to 0 (indefinite until a log switch occurs)",title:"Log Mining Session Max Ms",required:!1,deprecated:!1},logMiningSleepTimeDefaultMs:{kind:"parameter",type:"duration",defaultValue:"1s",description:"The amount of time that the connector will sleep after reading data from redo/archive logs and before starting reading data again. Value is in milliseconds.",title:"Log Mining Sleep Time Default Ms",required:!1,deprecated:!1},logMiningSleepTimeIncrementMs:{kind:"parameter",type:"duration",defaultValue:"200ms",description:"The maximum amount of time that the connector will use to tune the optimal sleep time when reading data from LogMiner. Value is in milliseconds.",title:"Log Mining Sleep Time Increment Ms",required:!1,deprecated:!1},logMiningSleepTimeMaxMs:{kind:"parameter",type:"duration",defaultValue:"3s",description:"The maximum amount of time that the connector will sleep after reading data from redo/archive logs and before starting reading data again. Value is in milliseconds.",title:"Log Mining Sleep Time Max Ms",required:!1,deprecated:!1},logMiningSleepTimeMinMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"The minimum amount of time that the connector will sleep after reading data from redo/archive logs and before starting reading data again. Value is in milliseconds.",title:"Log Mining Sleep Time Min Ms",required:!1,deprecated:!1},logMiningStrategy:{kind:"parameter",type:"string",defaultValue:"redo_log_catalog",description:"There are strategies: Online catalog with faster mining but no captured DDL. Another - with data dictionary loaded into REDO LOG files",title:"Log Mining Strategy",required:!1,deprecated:!1},logMiningTransactionRetentionMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Duration in milliseconds to keep long running transactions in transaction buffer between log mining sessions. By default, all transactions are retained.",title:"Log Mining Transaction Retention Ms",required:!1,deprecated:!1},logMiningUsernameExcludeList:{kind:"parameter",type:"string",description:"Comma separated list of usernames to exclude from LogMiner query.",title:"Log Mining Username Exclude List",required:!1,deprecated:!1},logMiningUsernameIncludeList:{kind:"parameter",type:"string",description:"Comma separated list of usernames to include from LogMiner query.",title:"Log Mining Username Include List",required:!1,deprecated:!1},maxBatchSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Maximum size of each batch of source records. Defaults to 2048.",title:"Max Batch Size",required:!1,deprecated:!1},maxQueueSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",title:"Max Queue Size",required:!1,deprecated:!1},maxQueueSizeInBytes:{kind:"parameter",type:"integer",defaultValue:"0",description:"Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",title:"Max Queue Size In Bytes",required:!1,deprecated:!1},messageKeyColumns:{kind:"parameter",type:"string",description:"A semicolon-separated list of expressions that match fully-qualified tables and column(s) to be used as message key. Each expression must match the pattern ':', where the table names could be defined as (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connector, and the key columns are a comma-separated list of columns representing the custom key. For any table without an explicit key configuration the table's primary key column(s) will be used as message key. Example: dbserver1.inventory.orderlines:orderId,orderLineId;dbserver1.inventory.orders:id",title:"Message Key Columns",required:!1,deprecated:!1},notificationEnabledChannels:{kind:"parameter",type:"string",description:"List of notification channels names that are enabled.",title:"Notification Enabled Channels",required:!1,deprecated:!1},notificationSinkTopicName:{kind:"parameter",type:"string",description:"The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels",title:"Notification Sink Topic Name",required:!1,deprecated:!1},pollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"500ms",description:"Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms.",title:"Poll Interval Ms",required:!1,deprecated:!1},provideTransactionMetadata:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables transaction metadata extraction together with event counting",title:"Provide Transaction Metadata",required:!1,deprecated:!1},queryFetchSize:{kind:"parameter",type:"integer",defaultValue:"10000",description:"The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size, defaults to '2000'.",title:"Query Fetch Size",required:!1,deprecated:!1},racNodes:{kind:"parameter",type:"string",description:"A comma-separated list of RAC node hostnames or ip addresses",title:"Rac Nodes",required:!1,deprecated:!1},retriableRestartConnectorWaitMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms.",title:"Retriable Restart Connector Wait Ms",required:!1,deprecated:!1},schemaHistoryInternal:{kind:"parameter",type:"string",defaultValue:"io.debezium.storage.kafka.history.KafkaSchemaHistory",description:"The name of the SchemaHistory class that should be used to store and recover database schema changes. The configuration properties for the history are prefixed with the 'schema.history.internal.' string.",title:"Schema History Internal",required:!1,deprecated:!1},schemaHistoryInternalFileFilename:{kind:"parameter",type:"string",description:"The path to the file that will be used to record the database schema history",title:"Schema History Internal File Filename",required:!1,deprecated:!1},schemaHistoryInternalSkipUnparseableDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls the action Debezium will take when it meets a DDL statement in binlog, that it cannot parse.By default the connector will stop operating but by changing the setting it can ignore the statements which it cannot parse. If skipping is enabled then Debezium can miss metadata changes.",title:"Schema History Internal Skip Unparseable Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedDatabasesDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls what DDL will Debezium store in database schema history. By default (true) only DDL that manipulates a table from captured schema/database will be stored. If set to false, then Debezium will store all incoming DDL statements.",title:"Schema History Internal Store Only Captured Databases Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedTablesDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls what DDL will Debezium store in database schema history. By default (false) Debezium will store all incoming DDL statements. If set to true, then only DDL that manipulates a captured table will be stored.",title:"Schema History Internal Store Only Captured Tables Ddl",required:!1,deprecated:!1},schemaNameAdjustmentMode:{kind:"parameter",type:"string",defaultValue:"none",description:"Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)",title:"Schema Name Adjustment Mode",required:!1,deprecated:!1},signalDataCollection:{kind:"parameter",type:"string",description:"The name of the data collection that is used to send signals/commands to Debezium. Signaling is disabled when not set.",title:"Signal Data Collection",required:!1,deprecated:!1},signalEnabledChannels:{kind:"parameter",type:"string",defaultValue:"source",description:"List of channels names that are enabled. Source channel is enabled by default",title:"Signal Enabled Channels",required:!1,deprecated:!1},signalPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"5s",description:"Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds.",title:"Signal Poll Interval Ms",required:!1,deprecated:!1},skippedOperations:{kind:"parameter",type:"string",defaultValue:"t",description:"The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped.",title:"Skipped Operations",required:!1,deprecated:!1},snapshotDelayMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms.",title:"Snapshot Delay Ms",required:!1,deprecated:!1},snapshotEnhancePredicateScn:{kind:"parameter",type:"string",description:"A token to replace on snapshot predicate template",title:"Snapshot Enhance Predicate Scn",required:!1,deprecated:!1},snapshotFetchSize:{kind:"parameter",type:"integer",description:"The maximum number of records that should be loaded into memory while performing a snapshot.",title:"Snapshot Fetch Size",required:!1,deprecated:!1},snapshotIncludeCollectionList:{kind:"parameter",type:"string",description:"This setting must be set to specify a list of tables/collections whose snapshot must be taken on creating or restarting the connector.",title:"Snapshot Include Collection List",required:!1,deprecated:!1},snapshotLockingMode:{kind:"parameter",type:"string",defaultValue:"shared",description:"Controls how the connector holds locks on tables while performing the schema snapshot. The default is 'shared', which means the connector will hold a table lock that prevents exclusive table access for just the initial portion of the snapshot while the database schemas and other metadata are being read. The remaining work in a snapshot involves selecting all rows from each table, and this is done using a flashback query that requires no locks. However, in some cases it may be desirable to avoid locks entirely which can be done by specifying 'none'. This mode is only safe to use if no schema changes are happening while the snapshot is taken.",title:"Snapshot Locking Mode",required:!1,deprecated:!1},snapshotLockTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The maximum number of millis to wait for table locks at the beginning of a snapshot. If locks cannot be acquired in this time frame, the snapshot will be aborted. Defaults to 10 seconds",title:"Snapshot Lock Timeout Ms",required:!1,deprecated:!1},snapshotMaxThreads:{kind:"parameter",type:"integer",defaultValue:"1",description:"The maximum number of threads used to perform the snapshot. Defaults to 1.",title:"Snapshot Max Threads",required:!1,deprecated:!1},snapshotMode:{kind:"parameter",type:"string",defaultValue:"initial",description:"The criteria for running a snapshot upon startup of the connector. Select one of the following snapshot options: 'always': The connector runs a snapshot every time that it starts. After the snapshot completes, the connector begins to stream changes from the redo logs.; 'initial' (default): If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures the current full state of the configured tables. After the snapshot completes, the connector begins to stream changes from the redo logs. 'initial_only': The connector performs a snapshot as it does for the 'initial' option, but after the connector completes the snapshot, it stops, and does not stream changes from the redo logs.; 'schema_only': If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures only the schema (table structures), but not any table data. After the snapshot completes, the connector begins to stream changes from the redo logs.; 'schema_only_recovery': The connector performs a snapshot that captures only the database schema history. The connector then transitions to streaming from the redo logs. Use this setting to restore a corrupted or lost database schema history topic. Do not use if the database schema was modified after the connector stopped.",title:"Snapshot Mode",required:!1,deprecated:!1},snapshotSelectStatementOverrides:{kind:"parameter",type:"string",description:"This property contains a comma-separated list of fully-qualified tables (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connectors. Select statements for the individual tables are specified in further configuration properties, one for each table, identified by the id 'snapshot.select.statement.overrides.DB_NAME.TABLE_NAME' or 'snapshot.select.statement.overrides.SCHEMA_NAME.TABLE_NAME', respectively. The value of those properties is the select statement to use when retrieving data from the specific table during snapshotting. A possible use case for large append-only tables is setting a specific point where to start (resume) snapshotting, in case a previous snapshotting was interrupted.",title:"Snapshot Select Statement Overrides",required:!1,deprecated:!1},snapshotTablesOrderByRowCount:{kind:"parameter",type:"string",defaultValue:"disabled",description:"Controls the order in which tables are processed in the initial snapshot. A descending value will order the tables by row count descending. A ascending value will order the tables by row count ascending. A value of disabled (the default) will disable ordering by row count.",title:"Snapshot Tables Order By Row Count",required:!1,deprecated:!1},sourceinfoStructMaker:{kind:"parameter",type:"string",defaultValue:"io.debezium.connector.oracle.OracleSourceInfoStructMaker",description:"The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct.",title:"Sourceinfo Struct Maker",required:!1,deprecated:!1},tableExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring",title:"Table Exclude List",required:!1,deprecated:!1},tableIncludeList:{kind:"parameter",type:"string",description:"The tables for which changes are to be captured",title:"Table Include List",required:!1,deprecated:!1},timePrecisionMode:{kind:"parameter",type:"string",defaultValue:"adaptive",description:"Time, date, and timestamps can be represented with different kinds of precisions, including: 'adaptive' (the default) bases the precision of time, date, and timestamp values on the database column's precision; 'adaptive_time_microseconds' like 'adaptive' mode, but TIME fields always use microseconds precision; 'connect' always represents time, date, and timestamp values using Kafka Connect's built-in representations for Time, Date, and Timestamp, which uses millisecond precision regardless of the database columns' precision.",title:"Time Precision Mode",required:!1,deprecated:!1},tombstonesOnDelete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",title:"Tombstones On Delete",required:!1,deprecated:!1},topicNamingStrategy:{kind:"parameter",type:"string",defaultValue:"io.debezium.schema.SchemaTopicNamingStrategy",description:"The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc.",title:"Topic Naming Strategy",required:!1,deprecated:!1},topicPrefix:{kind:"parameter",type:"string",description:"Topic prefix that identifies and provides a namespace for the particular database server/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted.",title:"Topic Prefix",required:!0,deprecated:!1},unavailableValuePlaceholder:{kind:"parameter",type:"string",defaultValue:"__debezium_unavailable_value",description:"Specify the constant that will be provided by Debezium to indicate that the original value is unavailable and not provided by the database.",title:"Unavailable Value Placeholder",required:!1,deprecated:!1}}},"debezium-postgres":{type:"object",title:"Debezium PostgresSQL Connector",group:"database",icon:"generic24.png",description:"Capture changes from a PostgresSQL database.",properties:{name:{kind:"path",type:"string",description:"Unique name for the connector. Attempting to register again with the same name will fail.",title:"Name",required:!0,deprecated:!1},additionalProperties:{kind:"parameter",type:"object",description:"Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http://localhost:8811/avro",title:"Additional Properties",required:!1,deprecated:!1},internalKeyConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter.",title:"Internal Key Converter",required:!1,deprecated:!1},internalValueConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter.",title:"Internal Value Converter",required:!1,deprecated:!1},offsetCommitPolicy:{kind:"parameter",type:"string",description:"The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals.",title:"Offset Commit Policy",required:!1,deprecated:!1},offsetCommitTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds.",title:"Offset Commit Timeout Ms",required:!1,deprecated:!1},offsetFlushIntervalMs:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Interval at which to try committing offsets. The default is 1 minute.",title:"Offset Flush Interval Ms",required:!1,deprecated:!1},offsetStorage:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.storage.FileOffsetBackingStore",description:"The name of the Java class that is responsible for persistence of connector offsets.",title:"Offset Storage",required:!1,deprecated:!1},offsetStorageFileName:{kind:"parameter",type:"string",description:"Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore.",title:"Offset Storage File Name",required:!1,deprecated:!1},offsetStoragePartitions:{kind:"parameter",type:"integer",description:"The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'.",title:"Offset Storage Partitions",required:!1,deprecated:!1},offsetStorageReplicationFactor:{kind:"parameter",type:"integer",description:"Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore",title:"Offset Storage Replication Factor",required:!1,deprecated:!1},offsetStorageTopic:{kind:"parameter",type:"string",description:"The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore.",title:"Offset Storage Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},binaryHandlingMode:{kind:"parameter",type:"string",defaultValue:"bytes",description:"Specify how binary (blob, binary, etc.) columns should be represented in change events, including: 'bytes' represents binary data as byte array (default); 'base64' represents binary data as base64-encoded string; 'base64-url-safe' represents binary data as base64-url-safe-encoded string; 'hex' represents binary data as hex-encoded (base16) string",title:"Binary Handling Mode",required:!1,deprecated:!1},columnExcludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to exclude from change events",title:"Column Exclude List",required:!1,deprecated:!1},columnIncludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to include in change events",title:"Column Include List",required:!1,deprecated:!1},columnPropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching fully-qualified names of columns that adds the columns original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Column Propagate Source Type",required:!1,deprecated:!1},converters:{kind:"parameter",type:"string",description:"Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'",title:"Converters",required:!1,deprecated:!1},databaseDbname:{kind:"parameter",type:"string",description:"The name of the database from which the connector should capture changes",title:"Database Dbname",required:!1,deprecated:!1},databaseHostname:{kind:"parameter",type:"string",description:"Resolvable hostname or IP address of the database server.",title:"Database Hostname",required:!1,deprecated:!1},databaseInitialStatements:{kind:"parameter",type:"string",description:"A semicolon separated list of SQL statements to be executed when a JDBC connection to the database is established. Note that the connector may establish JDBC connections at its own discretion, so this should typically be used for configuration of session parameters only, but not for executing DML statements. Use doubled semicolon (';;') to use a semicolon as a character and not as a delimiter.",title:"Database Initial Statements",required:!1,deprecated:!1},databasePassword:{kind:"parameter",type:"string",description:"Password of the database user to be used when connecting to the database.",title:"Database Password",required:!0,deprecated:!1},databasePort:{kind:"parameter",type:"integer",defaultValue:"5432",description:"Port of the database server.",title:"Database Port",required:!1,deprecated:!1},databaseSslcert:{kind:"parameter",type:"string",description:"File containing the SSL Certificate for the client. See the Postgres SSL docs for further information",title:"Database Sslcert",required:!1,deprecated:!1},databaseSslfactory:{kind:"parameter",type:"string",description:"A name of class to that creates SSL Sockets. Use org.postgresql.ssl.NonValidatingFactory to disable SSL validation in development environments",title:"Database Sslfactory",required:!1,deprecated:!1},databaseSslkey:{kind:"parameter",type:"string",description:"File containing the SSL private key for the client. See the Postgres SSL docs for further information",title:"Database Sslkey",required:!1,deprecated:!1},databaseSslmode:{kind:"parameter",type:"string",defaultValue:"prefer",description:"Whether to use an encrypted connection to Postgres. Options include: 'disable' (the default) to use an unencrypted connection; 'allow' to try and use an unencrypted connection first and, failing that, a secure (encrypted) connection; 'prefer' (the default) to try and use a secure (encrypted) connection first and, failing that, an unencrypted connection; 'require' to use a secure (encrypted) connection, and fail if one cannot be established; 'verify-ca' like 'required' but additionally verify the server TLS certificate against the configured Certificate Authority (CA) certificates, or fail if no valid matching CA certificates are found; or 'verify-full' like 'verify-ca' but additionally verify that the server certificate matches the host to which the connection is attempted.",title:"Database Sslmode",required:!1,deprecated:!1},databaseSslpassword:{kind:"parameter",type:"string",description:"Password to access the client private key from the file specified by 'database.sslkey'. See the Postgres SSL docs for further information",title:"Database Sslpassword",required:!1,deprecated:!1},databaseSslrootcert:{kind:"parameter",type:"string",description:"File containing the root certificate(s) against which the server is validated. See the Postgres JDBC SSL docs for further information",title:"Database Sslrootcert",required:!1,deprecated:!1},databaseTcpkeepalive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enable or disable TCP keep-alive probe to avoid dropping TCP connection",title:"Database Tcpkeepalive",required:!1,deprecated:!1},databaseUser:{kind:"parameter",type:"string",description:"Name of the database user to be used when connecting to the database.",title:"Database User",required:!1,deprecated:!1},datatypePropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching the database-specific data type names that adds the data type's original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Datatype Propagate Source Type",required:!1,deprecated:!1},decimalHandlingMode:{kind:"parameter",type:"string",defaultValue:"precise",description:"Specify how DECIMAL and NUMERIC columns should be represented in change events, including: 'precise' (the default) uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'string' uses string to represent values; 'double' represents values using Java's 'double', which may not offer the precision but will be far easier to use in consumers.",title:"Decimal Handling Mode",required:!1,deprecated:!1},errorsMaxRetries:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The maximum number of retries on connection errors before failing (-1 = no limit, 0 = disabled, 0 = num of retries).",title:"Errors Max Retries",required:!1,deprecated:!1},eventProcessingFailureHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped.",title:"Event Processing Failure Handling Mode",required:!1,deprecated:!1},flushLsnSource:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Boolean to determine if Debezium should flush LSN in the source postgres database. If set to false, user will have to flush the LSN manually outside Debezium.",title:"Flush Lsn Source",required:!1,deprecated:!1},heartbeatActionQuery:{kind:"parameter",type:"string",description:"The query executed with every heartbeat.",title:"Heartbeat Action Query",required:!1,deprecated:!1},heartbeatIntervalMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default.",title:"Heartbeat Interval Ms",required:!1,deprecated:!1},heartbeatTopicsPrefix:{kind:"parameter",type:"string",defaultValue:"__debezium-heartbeat",description:"The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",title:"Heartbeat Topics Prefix",required:!1,deprecated:!1},hstoreHandlingMode:{kind:"parameter",type:"string",defaultValue:"json",description:"Specify how HSTORE columns should be represented in change events, including: 'json' represents values as string-ified JSON (default); 'map' represents values as a key/value map",title:"Hstore Handling Mode",required:!1,deprecated:!1},includeSchemaComments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the connector parse table and column's comment to metadata object. Note: Enable this option will bring the implications on memory usage. The number and size of ColumnImpl objects is what largely impacts how much memory is consumed by the Debezium connectors, and adding a String to each of them can potentially be quite heavy. The default is 'false'.",title:"Include Schema Comments",required:!1,deprecated:!1},includeUnknownDatatypes:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specify whether the fields of data type not supported by Debezium should be processed: 'false' (the default) omits the fields; 'true' converts the field into an implementation dependent binary representation.",title:"Include Unknown Datatypes",required:!1,deprecated:!1},incrementalSnapshotChunkSize:{kind:"parameter",type:"integer",defaultValue:"1024",description:"The maximum size of chunk (number of documents/rows) for incremental snapshotting",title:"Incremental Snapshot Chunk Size",required:!1,deprecated:!1},intervalHandlingMode:{kind:"parameter",type:"string",defaultValue:"numeric",description:"Specify how INTERVAL columns should be represented in change events, including: 'string' represents values as an exact ISO formatted string; 'numeric' (default) represents values using the inexact conversion into microseconds",title:"Interval Handling Mode",required:!1,deprecated:!1},maxBatchSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Maximum size of each batch of source records. Defaults to 2048.",title:"Max Batch Size",required:!1,deprecated:!1},maxQueueSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",title:"Max Queue Size",required:!1,deprecated:!1},maxQueueSizeInBytes:{kind:"parameter",type:"integer",defaultValue:"0",description:"Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",title:"Max Queue Size In Bytes",required:!1,deprecated:!1},messageKeyColumns:{kind:"parameter",type:"string",description:"A semicolon-separated list of expressions that match fully-qualified tables and column(s) to be used as message key. Each expression must match the pattern ':', where the table names could be defined as (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connector, and the key columns are a comma-separated list of columns representing the custom key. For any table without an explicit key configuration the table's primary key column(s) will be used as message key. Example: dbserver1.inventory.orderlines:orderId,orderLineId;dbserver1.inventory.orders:id",title:"Message Key Columns",required:!1,deprecated:!1},messagePrefixExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the logical decoding message prefixes to be excluded from monitoring.",title:"Message Prefix Exclude List",required:!1,deprecated:!1},messagePrefixIncludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the logical decoding message prefixes to be monitored. All prefixes are monitored by default.",title:"Message Prefix Include List",required:!1,deprecated:!1},notificationEnabledChannels:{kind:"parameter",type:"string",description:"List of notification channels names that are enabled.",title:"Notification Enabled Channels",required:!1,deprecated:!1},notificationSinkTopicName:{kind:"parameter",type:"string",description:"The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels",title:"Notification Sink Topic Name",required:!1,deprecated:!1},pluginName:{kind:"parameter",type:"string",defaultValue:"decoderbufs",description:"The name of the Postgres logical decoding plugin installed on the server. Supported values are 'decoderbufs' and 'pgoutput'. Defaults to 'decoderbufs'.",title:"Plugin Name",required:!1,deprecated:!1},pollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"500ms",description:"Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms.",title:"Poll Interval Ms",required:!1,deprecated:!1},provideTransactionMetadata:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables transaction metadata extraction together with event counting",title:"Provide Transaction Metadata",required:!1,deprecated:!1},publicationAutocreateMode:{kind:"parameter",type:"string",defaultValue:"all_tables",description:"Applies only when streaming changes using pgoutput.Determine how creation of a publication should work, the default is all_tables.DISABLED - The connector will not attempt to create a publication at all. The expectation is that the user has created the publication up-front. If the publication isn't found to exist upon startup, the connector will throw an exception and stop.ALL_TABLES - If no publication exists, the connector will create a new publication for all tables. Note this requires that the configured user has access. If the publication already exists, it will be used. i.e CREATE PUBLICATION FOR ALL TABLES;FILTERED - If no publication exists, the connector will create a new publication for all those tables matchingthe current filter configuration (see table/database include/exclude list properties). If the publication already exists, it will be used. i.e CREATE PUBLICATION FOR TABLE",title:"Publication Autocreate Mode",required:!1,deprecated:!1},publicationName:{kind:"parameter",type:"string",defaultValue:"dbz_publication",description:"The name of the Postgres 10 publication used for streaming changes from a plugin. Defaults to 'dbz_publication'",title:"Publication Name",required:!1,deprecated:!1},queryFetchSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size.",title:"Query Fetch Size",required:!1,deprecated:!1},replicaIdentityAutosetValues:{kind:"parameter",type:"string",description:"Applies only when streaming changes using pgoutput.Determines the value for Replica Identity at table level. This option will overwrite the existing value in databaseA comma-separated list of regular expressions that match fully-qualified tables and Replica Identity value to be used in the table. Each expression must match the pattern ':', where the table names could be defined as (SCHEMA_NAME.TABLE_NAME), and the replica identity values are: DEFAULT - Records the old values of the columns of the primary key, if any. This is the default for non-system tables.INDEX index_name - Records the old values of the columns covered by the named index, that must be unique, not partial, not deferrable, and include only columns marked NOT NULL. If this index is dropped, the behavior is the same as NOTHING.FULL - Records the old values of all columns in the row.NOTHING - Records no information about the old row. This is the default for system tables.",title:"Replica Identity Autoset Values",required:!1,deprecated:!1},retriableRestartConnectorWaitMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms.",title:"Retriable Restart Connector Wait Ms",required:!1,deprecated:!1},schemaExcludeList:{kind:"parameter",type:"string",description:"The schemas for which events must not be captured",title:"Schema Exclude List",required:!1,deprecated:!1},schemaHistoryInternalFileFilename:{kind:"parameter",type:"string",description:"The path to the file that will be used to record the database schema history",title:"Schema History Internal File Filename",required:!1,deprecated:!1},schemaIncludeList:{kind:"parameter",type:"string",description:"The schemas for which events should be captured",title:"Schema Include List",required:!1,deprecated:!1},schemaNameAdjustmentMode:{kind:"parameter",type:"string",defaultValue:"none",description:"Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)",title:"Schema Name Adjustment Mode",required:!1,deprecated:!1},schemaRefreshMode:{kind:"parameter",type:"string",defaultValue:"columns_diff",description:"Specify the conditions that trigger a refresh of the in-memory schema for a table. 'columns_diff' (the default) is the safest mode, ensuring the in-memory schema stays in-sync with the database table's schema at all times. 'columns_diff_exclude_unchanged_toast' instructs the connector to refresh the in-memory schema cache if there is a discrepancy between it and the schema derived from the incoming message, unless unchanged TOASTable data fully accounts for the discrepancy. This setting can improve connector performance significantly if there are frequently-updated tables that have TOASTed data that are rarely part of these updates. However, it is possible for the in-memory schema to become outdated if TOASTable columns are dropped from the table.",title:"Schema Refresh Mode",required:!1,deprecated:!1},signalDataCollection:{kind:"parameter",type:"string",description:"The name of the data collection that is used to send signals/commands to Debezium. Signaling is disabled when not set.",title:"Signal Data Collection",required:!1,deprecated:!1},signalEnabledChannels:{kind:"parameter",type:"string",defaultValue:"source",description:"List of channels names that are enabled. Source channel is enabled by default",title:"Signal Enabled Channels",required:!1,deprecated:!1},signalPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"5s",description:"Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds.",title:"Signal Poll Interval Ms",required:!1,deprecated:!1},skippedOperations:{kind:"parameter",type:"string",defaultValue:"t",description:"The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped.",title:"Skipped Operations",required:!1,deprecated:!1},slotDropOnStop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to drop the logical replication slot when the connector finishes orderly. By default the replication is kept so that on restart progress can resume from the last recorded location",title:"Slot Drop On Stop",required:!1,deprecated:!1},slotMaxRetries:{kind:"parameter",type:"integer",defaultValue:"6",description:"How many times to retry connecting to a replication slot when an attempt fails.",title:"Slot Max Retries",required:!1,deprecated:!1},slotName:{kind:"parameter",type:"string",defaultValue:"debezium",description:"The name of the Postgres logical decoding slot created for streaming changes from a plugin. Defaults to 'debezium",title:"Slot Name",required:!1,deprecated:!1},slotRetryDelayMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Time to wait between retry attempts when the connector fails to connect to a replication slot, given in milliseconds. Defaults to 10 seconds (10,000 ms).",title:"Slot Retry Delay Ms",required:!1,deprecated:!1},slotStreamParams:{kind:"parameter",type:"string",description:"Any optional parameters used by logical decoding plugin. Semi-colon separated. E.g. 'add-tables=public.table,public.table2;include-lsn=true'",title:"Slot Stream Params",required:!1,deprecated:!1},snapshotCustomClass:{kind:"parameter",type:"string",description:"When 'snapshot.mode' is set as custom, this setting must be set to specify a fully qualified class name to load (via the default class loader). This class must implement the 'Snapshotter' interface and is called on each app boot to determine whether to do a snapshot and how to build queries.",title:"Snapshot Custom Class",required:!1,deprecated:!1},snapshotDelayMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms.",title:"Snapshot Delay Ms",required:!1,deprecated:!1},snapshotFetchSize:{kind:"parameter",type:"integer",description:"The maximum number of records that should be loaded into memory while performing a snapshot.",title:"Snapshot Fetch Size",required:!1,deprecated:!1},snapshotIncludeCollectionList:{kind:"parameter",type:"string",description:"This setting must be set to specify a list of tables/collections whose snapshot must be taken on creating or restarting the connector.",title:"Snapshot Include Collection List",required:!1,deprecated:!1},snapshotLockTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The maximum number of millis to wait for table locks at the beginning of a snapshot. If locks cannot be acquired in this time frame, the snapshot will be aborted. Defaults to 10 seconds",title:"Snapshot Lock Timeout Ms",required:!1,deprecated:!1},snapshotMaxThreads:{kind:"parameter",type:"integer",defaultValue:"1",description:"The maximum number of threads used to perform the snapshot. Defaults to 1.",title:"Snapshot Max Threads",required:!1,deprecated:!1},snapshotMode:{kind:"parameter",type:"string",defaultValue:"initial",description:"The criteria for running a snapshot upon startup of the connector. Select one of the following snapshot options: 'always': The connector runs a snapshot every time that it starts. After the snapshot completes, the connector begins to stream changes from the transaction log.; 'initial' (default): If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures the current full state of the configured tables. After the snapshot completes, the connector begins to stream changes from the transaction log. 'initial_only': The connector performs a snapshot as it does for the 'initial' option, but after the connector completes the snapshot, it stops, and does not stream changes from the transaction log.; 'never': The connector does not run a snapshot. Upon first startup, the connector immediately begins reading from the beginning of the transaction log. 'exported': This option is deprecated; use 'initial' instead.; 'custom': The connector loads a custom class to specify how the connector performs snapshots. For more information, see Custom snapshotter SPI in the PostgreSQL connector documentation.",title:"Snapshot Mode",required:!1,deprecated:!1},snapshotSelectStatementOverrides:{kind:"parameter",type:"string",description:"This property contains a comma-separated list of fully-qualified tables (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connectors. Select statements for the individual tables are specified in further configuration properties, one for each table, identified by the id 'snapshot.select.statement.overrides.DB_NAME.TABLE_NAME' or 'snapshot.select.statement.overrides.SCHEMA_NAME.TABLE_NAME', respectively. The value of those properties is the select statement to use when retrieving data from the specific table during snapshotting. A possible use case for large append-only tables is setting a specific point where to start (resume) snapshotting, in case a previous snapshotting was interrupted.",title:"Snapshot Select Statement Overrides",required:!1,deprecated:!1},snapshotTablesOrderByRowCount:{kind:"parameter",type:"string",defaultValue:"disabled",description:"Controls the order in which tables are processed in the initial snapshot. A descending value will order the tables by row count descending. A ascending value will order the tables by row count ascending. A value of disabled (the default) will disable ordering by row count.",title:"Snapshot Tables Order By Row Count",required:!1,deprecated:!1},sourceinfoStructMaker:{kind:"parameter",type:"string",defaultValue:"io.debezium.connector.postgresql.PostgresSourceInfoStructMaker",description:"The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct.",title:"Sourceinfo Struct Maker",required:!1,deprecated:!1},statusUpdateIntervalMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Frequency for sending replication connection status updates to the server, given in milliseconds. Defaults to 10 seconds (10,000 ms).",title:"Status Update Interval Ms",required:!1,deprecated:!1},tableExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring",title:"Table Exclude List",required:!1,deprecated:!1},tableIgnoreBuiltin:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Flag specifying whether built-in tables should be ignored.",title:"Table Ignore Builtin",required:!1,deprecated:!1},tableIncludeList:{kind:"parameter",type:"string",description:"The tables for which changes are to be captured",title:"Table Include List",required:!1,deprecated:!1},timePrecisionMode:{kind:"parameter",type:"string",defaultValue:"adaptive",description:"Time, date, and timestamps can be represented with different kinds of precisions, including: 'adaptive' (the default) bases the precision of time, date, and timestamp values on the database column's precision; 'adaptive_time_microseconds' like 'adaptive' mode, but TIME fields always use microseconds precision; 'connect' always represents time, date, and timestamp values using Kafka Connect's built-in representations for Time, Date, and Timestamp, which uses millisecond precision regardless of the database columns' precision.",title:"Time Precision Mode",required:!1,deprecated:!1},tombstonesOnDelete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",title:"Tombstones On Delete",required:!1,deprecated:!1},topicNamingStrategy:{kind:"parameter",type:"string",defaultValue:"io.debezium.schema.SchemaTopicNamingStrategy",description:"The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc.",title:"Topic Naming Strategy",required:!1,deprecated:!1},topicPrefix:{kind:"parameter",type:"string",description:"Topic prefix that identifies and provides a namespace for the particular database server/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted.",title:"Topic Prefix",required:!0,deprecated:!1},unavailableValuePlaceholder:{kind:"parameter",type:"string",defaultValue:"__debezium_unavailable_value",description:"Specify the constant that will be provided by Debezium to indicate that the original value is a toasted value not provided by the database. If starts with 'hex:' prefix it is expected that the rest of the string represents hexadecimal encoded octets.",title:"Unavailable Value Placeholder",required:!1,deprecated:!1},xminFetchIntervalMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Specify how often (in ms) the xmin will be fetched from the replication slot. This xmin value is exposed by the slot which gives a lower bound of where a new replication slot could start from. The lower the value, the more likely this value is to be the current 'true' value, but the bigger the performance cost. The bigger the value, the less likely this value is to be the current 'true' value, but the lower the performance penalty. The default is set to 0 ms, which disables tracking xmin.",title:"Xmin Fetch Interval Ms",required:!1,deprecated:!1}}},"debezium-sqlserver":{type:"object",title:"Debezium SQL Server Connector",group:"database",icon:"generic24.png",description:"Capture changes from an SQL Server database.",properties:{name:{kind:"path",type:"string",description:"Unique name for the connector. Attempting to register again with the same name will fail.",title:"Name",required:!0,deprecated:!1},additionalProperties:{kind:"parameter",type:"object",description:"Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http://localhost:8811/avro",title:"Additional Properties",required:!1,deprecated:!1},internalKeyConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter.",title:"Internal Key Converter",required:!1,deprecated:!1},internalValueConverter:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.json.JsonConverter",description:"The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter.",title:"Internal Value Converter",required:!1,deprecated:!1},offsetCommitPolicy:{kind:"parameter",type:"string",description:"The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals.",title:"Offset Commit Policy",required:!1,deprecated:!1},offsetCommitTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds.",title:"Offset Commit Timeout Ms",required:!1,deprecated:!1},offsetFlushIntervalMs:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Interval at which to try committing offsets. The default is 1 minute.",title:"Offset Flush Interval Ms",required:!1,deprecated:!1},offsetStorage:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.connect.storage.FileOffsetBackingStore",description:"The name of the Java class that is responsible for persistence of connector offsets.",title:"Offset Storage",required:!1,deprecated:!1},offsetStorageFileName:{kind:"parameter",type:"string",description:"Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore.",title:"Offset Storage File Name",required:!1,deprecated:!1},offsetStoragePartitions:{kind:"parameter",type:"integer",description:"The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'.",title:"Offset Storage Partitions",required:!1,deprecated:!1},offsetStorageReplicationFactor:{kind:"parameter",type:"integer",description:"Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore",title:"Offset Storage Replication Factor",required:!1,deprecated:!1},offsetStorageTopic:{kind:"parameter",type:"string",description:"The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore.",title:"Offset Storage Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},binaryHandlingMode:{kind:"parameter",type:"string",defaultValue:"bytes",description:"Specify how binary (blob, binary, etc.) columns should be represented in change events, including: 'bytes' represents binary data as byte array (default); 'base64' represents binary data as base64-encoded string; 'base64-url-safe' represents binary data as base64-url-safe-encoded string; 'hex' represents binary data as hex-encoded (base16) string",title:"Binary Handling Mode",required:!1,deprecated:!1},columnExcludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to exclude from change events",title:"Column Exclude List",required:!1,deprecated:!1},columnIncludeList:{kind:"parameter",type:"string",description:"Regular expressions matching columns to include in change events",title:"Column Include List",required:!1,deprecated:!1},columnPropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching fully-qualified names of columns that adds the columns original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Column Propagate Source Type",required:!1,deprecated:!1},converters:{kind:"parameter",type:"string",description:"Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'",title:"Converters",required:!1,deprecated:!1},databaseHostname:{kind:"parameter",type:"string",description:"Resolvable hostname or IP address of the database server.",title:"Database Hostname",required:!1,deprecated:!1},databaseInstance:{kind:"parameter",type:"string",description:"The SQL Server instance name",title:"Database Instance",required:!1,deprecated:!1},databaseNames:{kind:"parameter",type:"string",description:"The names of the databases from which the connector should capture changes",title:"Database Names",required:!1,deprecated:!1},databasePassword:{kind:"parameter",type:"string",description:"Password of the database user to be used when connecting to the database.",title:"Database Password",required:!0,deprecated:!1},databasePort:{kind:"parameter",type:"integer",defaultValue:"1433",description:"Port of the database server.",title:"Database Port",required:!1,deprecated:!1},databaseUser:{kind:"parameter",type:"string",description:"Name of the database user to be used when connecting to the database.",title:"Database User",required:!1,deprecated:!1},datatypePropagateSourceType:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions matching the database-specific data type names that adds the data type's original type and original length as parameters to the corresponding field schemas in the emitted change records.",title:"Datatype Propagate Source Type",required:!1,deprecated:!1},decimalHandlingMode:{kind:"parameter",type:"string",defaultValue:"precise",description:"Specify how DECIMAL and NUMERIC columns should be represented in change events, including: 'precise' (the default) uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'string' uses string to represent values; 'double' represents values using Java's 'double', which may not offer the precision but will be far easier to use in consumers.",title:"Decimal Handling Mode",required:!1,deprecated:!1},errorsMaxRetries:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The maximum number of retries on connection errors before failing (-1 = no limit, 0 = disabled, 0 = num of retries).",title:"Errors Max Retries",required:!1,deprecated:!1},eventProcessingFailureHandlingMode:{kind:"parameter",type:"string",defaultValue:"fail",description:"Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped.",title:"Event Processing Failure Handling Mode",required:!1,deprecated:!1},heartbeatActionQuery:{kind:"parameter",type:"string",description:"The query executed with every heartbeat.",title:"Heartbeat Action Query",required:!1,deprecated:!1},heartbeatIntervalMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default.",title:"Heartbeat Interval Ms",required:!1,deprecated:!1},heartbeatTopicsPrefix:{kind:"parameter",type:"string",defaultValue:"__debezium-heartbeat",description:"The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",title:"Heartbeat Topics Prefix",required:!1,deprecated:!1},includeSchemaChanges:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the connector should publish changes in the database schema to a Kafka topic with the same name as the database server ID. Each schema change will be recorded using a key that contains the database name and whose value include logical description of the new schema and optionally the DDL statement(s). The default is 'true'. This is independent of how the connector internally records database schema history.",title:"Include Schema Changes",required:!1,deprecated:!1},includeSchemaComments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the connector parse table and column's comment to metadata object. Note: Enable this option will bring the implications on memory usage. The number and size of ColumnImpl objects is what largely impacts how much memory is consumed by the Debezium connectors, and adding a String to each of them can potentially be quite heavy. The default is 'false'.",title:"Include Schema Comments",required:!1,deprecated:!1},incrementalSnapshotAllowSchemaChanges:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Detect schema change during an incremental snapshot and re-select a current chunk to avoid locking DDLs. Note that changes to a primary key are not supported and can cause incorrect results if performed during an incremental snapshot. Another limitation is that if a schema change affects only columns' default values, then the change won't be detected until the DDL is processed from the binlog stream. This doesn't affect the snapshot events' values, but the schema of snapshot events may have outdated defaults.",title:"Incremental Snapshot Allow Schema Changes",required:!1,deprecated:!1},incrementalSnapshotChunkSize:{kind:"parameter",type:"integer",defaultValue:"1024",description:"The maximum size of chunk (number of documents/rows) for incremental snapshotting",title:"Incremental Snapshot Chunk Size",required:!1,deprecated:!1},incrementalSnapshotOptionRecompile:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Add OPTION(RECOMPILE) on each SELECT statement during the incremental snapshot process. This prevents parameter sniffing but can cause CPU pressure on the source database.",title:"Incremental Snapshot Option Recompile",required:!1,deprecated:!1},maxBatchSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Maximum size of each batch of source records. Defaults to 2048.",title:"Max Batch Size",required:!1,deprecated:!1},maxIterationTransactions:{kind:"parameter",type:"integer",defaultValue:"0",description:"This property can be used to reduce the connector memory usage footprint when changes are streamed from multiple tables per database.",title:"Max Iteration Transactions",required:!1,deprecated:!1},maxQueueSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",title:"Max Queue Size",required:!1,deprecated:!1},maxQueueSizeInBytes:{kind:"parameter",type:"integer",defaultValue:"0",description:"Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",title:"Max Queue Size In Bytes",required:!1,deprecated:!1},messageKeyColumns:{kind:"parameter",type:"string",description:"A semicolon-separated list of expressions that match fully-qualified tables and column(s) to be used as message key. Each expression must match the pattern ':', where the table names could be defined as (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connector, and the key columns are a comma-separated list of columns representing the custom key. For any table without an explicit key configuration the table's primary key column(s) will be used as message key. Example: dbserver1.inventory.orderlines:orderId,orderLineId;dbserver1.inventory.orders:id",title:"Message Key Columns",required:!1,deprecated:!1},notificationEnabledChannels:{kind:"parameter",type:"string",description:"List of notification channels names that are enabled.",title:"Notification Enabled Channels",required:!1,deprecated:!1},notificationSinkTopicName:{kind:"parameter",type:"string",description:"The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels",title:"Notification Sink Topic Name",required:!1,deprecated:!1},pollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"500ms",description:"Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms.",title:"Poll Interval Ms",required:!1,deprecated:!1},provideTransactionMetadata:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables transaction metadata extraction together with event counting",title:"Provide Transaction Metadata",required:!1,deprecated:!1},queryFetchSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size.",title:"Query Fetch Size",required:!1,deprecated:!1},retriableRestartConnectorWaitMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms.",title:"Retriable Restart Connector Wait Ms",required:!1,deprecated:!1},schemaHistoryInternal:{kind:"parameter",type:"string",defaultValue:"io.debezium.storage.kafka.history.KafkaSchemaHistory",description:"The name of the SchemaHistory class that should be used to store and recover database schema changes. The configuration properties for the history are prefixed with the 'schema.history.internal.' string.",title:"Schema History Internal",required:!1,deprecated:!1},schemaHistoryInternalFileFilename:{kind:"parameter",type:"string",description:"The path to the file that will be used to record the database schema history",title:"Schema History Internal File Filename",required:!1,deprecated:!1},schemaHistoryInternalSkipUnparseableDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls the action Debezium will take when it meets a DDL statement in binlog, that it cannot parse.By default the connector will stop operating but by changing the setting it can ignore the statements which it cannot parse. If skipping is enabled then Debezium can miss metadata changes.",title:"Schema History Internal Skip Unparseable Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedDatabasesDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls what DDL will Debezium store in database schema history. By default (true) only DDL that manipulates a table from captured schema/database will be stored. If set to false, then Debezium will store all incoming DDL statements.",title:"Schema History Internal Store Only Captured Databases Ddl",required:!1,deprecated:!1},schemaHistoryInternalStoreOnlyCapturedTablesDdl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls what DDL will Debezium store in database schema history. By default (false) Debezium will store all incoming DDL statements. If set to true, then only DDL that manipulates a captured table will be stored.",title:"Schema History Internal Store Only Captured Tables Ddl",required:!1,deprecated:!1},schemaNameAdjustmentMode:{kind:"parameter",type:"string",defaultValue:"none",description:"Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)",title:"Schema Name Adjustment Mode",required:!1,deprecated:!1},signalDataCollection:{kind:"parameter",type:"string",description:"The name of the data collection that is used to send signals/commands to Debezium. Signaling is disabled when not set.",title:"Signal Data Collection",required:!1,deprecated:!1},signalEnabledChannels:{kind:"parameter",type:"string",defaultValue:"source",description:"List of channels names that are enabled. Source channel is enabled by default",title:"Signal Enabled Channels",required:!1,deprecated:!1},signalPollIntervalMs:{kind:"parameter",type:"duration",defaultValue:"5s",description:"Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds.",title:"Signal Poll Interval Ms",required:!1,deprecated:!1},skippedOperations:{kind:"parameter",type:"string",defaultValue:"t",description:"The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped.",title:"Skipped Operations",required:!1,deprecated:!1},snapshotDelayMs:{kind:"parameter",type:"duration",defaultValue:"0ms",description:"A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms.",title:"Snapshot Delay Ms",required:!1,deprecated:!1},snapshotFetchSize:{kind:"parameter",type:"integer",description:"The maximum number of records that should be loaded into memory while performing a snapshot.",title:"Snapshot Fetch Size",required:!1,deprecated:!1},snapshotIncludeCollectionList:{kind:"parameter",type:"string",description:"This setting must be set to specify a list of tables/collections whose snapshot must be taken on creating or restarting the connector.",title:"Snapshot Include Collection List",required:!1,deprecated:!1},snapshotIsolationMode:{kind:"parameter",type:"string",defaultValue:"repeatable_read",description:"Controls which transaction isolation level is used and how long the connector locks the captured tables. The default is 'repeatable_read', which means that repeatable read isolation level is used. In addition, exclusive locks are taken only during schema snapshot. Using a value of 'exclusive' ensures that the connector holds the exclusive lock (and thus prevents any reads and updates) for all captured tables during the entire snapshot duration. When 'snapshot' is specified, connector runs the initial snapshot in SNAPSHOT isolation level, which guarantees snapshot consistency. In addition, neither table nor row-level locks are held. When 'read_committed' is specified, connector runs the initial snapshot in READ COMMITTED isolation level. No long-running locks are taken, so that initial snapshot does not prevent other transactions from updating table rows. Snapshot consistency is not guaranteed.In 'read_uncommitted' mode neither table nor row-level locks are acquired, but connector does not guarantee snapshot consistency.",title:"Snapshot Isolation Mode",required:!1,deprecated:!1},snapshotLockTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"10s",description:"The maximum number of millis to wait for table locks at the beginning of a snapshot. If locks cannot be acquired in this time frame, the snapshot will be aborted. Defaults to 10 seconds",title:"Snapshot Lock Timeout Ms",required:!1,deprecated:!1},snapshotMaxThreads:{kind:"parameter",type:"integer",defaultValue:"1",description:"The maximum number of threads used to perform the snapshot. Defaults to 1.",title:"Snapshot Max Threads",required:!1,deprecated:!1},snapshotMode:{kind:"parameter",type:"string",defaultValue:"initial",description:"The criteria for running a snapshot upon startup of the connector. Select one of the following snapshot options: 'initial' (default): If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures the current full state of the configured tables. After the snapshot completes, the connector begins to stream changes from the transaction log.; 'initial_only': The connector performs a snapshot as it does for the 'initial' option, but after the connector completes the snapshot, it stops, and does not stream changes from the transaction log.; 'schema_only': If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures only the schema (table structures), but not any table data. After the snapshot completes, the connector begins to stream changes from the transaction log.",title:"Snapshot Mode",required:!1,deprecated:!1},snapshotSelectStatementOverrides:{kind:"parameter",type:"string",description:"This property contains a comma-separated list of fully-qualified tables (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connectors. Select statements for the individual tables are specified in further configuration properties, one for each table, identified by the id 'snapshot.select.statement.overrides.DB_NAME.TABLE_NAME' or 'snapshot.select.statement.overrides.SCHEMA_NAME.TABLE_NAME', respectively. The value of those properties is the select statement to use when retrieving data from the specific table during snapshotting. A possible use case for large append-only tables is setting a specific point where to start (resume) snapshotting, in case a previous snapshotting was interrupted.",title:"Snapshot Select Statement Overrides",required:!1,deprecated:!1},snapshotTablesOrderByRowCount:{kind:"parameter",type:"string",defaultValue:"disabled",description:"Controls the order in which tables are processed in the initial snapshot. A descending value will order the tables by row count descending. A ascending value will order the tables by row count ascending. A value of disabled (the default) will disable ordering by row count.",title:"Snapshot Tables Order By Row Count",required:!1,deprecated:!1},sourceinfoStructMaker:{kind:"parameter",type:"string",defaultValue:"io.debezium.connector.sqlserver.SqlServerSourceInfoStructMaker",description:"The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct.",title:"Sourceinfo Struct Maker",required:!1,deprecated:!1},tableExcludeList:{kind:"parameter",type:"string",description:"A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring",title:"Table Exclude List",required:!1,deprecated:!1},tableIgnoreBuiltin:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Flag specifying whether built-in tables should be ignored.",title:"Table Ignore Builtin",required:!1,deprecated:!1},tableIncludeList:{kind:"parameter",type:"string",description:"The tables for which changes are to be captured",title:"Table Include List",required:!1,deprecated:!1},timePrecisionMode:{kind:"parameter",type:"string",defaultValue:"adaptive",description:"Time, date, and timestamps can be represented with different kinds of precisions, including: 'adaptive' (the default) bases the precision of time, date, and timestamp values on the database column's precision; 'adaptive_time_microseconds' like 'adaptive' mode, but TIME fields always use microseconds precision; 'connect' always represents time, date, and timestamp values using Kafka Connect's built-in representations for Time, Date, and Timestamp, which uses millisecond precision regardless of the database columns' precision.",title:"Time Precision Mode",required:!1,deprecated:!1},tombstonesOnDelete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",title:"Tombstones On Delete",required:!1,deprecated:!1},topicNamingStrategy:{kind:"parameter",type:"string",defaultValue:"io.debezium.schema.SchemaTopicNamingStrategy",description:"The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc.",title:"Topic Naming Strategy",required:!1,deprecated:!1},topicPrefix:{kind:"parameter",type:"string",description:"Topic prefix that identifies and provides a namespace for the particular database server/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted.",title:"Topic Prefix",required:!0,deprecated:!1}}},dhis2:{type:"object",title:"DHIS2",group:"api",icon:"generic24.png",description:"Leverages the DHIS2 Java SDK to integrate Apache Camel with the DHIS2 Web API.",properties:{apiName:{kind:"path",type:"object",enum:["POST","RESOURCE_TABLES","GET","DELETE","PUT"],description:"API operation (e.g., get)",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",description:"Subject of the API operation (e.g., resource)",title:"Method Name",required:!0,deprecated:!1},baseApiUrl:{kind:"parameter",type:"string",description:"DHIS2 server base API URL (e.g., https://play.dhis2.org/2.39.1.1/api)",title:"Base Api Url",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"References a user-defined org.hisp.dhis.integration.sdk.api.Dhis2Client",title:"Client",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"DHIS2 account password for accessing the DHIS2 API",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"DHIS2 account username for accessing the DHIS2 API",title:"Username",required:!1,deprecated:!1}}},digitalocean:{type:"object",title:"DigitalOcean",group:"cloud,management",icon:"generic24.png",description:"Manage Droplets and resources within the DigitalOcean cloud.",properties:{operation:{kind:"path",type:"object",enum:["create","update","delete","list","ownList","get","listBackups","listActions","listNeighbors","listSnapshots","listKernels","listAllNeighbors","enableBackups","disableBackups","reboot","powerCycle","shutdown","powerOn","powerOff","restore","resetPassword","resize","rebuild","rename","changeKernel","enableIpv6","enablePrivateNetworking","takeSnapshot","transfer","convert","attach","detach","assign","unassign","tag","untag"],description:"The operation to perform to the given resource.",title:"Operation",required:!1,deprecated:!1},page:{kind:"parameter",type:"integer",defaultValue:"1",description:"Use for pagination. Force the page number.",title:"Page",required:!1,deprecated:!1},perPage:{kind:"parameter",type:"integer",defaultValue:"25",description:"Use for pagination. Set the number of item per request. The maximum number of results per page is 200.",title:"Per Page",required:!1,deprecated:!1},resource:{kind:"parameter",type:"object",enum:["account","actions","blockStorages","droplets","mages","snapshots","keys","regions","sizes","floatingIPs","tags"],description:"The DigitalOcean resource type on which perform the operation.",title:"Resource",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},digitalOceanClient:{kind:"parameter",type:"object",description:"To use a existing configured DigitalOceanClient as client",title:"Digital Ocean Client",required:!1,deprecated:!1},httpProxyHost:{kind:"parameter",type:"string",description:"Set a proxy host if needed",title:"Http Proxy Host",required:!1,deprecated:!1},httpProxyPassword:{kind:"parameter",type:"string",description:"Set a proxy password if needed",title:"Http Proxy Password",required:!1,deprecated:!1},httpProxyPort:{kind:"parameter",type:"integer",description:"Set a proxy port if needed",title:"Http Proxy Port",required:!1,deprecated:!1},httpProxyUser:{kind:"parameter",type:"string",description:"Set a proxy host if needed",title:"Http Proxy User",required:!1,deprecated:!1},oAuthToken:{kind:"parameter",type:"string",description:"DigitalOcean OAuth Token",title:"OAuth Token",required:!1,deprecated:!1}}},direct:{type:"object",title:"Direct",group:"core,messaging",icon:"generic24.png",description:"Call another endpoint from the same Camel Context synchronously.",properties:{name:{kind:"path",type:"string",description:"Name of direct endpoint",title:"Name",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},block:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If sending a message to a direct endpoint which has no active consumer, then we can tell the producer to block and wait for the consumer to become active.",title:"Block",required:!1,deprecated:!1},failIfNoConsumers:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the producer should fail by throwing an exception, when sending to a DIRECT endpoint with no active consumers.",title:"Fail If No Consumers",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The timeout value to use if block is enabled.",title:"Timeout",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether synchronous processing is forced. If enabled then the producer thread, will be forced to wait until the message has been completed before the same thread will continue processing. If disabled (default) then the producer thread may be freed and can do other work while the message is continued processed by other threads (reactive).",title:"Synchronous",required:!1,deprecated:!1}}},disruptor:{type:"object",title:"Disruptor",group:"messaging",icon:"generic24.png",description:"Provides asynchronous SEDA behavior using LMAX Disruptor.",properties:{name:{kind:"path",type:"string",description:"Name of queue",title:"Name",required:!0,deprecated:!1},size:{kind:"parameter",type:"integer",defaultValue:"1024",description:"The maximum capacity of the Disruptors ringbuffer Will be effectively increased to the nearest power of two. Notice: Mind if you use this option, then its the first endpoint being created with the queue name, that determines the size. To make sure all endpoints use same size, then configure the size option on all of them, or the first endpoint being created.",title:"Size",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of concurrent threads processing exchanges.",title:"Concurrent Consumers",required:!1,deprecated:!1},multipleConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether multiple consumers are allowed. If enabled, you can use Disruptor for Publish-Subscribe messaging. That is, you can send a message to the queue and have each consumer receive a copy of the message. When enabled, this option should be specified on every consumer endpoint.",title:"Multiple Consumers",required:!1,deprecated:!1},waitStrategy:{kind:"parameter",type:"object",defaultValue:"Blocking",enum:["Blocking","Sleeping","BusySpin","Yielding"],description:"Defines the strategy used by consumer threads to wait on new exchanges to be published. The options allowed are:Blocking, Sleeping, BusySpin and Yielding.",title:"Wait Strategy",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},blockWhenFull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a thread that sends messages to a full Disruptor will block until the ringbuffer's capacity is no longer exhausted. By default, the calling thread will block and wait until the message can be accepted. By disabling this option, an exception will be thrown stating that the queue is full.",title:"Block When Full",required:!1,deprecated:!1},producerType:{kind:"parameter",type:"object",defaultValue:"Multi",enum:["Single","Multi"],description:"Defines the producers allowed on the Disruptor. The options allowed are: Multi to allow multiple producers and Single to enable certain optimizations only allowed when one concurrent producer (on one thread or otherwise synchronized) is active.",title:"Producer Type",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Timeout (in milliseconds) before a producer will stop waiting for an asynchronous task to complete. You can disable timeout by using 0 or a negative value.",title:"Timeout",required:!1,deprecated:!1},waitForTaskToComplete:{kind:"parameter",type:"object",defaultValue:"IfReplyExpected",enum:["Never","IfReplyExpected","Always"],description:"Option to specify whether the caller should wait for the async task to complete or not before continuing. The following three options are supported: Always, Never or IfReplyExpected. The first two values are self-explanatory. The last value, IfReplyExpected, will only wait if the message is Request Reply based.",title:"Wait For Task To Complete",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"disruptor-vm":{type:"object",title:"Disruptor VM",group:"messaging",icon:"generic24.png",description:"Provides asynchronous SEDA behavior using LMAX Disruptor.",properties:{name:{kind:"path",type:"string",description:"Name of queue",title:"Name",required:!0,deprecated:!1},size:{kind:"parameter",type:"integer",defaultValue:"1024",description:"The maximum capacity of the Disruptors ringbuffer Will be effectively increased to the nearest power of two. Notice: Mind if you use this option, then its the first endpoint being created with the queue name, that determines the size. To make sure all endpoints use same size, then configure the size option on all of them, or the first endpoint being created.",title:"Size",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of concurrent threads processing exchanges.",title:"Concurrent Consumers",required:!1,deprecated:!1},multipleConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether multiple consumers are allowed. If enabled, you can use Disruptor for Publish-Subscribe messaging. That is, you can send a message to the queue and have each consumer receive a copy of the message. When enabled, this option should be specified on every consumer endpoint.",title:"Multiple Consumers",required:!1,deprecated:!1},waitStrategy:{kind:"parameter",type:"object",defaultValue:"Blocking",enum:["Blocking","Sleeping","BusySpin","Yielding"],description:"Defines the strategy used by consumer threads to wait on new exchanges to be published. The options allowed are:Blocking, Sleeping, BusySpin and Yielding.",title:"Wait Strategy",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},blockWhenFull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a thread that sends messages to a full Disruptor will block until the ringbuffer's capacity is no longer exhausted. By default, the calling thread will block and wait until the message can be accepted. By disabling this option, an exception will be thrown stating that the queue is full.",title:"Block When Full",required:!1,deprecated:!1},producerType:{kind:"parameter",type:"object",defaultValue:"Multi",enum:["Single","Multi"],description:"Defines the producers allowed on the Disruptor. The options allowed are: Multi to allow multiple producers and Single to enable certain optimizations only allowed when one concurrent producer (on one thread or otherwise synchronized) is active.",title:"Producer Type",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Timeout (in milliseconds) before a producer will stop waiting for an asynchronous task to complete. You can disable timeout by using 0 or a negative value.",title:"Timeout",required:!1,deprecated:!1},waitForTaskToComplete:{kind:"parameter",type:"object",defaultValue:"IfReplyExpected",enum:["Never","IfReplyExpected","Always"],description:"Option to specify whether the caller should wait for the async task to complete or not before continuing. The following three options are supported: Always, Never or IfReplyExpected. The first two values are self-explanatory. The last value, IfReplyExpected, will only wait if the message is Request Reply based.",title:"Wait For Task To Complete",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},djl:{type:"object",title:"Deep Java Library",group:"ai",icon:"generic24.png",description:"Infer Deep Learning models from message exchanges data using Deep Java Library (DJL).",properties:{application:{kind:"path",type:"string",description:"Application name",title:"Application",required:!0,deprecated:!1},artifactId:{kind:"parameter",type:"string",description:"Model Artifact",title:"Artifact Id",required:!1,deprecated:!1},model:{kind:"parameter",type:"string",description:"Model",title:"Model",required:!1,deprecated:!1},translator:{kind:"parameter",type:"string",description:"Translator",title:"Translator",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},dns:{type:"object",title:"DNS",group:"networking",icon:"generic24.png",description:"Perform DNS queries using DNSJava.",properties:{dnsType:{kind:"path",type:"object",enum:["dig","ip","lookup","wikipedia"],description:"The type of the lookup.",title:"Dns Type",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},docker:{type:"object",title:"Docker",group:"cloud,container",icon:"generic24.png",description:"Manage Docker containers.",properties:{operation:{kind:"path",type:"object",enum:["events","stats","auth","info","ping","version","imagebuild","imagecreate","imageinspect","imagelist","imagepull","imagepush","imageremove","imagesearch","imagetag","containerattach","containercommit","containercopyfile","containercreate","containerdiff","inspectcontainer","containerkill","containerlist","containerlog","containerpause","containerrestart","containerremove","containerstart","containerstop","containertop","containerunpause","containerwait","execcreate","execstart","networkconnect","networkcreate","networkremove"],description:"Which operation to use",title:"Operation",required:!0,deprecated:!1},email:{kind:"parameter",type:"string",description:"Email address associated with the user",title:"Email",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",defaultValue:"localhost",description:"Docker host",title:"Host",required:!0,deprecated:!1},port:{kind:"parameter",type:"integer",defaultValue:"2375",description:"Docker port",title:"Port",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"integer",description:"Request timeout for response (in seconds)",title:"Request Timeout",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},cmdExecFactory:{kind:"parameter",type:"string",defaultValue:"com.github.dockerjava.netty.NettyDockerCmdExecFactory",description:"The fully qualified class name of the DockerCmdExecFactory implementation to use",title:"Cmd Exec Factory",required:!1,deprecated:!1},followRedirectFilter:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to follow redirect filter",title:"Follow Redirect Filter",required:!1,deprecated:!1},loggingFilter:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use logging filter",title:"Logging Filter",required:!1,deprecated:!1},maxPerRouteConnections:{kind:"parameter",type:"integer",defaultValue:"100",description:"Maximum route connections",title:"Max Per Route Connections",required:!1,deprecated:!1},maxTotalConnections:{kind:"parameter",type:"integer",defaultValue:"100",description:"Maximum total connections",title:"Max Total Connections",required:!1,deprecated:!1},parameters:{kind:"parameter",type:"object",description:"Additional configuration parameters as key/value pairs",title:"Parameters",required:!1,deprecated:!1},serverAddress:{kind:"parameter",type:"string",defaultValue:"https://index.docker.io/v1/",description:"Server address for docker registry.",title:"Server Address",required:!1,deprecated:!1},socket:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Socket connection mode",title:"Socket",required:!1,deprecated:!1},certPath:{kind:"parameter",type:"string",description:"Location containing the SSL certificate chain",title:"Cert Path",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to authenticate with",title:"Password",required:!1,deprecated:!1},secure:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use HTTPS communication",title:"Secure",required:!1,deprecated:!1},tlsVerify:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Check TLS",title:"Tls Verify",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"User name to authenticate with",title:"Username",required:!1,deprecated:!1}}},drill:{type:"object",title:"Drill",group:"database,bigdata",icon:"generic24.png",description:"Perform queries against an Apache Drill cluster.",properties:{host:{kind:"path",type:"string",description:"Host name or IP address",title:"Host",required:!0,deprecated:!1},clusterId:{kind:"parameter",type:"string",description:"Cluster ID https://drill.apache.org/docs/using-the-jdbc-driver/#determining-the-cluster-id",title:"Cluster Id",required:!1,deprecated:!1},directory:{kind:"parameter",type:"string",description:"Drill directory",title:"Directory",required:!1,deprecated:!1},mode:{kind:"parameter",type:"object",defaultValue:"ZK",enum:["ZK","DRILLBIT"],description:"Connection mode: zk: Zookeeper drillbit: Drillbit direct connection https://drill.apache.org/docs/using-the-jdbc-driver/",title:"Mode",required:!1,deprecated:!1},port:{kind:"parameter",type:"integer",defaultValue:"2181",description:"Port number",title:"Port",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},dropbox:{type:"object",title:"Dropbox",group:"cloud,file,api",icon:"generic24.png",description:"Upload, download and manage files, folders, groups, collaborations, etc on Dropbox.",properties:{operation:{kind:"path",type:"object",enum:["put","del","search","get","move"],description:"The specific action (typically is a CRUD action) to perform on Dropbox remote folder.",title:"Operation",required:!0,deprecated:!1},clientIdentifier:{kind:"parameter",type:"string",description:"Name of the app registered to make API requests",title:"Client Identifier",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"A space-separated list of sub-strings to search for. A file matches only if it contains all the sub-strings. If this option is not set, all files will be matched.",title:"Query",required:!1,deprecated:!1},remotePath:{kind:"parameter",type:"string",description:"Original file or folder to move",title:"Remote Path",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},localPath:{kind:"parameter",type:"string",description:"Optional folder or file to upload on Dropbox from the local filesystem. If this option has not been configured then the message body is used as the content to upload.",title:"Local Path",required:!1,deprecated:!1},newRemotePath:{kind:"parameter",type:"string",description:"Destination file or folder",title:"New Remote Path",required:!1,deprecated:!1},uploadMode:{kind:"parameter",type:"object",enum:["add","force"],description:"Which mode to upload. in case of add the new file will be renamed if a file with the same name already exists on dropbox. in case of force if a file with the same name already exists on dropbox, this will be overwritten.",title:"Upload Mode",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"To use an existing DbxClient instance as Dropbox client.",title:"Client",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"The access token to make API requests for a specific Dropbox user",title:"Access Token",required:!0,deprecated:!1},apiKey:{kind:"parameter",type:"string",description:"The apiKey to make API requests for a specific Dropbox user",title:"Api Key",required:!0,deprecated:!1},apiSecret:{kind:"parameter",type:"string",description:"The apiSecret to make API requests for a specific Dropbox user",title:"Api Secret",required:!0,deprecated:!1},expireIn:{kind:"parameter",type:"integer",description:"The expire time to access token for a specific Dropbox user",title:"Expire In",required:!0,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"The refresh token to refresh the access token for a specific Dropbox user",title:"Refresh Token",required:!0,deprecated:!1}}},"dynamic-router":{type:"object",title:"Dynamic Router",group:"messaging,core",icon:"generic24.png",description:"The Dynamic Router component routes exchanges to recipients, and the recipients (and their rules) may change at runtime.",properties:{channel:{kind:"path",type:"string",description:"Channel of the Dynamic Router",title:"Channel",required:!0,deprecated:!1},controlAction:{kind:"path",type:"string",enum:["subscribe","unsubscribe"],description:"Control channel action: subscribe or unsubscribe",title:"Control Action",required:!1,deprecated:!1},subscribeChannel:{kind:"path",type:"string",description:"The channel to subscribe to",title:"Subscribe Channel",required:!1,deprecated:!1},recipientMode:{kind:"parameter",type:"string",defaultValue:"firstMatch",enum:["firstMatch","allMatch"],description:"Recipient mode: firstMatch or allMatch",title:"Recipient Mode",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flag to ensure synchronous processing.",title:"Synchronous",required:!1,deprecated:!1},warnDroppedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flag to log a warning if no predicates match for an exchange.",title:"Warn Dropped Message",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},destinationUri:{kind:"parameter",type:"string",description:"The destination URI for exchanges that match.",title:"Destination Uri",required:!1,deprecated:!1},expressionLanguage:{kind:"parameter",type:"string",defaultValue:"simple",description:"The subscription predicate language.",title:"Expression Language",required:!1,deprecated:!1},predicate:{kind:"parameter",type:"string",description:"The subscription predicate.",title:"Predicate",required:!1,deprecated:!1},predicateBean:{kind:"parameter",type:"object",description:"A Predicate instance in the registry.",title:"Predicate Bean",required:!1,deprecated:!1},priority:{kind:"parameter",type:"integer",description:"The subscription priority.",title:"Priority",required:!1,deprecated:!1},subscriptionId:{kind:"parameter",type:"string",description:"The subscription ID; if unspecified, one will be assigned and returned.",title:"Subscription Id",required:!1,deprecated:!1}}},ehcache:{type:"object",title:"Ehcache",group:"cache,clustering",icon:"generic24.png",description:"Perform caching operations using Ehcache.",properties:{cacheName:{kind:"path",type:"string",description:"the cache name",title:"Cache Name",required:!0,deprecated:!1},cacheManager:{kind:"parameter",type:"object",description:"The cache manager",title:"Cache Manager",required:!1,deprecated:!1},cacheManagerConfiguration:{kind:"parameter",type:"object",description:"The cache manager configuration",title:"Cache Manager Configuration",required:!1,deprecated:!1},configurationUri:{kind:"parameter",type:"string",description:"URI pointing to the Ehcache XML configuration file's location",title:"Configuration Uri",required:!1,deprecated:!1},createCacheIfNotExist:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Configure if a cache need to be created if it does exist or can't be pre-configured.",title:"Create Cache If Not Exist",required:!1,deprecated:!1},eventFiring:{kind:"parameter",type:"object",defaultValue:"ASYNCHRONOUS",enum:["ASYNCHRONOUS","SYNCHRONOUS"],description:"Set the delivery mode (synchronous, asynchronous)",title:"Event Firing",required:!1,deprecated:!1},eventOrdering:{kind:"parameter",type:"object",defaultValue:"ORDERED",enum:["UNORDERED","ORDERED"],description:"Set the delivery mode (ordered, unordered)",title:"Event Ordering",required:!1,deprecated:!1},eventTypes:{kind:"parameter",type:"string",enum:["EVICTED","EXPIRED","REMOVED","CREATED","UPDATED"],description:"Set the type of events to listen for (EVICTED,EXPIRED,REMOVED,CREATED,UPDATED). You can specify multiple entries separated by comma.",title:"Event Types",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},action:{kind:"parameter",type:"string",description:"To configure the default cache action. If an action is set in the message header, then the operation from the header takes precedence.",title:"Action",required:!1,deprecated:!1},key:{kind:"parameter",type:"object",description:"To configure the default action key. If a key is set in the message header, then the key from the header takes precedence.",title:"Key",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},configuration:{kind:"parameter",type:"object",description:"The default cache configuration to be used to create caches.",title:"Configuration",required:!1,deprecated:!1},configurations:{kind:"parameter",type:"object",description:"A map of cache configuration to be used to create caches.",title:"Configurations",required:!1,deprecated:!1},keyType:{kind:"parameter",type:"string",description:"The cache key type, default java.lang.Object",title:"Key Type",required:!1,deprecated:!1},valueType:{kind:"parameter",type:"string",description:"The cache value type, default java.lang.Object",title:"Value Type",required:!1,deprecated:!1}}},elasticsearch:{type:"object",title:"Elasticsearch",group:"search,monitoring",icon:"generic24.png",description:"Send requests to ElasticSearch via Java Client API.",properties:{clusterName:{kind:"path",type:"string",description:"Name of the cluster",title:"Cluster Name",required:!0,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The time in ms to wait before connection will timeout.",title:"Connection Timeout",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Disconnect after it finish calling the producer",title:"Disconnect",required:!1,deprecated:!1},enableDocumentOnlyMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicates whether the body of the message contains only documents. By default, it is set to false to be able to do the same requests as what the Document API supports (see https://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html for more details). To ease the migration of routes based on the legacy component camel-elasticsearch-rest, you should consider enabling the mode especially if your routes do update operations.",title:"Enable Document Only Mode",required:!1,deprecated:!1},from:{kind:"parameter",type:"integer",description:"Starting index of the response.",title:"From",required:!1,deprecated:!1},hostAddresses:{kind:"parameter",type:"string",description:"Comma separated list with ip:port formatted remote transport addresses to use.",title:"Host Addresses",required:!1,deprecated:!1},indexName:{kind:"parameter",type:"string",description:"The name of the index to act against",title:"Index Name",required:!1,deprecated:!1},maxRetryTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The time in ms before retry",title:"Max Retry Timeout",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["Index","Update","Bulk","GetById","MultiGet","MultiSearch","Delete","DeleteIndex","Search","Exists","Ping"],description:"What operation to perform",title:"Operation",required:!1,deprecated:!1},scrollKeepAliveMs:{kind:"parameter",type:"integer",defaultValue:"60000",description:"Time in ms during which elasticsearch will keep search context alive",title:"Scroll Keep Alive Ms",required:!1,deprecated:!1},size:{kind:"parameter",type:"integer",description:"Size of the response.",title:"Size",required:!1,deprecated:!1},socketTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The timeout in ms to wait before the socket will timeout.",title:"Socket Timeout",required:!1,deprecated:!1},useScroll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable scroll usage",title:"Use Scroll",required:!1,deprecated:!1},waitForActiveShards:{kind:"parameter",type:"integer",defaultValue:"1",description:"Index creation waits for the write consistency number of shards to be available",title:"Wait For Active Shards",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},documentClass:{kind:"parameter",type:"string",defaultValue:"ObjectNode",description:"The class to use when deserializing the documents.",title:"Document Class",required:!1,deprecated:!1},enableSniffer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable automatically discover nodes from a running Elasticsearch cluster. If this option is used in conjunction with Spring Boot then it's managed by the Spring Boot configuration (see: Disable Sniffer in Spring Boot).",title:"Enable Sniffer",required:!1,deprecated:!1},sniffAfterFailureDelay:{kind:"parameter",type:"integer",defaultValue:"60000",description:"The delay of a sniff execution scheduled after a failure (in milliseconds)",title:"Sniff After Failure Delay",required:!1,deprecated:!1},snifferInterval:{kind:"parameter",type:"integer",defaultValue:"300000",description:"The interval between consecutive ordinary sniff executions in milliseconds. Will be honoured when sniffOnFailure is disabled or when there are no failures between consecutive sniff executions",title:"Sniffer Interval",required:!1,deprecated:!1},certificatePath:{kind:"parameter",type:"string",description:"The certificate that can be used to access the ES Cluster. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Certificate Path",required:!1,deprecated:!1},enableSSL:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable SSL",title:"Enable SSL",required:!1,deprecated:!1}}},etcd3:{type:"object",title:"Etcd v3",group:"clustering,database",icon:"generic24.png",description:"Get, set, delete or watch keys in etcd key-value store.",properties:{path:{kind:"path",type:"string",description:"The path the endpoint refers to",title:"Path",required:!1,deprecated:!1},endpoints:{kind:"parameter",type:"array",defaultValue:"Etcd3Constants.ETCD_DEFAULT_ENDPOINTS",description:"Configure etcd server endpoints using the IPNameResolver.",title:"Endpoints",required:!1,deprecated:!1},keyCharset:{kind:"parameter",type:"string",defaultValue:"UTF-8",description:"Configure the charset to use for the keys.",title:"Key Charset",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"Configure the namespace of keys used. / will be treated as no namespace.",title:"Namespace",required:!1,deprecated:!1},prefix:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To apply an action on all the key-value pairs whose key that starts with the target path.",title:"Prefix",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},fromIndex:{kind:"parameter",type:"integer",defaultValue:"0",description:"The index to watch from",title:"From Index",required:!1,deprecated:!1},valueCharset:{kind:"parameter",type:"string",defaultValue:"UTF-8",description:"Configure the charset to use for the values.",title:"Value Charset",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},authHeaders:{kind:"parameter",type:"object",description:"Configure the headers to be added to auth request headers.",title:"Auth Headers",required:!1,deprecated:!1},authority:{kind:"parameter",type:"string",description:"Configure the authority used to authenticate connections to servers.",title:"Authority",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"object",description:"Configure the connection timeout.",title:"Connection Timeout",required:!1,deprecated:!1},headers:{kind:"parameter",type:"object",description:"Configure the headers to be added to http request headers.",title:"Headers",required:!1,deprecated:!1},keepAliveTime:{kind:"parameter",type:"object",defaultValue:"30 seconds",description:"Configure the interval for gRPC keepalives. The current minimum allowed by gRPC is 10 seconds.",title:"Keep Alive Time",required:!1,deprecated:!1},keepAliveTimeout:{kind:"parameter",type:"object",defaultValue:"10 seconds",description:"Configure the timeout for gRPC keepalives.",title:"Keep Alive Timeout",required:!1,deprecated:!1},loadBalancerPolicy:{kind:"parameter",type:"string",description:"Configure etcd load balancer policy.",title:"Load Balancer Policy",required:!1,deprecated:!1},maxInboundMessageSize:{kind:"parameter",type:"integer",description:"Configure the maximum message size allowed for a single gRPC frame.",title:"Max Inbound Message Size",required:!1,deprecated:!1},retryDelay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Configure the delay between retries in milliseconds.",title:"Retry Delay",required:!1,deprecated:!1},retryMaxDelay:{kind:"parameter",type:"integer",defaultValue:"2500",description:"Configure the max backing off delay between retries in milliseconds.",title:"Retry Max Delay",required:!1,deprecated:!1},retryMaxDuration:{kind:"parameter",type:"object",description:"Configure the retries max duration.",title:"Retry Max Duration",required:!1,deprecated:!1},servicePath:{kind:"parameter",type:"string",defaultValue:"/services/",description:"The path to look for service discovery.",title:"Service Path",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Configure etcd auth password.",title:"Password",required:!1,deprecated:!1},sslContext:{kind:"parameter",type:"object",description:"Configure SSL/TLS context to use instead of the system default.",title:"Ssl Context",required:!1,deprecated:!1},userName:{kind:"parameter",type:"string",description:"Configure etcd auth user.",title:"User Name",required:!1,deprecated:!1}}},exec:{type:"object",title:"Exec",group:"core",icon:"generic24.png",description:"Execute commands on the underlying operating system.",properties:{executable:{kind:"path",type:"string",description:"Sets the executable to be executed. The executable must not be empty or null.",title:"Executable",required:!0,deprecated:!1},args:{kind:"parameter",type:"string",description:"The arguments may be one or many whitespace-separated tokens.",title:"Args",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"A reference to a org.apache.commons.exec.ExecBinding in the Registry.",title:"Binding",required:!1,deprecated:!1},commandExecutor:{kind:"parameter",type:"object",description:"A reference to a org.apache.commons.exec.ExecCommandExecutor in the Registry that customizes the command execution. The default command executor utilizes the commons-exec library, which adds a shutdown hook for every executed command.",title:"Command Executor",required:!1,deprecated:!1},commandLogLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level to be used for commands during execution. The default value is DEBUG. Possible values are TRACE, DEBUG, INFO, WARN, ERROR or OFF. (Values of ExecCommandLogLevelType enum)",title:"Command Log Level",required:!1,deprecated:!1},exitValues:{kind:"parameter",type:"string",description:"The exit values of successful executions. If the process exits with another value, an exception is raised. Comma-separated list of exit values. And empty list (the default) sets no expected exit values and disables the check.",title:"Exit Values",required:!1,deprecated:!1},outFile:{kind:"parameter",type:"string",description:"The name of a file, created by the executable, that should be considered as its output. If no outFile is set, the standard output (stdout) of the executable will be used instead.",title:"Out File",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",description:"The timeout, in milliseconds, after which the executable should be terminated. If execution has not completed within the timeout, the component will send a termination request.",title:"Timeout",required:!1,deprecated:!1},useStderrOnEmptyStdout:{kind:"parameter",type:"boolean",defaultValue:"false",description:"A boolean indicating that when stdout is empty, this component will populate the Camel Message Body with stderr. This behavior is disabled (false) by default.",title:"Use Stderr On Empty Stdout",required:!1,deprecated:!1},workingDir:{kind:"parameter",type:"string",description:"The directory in which the command should be executed. If null, the working directory of the current process will be used.",title:"Working Dir",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},facebook:{type:"object",title:"Facebook",group:"social",icon:"generic24.png",description:"Send requests to Facebook APIs supported by Facebook4J.",properties:{methodName:{kind:"path",type:"string",description:"What operation to perform",title:"Method Name",required:!0,deprecated:!1},achievementURL:{kind:"parameter",type:"string",description:"The unique URL of the achievement",title:"Achievement URL",required:!1,deprecated:!1},albumId:{kind:"parameter",type:"string",description:"The album ID",title:"Album Id",required:!1,deprecated:!1},albumUpdate:{kind:"parameter",type:"object",description:"The facebook Album to be created or updated",title:"Album Update",required:!1,deprecated:!1},appId:{kind:"parameter",type:"string",description:"The ID of the Facebook Application",title:"App Id",required:!1,deprecated:!1},center:{kind:"parameter",type:"object",description:"Location latitude and longitude",title:"Center",required:!1,deprecated:!1},checkinId:{kind:"parameter",type:"string",description:"The checkin ID",title:"Checkin Id",required:!1,deprecated:!1},checkinUpdate:{kind:"parameter",type:"object",description:"The checkin to be created. Deprecated, instead create a Post with an attached location",title:"Checkin Update",required:!1,deprecated:!0},clientURL:{kind:"parameter",type:"string",description:"Facebook4J API client URL",title:"Client URL",required:!1,deprecated:!1},clientVersion:{kind:"parameter",type:"string",description:"Facebook4J client API version",title:"Client Version",required:!1,deprecated:!1},commentId:{kind:"parameter",type:"string",description:"The comment ID",title:"Comment Id",required:!1,deprecated:!1},commentUpdate:{kind:"parameter",type:"object",description:"The facebook Comment to be created or updated",title:"Comment Update",required:!1,deprecated:!1},debugEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables deubg output. Effective only with the embedded logger",title:"Debug Enabled",required:!1,deprecated:!1},description:{kind:"parameter",type:"string",description:"The description text",title:"Description",required:!1,deprecated:!1},distance:{kind:"parameter",type:"integer",description:"Distance in meters",title:"Distance",required:!1,deprecated:!1},domainId:{kind:"parameter",type:"string",description:"The domain ID",title:"Domain Id",required:!1,deprecated:!1},domainName:{kind:"parameter",type:"string",description:"The domain name",title:"Domain Name",required:!1,deprecated:!1},domainNames:{kind:"parameter",type:"array",description:"The domain names",title:"Domain Names",required:!1,deprecated:!1},eventId:{kind:"parameter",type:"string",description:"The event ID",title:"Event Id",required:!1,deprecated:!1},eventUpdate:{kind:"parameter",type:"object",description:"The event to be created or updated",title:"Event Update",required:!1,deprecated:!1},friendId:{kind:"parameter",type:"string",description:"The friend ID",title:"Friend Id",required:!1,deprecated:!1},friendlistId:{kind:"parameter",type:"string",description:"The friend list ID",title:"Friendlist Id",required:!1,deprecated:!1},friendlistName:{kind:"parameter",type:"string",description:"The friend list Name",title:"Friendlist Name",required:!1,deprecated:!1},friendUserId:{kind:"parameter",type:"string",description:"The friend user ID",title:"Friend User Id",required:!1,deprecated:!1},groupId:{kind:"parameter",type:"string",description:"The group ID",title:"Group Id",required:!1,deprecated:!1},gzipEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Use Facebook GZIP encoding",title:"Gzip Enabled",required:!1,deprecated:!1},httpConnectionTimeout:{kind:"parameter",type:"integer",defaultValue:"20000",description:"Http connection timeout in milliseconds",title:"Http Connection Timeout",required:!1,deprecated:!1},httpDefaultMaxPerRoute:{kind:"parameter",type:"integer",defaultValue:"2",description:"HTTP maximum connections per route",title:"Http Default Max Per Route",required:!1,deprecated:!1},httpMaxTotalConnections:{kind:"parameter",type:"integer",defaultValue:"20",description:"HTTP maximum total connections",title:"Http Max Total Connections",required:!1,deprecated:!1},httpReadTimeout:{kind:"parameter",type:"integer",defaultValue:"120000",description:"Http read timeout in milliseconds",title:"Http Read Timeout",required:!1,deprecated:!1},httpRetryCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Number of HTTP retries",title:"Http Retry Count",required:!1,deprecated:!1},httpRetryIntervalSeconds:{kind:"parameter",type:"integer",defaultValue:"5",description:"HTTP retry interval in seconds",title:"Http Retry Interval Seconds",required:!1,deprecated:!1},httpStreamingReadTimeout:{kind:"parameter",type:"integer",defaultValue:"40000",description:"HTTP streaming read timeout in milliseconds",title:"Http Streaming Read Timeout",required:!1,deprecated:!1},ids:{kind:"parameter",type:"array",description:"The ids of users",title:"Ids",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},includeRead:{kind:"parameter",type:"boolean",description:"Enables notifications that the user has already read in addition to unread ones",title:"Include Read",required:!1,deprecated:!1},isHidden:{kind:"parameter",type:"boolean",description:"Whether hidden",title:"Is Hidden",required:!1,deprecated:!1},jsonStoreEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, raw JSON forms will be stored in DataObjectFactory",title:"Json Store Enabled",required:!1,deprecated:!1},link:{kind:"parameter",type:"string",description:"Link URL",title:"Link",required:!1,deprecated:!1},linkId:{kind:"parameter",type:"string",description:"Link ID",title:"Link Id",required:!1,deprecated:!1},locale:{kind:"parameter",type:"object",description:"Desired FQL locale",title:"Locale",required:!1,deprecated:!1},mbeanEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, Facebook4J mbean will be registerd",title:"Mbean Enabled",required:!1,deprecated:!1},message:{kind:"parameter",type:"string",description:"The message text",title:"Message",required:!1,deprecated:!1},messageId:{kind:"parameter",type:"string",description:"The message ID",title:"Message Id",required:!1,deprecated:!1},metric:{kind:"parameter",type:"string",description:"The metric name",title:"Metric",required:!1,deprecated:!1},milestoneId:{kind:"parameter",type:"string",description:"The milestone id",title:"Milestone Id",required:!1,deprecated:!1},name:{kind:"parameter",type:"string",description:"Test user name, must be of the form 'first last'",title:"Name",required:!1,deprecated:!1},noteId:{kind:"parameter",type:"string",description:"The note ID",title:"Note Id",required:!1,deprecated:!1},notificationId:{kind:"parameter",type:"string",description:"The notification ID",title:"Notification Id",required:!1,deprecated:!1},objectId:{kind:"parameter",type:"string",description:"The insight object ID",title:"Object Id",required:!1,deprecated:!1},offerId:{kind:"parameter",type:"string",description:"The offer id",title:"Offer Id",required:!1,deprecated:!1},optionDescription:{kind:"parameter",type:"string",description:"The question's answer option description",title:"Option Description",required:!1,deprecated:!1},pageId:{kind:"parameter",type:"string",description:"The page id",title:"Page Id",required:!1,deprecated:!1},permissionName:{kind:"parameter",type:"string",description:"The permission name",title:"Permission Name",required:!1,deprecated:!1},permissions:{kind:"parameter",type:"string",description:"Test user permissions in the format perm1,perm2,...",title:"Permissions",required:!1,deprecated:!1},photoId:{kind:"parameter",type:"string",description:"The photo ID",title:"Photo Id",required:!1,deprecated:!1},pictureId:{kind:"parameter",type:"integer",description:"The picture id",title:"Picture Id",required:!1,deprecated:!1},pictureId2:{kind:"parameter",type:"integer",description:"The picture2 id",title:"Picture Id2",required:!1,deprecated:!1},pictureSize:{kind:"parameter",type:"object",enum:["square","small","normal","large","thumbnail","album"],description:"The picture size",title:"Picture Size",required:!1,deprecated:!1},placeId:{kind:"parameter",type:"string",description:"The place ID",title:"Place Id",required:!1,deprecated:!1},postId:{kind:"parameter",type:"string",description:"The post ID",title:"Post Id",required:!1,deprecated:!1},postUpdate:{kind:"parameter",type:"object",description:"The post to create or update",title:"Post Update",required:!1,deprecated:!1},prettyDebugEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Prettify JSON debug output if set to true",title:"Pretty Debug Enabled",required:!1,deprecated:!1},queries:{kind:"parameter",type:"object",description:"FQL queries",title:"Queries",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"FQL query or search terms for search endpoints",title:"Query",required:!1,deprecated:!1},questionId:{kind:"parameter",type:"string",description:"The question id",title:"Question Id",required:!1,deprecated:!1},reading:{kind:"parameter",type:"object",description:"Optional reading parameters. See Reading Options(#reading)",title:"Reading",required:!1,deprecated:!1},readingOptions:{kind:"parameter",type:"object",description:"To configure Reading using key/value pairs from the Map.",title:"Reading Options",required:!1,deprecated:!1},restBaseURL:{kind:"parameter",type:"string",defaultValue:"https://graph.facebook.com/",description:"API base URL",title:"Rest Base URL",required:!1,deprecated:!1},scoreValue:{kind:"parameter",type:"integer",description:"The numeric score with value",title:"Score Value",required:!1,deprecated:!1},size:{kind:"parameter",type:"object",enum:["square","small","normal","large","thumbnail","album"],description:"The picture size, one of large, normal, small or square",title:"Size",required:!1,deprecated:!1},source:{kind:"parameter",type:"object",description:"The media content from either a java.io.File or java.io.Inputstream",title:"Source",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The note of the subject",title:"Subject",required:!1,deprecated:!1},tabId:{kind:"parameter",type:"string",description:"The tab id",title:"Tab Id",required:!1,deprecated:!1},tagUpdate:{kind:"parameter",type:"object",description:"Photo tag information",title:"Tag Update",required:!1,deprecated:!1},testUser1:{kind:"parameter",type:"object",description:"Test user 1",title:"Test User1",required:!1,deprecated:!1},testUser2:{kind:"parameter",type:"object",description:"Test user 2",title:"Test User2",required:!1,deprecated:!1},testUserId:{kind:"parameter",type:"string",description:"The ID of the test user",title:"Test User Id",required:!1,deprecated:!1},title:{kind:"parameter",type:"string",description:"The title text",title:"Title",required:!1,deprecated:!1},toUserId:{kind:"parameter",type:"string",description:"The ID of the user to tag",title:"To User Id",required:!1,deprecated:!1},toUserIds:{kind:"parameter",type:"array",description:"The IDs of the users to tag",title:"To User Ids",required:!1,deprecated:!1},userId:{kind:"parameter",type:"string",description:"The Facebook user ID",title:"User Id",required:!1,deprecated:!1},userId1:{kind:"parameter",type:"string",description:"The ID of a user 1",title:"User Id1",required:!1,deprecated:!1},userId2:{kind:"parameter",type:"string",description:"The ID of a user 2",title:"User Id2",required:!1,deprecated:!1},userIds:{kind:"parameter",type:"array",description:"The IDs of users to invite to event",title:"User Ids",required:!1,deprecated:!1},userLocale:{kind:"parameter",type:"string",description:"The test user locale",title:"User Locale",required:!1,deprecated:!1},useSSL:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Use SSL",title:"Use SSL",required:!1,deprecated:!1},videoBaseURL:{kind:"parameter",type:"string",defaultValue:"https://graph-video.facebook.com/",description:"Video API base URL",title:"Video Base URL",required:!1,deprecated:!1},videoId:{kind:"parameter",type:"string",description:"The video ID",title:"Video Id",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},httpProxyHost:{kind:"parameter",type:"string",description:"HTTP proxy server host name",title:"Http Proxy Host",required:!1,deprecated:!1},httpProxyPassword:{kind:"parameter",type:"string",description:"HTTP proxy server password",title:"Http Proxy Password",required:!1,deprecated:!1},httpProxyPort:{kind:"parameter",type:"integer",description:"HTTP proxy server port",title:"Http Proxy Port",required:!1,deprecated:!1},httpProxyUser:{kind:"parameter",type:"string",description:"HTTP proxy server user name",title:"Http Proxy User",required:!1,deprecated:!1},oAuthAccessToken:{kind:"parameter",type:"string",description:"The user access token",title:"OAuth Access Token",required:!1,deprecated:!1},oAuthAccessTokenURL:{kind:"parameter",type:"string",defaultValue:"https://graph.facebook.com/oauth/access_token",description:"OAuth access token URL",title:"OAuth Access Token URL",required:!1,deprecated:!1},oAuthAppId:{kind:"parameter",type:"string",description:"The application Id",title:"OAuth App Id",required:!1,deprecated:!1},oAuthAppSecret:{kind:"parameter",type:"string",description:"The application Secret",title:"OAuth App Secret",required:!1,deprecated:!1},oAuthAuthorizationURL:{kind:"parameter",type:"string",defaultValue:"https://www.facebook.com/dialog/oauth",description:"OAuth authorization URL",title:"OAuth Authorization URL",required:!1,deprecated:!1},oAuthPermissions:{kind:"parameter",type:"string",description:"Default OAuth permissions. Comma separated permission names. See https://developers.facebook.com/docs/reference/login/#permissions for the detail",title:"OAuth Permissions",required:!1,deprecated:!1}}},fhir:{type:"object",title:"FHIR",group:"api",icon:"generic24.png",description:"Exchange information in the healthcare domain using the FHIR (Fast Healthcare Interoperability Resources) standard.",properties:{apiName:{kind:"path",type:"object",enum:["CAPABILITIES","CREATE","DELETE","HISTORY","LOAD_PAGE","META","OPERATION","PATCH","READ","SEARCH","TRANSACTION","UPDATE","VALIDATE"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},encoding:{kind:"parameter",type:"string",enum:["JSON","XML"],description:"Encoding to use for all request",title:"Encoding",required:!1,deprecated:!1},fhirVersion:{kind:"parameter",type:"string",defaultValue:"R4",enum:["DSTU2","DSTU2_HL7ORG","DSTU2_1","DSTU3","R4","R4B","R5"],description:"The FHIR Version to use",title:"Fhir Version",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},log:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will log every requests and responses",title:"Log",required:!1,deprecated:!1},prettyPrint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Pretty print all request",title:"Pretty Print",required:!1,deprecated:!1},serverUrl:{kind:"parameter",type:"string",description:"The FHIR server base URL",title:"Server Url",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"To use the custom client",title:"Client",required:!1,deprecated:!1},clientFactory:{kind:"parameter",type:"object",description:"To use the custom client factory",title:"Client Factory",required:!1,deprecated:!1},compress:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Compresses outgoing (POST/PUT) contents to the GZIP format",title:"Compress",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"How long to try and establish the initial TCP connection (in ms)",title:"Connection Timeout",required:!1,deprecated:!1},deferModelScanning:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When this option is set, model classes will not be scanned for children until the child list for the given type is actually accessed.",title:"Defer Model Scanning",required:!1,deprecated:!1},fhirContext:{kind:"parameter",type:"object",description:"FhirContext is an expensive object to create. To avoid creating multiple instances, it can be set directly.",title:"Fhir Context",required:!1,deprecated:!1},forceConformanceCheck:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Force conformance check",title:"Force Conformance Check",required:!1,deprecated:!1},sessionCookie:{kind:"parameter",type:"string",description:"HTTP session cookie to add to every request",title:"Session Cookie",required:!1,deprecated:!1},socketTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"How long to block for individual read/write operations (in ms)",title:"Socket Timeout",required:!1,deprecated:!1},summary:{kind:"parameter",type:"string",enum:["COUNT","TEXT","DATA","TRUE","FALSE"],description:"Request that the server modify the response using the _summary param",title:"Summary",required:!1,deprecated:!1},validationMode:{kind:"parameter",type:"string",defaultValue:"ONCE",enum:["NEVER","ONCE"],description:"When should Camel validate the FHIR Server's conformance statement",title:"Validation Mode",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"The proxy host",title:"Proxy Host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"The proxy password",title:"Proxy Password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"The proxy port",title:"Proxy Port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"The proxy username",title:"Proxy User",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth access token",title:"Access Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use for basic authentication",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use for basic authentication",title:"Username",required:!1,deprecated:!1}}},file:{type:"object",title:"File",group:"file,core",icon:"generic24.png",description:"Read and write files.",properties:{directoryName:{kind:"path",type:"string",description:"The starting directory",title:"Directory Name",required:!0,deprecated:!1},charset:{kind:"parameter",type:"string",description:"This option is used to specify the encoding of the file. You can use this on the consumer, to specify the encodings of the files, which allow Camel to know the charset it should load the file content in case the file content is being accessed. Likewise when writing a file, you can use this option to specify which charset to write the file as well. Do mind that when writing the file Camel may have to read the message content into memory to be able to convert the data into the configured charset, so do not use this if you have big messages.",title:"Charset",required:!1,deprecated:!1},doneFileName:{kind:"parameter",type:"string",description:"Producer: If provided, then Camel will write a 2nd done file when the original file has been written. The done file will be empty. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders. The done file will always be written in the same folder as the original file. Consumer: If provided, Camel will only consume files if a done file exists. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders.The done file is always expected in the same folder as the original file. Only ${file.name} and ${file.name.next} is supported as dynamic placeholders.",title:"Done File Name",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"Use Expression such as File Language to dynamically set the filename. For consumers, it's used as a filename filter. For producers, it's used to evaluate the filename to write. If an expression is set, it take precedence over the CamelFileName header. (Note: The header itself can also be an Expression). The expression options support both String and Expression types. If the expression is a String type, it is always evaluated using the File Language. If the expression is an Expression type, the specified Expression type is used - this allows you, for instance, to use OGNL expressions. For the consumer, you can use it to filter filenames, so you can for instance consume today's file using the File Language syntax: mydata-${date:now:yyyyMMdd}.txt. The producers support the CamelOverruleFileName header which takes precedence over any existing CamelFileName header; the CamelOverruleFileName is a header that is used only once, and makes it easier as this avoids to temporary store CamelFileName and have to restore it afterwards.",title:"File Name",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file will be deleted after it is processed successfully.",title:"Delete",required:!1,deprecated:!1},moveFailed:{kind:"parameter",type:"string",description:"Sets the move failure expression based on Simple language. For example, to move files into a .error subdirectory use: .error. Note: When moving the files to the fail location Camel will handle the error and will not pick up the file again.",title:"Move Failed",required:!1,deprecated:!1},noop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file is not moved or deleted in any way. This option is good for readonly data, or for ETL type requirements. If noop=true, Camel will set idempotent=true as well, to avoid consuming the same files over and over again.",title:"Noop",required:!1,deprecated:!1},preMove:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to dynamically set the filename when moving it before processing. For example to move in-progress files into the order directory set this value to order.",title:"Pre Move",required:!1,deprecated:!1},preSort:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When pre-sort is enabled then the consumer will sort the file and directory names during polling, that was retrieved from the file system. You may want to do this in case you need to operate on the files in a sorted order. The pre-sort is executed before the consumer starts to filter, and accept files to process by Camel. This option is default=false meaning disabled.",title:"Pre Sort",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If a directory, will look for files in all the sub-directories as well.",title:"Recursive",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},directoryMustExist:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Similar to the startingDirectoryMustExist option but this applies during polling (after starting the consumer).",title:"Directory Must Exist",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},extendedAttributes:{kind:"parameter",type:"string",description:"To define which file attributes of interest. Like posix:permissions,posix:owner,basic:lastAccessTime, it supports basic wildcard like posix:, basic:lastAccessTime",title:"Extended Attributes",required:!1,deprecated:!1},includeHiddenFiles:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to accept hidden files. Files which names starts with dot is regarded as a hidden file, and by default not included. Set this option to true to include hidden files in the file consumer.",title:"Include Hidden Files",required:!1,deprecated:!1},inProgressRepository:{kind:"parameter",type:"object",description:"A pluggable in-progress repository org.apache.camel.spi.IdempotentRepository. The in-progress repository is used to account the current in progress files being consumed. By default a memory based repository is used.",title:"In Progress Repository",required:!1,deprecated:!1},localWorkDirectory:{kind:"parameter",type:"string",description:"When consuming, a local work directory can be used to store the remote file content directly in local files, to avoid loading the content into memory. This is beneficial, if you consume a very big remote file and thus can conserve memory.",title:"Local Work Directory",required:!1,deprecated:!1},onCompletionExceptionHandler:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.ExceptionHandler to handle any thrown exceptions that happens during the file on completion process where the consumer does either a commit or rollback. The default implementation will log any exception at WARN level and ignore.",title:"On Completion Exception Handler",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},probeContentType:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to enable probing of the content type. If enable then the consumer uses Files#probeContentType(java.nio.file.Path) to determine the content-type of the file, and store that as a header with key Exchange#FILE_CONTENT_TYPE on the Message.",title:"Probe Content Type",required:!1,deprecated:!1},processStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.component.file.GenericFileProcessStrategy allowing you to implement your own readLock option or similar. Can also be used when special conditions must be met before a file can be consumed, such as a special ready file exists. If this option is set then the readLock option does not apply.",title:"Process Strategy",required:!1,deprecated:!1},startingDirectoryMustExist:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the starting directory must exist. Mind that the autoCreate option is default enabled, which means the starting directory is normally auto created if it doesn't exist. You can disable autoCreate and enable this to ensure the starting directory must exist. Will thrown an exception if the directory doesn't exist.",title:"Starting Directory Must Exist",required:!1,deprecated:!1},startingDirectoryMustHaveAccess:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the starting directory has access permissions. Mind that the startingDirectoryMustExist parameter must be set to true in order to verify that the directory exists. Will thrown an exception if the directory doesn't have read and write permissions.",title:"Starting Directory Must Have Access",required:!1,deprecated:!1},appendChars:{kind:"parameter",type:"string",description:"Used to append characters (text) after writing files. This can for example be used to add new lines or other separators when writing and appending new files or existing files. To specify new-line (slash-n or slash-r) or tab (slash-t) characters then escape with an extra slash, eg slash-slash-n.",title:"Append Chars",required:!1,deprecated:!1},fileExist:{kind:"parameter",type:"object",defaultValue:"Override",enum:["Override","Append","Fail","Ignore","Move","TryRename"],description:"What to do if a file already exists with the same name. Override, which is the default, replaces the existing file. - Append - adds content to the existing file. - Fail - throws a GenericFileOperationException, indicating that there is already an existing file. - Ignore - silently ignores the problem and does not override the existing file, but assumes everything is okay. - Move - option requires to use the moveExisting option to be configured as well. The option eagerDeleteTargetFile can be used to control what to do if an moving the file, and there exists already an existing file, otherwise causing the move operation to fail. The Move option will move any existing files, before writing the target file. - TryRename is only applicable if tempFileName option is in use. This allows to try renaming the file from the temporary name to the actual name, without doing any exists check. This check may be faster on some file systems and especially FTP servers.",title:"File Exist",required:!1,deprecated:!1},flatten:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flatten is used to flatten the file name path to strip any leading paths, so it's just the file name. This allows you to consume recursively into sub-directories, but when you eg write the files to another directory they will be written in a single directory. Setting this to true on the producer enforces that any file name in CamelFileName header will be stripped for any leading paths.",title:"Flatten",required:!1,deprecated:!1},jailStartingDirectory:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for jailing (restricting) writing files to the starting directory (and sub) only. This is enabled by default to not allow Camel to write files to outside directories (to be more secured out of the box). You can turn this off to allow writing files to directories outside the starting directory, such as parent or root folders.",title:"Jail Starting Directory",required:!1,deprecated:!1},moveExisting:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to compute file name to use when fileExist=Move is configured. To move files into a backup subdirectory just enter backup. This option only supports the following File Language tokens: file:name, file:name.ext, file:name.noext, file:onlyname, file:onlyname.noext, file:ext, and file:parent. Notice the file:parent is not supported by the FTP component, as the FTP component can only move any existing files to a relative directory based on current dir as base.",title:"Move Existing",required:!1,deprecated:!1},tempFileName:{kind:"parameter",type:"string",description:"The same as tempPrefix option but offering a more fine grained control on the naming of the temporary filename as it uses the File Language. The location for tempFilename is relative to the final file location in the option 'fileName', not the target directory in the base uri. For example if option fileName includes a directory prefix: dir/finalFilename then tempFileName is relative to that subdirectory dir.",title:"Temp File Name",required:!1,deprecated:!1},tempPrefix:{kind:"parameter",type:"string",description:"This option is used to write the file using a temporary name and then, after the write is complete, rename it to the real name. Can be used to identify files being written and also avoid consumers (not using exclusive read locks) reading in progress files. Is often used by FTP when uploading big files.",title:"Temp Prefix",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Used to specify if a null body is allowed during file writing. If set to true then an empty file will be created, when set to false, and attempting to send a null body to the file component, a GenericFileWriteException of 'Cannot write null body to file.' will be thrown. If the fileExist option is set to 'Override', then the file will be truncated, and if set to append the file will remain unchanged.",title:"Allow Null Body",required:!1,deprecated:!1},chmod:{kind:"parameter",type:"string",description:"Specify the file permissions which is sent by the producer, the chmod value must be between 000 and 777; If there is a leading digit like in 0755 we will ignore it.",title:"Chmod",required:!1,deprecated:!1},chmodDirectory:{kind:"parameter",type:"string",description:"Specify the directory permissions used when the producer creates missing directories, the chmod value must be between 000 and 777; If there is a leading digit like in 0755 we will ignore it.",title:"Chmod Directory",required:!1,deprecated:!1},eagerDeleteTargetFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to eagerly delete any existing target file. This option only applies when you use fileExists=Override and the tempFileName option as well. You can use this to disable (set it to false) deleting the target file before the temp file is written. For example you may write big files and want the target file to exists during the temp file is being written. This ensure the target file is only deleted until the very last moment, just before the temp file is being renamed to the target filename. This option is also used to control whether to delete any existing files when fileExist=Move is enabled, and an existing file exists. If this option copyAndDeleteOnRenameFails false, then an exception will be thrown if an existing file existed, if its true, then the existing file is deleted before the move operation.",title:"Eager Delete Target File",required:!1,deprecated:!1},forceWrites:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to force syncing writes to the file system. You can turn this off if you do not want this level of guarantee, for example if writing to logs / audit logs etc; this would yield better performance.",title:"Force Writes",required:!1,deprecated:!1},keepLastModified:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will keep the last modified timestamp from the source file (if any). Will use the FileConstants.FILE_LAST_MODIFIED header to located the timestamp. This header can contain either a java.util.Date or long with the timestamp. If the timestamp exists and the option is enabled it will set this timestamp on the written file. Note: This option only applies to the file producer. You cannot use this option with any of the ftp producers.",title:"Keep Last Modified",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},moveExistingFileStrategy:{kind:"parameter",type:"object",description:"Strategy (Custom Strategy) used to move file with special naming token to use when fileExist=Move is configured. By default, there is an implementation used if no custom strategy is provided",title:"Move Existing File Strategy",required:!1,deprecated:!1},autoCreate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatically create missing directories in the file's pathname. For the file consumer, that means creating the starting directory. For the file producer, it means the directory the files should be written to.",title:"Auto Create",required:!1,deprecated:!1},bufferSize:{kind:"parameter",type:"integer",defaultValue:"131072",description:"Buffer size in bytes used for writing files (or in case of FTP for downloading and uploading files).",title:"Buffer Size",required:!1,deprecated:!1},copyAndDeleteOnRenameFail:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to fallback and do a copy and delete file, in case the file could not be renamed directly. This option is not available for the FTP component.",title:"Copy And Delete On Rename Fail",required:!1,deprecated:!1},renameUsingCopy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Perform rename operations using a copy and delete strategy. This is primarily used in environments where the regular rename operation is unreliable (e.g. across different file systems or networks). This option takes precedence over the copyAndDeleteOnRenameFail parameter that will automatically fall back to the copy and delete strategy, but only after additional delays.",title:"Rename Using Copy",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},antExclude:{kind:"parameter",type:"string",description:"Ant style filter exclusion. If both antInclude and antExclude are used, antExclude takes precedence over antInclude. Multiple exclusions may be specified in comma-delimited format.",title:"Ant Exclude",required:!1,deprecated:!1},antFilterCaseSensitive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets case sensitive flag on ant filter.",title:"Ant Filter Case Sensitive",required:!1,deprecated:!1},antInclude:{kind:"parameter",type:"string",description:"Ant style filter inclusion. Multiple inclusions may be specified in comma-delimited format.",title:"Ant Include",required:!1,deprecated:!1},eagerMaxMessagesPerPoll:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows for controlling whether the limit from maxMessagesPerPoll is eager or not. If eager then the limit is during the scanning of files. Where as false would scan all files, and then perform sorting. Setting this option to false allows for sorting all files first, and then limit the poll. Mind that this requires a higher memory usage as all file details are in memory to perform the sorting.",title:"Eager Max Messages Per Poll",required:!1,deprecated:!1},exclude:{kind:"parameter",type:"string",description:"Is used to exclude files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Exclude",required:!1,deprecated:!1},excludeExt:{kind:"parameter",type:"string",description:"Is used to exclude files matching file extension name (case insensitive). For example to exclude bak files, then use excludeExt=bak. Multiple extensions can be separated by comma, for example to exclude bak and dat files, use excludeExt=bak,dat. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Exclude Ext",required:!1,deprecated:!1},filter:{kind:"parameter",type:"object",description:"Pluggable filter as a org.apache.camel.component.file.GenericFileFilter class. Will skip files if filter returns false in its accept() method.",title:"Filter",required:!1,deprecated:!1},filterDirectory:{kind:"parameter",type:"string",description:"Filters the directory based on Simple language. For example to filter on current date, you can use a simple date pattern such as ${date:now:yyyMMdd}",title:"Filter Directory",required:!1,deprecated:!1},filterFile:{kind:"parameter",type:"string",description:"Filters the file based on Simple language. For example to filter on file size, you can use ${file:size} 5000",title:"Filter File",required:!1,deprecated:!1},idempotent:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to use the Idempotent Consumer EIP pattern to let Camel skip already processed files. Will by default use a memory based LRUCache that holds 1000 entries. If noop=true then idempotent will be enabled as well to avoid consuming the same files over and over again.",title:"Idempotent",required:!1,deprecated:!1},idempotentKey:{kind:"parameter",type:"string",description:"To use a custom idempotent key. By default the absolute path of the file is used. You can use the File Language, for example to use the file name and file size, you can do: idempotentKey=${file:name}-${file:size}",title:"Idempotent Key",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which by default use MemoryIdempotentRepository if none is specified and idempotent is true.",title:"Idempotent Repository",required:!1,deprecated:!1},include:{kind:"parameter",type:"string",description:"Is used to include files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Include",required:!1,deprecated:!1},includeExt:{kind:"parameter",type:"string",description:"Is used to include files matching file extension name (case insensitive). For example to include txt files, then use includeExt=txt. Multiple extensions can be separated by comma, for example to include txt and xml files, use includeExt=txt,xml. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Include Ext",required:!1,deprecated:!1},maxDepth:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"The maximum depth to traverse when recursively processing a directory.",title:"Max Depth",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"To define a maximum messages to gather per poll. By default no maximum is set. Can be used to set a limit of e.g. 1000 to avoid when starting up the server that there are thousands of files. Set a value of 0 or negative to disabled it. Notice: If this option is in use then the File and FTP components will limit before any sorting. For example if you have 100000 files and use maxMessagesPerPoll=500, then only the first 500 files will be picked up, and then sorted. You can use the eagerMaxMessagesPerPoll option and set this to false to allow to scan all files first and then sort afterwards.",title:"Max Messages Per Poll",required:!1,deprecated:!1},minDepth:{kind:"parameter",type:"integer",description:"The minimum depth to start processing when recursively processing a directory. Using minDepth=1 means the base directory. Using minDepth=2 means the first sub directory.",title:"Min Depth",required:!1,deprecated:!1},move:{kind:"parameter",type:"string",description:"Expression (such as Simple Language) used to dynamically set the filename when moving it after processing. To move files into a .done subdirectory just enter .done.",title:"Move",required:!1,deprecated:!1},exclusiveReadLockStrategy:{kind:"parameter",type:"object",description:"Pluggable read-lock as a org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy implementation.",title:"Exclusive Read Lock Strategy",required:!1,deprecated:!1},readLock:{kind:"parameter",type:"string",defaultValue:"none",enum:["none","markerFile","fileLock","rename","changed","idempotent","idempotent-changed","idempotent-rename"],description:"Used by consumer, to only poll the files if it has exclusive read-lock on the file (i.e. the file is not in-progress or being written). Camel will wait until the file lock is granted. This option provides the build in strategies: - none - No read lock is in use - markerFile - Camel creates a marker file (fileName.camelLock) and then holds a lock on it. This option is not available for the FTP component - changed - Changed is using file length/modification timestamp to detect whether the file is currently being copied or not. Will at least use 1 sec to determine this, so this option cannot consume files as fast as the others, but can be more reliable as the JDK IO API cannot always determine whether a file is currently being used by another process. The option readLockCheckInterval can be used to set the check frequency. - fileLock - is for using java.nio.channels.FileLock. This option is not avail for Windows OS and the FTP component. This approach should be avoided when accessing a remote file system via a mount/share unless that file system supports distributed file locks. - rename - rename is for using a try to rename the file as a test if we can get exclusive read-lock. - idempotent - (only for file component) idempotent is for using a idempotentRepository as the read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-changed - (only for file component) idempotent-changed is for using a idempotentRepository and changed as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-rename - (only for file component) idempotent-rename is for using a idempotentRepository and rename as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that.Notice: The various read locks is not all suited to work in clustered mode, where concurrent consumers on different nodes is competing for the same files on a shared file system. The markerFile using a close to atomic operation to create the empty marker file, but its not guaranteed to work in a cluster. The fileLock may work better but then the file system need to support distributed file locks, and so on. Using the idempotent read lock can support clustering if the idempotent repository supports clustering, such as Hazelcast Component or Infinispan.",title:"Read Lock",required:!1,deprecated:!1},readLockCheckInterval:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Interval in millis for the read-lock, if supported by the read lock. This interval is used for sleeping between attempts to acquire the read lock. For example when using the changed read lock, you can set a higher interval period to cater for slow writes. The default of 1 sec. may be too fast if the producer is very slow writing the file. Notice: For FTP the default readLockCheckInterval is 5000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Check Interval",required:!1,deprecated:!1},readLockDeleteOrphanLockFiles:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not read lock with marker files should upon startup delete any orphan read lock files, which may have been left on the file system, if Camel was not properly shutdown (such as a JVM crash). If turning this option to false then any orphaned lock file will cause Camel to not attempt to pickup that file, this could also be due another node is concurrently reading files from the same shared directory.",title:"Read Lock Delete Orphan Lock Files",required:!1,deprecated:!1},readLockIdempotentReleaseAsync:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the delayed release task should be synchronous or asynchronous. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Idempotent Release Async",required:!1,deprecated:!1},readLockIdempotentReleaseAsyncPoolSize:{kind:"parameter",type:"integer",description:"The number of threads in the scheduled thread pool when using asynchronous release tasks. Using a default of 1 core threads should be sufficient in almost all use-cases, only set this to a higher value if either updating the idempotent repository is slow, or there are a lot of files to process. This option is not in-use if you use a shared thread pool by configuring the readLockIdempotentReleaseExecutorService option. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Idempotent Release Async Pool Size",required:!1,deprecated:!1},readLockIdempotentReleaseDelay:{kind:"parameter",type:"integer",description:"Whether to delay the release task for a period of millis. This can be used to delay the release tasks to expand the window when a file is regarded as read-locked, in an active/active cluster scenario with a shared idempotent repository, to ensure other nodes cannot potentially scan and acquire the same file, due to race-conditions. By expanding the time-window of the release tasks helps prevents these situations. Note delaying is only needed if you have configured readLockRemoveOnCommit to true.",title:"Read Lock Idempotent Release Delay",required:!1,deprecated:!1},readLockIdempotentReleaseExecutorService:{kind:"parameter",type:"object",description:"To use a custom and shared thread pool for asynchronous release tasks. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Idempotent Release Executor Service",required:!1,deprecated:!1},readLockLoggingLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level used when a read lock could not be acquired. By default a DEBUG is logged. You can change this level, for example to OFF to not have any logging. This option is only applicable for readLock of types: changed, fileLock, idempotent, idempotent-changed, idempotent-rename, rename.",title:"Read Lock Logging Level",required:!1,deprecated:!1},readLockMarkerFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use marker file with the changed, rename, or exclusive read lock types. By default a marker file is used as well to guard against other processes picking up the same files. This behavior can be turned off by setting this option to false. For example if you do not want to write marker files to the file systems by the Camel application.",title:"Read Lock Marker File",required:!1,deprecated:!1},readLockMinAge:{kind:"parameter",type:"integer",defaultValue:"0",description:"This option is applied only for readLock=changed. It allows to specify a minimum age the file must be before attempting to acquire the read lock. For example use readLockMinAge=300s to require the file is at last 5 minutes old. This can speedup the changed read lock as it will only attempt to acquire files which are at least that given age.",title:"Read Lock Min Age",required:!1,deprecated:!1},readLockMinLength:{kind:"parameter",type:"integer",defaultValue:"1",description:"This option is applied only for readLock=changed. It allows you to configure a minimum file length. By default Camel expects the file to contain data, and thus the default value is 1. You can set this option to zero, to allow consuming zero-length files.",title:"Read Lock Min Length",required:!1,deprecated:!1},readLockRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file is succeeded and a commit happens. By default the file is not removed which ensures that any race-condition do not occur so another active node may attempt to grab the file. Instead the idempotent repository may support eviction strategies that you can configure to evict the file name entry after X minutes - this ensures no problems with race conditions. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Remove On Commit",required:!1,deprecated:!1},readLockRemoveOnRollback:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file failed and a rollback happens. If this option is false, then the file name entry is confirmed (as if the file did a commit).",title:"Read Lock Remove On Rollback",required:!1,deprecated:!1},readLockTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Optional timeout in millis for the read-lock, if supported by the read-lock. If the read-lock could not be granted and the timeout triggered, then Camel will skip the file. At next poll Camel, will try the file again, and this time maybe the read-lock could be granted. Use a value of 0 or lower to indicate forever. Currently fileLock, changed and rename support the timeout. Notice: For FTP the default readLockTimeout value is 20000 instead of 10000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Timeout",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},shuffle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To shuffle the list of files (sort in random order)",title:"Shuffle",required:!1,deprecated:!1},sortBy:{kind:"parameter",type:"string",description:"Built-in sort by using the File Language. Supports nested sorts, so you can have a sort by file name and as a 2nd group sort by modified date.",title:"Sort By",required:!1,deprecated:!1},sorter:{kind:"parameter",type:"object",description:"Pluggable sorter as a java.util.Comparator class.",title:"Sorter",required:!1,deprecated:!1}}},"file-watch":{type:"object",title:"File Watch",group:"file",icon:"generic24.png",description:"Get notified about file events in a directory using java.nio.file.WatchService.",properties:{path:{kind:"path",type:"string",description:"Path of directory to consume events from.",title:"Path",required:!0,deprecated:!1},antInclude:{kind:"parameter",type:"string",defaultValue:"**",description:"ANT style pattern to match files. The file is matched against path relative to endpoint path. Pattern must be also relative (not starting with slash)",title:"Ant Include",required:!1,deprecated:!1},autoCreate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Auto create directory if does not exists.",title:"Auto Create",required:!1,deprecated:!1},events:{kind:"parameter",type:"string",defaultValue:"CREATE,MODIFY,DELETE",description:"Comma separated list of events to watch. Possible values: CREATE,MODIFY,DELETE",title:"Events",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Watch recursive in current and child directories (including newly created directories).",title:"Recursive",required:!1,deprecated:!1},useFileHashing:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enables or disables file hashing to detect duplicate events. If you disable this, you can get some events multiple times on some platforms and JDKs. Check java.nio.file.WatchService limitations for your target platform.",title:"Use File Hashing",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of concurrent consumers. Increase this value, if your route is slow to prevent buffering in queue.",title:"Concurrent Consumers",required:!1,deprecated:!1},fileHasher:{kind:"parameter",type:"object",defaultValue:"#murmur3FFileHasher",description:"Reference to io.methvin.watcher.hashing.FileHasher. This prevents emitting duplicate events on some platforms. For working with large files and if you dont need detect multiple modifications per second per file, use #lastModifiedTimeFileHasher. You can also provide custom implementation in registry.",title:"File Hasher",required:!1,deprecated:!1},pollThreads:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of threads polling WatchService. Increase this value, if you see OVERFLOW messages in log.",title:"Poll Threads",required:!1,deprecated:!1},queueSize:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"Maximum size of queue between WatchService and consumer. Unbounded by default.",title:"Queue Size",required:!1,deprecated:!1}}},flatpack:{type:"object",title:"Flatpack",group:"transformation",icon:"generic24.png",description:"Parse fixed width and delimited files using the FlatPack library.",properties:{type:{kind:"path",type:"object",defaultValue:"delim",enum:["fixed","delim"],description:"Whether to use fixed or delimiter",title:"Type",required:!1,deprecated:!1},resourceUri:{kind:"path",type:"string",description:"URL for loading the flatpack mapping file from classpath or file system",title:"Resource Uri",required:!0,deprecated:!1},allowShortLines:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for lines to be shorter than expected and ignores the extra characters",title:"Allow Short Lines",required:!1,deprecated:!1},delimiter:{kind:"parameter",type:"string",defaultValue:",",description:"The default character delimiter for delimited files.",title:"Delimiter",required:!1,deprecated:!1},ignoreExtraColumns:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for lines to be longer than expected and ignores the extra characters",title:"Ignore Extra Columns",required:!1,deprecated:!1},ignoreFirstRecord:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the first line is ignored for delimited files (for the column headers).",title:"Ignore First Record",required:!1,deprecated:!1},splitRows:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets the Component to send each row as a separate exchange once parsed",title:"Split Rows",required:!1,deprecated:!1},textQualifier:{kind:"parameter",type:"string",description:"The text qualifier for delimited files.",title:"Text Qualifier",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},flink:{type:"object",title:"Flink",group:"transformation,bigdata",icon:"generic24.png",description:"Send DataSet jobs to an Apache Flink cluster.",properties:{endpointType:{kind:"path",type:"object",enum:["dataset","datastream"],description:"Type of the endpoint (dataset, datastream).",title:"Endpoint Type",required:!0,deprecated:!1},collect:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Indicates if results should be collected or counted.",title:"Collect",required:!1,deprecated:!1},dataSet:{kind:"parameter",type:"object",description:"DataSet to compute against.",title:"Data Set",required:!1,deprecated:!1},dataSetCallback:{kind:"parameter",type:"object",description:"Function performing action against a DataSet.",title:"Data Set Callback",required:!1,deprecated:!1},dataStream:{kind:"parameter",type:"object",description:"DataStream to compute against.",title:"Data Stream",required:!1,deprecated:!1},dataStreamCallback:{kind:"parameter",type:"object",description:"Function performing action against a DataStream.",title:"Data Stream Callback",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},fop:{type:"object",title:"FOP",group:"file,transformation",icon:"generic24.png",description:"Render messages into PDF and other output formats supported by Apache FOP.",properties:{outputType:{kind:"path",type:"object",enum:["pdf","ps","pcl","png","jpeg","svg","xml","mif","rtf","txt"],description:"The primary output format is PDF but other output formats are also supported.",title:"Output Type",required:!0,deprecated:!1},fopFactory:{kind:"parameter",type:"object",description:"Allows to use a custom configured or implementation of org.apache.fop.apps.FopFactory.",title:"Fop Factory",required:!1,deprecated:!1},userConfigURL:{kind:"parameter",type:"string",description:"The location of a configuration file which can be loaded from classpath or file system.",title:"User Config URL",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},freemarker:{type:"object",title:"Freemarker",group:"transformation",icon:"generic24.png",description:"Transform messages using FreeMarker templates.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},configuration:{kind:"parameter",type:"object",description:"Sets the Freemarker configuration to use",title:"Configuration",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"Sets the encoding to be used for loading the template file.",title:"Encoding",required:!1,deprecated:!1},templateUpdateDelay:{kind:"parameter",type:"integer",description:"Number of seconds the loaded template resource will remain in the cache.",title:"Template Update Delay",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},ftp:{type:"object",title:"FTP",group:"file",icon:"generic24.png",description:"Upload and download files to/from FTP servers.",properties:{host:{kind:"path",type:"string",description:"Hostname of the FTP server",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port of the FTP server",title:"Port",required:!1,deprecated:!1},directoryName:{kind:"path",type:"string",description:"The starting directory",title:"Directory Name",required:!1,deprecated:!1},binary:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).",title:"Binary",required:!1,deprecated:!1},charset:{kind:"parameter",type:"string",description:"This option is used to specify the encoding of the file. You can use this on the consumer, to specify the encodings of the files, which allow Camel to know the charset it should load the file content in case the file content is being accessed. Likewise when writing a file, you can use this option to specify which charset to write the file as well. Do mind that when writing the file Camel may have to read the message content into memory to be able to convert the data into the configured charset, so do not use this if you have big messages.",title:"Charset",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after use. Disconnect will only disconnect the current connection to the FTP server. If you have a consumer which you want to stop, then you need to stop the consumer/route instead.",title:"Disconnect",required:!1,deprecated:!1},doneFileName:{kind:"parameter",type:"string",description:"Producer: If provided, then Camel will write a 2nd done file when the original file has been written. The done file will be empty. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders. The done file will always be written in the same folder as the original file. Consumer: If provided, Camel will only consume files if a done file exists. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders.The done file is always expected in the same folder as the original file. Only ${file.name} and ${file.name.next} is supported as dynamic placeholders.",title:"Done File Name",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"Use Expression such as File Language to dynamically set the filename. For consumers, it's used as a filename filter. For producers, it's used to evaluate the filename to write. If an expression is set, it take precedence over the CamelFileName header. (Note: The header itself can also be an Expression). The expression options support both String and Expression types. If the expression is a String type, it is always evaluated using the File Language. If the expression is an Expression type, the specified Expression type is used - this allows you, for instance, to use OGNL expressions. For the consumer, you can use it to filter filenames, so you can for instance consume today's file using the File Language syntax: mydata-${date:now:yyyyMMdd}.txt. The producers support the CamelOverruleFileName header which takes precedence over any existing CamelFileName header; the CamelOverruleFileName is a header that is used only once, and makes it easier as this avoids to temporary store CamelFileName and have to restore it afterwards.",title:"File Name",required:!1,deprecated:!1},passiveMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets passive mode connections. Default is active mode connections.",title:"Passive Mode",required:!1,deprecated:!1},separator:{kind:"parameter",type:"object",defaultValue:"UNIX",enum:["UNIX","Windows","Auto"],description:"Sets the path separator to be used. UNIX = Uses unix style path separator Windows = Uses windows style path separator Auto = (is default) Use existing path separator in file name",title:"Separator",required:!1,deprecated:!1},transferLoggingIntervalSeconds:{kind:"parameter",type:"integer",defaultValue:"5",description:"Configures the interval in seconds to use when logging the progress of upload and download operations that are in-flight. This is used for logging progress when operations takes longer time.",title:"Transfer Logging Interval Seconds",required:!1,deprecated:!1},transferLoggingLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Configure the logging level to use when logging the progress of upload and download operations.",title:"Transfer Logging Level",required:!1,deprecated:!1},transferLoggingVerbose:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configures whether the perform verbose (fine grained) logging of the progress of upload and download operations.",title:"Transfer Logging Verbose",required:!1,deprecated:!1},fastExistsCheck:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set this option to be true, camel-ftp will use the list file directly to check if the file exists. Since some FTP server may not support to list the file directly, if the option is false, camel-ftp will use the old way to list the directory and check if the file exists. This option also influences readLock=changed to control whether it performs a fast check to update file information or not. This can be used to speed up the process if the FTP server has a lot of files.",title:"Fast Exists Check",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file will be deleted after it is processed successfully.",title:"Delete",required:!1,deprecated:!1},moveFailed:{kind:"parameter",type:"string",description:"Sets the move failure expression based on Simple language. For example, to move files into a .error subdirectory use: .error. Note: When moving the files to the fail location Camel will handle the error and will not pick up the file again.",title:"Move Failed",required:!1,deprecated:!1},noop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file is not moved or deleted in any way. This option is good for readonly data, or for ETL type requirements. If noop=true, Camel will set idempotent=true as well, to avoid consuming the same files over and over again.",title:"Noop",required:!1,deprecated:!1},preMove:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to dynamically set the filename when moving it before processing. For example to move in-progress files into the order directory set this value to order.",title:"Pre Move",required:!1,deprecated:!1},preSort:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When pre-sort is enabled then the consumer will sort the file and directory names during polling, that was retrieved from the file system. You may want to do this in case you need to operate on the files in a sorted order. The pre-sort is executed before the consumer starts to filter, and accept files to process by Camel. This option is default=false meaning disabled.",title:"Pre Sort",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If a directory, will look for files in all the sub-directories as well.",title:"Recursive",required:!1,deprecated:!1},resumeDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configures whether resume download is enabled. This must be supported by the FTP server (almost all FTP servers support it). In addition the options localWorkDirectory must be configured so downloaded files are stored in a local directory, and the option binary must be enabled, which is required to support resuming of downloads.",title:"Resume Download",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},streamDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the download method to use when not using a local working directory. If set to true, the remote files are streamed to the route as they are read. When set to false, the remote files are loaded into memory before being sent into the route. If enabling this option then you must set stepwise=false as both cannot be enabled at the same time.",title:"Stream Download",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},download:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the FTP consumer should download the file. If this option is set to false, then the message body will be null, but the consumer will still trigger a Camel Exchange that has details about the file such as file name, file size, etc. It's just that the file will not be downloaded.",title:"Download",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},handleDirectoryParserAbsoluteResult:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows you to set how the consumer will handle subfolders and files in the path if the directory parser results in with absolute paths The reason for this is that some FTP servers may return file names with absolute paths, and if so then the FTP component needs to handle this by converting the returned path into a relative path.",title:"Handle Directory Parser Absolute Result",required:!1,deprecated:!1},ignoreFileNotFoundOrPermissionError:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error. By default when a directory or file does not exists or insufficient permission, then an exception is thrown. Setting this option to true allows to ignore that instead.",title:"Ignore File Not Found Or Permission Error",required:!1,deprecated:!1},inProgressRepository:{kind:"parameter",type:"object",description:"A pluggable in-progress repository org.apache.camel.spi.IdempotentRepository. The in-progress repository is used to account the current in progress files being consumed. By default a memory based repository is used.",title:"In Progress Repository",required:!1,deprecated:!1},localWorkDirectory:{kind:"parameter",type:"string",description:"When consuming, a local work directory can be used to store the remote file content directly in local files, to avoid loading the content into memory. This is beneficial, if you consume a very big remote file and thus can conserve memory.",title:"Local Work Directory",required:!1,deprecated:!1},onCompletionExceptionHandler:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.ExceptionHandler to handle any thrown exceptions that happens during the file on completion process where the consumer does either a commit or rollback. The default implementation will log any exception at WARN level and ignore.",title:"On Completion Exception Handler",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},processStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.component.file.GenericFileProcessStrategy allowing you to implement your own readLock option or similar. Can also be used when special conditions must be met before a file can be consumed, such as a special ready file exists. If this option is set then the readLock option does not apply.",title:"Process Strategy",required:!1,deprecated:!1},useList:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using LIST command when downloading a file. Default is true. In some use cases you may want to download a specific file and are not allowed to use the LIST command, and therefore you can set this option to false. Notice when using this option, then the specific file to download does not include meta-data information such as file size, timestamp, permissions etc, because those information is only possible to retrieve when LIST command is in use.",title:"Use List",required:!1,deprecated:!1},fileExist:{kind:"parameter",type:"object",defaultValue:"Override",enum:["Override","Append","Fail","Ignore","Move","TryRename"],description:"What to do if a file already exists with the same name. Override, which is the default, replaces the existing file. - Append - adds content to the existing file. - Fail - throws a GenericFileOperationException, indicating that there is already an existing file. - Ignore - silently ignores the problem and does not override the existing file, but assumes everything is okay. - Move - option requires to use the moveExisting option to be configured as well. The option eagerDeleteTargetFile can be used to control what to do if an moving the file, and there exists already an existing file, otherwise causing the move operation to fail. The Move option will move any existing files, before writing the target file. - TryRename is only applicable if tempFileName option is in use. This allows to try renaming the file from the temporary name to the actual name, without doing any exists check. This check may be faster on some file systems and especially FTP servers.",title:"File Exist",required:!1,deprecated:!1},flatten:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flatten is used to flatten the file name path to strip any leading paths, so it's just the file name. This allows you to consume recursively into sub-directories, but when you eg write the files to another directory they will be written in a single directory. Setting this to true on the producer enforces that any file name in CamelFileName header will be stripped for any leading paths.",title:"Flatten",required:!1,deprecated:!1},jailStartingDirectory:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for jailing (restricting) writing files to the starting directory (and sub) only. This is enabled by default to not allow Camel to write files to outside directories (to be more secured out of the box). You can turn this off to allow writing files to directories outside the starting directory, such as parent or root folders.",title:"Jail Starting Directory",required:!1,deprecated:!1},moveExisting:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to compute file name to use when fileExist=Move is configured. To move files into a backup subdirectory just enter backup. This option only supports the following File Language tokens: file:name, file:name.ext, file:name.noext, file:onlyname, file:onlyname.noext, file:ext, and file:parent. Notice the file:parent is not supported by the FTP component, as the FTP component can only move any existing files to a relative directory based on current dir as base.",title:"Move Existing",required:!1,deprecated:!1},tempFileName:{kind:"parameter",type:"string",description:"The same as tempPrefix option but offering a more fine grained control on the naming of the temporary filename as it uses the File Language. The location for tempFilename is relative to the final file location in the option 'fileName', not the target directory in the base uri. For example if option fileName includes a directory prefix: dir/finalFilename then tempFileName is relative to that subdirectory dir.",title:"Temp File Name",required:!1,deprecated:!1},tempPrefix:{kind:"parameter",type:"string",description:"This option is used to write the file using a temporary name and then, after the write is complete, rename it to the real name. Can be used to identify files being written and also avoid consumers (not using exclusive read locks) reading in progress files. Is often used by FTP when uploading big files.",title:"Temp Prefix",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Used to specify if a null body is allowed during file writing. If set to true then an empty file will be created, when set to false, and attempting to send a null body to the file component, a GenericFileWriteException of 'Cannot write null body to file.' will be thrown. If the fileExist option is set to 'Override', then the file will be truncated, and if set to append the file will remain unchanged.",title:"Allow Null Body",required:!1,deprecated:!1},chmod:{kind:"parameter",type:"string",description:"Allows you to set chmod on the stored file. For example chmod=640.",title:"Chmod",required:!1,deprecated:!1},disconnectOnBatchComplete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after a Batch upload is complete. disconnectOnBatchComplete will only disconnect the current connection to the FTP server.",title:"Disconnect On Batch Complete",required:!1,deprecated:!1},eagerDeleteTargetFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to eagerly delete any existing target file. This option only applies when you use fileExists=Override and the tempFileName option as well. You can use this to disable (set it to false) deleting the target file before the temp file is written. For example you may write big files and want the target file to exists during the temp file is being written. This ensure the target file is only deleted until the very last moment, just before the temp file is being renamed to the target filename. This option is also used to control whether to delete any existing files when fileExist=Move is enabled, and an existing file exists. If this option copyAndDeleteOnRenameFails false, then an exception will be thrown if an existing file existed, if its true, then the existing file is deleted before the move operation.",title:"Eager Delete Target File",required:!1,deprecated:!1},keepLastModified:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will keep the last modified timestamp from the source file (if any). Will use the FileConstants.FILE_LAST_MODIFIED header to located the timestamp. This header can contain either a java.util.Date or long with the timestamp. If the timestamp exists and the option is enabled it will set this timestamp on the written file. Note: This option only applies to the file producer. You cannot use this option with any of the ftp producers.",title:"Keep Last Modified",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},moveExistingFileStrategy:{kind:"parameter",type:"object",description:"Strategy (Custom Strategy) used to move file with special naming token to use when fileExist=Move is configured. By default, there is an implementation used if no custom strategy is provided",title:"Move Existing File Strategy",required:!1,deprecated:!1},sendNoop:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to send a noop command as a pre-write check before uploading files to the FTP server. This is enabled by default as a validation of the connection is still valid, which allows to silently re-connect to be able to upload the file. However if this causes problems, you can turn this option off.",title:"Send Noop",required:!1,deprecated:!1},activePortRange:{kind:"parameter",type:"string",description:"Set the client side port range in active mode. The syntax is: minPort-maxPort Both port numbers are inclusive, eg 10000-19999 to include all 1xxxx ports.",title:"Active Port Range",required:!1,deprecated:!1},autoCreate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatically create missing directories in the file's pathname. For the file consumer, that means creating the starting directory. For the file producer, it means the directory the files should be written to.",title:"Auto Create",required:!1,deprecated:!1},bufferSize:{kind:"parameter",type:"integer",defaultValue:"131072",description:"Buffer size in bytes used for writing files (or in case of FTP for downloading and uploading files).",title:"Buffer Size",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"duration",defaultValue:"10000",description:"Sets the connect timeout for waiting for a connection to be established Used by both FTPClient and JSCH",title:"Connect Timeout",required:!1,deprecated:!1},ftpClient:{kind:"parameter",type:"object",description:"To use a custom instance of FTPClient",title:"Ftp Client",required:!1,deprecated:!1},ftpClientConfig:{kind:"parameter",type:"object",description:"To use a custom instance of FTPClientConfig to configure the FTP client the endpoint should use.",title:"Ftp Client Config",required:!1,deprecated:!1},ftpClientConfigParameters:{kind:"parameter",type:"object",description:"Used by FtpComponent to provide additional parameters for the FTPClientConfig",title:"Ftp Client Config Parameters",required:!1,deprecated:!1},ftpClientParameters:{kind:"parameter",type:"object",description:"Used by FtpComponent to provide additional parameters for the FTPClient",title:"Ftp Client Parameters",required:!1,deprecated:!1},maximumReconnectAttempts:{kind:"parameter",type:"integer",description:"Specifies the maximum reconnect attempts Camel performs when it tries to connect to the remote FTP server. Use 0 to disable this behavior.",title:"Maximum Reconnect Attempts",required:!1,deprecated:!1},reconnectDelay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Delay in millis Camel will wait before performing a reconnect attempt.",title:"Reconnect Delay",required:!1,deprecated:!1},siteCommand:{kind:"parameter",type:"string",description:"Sets optional site command(s) to be executed after successful login. Multiple site commands can be separated using a new line character.",title:"Site Command",required:!1,deprecated:!1},soTimeout:{kind:"parameter",type:"duration",defaultValue:"300000",description:"Sets the so timeout FTP and FTPS Is the SocketOptions.SO_TIMEOUT value in millis. Recommended option is to set this to 300000 so as not have a hanged connection. On SFTP this option is set as timeout on the JSCH Session instance.",title:"So Timeout",required:!1,deprecated:!1},stepwise:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether we should stepwise change directories while traversing file structures when downloading files, or as well when uploading a file to a directory. You can disable this if you for example are in a situation where you cannot change directory on the FTP server due security reasons. Stepwise cannot be used together with streamDownload.",title:"Stepwise",required:!1,deprecated:!1},throwExceptionOnConnectFailed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should an exception be thrown if connection failed (exhausted)By default exception is not thrown and a WARN is logged. You can use this to enable exception being thrown and handle the thrown exception from the org.apache.camel.spi.PollingConsumerPollStrategy rollback method.",title:"Throw Exception On Connect Failed",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Sets the data timeout for waiting for reply Used only by FTPClient",title:"Timeout",required:!1,deprecated:!1},antExclude:{kind:"parameter",type:"string",description:"Ant style filter exclusion. If both antInclude and antExclude are used, antExclude takes precedence over antInclude. Multiple exclusions may be specified in comma-delimited format.",title:"Ant Exclude",required:!1,deprecated:!1},antFilterCaseSensitive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets case sensitive flag on ant filter.",title:"Ant Filter Case Sensitive",required:!1,deprecated:!1},antInclude:{kind:"parameter",type:"string",description:"Ant style filter inclusion. Multiple inclusions may be specified in comma-delimited format.",title:"Ant Include",required:!1,deprecated:!1},eagerMaxMessagesPerPoll:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows for controlling whether the limit from maxMessagesPerPoll is eager or not. If eager then the limit is during the scanning of files. Where as false would scan all files, and then perform sorting. Setting this option to false allows for sorting all files first, and then limit the poll. Mind that this requires a higher memory usage as all file details are in memory to perform the sorting.",title:"Eager Max Messages Per Poll",required:!1,deprecated:!1},exclude:{kind:"parameter",type:"string",description:"Is used to exclude files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Exclude",required:!1,deprecated:!1},excludeExt:{kind:"parameter",type:"string",description:"Is used to exclude files matching file extension name (case insensitive). For example to exclude bak files, then use excludeExt=bak. Multiple extensions can be separated by comma, for example to exclude bak and dat files, use excludeExt=bak,dat. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Exclude Ext",required:!1,deprecated:!1},filter:{kind:"parameter",type:"object",description:"Pluggable filter as a org.apache.camel.component.file.GenericFileFilter class. Will skip files if filter returns false in its accept() method.",title:"Filter",required:!1,deprecated:!1},filterDirectory:{kind:"parameter",type:"string",description:"Filters the directory based on Simple language. For example to filter on current date, you can use a simple date pattern such as ${date:now:yyyMMdd}",title:"Filter Directory",required:!1,deprecated:!1},filterFile:{kind:"parameter",type:"string",description:"Filters the file based on Simple language. For example to filter on file size, you can use ${file:size} 5000",title:"Filter File",required:!1,deprecated:!1},idempotent:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to use the Idempotent Consumer EIP pattern to let Camel skip already processed files. Will by default use a memory based LRUCache that holds 1000 entries. If noop=true then idempotent will be enabled as well to avoid consuming the same files over and over again.",title:"Idempotent",required:!1,deprecated:!1},idempotentKey:{kind:"parameter",type:"string",description:"To use a custom idempotent key. By default the absolute path of the file is used. You can use the File Language, for example to use the file name and file size, you can do: idempotentKey=${file:name}-${file:size}",title:"Idempotent Key",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which by default use MemoryIdempotentRepository if none is specified and idempotent is true.",title:"Idempotent Repository",required:!1,deprecated:!1},include:{kind:"parameter",type:"string",description:"Is used to include files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Include",required:!1,deprecated:!1},includeExt:{kind:"parameter",type:"string",description:"Is used to include files matching file extension name (case insensitive). For example to include txt files, then use includeExt=txt. Multiple extensions can be separated by comma, for example to include txt and xml files, use includeExt=txt,xml. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Include Ext",required:!1,deprecated:!1},maxDepth:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"The maximum depth to traverse when recursively processing a directory.",title:"Max Depth",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"To define a maximum messages to gather per poll. By default no maximum is set. Can be used to set a limit of e.g. 1000 to avoid when starting up the server that there are thousands of files. Set a value of 0 or negative to disabled it. Notice: If this option is in use then the File and FTP components will limit before any sorting. For example if you have 100000 files and use maxMessagesPerPoll=500, then only the first 500 files will be picked up, and then sorted. You can use the eagerMaxMessagesPerPoll option and set this to false to allow to scan all files first and then sort afterwards.",title:"Max Messages Per Poll",required:!1,deprecated:!1},minDepth:{kind:"parameter",type:"integer",description:"The minimum depth to start processing when recursively processing a directory. Using minDepth=1 means the base directory. Using minDepth=2 means the first sub directory.",title:"Min Depth",required:!1,deprecated:!1},move:{kind:"parameter",type:"string",description:"Expression (such as Simple Language) used to dynamically set the filename when moving it after processing. To move files into a .done subdirectory just enter .done.",title:"Move",required:!1,deprecated:!1},exclusiveReadLockStrategy:{kind:"parameter",type:"object",description:"Pluggable read-lock as a org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy implementation.",title:"Exclusive Read Lock Strategy",required:!1,deprecated:!1},readLock:{kind:"parameter",type:"string",defaultValue:"none",enum:["none","markerFile","fileLock","rename","changed","idempotent","idempotent-changed","idempotent-rename"],description:"Used by consumer, to only poll the files if it has exclusive read-lock on the file (i.e. the file is not in-progress or being written). Camel will wait until the file lock is granted. This option provides the build in strategies: - none - No read lock is in use - markerFile - Camel creates a marker file (fileName.camelLock) and then holds a lock on it. This option is not available for the FTP component - changed - Changed is using file length/modification timestamp to detect whether the file is currently being copied or not. Will at least use 1 sec to determine this, so this option cannot consume files as fast as the others, but can be more reliable as the JDK IO API cannot always determine whether a file is currently being used by another process. The option readLockCheckInterval can be used to set the check frequency. - fileLock - is for using java.nio.channels.FileLock. This option is not avail for Windows OS and the FTP component. This approach should be avoided when accessing a remote file system via a mount/share unless that file system supports distributed file locks. - rename - rename is for using a try to rename the file as a test if we can get exclusive read-lock. - idempotent - (only for file component) idempotent is for using a idempotentRepository as the read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-changed - (only for file component) idempotent-changed is for using a idempotentRepository and changed as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-rename - (only for file component) idempotent-rename is for using a idempotentRepository and rename as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that.Notice: The various read locks is not all suited to work in clustered mode, where concurrent consumers on different nodes is competing for the same files on a shared file system. The markerFile using a close to atomic operation to create the empty marker file, but its not guaranteed to work in a cluster. The fileLock may work better but then the file system need to support distributed file locks, and so on. Using the idempotent read lock can support clustering if the idempotent repository supports clustering, such as Hazelcast Component or Infinispan.",title:"Read Lock",required:!1,deprecated:!1},readLockCheckInterval:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Interval in millis for the read-lock, if supported by the read lock. This interval is used for sleeping between attempts to acquire the read lock. For example when using the changed read lock, you can set a higher interval period to cater for slow writes. The default of 1 sec. may be too fast if the producer is very slow writing the file. Notice: For FTP the default readLockCheckInterval is 5000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Check Interval",required:!1,deprecated:!1},readLockDeleteOrphanLockFiles:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not read lock with marker files should upon startup delete any orphan read lock files, which may have been left on the file system, if Camel was not properly shutdown (such as a JVM crash). If turning this option to false then any orphaned lock file will cause Camel to not attempt to pickup that file, this could also be due another node is concurrently reading files from the same shared directory.",title:"Read Lock Delete Orphan Lock Files",required:!1,deprecated:!1},readLockLoggingLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level used when a read lock could not be acquired. By default a DEBUG is logged. You can change this level, for example to OFF to not have any logging. This option is only applicable for readLock of types: changed, fileLock, idempotent, idempotent-changed, idempotent-rename, rename.",title:"Read Lock Logging Level",required:!1,deprecated:!1},readLockMarkerFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use marker file with the changed, rename, or exclusive read lock types. By default a marker file is used as well to guard against other processes picking up the same files. This behavior can be turned off by setting this option to false. For example if you do not want to write marker files to the file systems by the Camel application.",title:"Read Lock Marker File",required:!1,deprecated:!1},readLockMinAge:{kind:"parameter",type:"integer",defaultValue:"0",description:"This option is applied only for readLock=changed. It allows to specify a minimum age the file must be before attempting to acquire the read lock. For example use readLockMinAge=300s to require the file is at last 5 minutes old. This can speedup the changed read lock as it will only attempt to acquire files which are at least that given age.",title:"Read Lock Min Age",required:!1,deprecated:!1},readLockMinLength:{kind:"parameter",type:"integer",defaultValue:"1",description:"This option is applied only for readLock=changed. It allows you to configure a minimum file length. By default Camel expects the file to contain data, and thus the default value is 1. You can set this option to zero, to allow consuming zero-length files.",title:"Read Lock Min Length",required:!1,deprecated:!1},readLockRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file is succeeded and a commit happens. By default the file is not removed which ensures that any race-condition do not occur so another active node may attempt to grab the file. Instead the idempotent repository may support eviction strategies that you can configure to evict the file name entry after X minutes - this ensures no problems with race conditions. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Remove On Commit",required:!1,deprecated:!1},readLockRemoveOnRollback:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file failed and a rollback happens. If this option is false, then the file name entry is confirmed (as if the file did a commit).",title:"Read Lock Remove On Rollback",required:!1,deprecated:!1},readLockTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Optional timeout in millis for the read-lock, if supported by the read-lock. If the read-lock could not be granted and the timeout triggered, then Camel will skip the file. At next poll Camel, will try the file again, and this time maybe the read-lock could be granted. Use a value of 0 or lower to indicate forever. Currently fileLock, changed and rename support the timeout. Notice: For FTP the default readLockTimeout value is 20000 instead of 10000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Timeout",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},account:{kind:"parameter",type:"string",description:"Account to use for login",title:"Account",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use for login",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use for login",title:"Username",required:!1,deprecated:!1},shuffle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To shuffle the list of files (sort in random order)",title:"Shuffle",required:!1,deprecated:!1},sortBy:{kind:"parameter",type:"string",description:"Built-in sort by using the File Language. Supports nested sorts, so you can have a sort by file name and as a 2nd group sort by modified date.",title:"Sort By",required:!1,deprecated:!1},sorter:{kind:"parameter",type:"object",description:"Pluggable sorter as a java.util.Comparator class.",title:"Sorter",required:!1,deprecated:!1}}},ftps:{type:"object",title:"FTPS",group:"file",icon:"generic24.png",description:"Upload and download files to/from FTP servers supporting the FTPS protocol.",properties:{host:{kind:"path",type:"string",description:"Hostname of the FTP server",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port of the FTP server",title:"Port",required:!1,deprecated:!1},directoryName:{kind:"path",type:"string",description:"The starting directory",title:"Directory Name",required:!1,deprecated:!1},binary:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).",title:"Binary",required:!1,deprecated:!1},charset:{kind:"parameter",type:"string",description:"This option is used to specify the encoding of the file. You can use this on the consumer, to specify the encodings of the files, which allow Camel to know the charset it should load the file content in case the file content is being accessed. Likewise when writing a file, you can use this option to specify which charset to write the file as well. Do mind that when writing the file Camel may have to read the message content into memory to be able to convert the data into the configured charset, so do not use this if you have big messages.",title:"Charset",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after use. Disconnect will only disconnect the current connection to the FTP server. If you have a consumer which you want to stop, then you need to stop the consumer/route instead.",title:"Disconnect",required:!1,deprecated:!1},doneFileName:{kind:"parameter",type:"string",description:"Producer: If provided, then Camel will write a 2nd done file when the original file has been written. The done file will be empty. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders. The done file will always be written in the same folder as the original file. Consumer: If provided, Camel will only consume files if a done file exists. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders.The done file is always expected in the same folder as the original file. Only ${file.name} and ${file.name.next} is supported as dynamic placeholders.",title:"Done File Name",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"Use Expression such as File Language to dynamically set the filename. For consumers, it's used as a filename filter. For producers, it's used to evaluate the filename to write. If an expression is set, it take precedence over the CamelFileName header. (Note: The header itself can also be an Expression). The expression options support both String and Expression types. If the expression is a String type, it is always evaluated using the File Language. If the expression is an Expression type, the specified Expression type is used - this allows you, for instance, to use OGNL expressions. For the consumer, you can use it to filter filenames, so you can for instance consume today's file using the File Language syntax: mydata-${date:now:yyyyMMdd}.txt. The producers support the CamelOverruleFileName header which takes precedence over any existing CamelFileName header; the CamelOverruleFileName is a header that is used only once, and makes it easier as this avoids to temporary store CamelFileName and have to restore it afterwards.",title:"File Name",required:!1,deprecated:!1},passiveMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets passive mode connections. Default is active mode connections.",title:"Passive Mode",required:!1,deprecated:!1},separator:{kind:"parameter",type:"object",defaultValue:"UNIX",enum:["UNIX","Windows","Auto"],description:"Sets the path separator to be used. UNIX = Uses unix style path separator Windows = Uses windows style path separator Auto = (is default) Use existing path separator in file name",title:"Separator",required:!1,deprecated:!1},transferLoggingIntervalSeconds:{kind:"parameter",type:"integer",defaultValue:"5",description:"Configures the interval in seconds to use when logging the progress of upload and download operations that are in-flight. This is used for logging progress when operations takes longer time.",title:"Transfer Logging Interval Seconds",required:!1,deprecated:!1},transferLoggingLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Configure the logging level to use when logging the progress of upload and download operations.",title:"Transfer Logging Level",required:!1,deprecated:!1},transferLoggingVerbose:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configures whether the perform verbose (fine grained) logging of the progress of upload and download operations.",title:"Transfer Logging Verbose",required:!1,deprecated:!1},fastExistsCheck:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set this option to be true, camel-ftp will use the list file directly to check if the file exists. Since some FTP server may not support to list the file directly, if the option is false, camel-ftp will use the old way to list the directory and check if the file exists. This option also influences readLock=changed to control whether it performs a fast check to update file information or not. This can be used to speed up the process if the FTP server has a lot of files.",title:"Fast Exists Check",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file will be deleted after it is processed successfully.",title:"Delete",required:!1,deprecated:!1},moveFailed:{kind:"parameter",type:"string",description:"Sets the move failure expression based on Simple language. For example, to move files into a .error subdirectory use: .error. Note: When moving the files to the fail location Camel will handle the error and will not pick up the file again.",title:"Move Failed",required:!1,deprecated:!1},noop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file is not moved or deleted in any way. This option is good for readonly data, or for ETL type requirements. If noop=true, Camel will set idempotent=true as well, to avoid consuming the same files over and over again.",title:"Noop",required:!1,deprecated:!1},preMove:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to dynamically set the filename when moving it before processing. For example to move in-progress files into the order directory set this value to order.",title:"Pre Move",required:!1,deprecated:!1},preSort:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When pre-sort is enabled then the consumer will sort the file and directory names during polling, that was retrieved from the file system. You may want to do this in case you need to operate on the files in a sorted order. The pre-sort is executed before the consumer starts to filter, and accept files to process by Camel. This option is default=false meaning disabled.",title:"Pre Sort",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If a directory, will look for files in all the sub-directories as well.",title:"Recursive",required:!1,deprecated:!1},resumeDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configures whether resume download is enabled. This must be supported by the FTP server (almost all FTP servers support it). In addition the options localWorkDirectory must be configured so downloaded files are stored in a local directory, and the option binary must be enabled, which is required to support resuming of downloads.",title:"Resume Download",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},streamDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the download method to use when not using a local working directory. If set to true, the remote files are streamed to the route as they are read. When set to false, the remote files are loaded into memory before being sent into the route. If enabling this option then you must set stepwise=false as both cannot be enabled at the same time.",title:"Stream Download",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},download:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the FTP consumer should download the file. If this option is set to false, then the message body will be null, but the consumer will still trigger a Camel Exchange that has details about the file such as file name, file size, etc. It's just that the file will not be downloaded.",title:"Download",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},handleDirectoryParserAbsoluteResult:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows you to set how the consumer will handle subfolders and files in the path if the directory parser results in with absolute paths The reason for this is that some FTP servers may return file names with absolute paths, and if so then the FTP component needs to handle this by converting the returned path into a relative path.",title:"Handle Directory Parser Absolute Result",required:!1,deprecated:!1},ignoreFileNotFoundOrPermissionError:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error. By default when a directory or file does not exists or insufficient permission, then an exception is thrown. Setting this option to true allows to ignore that instead.",title:"Ignore File Not Found Or Permission Error",required:!1,deprecated:!1},inProgressRepository:{kind:"parameter",type:"object",description:"A pluggable in-progress repository org.apache.camel.spi.IdempotentRepository. The in-progress repository is used to account the current in progress files being consumed. By default a memory based repository is used.",title:"In Progress Repository",required:!1,deprecated:!1},localWorkDirectory:{kind:"parameter",type:"string",description:"When consuming, a local work directory can be used to store the remote file content directly in local files, to avoid loading the content into memory. This is beneficial, if you consume a very big remote file and thus can conserve memory.",title:"Local Work Directory",required:!1,deprecated:!1},onCompletionExceptionHandler:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.ExceptionHandler to handle any thrown exceptions that happens during the file on completion process where the consumer does either a commit or rollback. The default implementation will log any exception at WARN level and ignore.",title:"On Completion Exception Handler",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},processStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.component.file.GenericFileProcessStrategy allowing you to implement your own readLock option or similar. Can also be used when special conditions must be met before a file can be consumed, such as a special ready file exists. If this option is set then the readLock option does not apply.",title:"Process Strategy",required:!1,deprecated:!1},useList:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using LIST command when downloading a file. Default is true. In some use cases you may want to download a specific file and are not allowed to use the LIST command, and therefore you can set this option to false. Notice when using this option, then the specific file to download does not include meta-data information such as file size, timestamp, permissions etc, because those information is only possible to retrieve when LIST command is in use.",title:"Use List",required:!1,deprecated:!1},fileExist:{kind:"parameter",type:"object",defaultValue:"Override",enum:["Override","Append","Fail","Ignore","Move","TryRename"],description:"What to do if a file already exists with the same name. Override, which is the default, replaces the existing file. - Append - adds content to the existing file. - Fail - throws a GenericFileOperationException, indicating that there is already an existing file. - Ignore - silently ignores the problem and does not override the existing file, but assumes everything is okay. - Move - option requires to use the moveExisting option to be configured as well. The option eagerDeleteTargetFile can be used to control what to do if an moving the file, and there exists already an existing file, otherwise causing the move operation to fail. The Move option will move any existing files, before writing the target file. - TryRename is only applicable if tempFileName option is in use. This allows to try renaming the file from the temporary name to the actual name, without doing any exists check. This check may be faster on some file systems and especially FTP servers.",title:"File Exist",required:!1,deprecated:!1},flatten:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flatten is used to flatten the file name path to strip any leading paths, so it's just the file name. This allows you to consume recursively into sub-directories, but when you eg write the files to another directory they will be written in a single directory. Setting this to true on the producer enforces that any file name in CamelFileName header will be stripped for any leading paths.",title:"Flatten",required:!1,deprecated:!1},jailStartingDirectory:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for jailing (restricting) writing files to the starting directory (and sub) only. This is enabled by default to not allow Camel to write files to outside directories (to be more secured out of the box). You can turn this off to allow writing files to directories outside the starting directory, such as parent or root folders.",title:"Jail Starting Directory",required:!1,deprecated:!1},moveExisting:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to compute file name to use when fileExist=Move is configured. To move files into a backup subdirectory just enter backup. This option only supports the following File Language tokens: file:name, file:name.ext, file:name.noext, file:onlyname, file:onlyname.noext, file:ext, and file:parent. Notice the file:parent is not supported by the FTP component, as the FTP component can only move any existing files to a relative directory based on current dir as base.",title:"Move Existing",required:!1,deprecated:!1},tempFileName:{kind:"parameter",type:"string",description:"The same as tempPrefix option but offering a more fine grained control on the naming of the temporary filename as it uses the File Language. The location for tempFilename is relative to the final file location in the option 'fileName', not the target directory in the base uri. For example if option fileName includes a directory prefix: dir/finalFilename then tempFileName is relative to that subdirectory dir.",title:"Temp File Name",required:!1,deprecated:!1},tempPrefix:{kind:"parameter",type:"string",description:"This option is used to write the file using a temporary name and then, after the write is complete, rename it to the real name. Can be used to identify files being written and also avoid consumers (not using exclusive read locks) reading in progress files. Is often used by FTP when uploading big files.",title:"Temp Prefix",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Used to specify if a null body is allowed during file writing. If set to true then an empty file will be created, when set to false, and attempting to send a null body to the file component, a GenericFileWriteException of 'Cannot write null body to file.' will be thrown. If the fileExist option is set to 'Override', then the file will be truncated, and if set to append the file will remain unchanged.",title:"Allow Null Body",required:!1,deprecated:!1},chmod:{kind:"parameter",type:"string",description:"Allows you to set chmod on the stored file. For example chmod=640.",title:"Chmod",required:!1,deprecated:!1},disconnectOnBatchComplete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after a Batch upload is complete. disconnectOnBatchComplete will only disconnect the current connection to the FTP server.",title:"Disconnect On Batch Complete",required:!1,deprecated:!1},eagerDeleteTargetFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to eagerly delete any existing target file. This option only applies when you use fileExists=Override and the tempFileName option as well. You can use this to disable (set it to false) deleting the target file before the temp file is written. For example you may write big files and want the target file to exists during the temp file is being written. This ensure the target file is only deleted until the very last moment, just before the temp file is being renamed to the target filename. This option is also used to control whether to delete any existing files when fileExist=Move is enabled, and an existing file exists. If this option copyAndDeleteOnRenameFails false, then an exception will be thrown if an existing file existed, if its true, then the existing file is deleted before the move operation.",title:"Eager Delete Target File",required:!1,deprecated:!1},keepLastModified:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will keep the last modified timestamp from the source file (if any). Will use the FileConstants.FILE_LAST_MODIFIED header to located the timestamp. This header can contain either a java.util.Date or long with the timestamp. If the timestamp exists and the option is enabled it will set this timestamp on the written file. Note: This option only applies to the file producer. You cannot use this option with any of the ftp producers.",title:"Keep Last Modified",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},moveExistingFileStrategy:{kind:"parameter",type:"object",description:"Strategy (Custom Strategy) used to move file with special naming token to use when fileExist=Move is configured. By default, there is an implementation used if no custom strategy is provided",title:"Move Existing File Strategy",required:!1,deprecated:!1},sendNoop:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to send a noop command as a pre-write check before uploading files to the FTP server. This is enabled by default as a validation of the connection is still valid, which allows to silently re-connect to be able to upload the file. However if this causes problems, you can turn this option off.",title:"Send Noop",required:!1,deprecated:!1},activePortRange:{kind:"parameter",type:"string",description:"Set the client side port range in active mode. The syntax is: minPort-maxPort Both port numbers are inclusive, eg 10000-19999 to include all 1xxxx ports.",title:"Active Port Range",required:!1,deprecated:!1},autoCreate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatically create missing directories in the file's pathname. For the file consumer, that means creating the starting directory. For the file producer, it means the directory the files should be written to.",title:"Auto Create",required:!1,deprecated:!1},bufferSize:{kind:"parameter",type:"integer",defaultValue:"131072",description:"Buffer size in bytes used for writing files (or in case of FTP for downloading and uploading files).",title:"Buffer Size",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"duration",defaultValue:"10000",description:"Sets the connect timeout for waiting for a connection to be established Used by both FTPClient and JSCH",title:"Connect Timeout",required:!1,deprecated:!1},ftpClient:{kind:"parameter",type:"object",description:"To use a custom instance of FTPClient",title:"Ftp Client",required:!1,deprecated:!1},ftpClientConfig:{kind:"parameter",type:"object",description:"To use a custom instance of FTPClientConfig to configure the FTP client the endpoint should use.",title:"Ftp Client Config",required:!1,deprecated:!1},ftpClientConfigParameters:{kind:"parameter",type:"object",description:"Used by FtpComponent to provide additional parameters for the FTPClientConfig",title:"Ftp Client Config Parameters",required:!1,deprecated:!1},ftpClientParameters:{kind:"parameter",type:"object",description:"Used by FtpComponent to provide additional parameters for the FTPClient",title:"Ftp Client Parameters",required:!1,deprecated:!1},maximumReconnectAttempts:{kind:"parameter",type:"integer",description:"Specifies the maximum reconnect attempts Camel performs when it tries to connect to the remote FTP server. Use 0 to disable this behavior.",title:"Maximum Reconnect Attempts",required:!1,deprecated:!1},reconnectDelay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Delay in millis Camel will wait before performing a reconnect attempt.",title:"Reconnect Delay",required:!1,deprecated:!1},siteCommand:{kind:"parameter",type:"string",description:"Sets optional site command(s) to be executed after successful login. Multiple site commands can be separated using a new line character.",title:"Site Command",required:!1,deprecated:!1},soTimeout:{kind:"parameter",type:"duration",defaultValue:"300000",description:"Sets the so timeout FTP and FTPS Is the SocketOptions.SO_TIMEOUT value in millis. Recommended option is to set this to 300000 so as not have a hanged connection. On SFTP this option is set as timeout on the JSCH Session instance.",title:"So Timeout",required:!1,deprecated:!1},stepwise:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether we should stepwise change directories while traversing file structures when downloading files, or as well when uploading a file to a directory. You can disable this if you for example are in a situation where you cannot change directory on the FTP server due security reasons. Stepwise cannot be used together with streamDownload.",title:"Stepwise",required:!1,deprecated:!1},throwExceptionOnConnectFailed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should an exception be thrown if connection failed (exhausted)By default exception is not thrown and a WARN is logged. You can use this to enable exception being thrown and handle the thrown exception from the org.apache.camel.spi.PollingConsumerPollStrategy rollback method.",title:"Throw Exception On Connect Failed",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Sets the data timeout for waiting for reply Used only by FTPClient",title:"Timeout",required:!1,deprecated:!1},antExclude:{kind:"parameter",type:"string",description:"Ant style filter exclusion. If both antInclude and antExclude are used, antExclude takes precedence over antInclude. Multiple exclusions may be specified in comma-delimited format.",title:"Ant Exclude",required:!1,deprecated:!1},antFilterCaseSensitive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets case sensitive flag on ant filter.",title:"Ant Filter Case Sensitive",required:!1,deprecated:!1},antInclude:{kind:"parameter",type:"string",description:"Ant style filter inclusion. Multiple inclusions may be specified in comma-delimited format.",title:"Ant Include",required:!1,deprecated:!1},eagerMaxMessagesPerPoll:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows for controlling whether the limit from maxMessagesPerPoll is eager or not. If eager then the limit is during the scanning of files. Where as false would scan all files, and then perform sorting. Setting this option to false allows for sorting all files first, and then limit the poll. Mind that this requires a higher memory usage as all file details are in memory to perform the sorting.",title:"Eager Max Messages Per Poll",required:!1,deprecated:!1},exclude:{kind:"parameter",type:"string",description:"Is used to exclude files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Exclude",required:!1,deprecated:!1},excludeExt:{kind:"parameter",type:"string",description:"Is used to exclude files matching file extension name (case insensitive). For example to exclude bak files, then use excludeExt=bak. Multiple extensions can be separated by comma, for example to exclude bak and dat files, use excludeExt=bak,dat. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Exclude Ext",required:!1,deprecated:!1},filter:{kind:"parameter",type:"object",description:"Pluggable filter as a org.apache.camel.component.file.GenericFileFilter class. Will skip files if filter returns false in its accept() method.",title:"Filter",required:!1,deprecated:!1},filterDirectory:{kind:"parameter",type:"string",description:"Filters the directory based on Simple language. For example to filter on current date, you can use a simple date pattern such as ${date:now:yyyMMdd}",title:"Filter Directory",required:!1,deprecated:!1},filterFile:{kind:"parameter",type:"string",description:"Filters the file based on Simple language. For example to filter on file size, you can use ${file:size} 5000",title:"Filter File",required:!1,deprecated:!1},idempotent:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to use the Idempotent Consumer EIP pattern to let Camel skip already processed files. Will by default use a memory based LRUCache that holds 1000 entries. If noop=true then idempotent will be enabled as well to avoid consuming the same files over and over again.",title:"Idempotent",required:!1,deprecated:!1},idempotentKey:{kind:"parameter",type:"string",description:"To use a custom idempotent key. By default the absolute path of the file is used. You can use the File Language, for example to use the file name and file size, you can do: idempotentKey=${file:name}-${file:size}",title:"Idempotent Key",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which by default use MemoryIdempotentRepository if none is specified and idempotent is true.",title:"Idempotent Repository",required:!1,deprecated:!1},include:{kind:"parameter",type:"string",description:"Is used to include files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Include",required:!1,deprecated:!1},includeExt:{kind:"parameter",type:"string",description:"Is used to include files matching file extension name (case insensitive). For example to include txt files, then use includeExt=txt. Multiple extensions can be separated by comma, for example to include txt and xml files, use includeExt=txt,xml. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Include Ext",required:!1,deprecated:!1},maxDepth:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"The maximum depth to traverse when recursively processing a directory.",title:"Max Depth",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"To define a maximum messages to gather per poll. By default no maximum is set. Can be used to set a limit of e.g. 1000 to avoid when starting up the server that there are thousands of files. Set a value of 0 or negative to disabled it. Notice: If this option is in use then the File and FTP components will limit before any sorting. For example if you have 100000 files and use maxMessagesPerPoll=500, then only the first 500 files will be picked up, and then sorted. You can use the eagerMaxMessagesPerPoll option and set this to false to allow to scan all files first and then sort afterwards.",title:"Max Messages Per Poll",required:!1,deprecated:!1},minDepth:{kind:"parameter",type:"integer",description:"The minimum depth to start processing when recursively processing a directory. Using minDepth=1 means the base directory. Using minDepth=2 means the first sub directory.",title:"Min Depth",required:!1,deprecated:!1},move:{kind:"parameter",type:"string",description:"Expression (such as Simple Language) used to dynamically set the filename when moving it after processing. To move files into a .done subdirectory just enter .done.",title:"Move",required:!1,deprecated:!1},exclusiveReadLockStrategy:{kind:"parameter",type:"object",description:"Pluggable read-lock as a org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy implementation.",title:"Exclusive Read Lock Strategy",required:!1,deprecated:!1},readLock:{kind:"parameter",type:"string",defaultValue:"none",enum:["none","markerFile","fileLock","rename","changed","idempotent","idempotent-changed","idempotent-rename"],description:"Used by consumer, to only poll the files if it has exclusive read-lock on the file (i.e. the file is not in-progress or being written). Camel will wait until the file lock is granted. This option provides the build in strategies: - none - No read lock is in use - markerFile - Camel creates a marker file (fileName.camelLock) and then holds a lock on it. This option is not available for the FTP component - changed - Changed is using file length/modification timestamp to detect whether the file is currently being copied or not. Will at least use 1 sec to determine this, so this option cannot consume files as fast as the others, but can be more reliable as the JDK IO API cannot always determine whether a file is currently being used by another process. The option readLockCheckInterval can be used to set the check frequency. - fileLock - is for using java.nio.channels.FileLock. This option is not avail for Windows OS and the FTP component. This approach should be avoided when accessing a remote file system via a mount/share unless that file system supports distributed file locks. - rename - rename is for using a try to rename the file as a test if we can get exclusive read-lock. - idempotent - (only for file component) idempotent is for using a idempotentRepository as the read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-changed - (only for file component) idempotent-changed is for using a idempotentRepository and changed as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-rename - (only for file component) idempotent-rename is for using a idempotentRepository and rename as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that.Notice: The various read locks is not all suited to work in clustered mode, where concurrent consumers on different nodes is competing for the same files on a shared file system. The markerFile using a close to atomic operation to create the empty marker file, but its not guaranteed to work in a cluster. The fileLock may work better but then the file system need to support distributed file locks, and so on. Using the idempotent read lock can support clustering if the idempotent repository supports clustering, such as Hazelcast Component or Infinispan.",title:"Read Lock",required:!1,deprecated:!1},readLockCheckInterval:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Interval in millis for the read-lock, if supported by the read lock. This interval is used for sleeping between attempts to acquire the read lock. For example when using the changed read lock, you can set a higher interval period to cater for slow writes. The default of 1 sec. may be too fast if the producer is very slow writing the file. Notice: For FTP the default readLockCheckInterval is 5000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Check Interval",required:!1,deprecated:!1},readLockDeleteOrphanLockFiles:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not read lock with marker files should upon startup delete any orphan read lock files, which may have been left on the file system, if Camel was not properly shutdown (such as a JVM crash). If turning this option to false then any orphaned lock file will cause Camel to not attempt to pickup that file, this could also be due another node is concurrently reading files from the same shared directory.",title:"Read Lock Delete Orphan Lock Files",required:!1,deprecated:!1},readLockLoggingLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level used when a read lock could not be acquired. By default a DEBUG is logged. You can change this level, for example to OFF to not have any logging. This option is only applicable for readLock of types: changed, fileLock, idempotent, idempotent-changed, idempotent-rename, rename.",title:"Read Lock Logging Level",required:!1,deprecated:!1},readLockMarkerFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use marker file with the changed, rename, or exclusive read lock types. By default a marker file is used as well to guard against other processes picking up the same files. This behavior can be turned off by setting this option to false. For example if you do not want to write marker files to the file systems by the Camel application.",title:"Read Lock Marker File",required:!1,deprecated:!1},readLockMinAge:{kind:"parameter",type:"integer",defaultValue:"0",description:"This option is applied only for readLock=changed. It allows to specify a minimum age the file must be before attempting to acquire the read lock. For example use readLockMinAge=300s to require the file is at last 5 minutes old. This can speedup the changed read lock as it will only attempt to acquire files which are at least that given age.",title:"Read Lock Min Age",required:!1,deprecated:!1},readLockMinLength:{kind:"parameter",type:"integer",defaultValue:"1",description:"This option is applied only for readLock=changed. It allows you to configure a minimum file length. By default Camel expects the file to contain data, and thus the default value is 1. You can set this option to zero, to allow consuming zero-length files.",title:"Read Lock Min Length",required:!1,deprecated:!1},readLockRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file is succeeded and a commit happens. By default the file is not removed which ensures that any race-condition do not occur so another active node may attempt to grab the file. Instead the idempotent repository may support eviction strategies that you can configure to evict the file name entry after X minutes - this ensures no problems with race conditions. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Remove On Commit",required:!1,deprecated:!1},readLockRemoveOnRollback:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file failed and a rollback happens. If this option is false, then the file name entry is confirmed (as if the file did a commit).",title:"Read Lock Remove On Rollback",required:!1,deprecated:!1},readLockTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Optional timeout in millis for the read-lock, if supported by the read-lock. If the read-lock could not be granted and the timeout triggered, then Camel will skip the file. At next poll Camel, will try the file again, and this time maybe the read-lock could be granted. Use a value of 0 or lower to indicate forever. Currently fileLock, changed and rename support the timeout. Notice: For FTP the default readLockTimeout value is 20000 instead of 10000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Timeout",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},account:{kind:"parameter",type:"string",description:"Account to use for login",title:"Account",required:!1,deprecated:!1},disableSecureDataChannelDefaults:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use this option to disable default options when using secure data channel. This allows you to be in full control what the execPbsz and execProt setting should be used. Default is false",title:"Disable Secure Data Channel Defaults",required:!1,deprecated:!1},execPbsz:{kind:"parameter",type:"integer",description:"When using secure data channel you can set the exec protection buffer size",title:"Exec Pbsz",required:!1,deprecated:!1},execProt:{kind:"parameter",type:"string",description:"The exec protection level PROT command. C - Clear S - Safe(SSL protocol only) E - Confidential(SSL protocol only) P - Private",title:"Exec Prot",required:!1,deprecated:!1},ftpClientKeyStoreParameters:{kind:"parameter",type:"object",description:"Set the key store parameters",title:"Ftp Client Key Store Parameters",required:!1,deprecated:!1},ftpClientTrustStoreParameters:{kind:"parameter",type:"object",description:"Set the trust store parameters",title:"Ftp Client Trust Store Parameters",required:!1,deprecated:!1},implicit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set the security mode (Implicit/Explicit). true - Implicit Mode / False - Explicit Mode",title:"Implicit",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use for login",title:"Password",required:!1,deprecated:!1},securityProtocol:{kind:"parameter",type:"string",defaultValue:"TLSv1.3",description:"Set the underlying security protocol.",title:"Security Protocol",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"Gets the JSSE configuration that overrides any settings in FtpsEndpoint#ftpClientKeyStoreParameters, ftpClientTrustStoreParameters, and FtpsConfiguration#getSecurityProtocol().",title:"Ssl Context Parameters",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use for login",title:"Username",required:!1,deprecated:!1},shuffle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To shuffle the list of files (sort in random order)",title:"Shuffle",required:!1,deprecated:!1},sortBy:{kind:"parameter",type:"string",description:"Built-in sort by using the File Language. Supports nested sorts, so you can have a sort by file name and as a 2nd group sort by modified date.",title:"Sort By",required:!1,deprecated:!1},sorter:{kind:"parameter",type:"object",description:"Pluggable sorter as a java.util.Comparator class.",title:"Sorter",required:!1,deprecated:!1}}},geocoder:{type:"object",title:"Geocoder",group:"api,search",icon:"generic24.png",description:"Find geocodes (latitude and longitude) for a given address or the other way round.",properties:{address:{kind:"path",type:"string",description:"The geo address which should be prefixed with address:",title:"Address",required:!1,deprecated:!1},latlng:{kind:"path",type:"string",description:"The geo latitude and longitude which should be prefixed with latlng:",title:"Latlng",required:!1,deprecated:!1},headersOnly:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to only enrich the Exchange with headers, and leave the body as-is.",title:"Headers Only",required:!1,deprecated:!1},language:{kind:"parameter",type:"string",defaultValue:"en",description:"The language to use.",title:"Language",required:!1,deprecated:!1},serverUrl:{kind:"parameter",type:"string",description:"URL to the geocoder server. Mandatory for Nominatim server.",title:"Server URL",required:!1,deprecated:!1},type:{kind:"parameter",type:"object",enum:["NOMINATIM","GOOGLE"],description:"Type of GeoCoding server. Supported Nominatim and Google.",title:"GeoCoding Type",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},proxyAuthDomain:{kind:"parameter",type:"string",description:"Proxy Authentication Domain to access Google GeoCoding server.",title:"Proxy Auth Domain",required:!1,deprecated:!1},proxyAuthHost:{kind:"parameter",type:"string",description:"Proxy Authentication Host to access Google GeoCoding server.",title:"Proxy Auth Host",required:!1,deprecated:!1},proxyAuthMethod:{kind:"parameter",type:"string",description:"Authentication Method to Google GeoCoding server.",title:"Proxy Auth Method",required:!1,deprecated:!1},proxyAuthPassword:{kind:"parameter",type:"string",description:"Proxy Password to access GeoCoding server.",title:"Proxy Auth Password",required:!1,deprecated:!1},proxyAuthUsername:{kind:"parameter",type:"string",description:"Proxy Username to access GeoCoding server.",title:"Proxy Auth Username",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy Host to access GeoCoding server.",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy Port to access GeoCoding server.",title:"Proxy Port",required:!1,deprecated:!1},apiKey:{kind:"parameter",type:"string",description:"API Key to access Google. Mandatory for Google GeoCoding server.",title:"Api Key",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID to access Google GeoCoding server.",title:"Client Id",required:!1,deprecated:!1},clientKey:{kind:"parameter",type:"string",description:"Client Key to access Google GeoCoding server.",title:"Client Key",required:!1,deprecated:!1}}},git:{type:"object",title:"Git",group:"file",icon:"generic24.png",description:"Perform operations on git repositories.",properties:{localPath:{kind:"path",type:"string",description:"Local repository path",title:"Local Path",required:!0,deprecated:!1},branchName:{kind:"parameter",type:"string",description:"The branch name to work on",title:"Branch Name",required:!1,deprecated:!1},type:{kind:"parameter",type:"object",enum:["commit","tag","branch"],description:"The consumer type",title:"Type",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},allowEmpty:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The flag to manage empty git commits",title:"Allow Empty",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",enum:["clone","init","add","remove","commit","commitAll","createBranch","deleteBranch","createTag","deleteTag","status","log","push","pull","showBranches","cherryPick","remoteAdd","remoteList"],description:"The operation to do on the repository",title:"Operation",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Remote repository password",title:"Password",required:!1,deprecated:!1},remoteName:{kind:"parameter",type:"string",description:"The remote repository name to use in particular operation like pull",title:"Remote Name",required:!1,deprecated:!1},remotePath:{kind:"parameter",type:"string",description:"The remote repository path",title:"Remote Path",required:!1,deprecated:!1},tagName:{kind:"parameter",type:"string",description:"The tag name to work on",title:"Tag Name",required:!1,deprecated:!1},targetBranchName:{kind:"parameter",type:"string",defaultValue:"master",description:"Name of target branch in merge operation. If not supplied will try to use init.defaultBranch git configs. If not configured will use default value",title:"Target Branch Name",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Remote repository username",title:"Username",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},gitConfigFile:{kind:"parameter",type:"string",description:"A String with path to a .gitconfig file",title:"Git Config File",required:!1,deprecated:!1}}},github:{type:"object",title:"GitHub",group:"file,cloud,api",icon:"generic24.png",description:"Interact with the GitHub API.",properties:{type:{kind:"path",type:"object",enum:["CLOSEPULLREQUEST","PULLREQUESTCOMMENT","COMMIT","PULLREQUEST","TAG","PULLREQUESTSTATE","PULLREQUESTFILES","GETCOMMITFILE","CREATEISSUE","EVENT"],description:"What git operation to execute",title:"Type",required:!0,deprecated:!1},branchName:{kind:"path",type:"string",description:"Name of branch",title:"Branch Name",required:!1,deprecated:!1},repoName:{kind:"parameter",type:"string",description:"GitHub repository name",title:"Repo Name",required:!0,deprecated:!1},repoOwner:{kind:"parameter",type:"string",description:"GitHub repository owner (organization)",title:"Repo Owner",required:!0,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},startingSha:{kind:"parameter",type:"string",defaultValue:"last",description:"The starting sha to use for polling commits with the commit consumer. The value can either be a sha for the sha to start from, or use beginning to start from the beginning, or last to start from the last commit.",title:"Starting Sha",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},eventFetchStrategy:{kind:"parameter",type:"object",description:"To specify a custom strategy that configures how the EventsConsumer fetches events.",title:"Event Fetch Strategy",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"To use the given encoding when getting a git commit file",title:"Encoding",required:!1,deprecated:!1},state:{kind:"parameter",type:"string",enum:["error","failure","pending","success"],description:"To set git commit status state",title:"State",required:!1,deprecated:!1},targetUrl:{kind:"parameter",type:"string",description:"To set git commit status target url",title:"Target Url",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"GitHub OAuth token. Must be configured on either component or endpoint.",title:"Oauth Token",required:!1,deprecated:!1}}},"google-bigquery":{type:"object",title:"Google BigQuery",group:"cloud,bigdata",icon:"generic24.png",description:"Google BigQuery data warehouse for analytics.",properties:{projectId:{kind:"path",type:"string",description:"Google Cloud Project Id",title:"Project Id",required:!0,deprecated:!1},datasetId:{kind:"path",type:"string",description:"BigQuery Dataset Id",title:"Dataset Id",required:!0,deprecated:!1},tableId:{kind:"path",type:"string",description:"BigQuery table id",title:"Table Id",required:!1,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"ConnectionFactory to obtain connection to Bigquery Service. If not provided the default one will be used",title:"Connection Factory",required:!1,deprecated:!1},useAsInsertId:{kind:"parameter",type:"string",description:"Field name to use as insert id",title:"Use As Insert Id",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key in json format to authenticate an application as a service account to google cloud platform",title:"Service Account Key",required:!1,deprecated:!1}}},"google-bigquery-sql":{type:"object",title:"Google BigQuery Standard SQL",group:"cloud,messaging",icon:"generic24.png",description:"Access Google Cloud BigQuery service using SQL queries.",properties:{projectId:{kind:"path",type:"string",description:"Google Cloud Project Id",title:"Project Id",required:!0,deprecated:!1},queryString:{kind:"path",type:"string",description:"BigQuery standard SQL query",title:"Query String",required:!0,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"ConnectionFactory to obtain connection to Bigquery Service. If not provided the default one will be used",title:"Connection Factory",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key in json format to authenticate an application as a service account to google cloud platform",title:"Service Account Key",required:!1,deprecated:!1}}},"google-calendar":{type:"object",title:"Google Calendar",group:"api,cloud",icon:"generic24.png",description:"Perform various operations on a Google Calendar.",properties:{apiName:{kind:"path",type:"object",enum:["ACL","LIST","CALENDARS","CHANNELS","COLORS","FREEBUSY","EVENTS","SETTINGS"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",enum:["calendarImport","clear","delete","get","insert","instances","list","move","patch","query","quickAdd","stop","update","watch"],description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},applicationName:{kind:"parameter",type:"string",description:"Google calendar application name. Example would be camel-google-calendar/1.0",title:"Application Name",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID of the calendar application",title:"Client Id",required:!1,deprecated:!1},delegate:{kind:"parameter",type:"string",description:"Delegate for wide-domain service account",title:"Delegate",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},scopes:{kind:"parameter",type:"array",defaultValue:"https://www.googleapis.com/auth/calendar",description:"Specifies the level of permissions you want a calendar application to have to a user account. You can separate multiple scopes by comma. See https://developers.google.com/google-apps/calendar/auth for more info.",title:"Scopes",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",title:"Access Token",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client secret of the calendar application",title:"Client Secret",required:!1,deprecated:!1},emailAddress:{kind:"parameter",type:"string",description:"The emailAddress of the Google Service Account.",title:"Email Address",required:!1,deprecated:!1},p12FileName:{kind:"parameter",type:"string",description:"The name of the p12 file which has the private key to use with the Google Service Account.",title:"P12 File Name",required:!1,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",title:"Refresh Token",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:",title:"Service Account Key",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",description:"The email address of the user the application is trying to impersonate in the service account flow",title:"User",required:!1,deprecated:!1}}},"google-calendar-stream":{type:"object",title:"Google Calendar Stream",group:"cloud",icon:"generic24.png",description:"Poll for changes in a Google Calendar.",properties:{index:{kind:"path",type:"string",description:"Specifies an index for the endpoint",title:"Index",required:!0,deprecated:!1},applicationName:{kind:"parameter",type:"string",description:"Google Calendar application name. Example would be camel-google-calendar/1.0",title:"Application Name",required:!1,deprecated:!1},calendarId:{kind:"parameter",type:"string",defaultValue:"primary",description:"The calendarId to be used",title:"Calendar Id",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID of the calendar application",title:"Client Id",required:!1,deprecated:!1},considerLastUpdate:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Take into account the lastUpdate of the last event polled as start date for the next poll",title:"Consider Last Update",required:!1,deprecated:!1},consumeFromNow:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Consume events in the selected calendar from now on",title:"Consume From Now",required:!1,deprecated:!1},delegate:{kind:"parameter",type:"string",description:"Delegate for wide-domain service account",title:"Delegate",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"integer",defaultValue:"10",description:"Max results to be returned",title:"Max Results",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"The query to execute on calendar",title:"Query",required:!1,deprecated:!1},scopes:{kind:"parameter",type:"array",description:"Specifies the level of permissions you want a calendar application to have to a user account. See https://developers.google.com/calendar/auth for more info.",title:"Scopes",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},syncFlow:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sync events, see https://developers.google.com/calendar/v3/sync Note: not compatible with: 'query' and 'considerLastUpdate' parameters",title:"Sync Flow",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",title:"Access Token",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client secret of the calendar application",title:"Client Secret",required:!1,deprecated:!1},emailAddress:{kind:"parameter",type:"string",description:"The emailAddress of the Google Service Account.",title:"Email Address",required:!1,deprecated:!1},p12FileName:{kind:"parameter",type:"string",description:"The name of the p12 file which has the private key to use with the Google Service Account.",title:"P12 File Name",required:!1,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",title:"Refresh Token",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:",title:"Service Account Key",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",description:"The email address of the user the application is trying to impersonate in the service account flow.",title:"User",required:!1,deprecated:!1}}},"google-drive":{type:"object",title:"Google Drive",group:"file,cloud,api",icon:"generic24.png",description:"Manage files in Google Drive.",properties:{apiName:{kind:"path",type:"object",enum:["DRIVE_ABOUT","DRIVE_CHANGES","DRIVE_CHANNELS","DRIVE_COMMENTS","DRIVE_DRIVES","DRIVE_FILES","DRIVE_PERMISSIONS","DRIVE_REPLIES","DRIVE_REVISIONS","DRIVE_TEAMDRIVES"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",enum:["copy","delete","get","getIdForEmail","insert","list","patch","stop","touch","trash","untrash","update","watch"],description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},applicationName:{kind:"parameter",type:"string",description:"Google drive application name. Example would be camel-google-drive/1.0",title:"Application Name",required:!1,deprecated:!1},clientFactory:{kind:"parameter",type:"object",description:"To use the GoogleCalendarClientFactory as factory for creating the client. Will by default use BatchGoogleDriveClientFactory",title:"Client Factory",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID of the drive application",title:"Client Id",required:!1,deprecated:!1},delegate:{kind:"parameter",type:"string",description:"Delegate for wide-domain service account",title:"Delegate",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},scopes:{kind:"parameter",type:"array",description:"Specifies the level of permissions you want a drive application to have to a user account. See https://developers.google.com/drive/web/scopes for more info.",title:"Scopes",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",title:"Access Token",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client secret of the drive application",title:"Client Secret",required:!1,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",title:"Refresh Token",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:",title:"Service Account Key",required:!1,deprecated:!1}}},"google-functions":{type:"object",title:"Google Cloud Functions",group:"cloud",icon:"generic24.png",description:"Manage and invoke Google Cloud Functions",properties:{functionName:{kind:"path",type:"string",description:"The user-defined name of the function",title:"Function Name",required:!0,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key to authenticate an application as a service account",title:"Service Account Key",required:!1,deprecated:!1},location:{kind:"parameter",type:"string",description:"The Google Cloud Location (Region) where the Function is located",title:"Location",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["listFunctions","getFunction","callFunction","generateDownloadUrl","generateUploadUrl","createFunction","updateFunction","deleteFunction"],description:"The operation to perform on the producer.",title:"Operation",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies if the request is a pojo request",title:"Pojo Request",required:!1,deprecated:!1},project:{kind:"parameter",type:"string",description:"The Google Cloud Project name where the Function is located",title:"Project",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"The client to use during service invocation.",title:"Client",required:!1,deprecated:!1}}},"google-mail":{type:"object",title:"Google Mail",group:"cloud,api,mail",icon:"generic24.png",description:"Manage messages in Google Mail.",properties:{apiName:{kind:"path",type:"object",enum:["THREADS","MESSAGES","ATTACHMENTS","LABELS","HISTORY","DRAFTS","USERS"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",enum:["attachments","create","delete","get","getProfile","gmailImport","insert","list","modify","patch","send","stop","trash","untrash","update","watch"],description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},applicationName:{kind:"parameter",type:"string",description:"Google mail application name. Example would be camel-google-mail/1.0",title:"Application Name",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID of the mail application",title:"Client Id",required:!1,deprecated:!1},delegate:{kind:"parameter",type:"string",description:"Delegate for wide-domain service account",title:"Delegate",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},scopes:{kind:"parameter",type:"array",description:"GMail scopes",title:"Scopes",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",title:"Access Token",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client secret of the mail application",title:"Client Secret",required:!1,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",title:"Refresh Token",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:",title:"Service Account Key",required:!1,deprecated:!1}}},"google-mail-stream":{type:"object",title:"Google Mail Stream",group:"cloud,mail",icon:"generic24.png",description:"Poll for incoming messages in Google Mail.",properties:{index:{kind:"path",type:"string",description:"Currently not in use",title:"Index",required:!0,deprecated:!1},applicationName:{kind:"parameter",type:"string",description:"Google mail application name. Example would be camel-google-mail/1.0",title:"Application Name",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID of the mail application",title:"Client Id",required:!1,deprecated:!1},delegate:{kind:"parameter",type:"string",description:"Delegate for wide-domain service account",title:"Delegate",required:!1,deprecated:!1},labels:{kind:"parameter",type:"string",description:"Comma separated list of labels to take into account",title:"Labels",required:!1,deprecated:!1},markAsRead:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Mark the message as read once it has been consumed",title:"Mark As Read",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"integer",defaultValue:"10",description:"Max results to be returned",title:"Max Results",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",defaultValue:"is:unread",description:"The query to execute on gmail box",title:"Query",required:!1,deprecated:!1},raw:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to store the entire email message in an RFC 2822 formatted and base64url encoded string (in JSon format), in the Camel message body.",title:"Raw",required:!1,deprecated:!1},scopes:{kind:"parameter",type:"array",description:"GMail scopes",title:"Scopes",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",title:"Access Token",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client secret of the mail application",title:"Client Secret",required:!1,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",title:"Refresh Token",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Sets .json file with credentials for Service account",title:"Service Account Key",required:!1,deprecated:!1}}},"google-pubsub":{type:"object",title:"Google Pubsub",group:"cloud,messaging",icon:"generic24.png",description:"Send and receive messages to/from Google Cloud Platform PubSub Service.",properties:{projectId:{kind:"path",type:"string",description:"The Google Cloud PubSub Project Id",title:"Project Id",required:!0,deprecated:!1},destinationName:{kind:"path",type:"string",description:"The Destination Name. For the consumer this will be the subscription name, while for the producer this will be the topic name.",title:"Destination Name",required:!0,deprecated:!1},authenticate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Use Credentials when interacting with PubSub service (no authentication is required when using emulator).",title:"Authenticate",required:!1,deprecated:!1},loggerId:{kind:"parameter",type:"string",description:"Logger ID to use when a match to the parent route required",title:"Logger Id",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"The Service account key that can be used as credentials for the PubSub publisher/subscriber. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Service Account Key",required:!1,deprecated:!1},ackMode:{kind:"parameter",type:"object",defaultValue:"AUTO",enum:["AUTO","NONE"],description:"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly",title:"Ack Mode",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of parallel streams consuming from the subscription",title:"Concurrent Consumers",required:!1,deprecated:!1},maxAckExtensionPeriod:{kind:"parameter",type:"integer",defaultValue:"3600",description:"Set the maximum period a message ack deadline will be extended. Value in seconds",title:"Max Ack Extension Period",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",defaultValue:"1",description:"The max number of messages to receive from the server in a single API call",title:"Max Messages Per Poll",required:!1,deprecated:!1},synchronousPull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Synchronously pull batches of messages",title:"Synchronous Pull",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},messageOrderingEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should message ordering be enabled",title:"Message Ordering Enabled",required:!1,deprecated:!1},pubsubEndpoint:{kind:"parameter",type:"string",description:"Pub/Sub endpoint to use. Required when using message ordering, and ensures that messages are received in order even when multiple publishers are used",title:"Pubsub Endpoint",required:!1,deprecated:!1},serializer:{kind:"parameter",type:"object",description:"A custom GooglePubsubSerializer to use for serializing message payloads in the producer",title:"Serializer",required:!1,deprecated:!1}}},"google-secret-manager":{type:"object",title:"Google Secret Manager",group:"cloud",icon:"generic24.png",description:"Manage Google Secret Manager Secrets",properties:{project:{kind:"path",type:"string",description:"The Google Cloud Project Id name related to the Secret Manager",title:"Project",required:!0,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Service account key to authenticate an application as a service account",title:"Service Account Key",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["createSecret"],description:"The operation to perform on the producer.",title:"Operation",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies if the request is a pojo request",title:"Pojo Request",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"The client to use during service invocation.",title:"Client",required:!1,deprecated:!1}}},"google-sheets":{type:"object",title:"Google Sheets",group:"cloud,document",icon:"generic24.png",description:"Manage spreadsheets in Google Sheets.",properties:{apiName:{kind:"path",type:"object",enum:["SPREADSHEETS","DATA"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",enum:["create","get","update","append","batchUpdate","clear"],description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},applicationName:{kind:"parameter",type:"string",description:"Google Sheets application name. Example would be camel-google-sheets/1.0",title:"Application Name",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID of the sheets application",title:"Client Id",required:!1,deprecated:!1},delegate:{kind:"parameter",type:"string",description:"Delegate for wide-domain service account",title:"Delegate",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},scopes:{kind:"parameter",type:"array",description:"Specifies the level of permissions you want a sheets application to have to a user account. See https://developers.google.com/identity/protocols/googlescopes for more info.",title:"Scopes",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},splitResult:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When consumer return an array or collection this will generate one exchange per element, and their routes will be executed once for each exchange. Set this value to false to use a single exchange for the entire list or array.",title:"Split Result",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",title:"Access Token",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client secret of the sheets application",title:"Client Secret",required:!1,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"OAuth 2 refresh token. Using this, the Google Sheets component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",title:"Refresh Token",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Sets .json file with credentials for Service account",title:"Service Account Key",required:!1,deprecated:!1}}},"google-sheets-stream":{type:"object",title:"Google Sheets Stream",group:"cloud,document",icon:"generic24.png",description:"Poll for changes in Google Sheets.",properties:{spreadsheetId:{kind:"path",type:"string",description:"Specifies the spreadsheet identifier that is used to identify the target to obtain.",title:"Spreadsheet Id",required:!0,deprecated:!1},applicationName:{kind:"parameter",type:"string",description:"Google Sheets application name. Example would be camel-google-sheets/1.0",title:"Application Name",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Client ID of the sheets application",title:"Client Id",required:!1,deprecated:!1},delegate:{kind:"parameter",type:"string",description:"Delegate for wide-domain service account",title:"Delegate",required:!1,deprecated:!1},includeGridData:{kind:"parameter",type:"boolean",defaultValue:"false",description:"True if grid data should be returned.",title:"Include Grid Data",required:!1,deprecated:!1},majorDimension:{kind:"parameter",type:"string",defaultValue:"ROWS",enum:["ROWS","COLUMNS","DIMENSION_UNSPECIFIED"],description:"Specifies the major dimension that results should use..",title:"Major Dimension",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"integer",description:"Specify the maximum number of returned results. This will limit the number of rows in a returned value range data set or the number of returned value ranges in a batch request.",title:"Max Results",required:!1,deprecated:!1},range:{kind:"parameter",type:"string",description:"Specifies the range of rows and columns in a sheet to get data from.",title:"Range",required:!1,deprecated:!1},scopes:{kind:"parameter",type:"array",description:"Specifies the level of permissions you want a sheets application to have to a user account. See https://developers.google.com/identity/protocols/googlescopes for more info.",title:"Scopes",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},splitResults:{kind:"parameter",type:"boolean",defaultValue:"false",description:"True if value range result should be split into rows or columns to process each of them individually. When true each row or column is represented with a separate exchange in batch processing. Otherwise value range object is used as exchange junk size.",title:"Split Results",required:!1,deprecated:!1},valueRenderOption:{kind:"parameter",type:"string",defaultValue:"FORMATTED_VALUE",enum:["FORMATTED_VALUE","UNFORMATTED_VALUE","FORMULA"],description:"Determines how values should be rendered in the output.",title:"Value Render Option",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.",title:"Access Token",required:!1,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Client secret of the sheets application",title:"Client Secret",required:!1,deprecated:!1},refreshToken:{kind:"parameter",type:"string",description:"OAuth 2 refresh token. Using this, the Google Sheets component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.",title:"Refresh Token",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"Sets .json file with credentials for Service account",title:"Service Account Key",required:!1,deprecated:!1}}},"google-storage":{type:"object",title:"Google Storage",group:"cloud",icon:"generic24.png",description:"Store and retrieve objects from Google Cloud Storage Service using the google-cloud-storage library.",properties:{bucketName:{kind:"path",type:"string",description:"Bucket name or ARN",title:"Bucket Name",required:!0,deprecated:!1},autoCreateBucket:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting the autocreation of the bucket bucketName.",title:"Auto Create Bucket",required:!1,deprecated:!1},serviceAccountKey:{kind:"parameter",type:"string",description:"The Service account key that can be used as credentials for the Storage client. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Service Account Key",required:!1,deprecated:!1},storageClass:{kind:"parameter",type:"object",defaultValue:"STANDARD",description:"The Cloud Storage class to use when creating the new buckets",title:"Storage Class",required:!1,deprecated:!1},storageClient:{kind:"parameter",type:"object",description:"The storage client",title:"Storage Client",required:!1,deprecated:!1},storageLocation:{kind:"parameter",type:"string",defaultValue:"US-EAST1",description:"The Cloud Storage location to use when creating the new buckets",title:"Storage Location",required:!1,deprecated:!1},deleteAfterRead:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Delete objects from the bucket after they have been retrieved. The delete is only performed if the Exchange is committed. If a rollback occurs, the object is not deleted. If this option is false, then the same objects will be retrieve over and over again on the polls.",title:"Delete After Read",required:!1,deprecated:!1},destinationBucket:{kind:"parameter",type:"string",description:"Define the destination bucket where an object must be moved when moveAfterRead is set to true.",title:"Destination Bucket",required:!1,deprecated:!1},downloadFileName:{kind:"parameter",type:"string",description:"The folder or filename to use when downloading the blob. By default, this specifies the folder name, and the name of the file is the blob name. For example, setting this to mydownload will be the same as setting mydownload/${file:name}. You can use dynamic expressions for fine-grained control. For example, you can specify ${date:now:yyyyMMdd}/${file:name} to store the blob in sub folders based on today's day. Only ${file:name} and ${file:name.noext} is supported as dynamic tokens for the blob name.",title:"Download File Name",required:!1,deprecated:!1},filter:{kind:"parameter",type:"string",description:"A regular expression to include only blobs with name matching it.",title:"Filter",required:!1,deprecated:!1},includeBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If it is true, the Object exchange will be consumed and put into the body. If false the Object stream will be put raw into the body and the headers will be set with the object metadata.",title:"Include Body",required:!1,deprecated:!1},includeFolders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If it is true, the folders/directories will be consumed. If it is false, they will be ignored, and Exchanges will not be created for those",title:"Include Folders",required:!1,deprecated:!1},moveAfterRead:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Move objects from the origin bucket to a different bucket after they have been retrieved. To accomplish the operation the destinationBucket option must be set. The copy bucket operation is only performed if the Exchange is committed. If a rollback occurs, the object is not moved.",title:"Move After Read",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},objectName:{kind:"parameter",type:"string",description:"The Object name inside the bucket",title:"Object Name",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["copyObject","listObjects","deleteObject","deleteBucket","listBuckets","getObject","createDownloadLink"],description:"Set the operation for the producer",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},grape:{type:"object",title:"Grape",group:"management",icon:"generic24.png",description:"Fetch, load and manage additional jars dynamically after Camel Context was started.",properties:{defaultCoordinates:{kind:"path",type:"string",description:"Maven coordinates to use as default to grab if the message body is empty.",title:"Default Coordinates",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},graphql:{type:"object",title:"GraphQL",group:"api",icon:"generic24.png",description:"Send GraphQL queries and mutations to external systems.",properties:{httpUri:{kind:"path",type:"string",description:"The GraphQL server URI.",title:"Http Uri",required:!0,deprecated:!1},operationName:{kind:"parameter",type:"string",description:"The query or mutation name.",title:"Operation Name",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"The proxy host in the format hostname:port.",title:"Proxy Host",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"The query text.",title:"Query",required:!1,deprecated:!1},queryFile:{kind:"parameter",type:"string",description:"The query file name located in the classpath.",title:"Query File",required:!1,deprecated:!1},queryHeader:{kind:"parameter",type:"string",description:"The name of a header containing the GraphQL query.",title:"Query Header",required:!1,deprecated:!1},variables:{kind:"parameter",type:"object",description:"The JsonObject instance containing the operation variables.",title:"Variables",required:!1,deprecated:!1},variablesHeader:{kind:"parameter",type:"string",description:"The name of a header containing a JsonObject instance containing the operation variables.",title:"Variables Header",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"The access token sent in the Authorization header.",title:"Access Token",required:!1,deprecated:!1},jwtAuthorizationType:{kind:"parameter",type:"string",defaultValue:"Bearer",description:"The JWT Authorization type. Default is Bearer.",title:"Jwt Authorization Type",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for Basic authentication.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username for Basic authentication.",title:"Username",required:!1,deprecated:!1}}},grpc:{type:"object",title:"gRPC",group:"rpc",icon:"generic24.png",description:"Expose gRPC endpoints and access external gRPC endpoints.",properties:{host:{kind:"path",type:"string",description:"The gRPC server host name. This is localhost or 0.0.0.0 when being a consumer or remote server host name when using producer.",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The gRPC local or remote server port",title:"Port",required:!0,deprecated:!1},service:{kind:"path",type:"string",description:"Fully qualified service name from the protocol buffer descriptor file (package dot service definition name)",title:"Service",required:!0,deprecated:!1},flowControlWindow:{kind:"parameter",type:"integer",defaultValue:"1048576",description:"The HTTP/2 flow control window size (MiB)",title:"Flow Control Window",required:!1,deprecated:!1},maxMessageSize:{kind:"parameter",type:"integer",defaultValue:"4194304",description:"The maximum message size allowed to be received/sent (MiB)",title:"Max Message Size",required:!1,deprecated:!1},autoDiscoverServerInterceptors:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting the autoDiscoverServerInterceptors mechanism, if true, the component will look for a ServerInterceptor instance in the registry automatically otherwise it will skip that checking.",title:"Auto Discover Server Interceptors",required:!1,deprecated:!1},consumerStrategy:{kind:"parameter",type:"object",defaultValue:"PROPAGATION",enum:["AGGREGATION","PROPAGATION"],description:"This option specifies the top-level strategy for processing service requests and responses in streaming mode. If an aggregation strategy is selected, all requests will be accumulated in the list, then transferred to the flow, and the accumulated responses will be sent to the sender. If a propagation strategy is selected, request is sent to the stream, and the response will be immediately sent back to the sender.",title:"Consumer Strategy",required:!1,deprecated:!1},forwardOnCompleted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines if onCompleted events should be pushed to the Camel route.",title:"Forward On Completed",required:!1,deprecated:!1},forwardOnError:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines if onError events should be pushed to the Camel route. Exceptions will be set as message body.",title:"Forward On Error",required:!1,deprecated:!1},maxConcurrentCallsPerConnection:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"The maximum number of concurrent calls permitted for each incoming server connection",title:"Max Concurrent Calls Per Connection",required:!1,deprecated:!1},routeControlledStreamObserver:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Lets the route to take control over stream observer. If this value is set to true, then the response observer of gRPC call will be set with the name GrpcConstants.GRPC_RESPONSE_OBSERVER in the Exchange object. Please note that the stream observer's onNext(), onError(), onCompleted() methods should be called in the route.",title:"Route Controlled Stream Observer",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},autoDiscoverClientInterceptors:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting the autoDiscoverClientInterceptors mechanism, if true, the component will look for a ClientInterceptor instance in the registry automatically otherwise it will skip that checking.",title:"Auto Discover Client Interceptors",required:!1,deprecated:!1},method:{kind:"parameter",type:"string",description:"gRPC method name",title:"Method",required:!1,deprecated:!1},producerStrategy:{kind:"parameter",type:"object",defaultValue:"SIMPLE",enum:["SIMPLE","STREAMING"],description:"The mode used to communicate with a remote gRPC server. In SIMPLE mode a single exchange is translated into a remote procedure call. In STREAMING mode all exchanges will be sent within the same request (input and output of the recipient gRPC service must be of type 'stream').",title:"Producer Strategy",required:!1,deprecated:!1},streamRepliesTo:{kind:"parameter",type:"string",description:"When using STREAMING client mode, it indicates the endpoint where responses should be forwarded.",title:"Stream Replies To",required:!1,deprecated:!1},userAgent:{kind:"parameter",type:"string",description:"The user agent header passed to the server",title:"User Agent",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},authenticationType:{kind:"parameter",type:"object",defaultValue:"NONE",enum:["NONE","GOOGLE","JWT"],description:"Authentication method type in advance to the SSL/TLS negotiation",title:"Authentication Type",required:!1,deprecated:!1},jwtAlgorithm:{kind:"parameter",type:"object",defaultValue:"HMAC256",enum:["HMAC256","HMAC384","HMAC512"],description:"JSON Web Token sign algorithm",title:"Jwt Algorithm",required:!1,deprecated:!1},jwtIssuer:{kind:"parameter",type:"string",description:"JSON Web Token issuer",title:"Jwt Issuer",required:!1,deprecated:!1},jwtSecret:{kind:"parameter",type:"string",description:"JSON Web Token secret",title:"Jwt Secret",required:!1,deprecated:!1},jwtSubject:{kind:"parameter",type:"string",description:"JSON Web Token subject",title:"Jwt Subject",required:!1,deprecated:!1},keyCertChainResource:{kind:"parameter",type:"string",description:"The X.509 certificate chain file resource in PEM format link",title:"Key Cert Chain Resource",required:!1,deprecated:!1},keyPassword:{kind:"parameter",type:"string",description:"The PKCS#8 private key file password",title:"Key Password",required:!1,deprecated:!1},keyResource:{kind:"parameter",type:"string",description:"The PKCS#8 private key file resource in PEM format link",title:"Key Resource",required:!1,deprecated:!1},negotiationType:{kind:"parameter",type:"object",defaultValue:"PLAINTEXT",enum:["TLS","PLAINTEXT_UPGRADE","PLAINTEXT"],description:"Identifies the security negotiation type used for HTTP/2 communication",title:"Negotiation Type",required:!1,deprecated:!1},serviceAccountResource:{kind:"parameter",type:"string",description:"Service Account key file in JSON format resource link supported by the Google Cloud SDK",title:"Service Account Resource",required:!1,deprecated:!1},trustCertCollectionResource:{kind:"parameter",type:"string",description:"The trusted certificates collection file resource in PEM format for verifying the remote endpoint's certificate",title:"Trust Cert Collection Resource",required:!1,deprecated:!1}}},"guava-eventbus":{type:"object",title:"Guava EventBus",group:"messaging",icon:"generic24.png",description:"Send and receive messages to/from Guava EventBus.",properties:{eventBusRef:{kind:"path",type:"string",description:"To lookup the Guava EventBus from the registry with the given name",title:"Event Bus Ref",required:!1,deprecated:!1},eventClass:{kind:"parameter",type:"string",description:"If used on the consumer side of the route, will filter events received from the EventBus to the instances of the class and superclasses of eventClass. Null value of this option is equal to setting it to the java.lang.Object i.e. the consumer will capture all messages incoming to the event bus. This option cannot be used together with listenerInterface option.",title:"Event Class",required:!1,deprecated:!1},listenerInterface:{kind:"parameter",type:"string",description:"The interface with method(s) marked with the Subscribe annotation. Dynamic proxy will be created over the interface so it could be registered as the EventBus listener. Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.",title:"Listener Interface",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hashicorp-vault":{type:"object",title:"Hashicorp Vault",group:"cloud,cloud",icon:"generic24.png",description:"Manage secrets in Hashicorp Vault Service",properties:{secretsEngine:{kind:"path",type:"string",description:"Vault Name to be used",title:"Secrets Engine",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",description:"Hashicorp Vault instance host to be used",title:"Host",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["createSecret","getSecret","deleteSecret","listSecrets"],description:"Operation to be performed",title:"Operation",required:!1,deprecated:!1},port:{kind:"parameter",type:"string",defaultValue:"8200",description:"Hashicorp Vault instance port to be used",title:"Port",required:!1,deprecated:!1},scheme:{kind:"parameter",type:"string",defaultValue:"https",description:"Hashicorp Vault instance scheme to be used",title:"Scheme",required:!1,deprecated:!1},secretPath:{kind:"parameter",type:"string",description:"Hashicorp Vault instance secret Path to be used",title:"Secret Path",required:!1,deprecated:!1},vaultTemplate:{kind:"parameter",type:"object",description:"Instance of Vault template",title:"Vault Template",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},token:{kind:"parameter",type:"string",description:"Token to be used",title:"Token",required:!1,deprecated:!1}}},"hazelcast-atomicvalue":{type:"object",title:"Hazelcast Atomic Number",group:"cache,clustering",icon:"generic24.png",description:"Increment, decrement, set, etc. Hazelcast atomic number (a grid wide number).",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-instance":{type:"object",title:"Hazelcast Instance",group:"cache,clustering",icon:"generic24.png",description:"Consume join/leave events of a cache instance in a Hazelcast cluster.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},"hazelcast-list":{type:"object",title:"Hazelcast List",group:"cache,clustering",icon:"generic24.png",description:"Perform operations on Hazelcast distributed list.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-map":{type:"object",title:"Hazelcast Map",group:"cache,clustering",icon:"generic24.png",description:"Perform operations on Hazelcast distributed map.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-multimap":{type:"object",title:"Hazelcast Multimap",group:"cache,clustering",icon:"generic24.png",description:"Perform operations on Hazelcast distributed multimap.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-queue":{type:"object",title:"Hazelcast Queue",group:"cache,clustering,messaging",icon:"generic24.png",description:"Perform operations on Hazelcast distributed queue.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},pollingTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Define the polling timeout of the Queue consumer in Poll mode",title:"Polling Timeout",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"Define the Pool size for Queue Consumer Executor",title:"Pool Size",required:!1,deprecated:!1},queueConsumerMode:{kind:"parameter",type:"object",defaultValue:"Listen",enum:["listen","poll"],description:"Define the Queue Consumer mode: Listen or Poll",title:"Queue Consumer Mode",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-replicatedmap":{type:"object",title:"Hazelcast Replicated Map",group:"cache,clustering",icon:"generic24.png",description:"Perform operations on Hazelcast replicated map.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-ringbuffer":{type:"object",title:"Hazelcast Ringbuffer",group:"cache,clustering",icon:"generic24.png",description:"Perform operations on Hazelcast distributed ringbuffer.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-seda":{type:"object",title:"Hazelcast SEDA",group:"cache,clustering",icon:"generic24.png",description:"Asynchronously send/receive Exchanges between Camel routes running on potentially distinct JVMs/hosts backed by Hazelcast BlockingQueue.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"To use concurrent consumers polling from the SEDA queue.",title:"Concurrent Consumers",required:!1,deprecated:!1},onErrorDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before consumer continues polling after an error has occurred.",title:"On Error Delay",required:!1,deprecated:!1},pollTimeout:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The timeout used when consuming from the SEDA queue. When a timeout occurs, the consumer can check whether it is allowed to continue running. Setting a lower value allows the consumer to react more quickly upon shutdown.",title:"Poll Timeout",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true then the consumer runs in transaction mode, where the messages in the seda queue will only be removed if the transaction commits, which happens when the processing is complete.",title:"Transacted",required:!1,deprecated:!1},transferExchange:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true the whole Exchange will be transfered. If header or body contains not serializable objects, they will be skipped.",title:"Transfer Exchange",required:!1,deprecated:!1}}},"hazelcast-set":{type:"object",title:"Hazelcast Set",group:"cache,clustering",icon:"generic24.png",description:"Perform operations on Hazelcast distributed set.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hazelcast-topic":{type:"object",title:"Hazelcast Topic",group:"cache,clustering",icon:"generic24.png",description:"Send and receive messages to/from Hazelcast distributed topic.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},defaultOperation:{kind:"parameter",type:"object",enum:["put","delete","get","update","query","getAll","clear","putIfAbsent","addAll","removeAll","retainAll","evict","evictAll","valueCount","containsKey","containsValue","getKeys","removeValue","increment","decrement","setValue","destroy","compareAndSet","getAndAdd","add","offer","peek","poll","remainingCapacity","drainTo","removeIf","take","publish","readOnceHead","readOnceTail","capacity"],description:"To specify a default operation to use, if no operation header has been provided.",title:"Default Operation",required:!1,deprecated:!1},hazelcastConfigUri:{kind:"parameter",type:"string",description:"Hazelcast configuration file.",title:"Hazelcast Config Uri",required:!1,deprecated:!1},hazelcastInstance:{kind:"parameter",type:"object",description:"The hazelcast instance reference which can be used for hazelcast endpoint.",title:"Hazelcast Instance",required:!1,deprecated:!1},hazelcastInstanceName:{kind:"parameter",type:"string",description:"The hazelcast instance reference name which can be used for hazelcast endpoint. If you don't specify the instance reference, camel use the default hazelcast instance from the camel-hazelcast instance.",title:"Hazelcast Instance Name",required:!1,deprecated:!1},reliable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if the endpoint will use a reliable Topic struct or not.",title:"Reliable",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},hdfs:{type:"object",title:"HDFS",group:"bigdata,file",icon:"generic24.png",description:"Read and write from/to an HDFS filesystem using Hadoop 2.x.",properties:{hostName:{kind:"path",type:"string",description:"HDFS host to use",title:"Host Name",required:!0,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"8020",description:"HDFS port to use",title:"Port",required:!1,deprecated:!1},path:{kind:"path",type:"string",description:"The directory path to use",title:"Path",required:!0,deprecated:!1},connectOnStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to connect to the HDFS file system on starting the producer/consumer. If false then the connection is created on-demand. Notice that HDFS may take up till 15 minutes to establish a connection, as it has hardcoded 45 x 20 sec redelivery. By setting this option to false allows your application to startup, and not block for up till 15 minutes.",title:"Connect On Startup",required:!1,deprecated:!1},fileSystemType:{kind:"parameter",type:"object",defaultValue:"HDFS",enum:["LOCAL","HDFS"],description:"Set to LOCAL to not use HDFS but local java.io.File instead.",title:"File System Type",required:!1,deprecated:!1},fileType:{kind:"parameter",type:"object",defaultValue:"NORMAL_FILE",enum:["NORMAL_FILE","SEQUENCE_FILE","MAP_FILE","BLOOMMAP_FILE","ARRAY_FILE"],description:"The file type to use. For more details see Hadoop HDFS documentation about the various files types.",title:"File Type",required:!1,deprecated:!1},keyType:{kind:"parameter",type:"object",defaultValue:"NULL",enum:["NULL","BOOLEAN","BYTE","SHORT","INT","FLOAT","LONG","DOUBLE","TEXT","BYTES"],description:"The type for the key in case of sequence or map files.",title:"Key Type",required:!1,deprecated:!1},namedNodes:{kind:"parameter",type:"string",description:"A comma separated list of named nodes (e.g. srv11.example.com:8020,srv12.example.com:8020)",title:"Named Nodes",required:!1,deprecated:!1},owner:{kind:"parameter",type:"string",description:"The file owner must match this owner for the consumer to pickup the file. Otherwise the file is skipped.",title:"Owner",required:!1,deprecated:!1},valueType:{kind:"parameter",type:"object",defaultValue:"BYTES",enum:["NULL","BOOLEAN","BYTE","SHORT","INT","FLOAT","LONG","DOUBLE","TEXT","BYTES"],description:"The type for the key in case of sequence or map files",title:"Value Type",required:!1,deprecated:!1},pattern:{kind:"parameter",type:"string",defaultValue:"*",description:"The pattern used for scanning the directory",title:"Pattern",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},streamDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the download method to use when not using a local working directory. If set to true, the remote files are streamed to the route as they are read. When set to false, the remote files are loaded into memory before being sent into the route.",title:"Stream Download",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},append:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Append to existing file. Notice that not all HDFS file systems support the append option.",title:"Append",required:!1,deprecated:!1},overwrite:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to overwrite existing files with the same name",title:"Overwrite",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},blockSize:{kind:"parameter",type:"integer",defaultValue:"67108864",description:"The size of the HDFS blocks",title:"Block Size",required:!1,deprecated:!1},bufferSize:{kind:"parameter",type:"integer",defaultValue:"4096",description:"The buffer size used by HDFS",title:"Buffer Size",required:!1,deprecated:!1},checkIdleInterval:{kind:"parameter",type:"integer",defaultValue:"500",description:"How often (time in millis) in to run the idle checker background task. This option is only in use if the splitter strategy is IDLE.",title:"Check Idle Interval",required:!1,deprecated:!1},chunkSize:{kind:"parameter",type:"integer",defaultValue:"4096",description:"When reading a normal file, this is split into chunks producing a message per chunk.",title:"Chunk Size",required:!1,deprecated:!1},compressionCodec:{kind:"parameter",type:"object",defaultValue:"DEFAULT",enum:["DEFAULT","GZIP","BZIP2","SNAPPY","LZ4","ZSTANDARD"],description:"The compression codec to use",title:"Compression Codec",required:!1,deprecated:!1},compressionType:{kind:"parameter",type:"object",defaultValue:"NONE",enum:["NONE","RECORD","BLOCK"],description:"The compression type to use (is default not in use)",title:"Compression Type",required:!1,deprecated:!1},openedSuffix:{kind:"parameter",type:"string",defaultValue:"opened",description:"When a file is opened for reading/writing the file is renamed with this suffix to avoid to read it during the writing phase.",title:"Opened Suffix",required:!1,deprecated:!1},readSuffix:{kind:"parameter",type:"string",defaultValue:"read",description:"Once the file has been read is renamed with this suffix to avoid to read it again.",title:"Read Suffix",required:!1,deprecated:!1},replication:{kind:"parameter",type:"integer",defaultValue:"3",description:"The HDFS replication factor",title:"Replication",required:!1,deprecated:!1},splitStrategy:{kind:"parameter",type:"string",description:"In the current version of Hadoop opening a file in append mode is disabled since it's not very reliable. So, for the moment, it's only possible to create new files. The Camel HDFS endpoint tries to solve this problem in this way: If the split strategy option has been defined, the hdfs path will be used as a directory and files will be created using the configured UuidGenerator. Every time a splitting condition is met, a new file is created. The splitStrategy option is defined as a string with the following syntax: splitStrategy=ST:value,ST:value,... where ST can be: BYTES a new file is created, and the old is closed when the number of written bytes is more than value MESSAGES a new file is created, and the old is closed when the number of written messages is more than value IDLE a new file is created, and the old is closed when no writing happened in the last value milliseconds",title:"Split Strategy",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",defaultValue:"100",description:"To define a maximum messages to gather per poll. By default a limit of 100 is set. Can be used to set a limit of e.g. 1000 to avoid when starting up the server that there are thousands of files. Values can only be greater than 0. Notice: If this option is in use then the limit will be applied on the valid files. For example if you have 100000 files and use maxMessagesPerPoll=500, then only the first 500 files will be picked up.",title:"Max Messages Per Poll",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},kerberosConfigFileLocation:{kind:"parameter",type:"string",description:"The location of the kerb5.conf file (https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html)",title:"Kerberos Config File Location",required:!1,deprecated:!1},kerberosKeytabLocation:{kind:"parameter",type:"string",description:"The location of the keytab file used to authenticate with the kerberos nodes (contains pairs of kerberos principals and encrypted keys (which are derived from the Kerberos password))",title:"Kerberos Keytab Location",required:!1,deprecated:!1},kerberosUsername:{kind:"parameter",type:"string",description:"The username used to authenticate with the kerberos nodes",title:"Kerberos Username",required:!1,deprecated:!1}}},http:{type:"object",title:"HTTP",group:"http",icon:"generic24.png",description:"Send requests to external HTTP servers using Apache HTTP Client 5.x.",properties:{httpUri:{kind:"path",type:"string",description:"The url of the HTTP endpoint to call.",title:"Http Uri",required:!0,deprecated:!1},disableStreamCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether or not the raw input stream from Servlet is cached or not (Camel will read the stream into a in memory/overflow to file, Stream caching) cache. By default Camel will cache the Servlet input stream to support reading it multiple times to ensure it Camel can retrieve all data from the stream. However you can set this option to true when you for example need to access the raw stream, such as streaming it directly to a file or other persistent store. DefaultHttpBinding will copy the request input stream into a stream cache and put it into message body if this option is false to support reading the stream multiple times. If you use Servlet to bridge/proxy an endpoint then consider enabling this option to improve performance, in case you do not need to read the message payload multiple times. The http producer will by default cache the response body stream. If setting this option to true, then the producers will not cache the response body stream but use the response stream as-is as the message body.",title:"Disable Stream Cache",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},bridgeEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request. You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.",title:"Bridge Endpoint",required:!1,deprecated:!1},connectionClose:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether a Connection Close header must be added to HTTP Request. By default connectionClose is false.",title:"Connection Close",required:!1,deprecated:!1},followRedirects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to the HTTP request should follow redirects. By default the HTTP request does not follow redirects",title:"Follow Redirects",required:!1,deprecated:!1},httpMethod:{kind:"parameter",type:"object",enum:["GET","POST","PUT","DELETE","HEAD","OPTIONS","TRACE","PATCH"],description:"Configure the HTTP method to use. The HttpMethod header cannot override this option if set.",title:"Http Method",required:!1,deprecated:!1},throwExceptionOnFailure:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server. This allows you to get all responses regardless of the HTTP status code.",title:"Throw Exception On Failure",required:!1,deprecated:!1},clearExpiredCookies:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to clear expired cookies before sending the HTTP request. This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired. If the component has disabled cookie management then this option is disabled too.",title:"Clear Expired Cookies",required:!1,deprecated:!1},cookieHandler:{kind:"parameter",type:"object",description:"Configure a cookie handler to maintain a HTTP session",title:"Cookie Handler",required:!1,deprecated:!1},cookieStore:{kind:"parameter",type:"object",description:"To use a custom CookieStore. By default the BasicCookieStore is used which is an in-memory only cookie store. Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie shouldn't be stored as we are just bridging (eg acting as a proxy). If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is then performed by the cookieHandler.",title:"Cookie Store",required:!1,deprecated:!1},copyHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange headers will be copied to OUT exchange headers according to copy strategy. Setting this to false, allows to only include the headers from the HTTP response (not propagating IN headers).",title:"Copy Headers",required:!1,deprecated:!1},customHostHeader:{kind:"parameter",type:"string",description:"To use custom host header for producer. When not set in query will be ignored. When set will override host header derived from url.",title:"Custom Host Header",required:!1,deprecated:!1},deleteWithBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the HTTP DELETE should include the message body or not. By default HTTP DELETE do not include any HTTP body. However in some rare cases users may need to be able to include the message body.",title:"Delete With Body",required:!1,deprecated:!1},getWithBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the HTTP GET should include the message body or not. By default HTTP GET do not include any HTTP body. However in some rare cases users may need to be able to include the message body.",title:"Get With Body",required:!1,deprecated:!1},ignoreResponseBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If this option is true, The http producer won't read response body and cache the input stream",title:"Ignore Response Body",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},okStatusCodeRange:{kind:"parameter",type:"string",defaultValue:"200-299",description:"The status codes which are considered a success response. The values are inclusive. Multiple ranges can be defined, separated by comma, e.g. 200-204,209,301-304. Each range must be a single number or from-to with the dash included.",title:"Ok Status Code Range",required:!1,deprecated:!1},preserveHostHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, HttpProducer will set the Host header to the value contained in the current exchange Host header, useful in reverse proxy applications where you want the Host header received by the downstream server to reflect the URL called by the upstream client, this allows applications which use the Host header to generate accurate URL's for a proxied service",title:"Preserve Host Header",required:!1,deprecated:!1},skipRequestHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to skip mapping all the Camel headers as HTTP request headers. If there are no data from Camel headers needed to be included in the HTTP request then this can avoid parsing overhead with many object allocations for the JVM garbage collector.",title:"Skip Request Headers",required:!1,deprecated:!1},skipResponseHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to skip mapping all the HTTP response headers to Camel headers. If there are no data needed from HTTP headers then this can avoid parsing overhead with many object allocations for the JVM garbage collector.",title:"Skip Response Headers",required:!1,deprecated:!1},userAgent:{kind:"parameter",type:"string",description:"To set a custom HTTP User-Agent request header",title:"User Agent",required:!1,deprecated:!1},clientBuilder:{kind:"parameter",type:"object",description:"Provide access to the http client request parameters used on new RequestConfig instances used by producers or consumers of this endpoint.",title:"Client Builder",required:!1,deprecated:!1},clientConnectionManager:{kind:"parameter",type:"object",description:"To use a custom HttpClientConnectionManager to manage connections",title:"Client Connection Manager",required:!1,deprecated:!1},connectionsPerRoute:{kind:"parameter",type:"integer",defaultValue:"20",description:"The maximum number of connections per route.",title:"Connections Per Route",required:!1,deprecated:!1},httpClient:{kind:"parameter",type:"object",description:"Sets a custom HttpClient to be used by the producer",title:"Http Client",required:!1,deprecated:!1},httpClientConfigurer:{kind:"parameter",type:"object",description:"Register a custom configuration strategy for new HttpClient instances created by producers or consumers such as to configure authentication mechanisms etc.",title:"Http Client Configurer",required:!1,deprecated:!1},httpClientOptions:{kind:"parameter",type:"object",description:"To configure the HttpClient using the key/values from the Map.",title:"Http Client Options",required:!1,deprecated:!1},httpConnectionOptions:{kind:"parameter",type:"object",description:"To configure the connection and the socket using the key/values from the Map.",title:"Http Connection Options",required:!1,deprecated:!1},httpContext:{kind:"parameter",type:"object",description:"To use a custom HttpContext instance",title:"Http Context",required:!1,deprecated:!1},maxTotalConnections:{kind:"parameter",type:"integer",defaultValue:"200",description:"The maximum number of connections.",title:"Max Total Connections",required:!1,deprecated:!1},useSystemProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To use System Properties as fallback for configuration",title:"Use System Properties",required:!1,deprecated:!1},proxyAuthDomain:{kind:"parameter",type:"string",description:"Proxy authentication domain to use with NTML",title:"Proxy Auth Domain",required:!1,deprecated:!1},proxyAuthHost:{kind:"parameter",type:"string",description:"Proxy authentication host",title:"Proxy Auth Host",required:!1,deprecated:!1},proxyAuthMethod:{kind:"parameter",type:"string",enum:["Basic","Digest","NTLM"],description:"Proxy authentication method to use",title:"Proxy Auth Method",required:!1,deprecated:!1},proxyAuthNtHost:{kind:"parameter",type:"string",description:"Proxy authentication domain (workstation name) to use with NTML",title:"Proxy Auth Nt Host",required:!1,deprecated:!1},proxyAuthPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy Auth Password",required:!1,deprecated:!1},proxyAuthPort:{kind:"parameter",type:"integer",description:"Proxy authentication port",title:"Proxy Auth Port",required:!1,deprecated:!1},proxyAuthScheme:{kind:"parameter",type:"string",enum:["http","https"],description:"Proxy authentication scheme to use",title:"Proxy Auth Scheme",required:!1,deprecated:!1},proxyAuthUsername:{kind:"parameter",type:"string",description:"Proxy authentication username",title:"Proxy Auth Username",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy hostname to use",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy port to use",title:"Proxy Port",required:!1,deprecated:!1},authDomain:{kind:"parameter",type:"string",description:"Authentication domain to use with NTML",title:"Auth Domain",required:!1,deprecated:!1},authenticationPreemptive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If this option is true, camel-http sends preemptive basic authentication to the server.",title:"Authentication Preemptive",required:!1,deprecated:!1},authHost:{kind:"parameter",type:"string",description:"Authentication host to use with NTML",title:"Auth Host",required:!1,deprecated:!1},authMethod:{kind:"parameter",type:"string",description:"Authentication methods allowed to use as a comma separated list of values Basic, Digest or NTLM.",title:"Auth Method",required:!1,deprecated:!1},authMethodPriority:{kind:"parameter",type:"string",enum:["Basic","Digest","NTLM"],description:"Which authentication method to prioritize to use, either as Basic, Digest or NTLM.",title:"Auth Method Priority",required:!1,deprecated:!1},authPassword:{kind:"parameter",type:"string",description:"Authentication password",title:"Auth Password",required:!1,deprecated:!1},authUsername:{kind:"parameter",type:"string",description:"Authentication username",title:"Auth Username",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters. Important: Only one instance of org.apache.camel.util.jsse.SSLContextParameters is supported per HttpComponent. If you need to use 2 or more different instances, you need to define a new HttpComponent per instance you need.",title:"Ssl Context Parameters",required:!1,deprecated:!1},x509HostnameVerifier:{kind:"parameter",type:"object",description:"To use a custom X509HostnameVerifier such as DefaultHostnameVerifier or NoopHostnameVerifier",title:"X509 Hostname Verifier",required:!1,deprecated:!1}}},https:{type:"object",title:"HTTPS (Secure)",group:"http",icon:"generic24.png",description:"Send requests to external HTTP servers using Apache HTTP Client 5.x.",properties:{httpUri:{kind:"path",type:"string",description:"The url of the HTTP endpoint to call.",title:"Http Uri",required:!0,deprecated:!1},disableStreamCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether or not the raw input stream from Servlet is cached or not (Camel will read the stream into a in memory/overflow to file, Stream caching) cache. By default Camel will cache the Servlet input stream to support reading it multiple times to ensure it Camel can retrieve all data from the stream. However you can set this option to true when you for example need to access the raw stream, such as streaming it directly to a file or other persistent store. DefaultHttpBinding will copy the request input stream into a stream cache and put it into message body if this option is false to support reading the stream multiple times. If you use Servlet to bridge/proxy an endpoint then consider enabling this option to improve performance, in case you do not need to read the message payload multiple times. The http producer will by default cache the response body stream. If setting this option to true, then the producers will not cache the response body stream but use the response stream as-is as the message body.",title:"Disable Stream Cache",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},bridgeEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request. You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.",title:"Bridge Endpoint",required:!1,deprecated:!1},connectionClose:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether a Connection Close header must be added to HTTP Request. By default connectionClose is false.",title:"Connection Close",required:!1,deprecated:!1},followRedirects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to the HTTP request should follow redirects. By default the HTTP request does not follow redirects",title:"Follow Redirects",required:!1,deprecated:!1},httpMethod:{kind:"parameter",type:"object",enum:["GET","POST","PUT","DELETE","HEAD","OPTIONS","TRACE","PATCH"],description:"Configure the HTTP method to use. The HttpMethod header cannot override this option if set.",title:"Http Method",required:!1,deprecated:!1},throwExceptionOnFailure:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server. This allows you to get all responses regardless of the HTTP status code.",title:"Throw Exception On Failure",required:!1,deprecated:!1},clearExpiredCookies:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to clear expired cookies before sending the HTTP request. This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired. If the component has disabled cookie management then this option is disabled too.",title:"Clear Expired Cookies",required:!1,deprecated:!1},cookieHandler:{kind:"parameter",type:"object",description:"Configure a cookie handler to maintain a HTTP session",title:"Cookie Handler",required:!1,deprecated:!1},cookieStore:{kind:"parameter",type:"object",description:"To use a custom CookieStore. By default the BasicCookieStore is used which is an in-memory only cookie store. Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie shouldn't be stored as we are just bridging (eg acting as a proxy). If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is then performed by the cookieHandler.",title:"Cookie Store",required:!1,deprecated:!1},copyHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange headers will be copied to OUT exchange headers according to copy strategy. Setting this to false, allows to only include the headers from the HTTP response (not propagating IN headers).",title:"Copy Headers",required:!1,deprecated:!1},customHostHeader:{kind:"parameter",type:"string",description:"To use custom host header for producer. When not set in query will be ignored. When set will override host header derived from url.",title:"Custom Host Header",required:!1,deprecated:!1},deleteWithBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the HTTP DELETE should include the message body or not. By default HTTP DELETE do not include any HTTP body. However in some rare cases users may need to be able to include the message body.",title:"Delete With Body",required:!1,deprecated:!1},getWithBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the HTTP GET should include the message body or not. By default HTTP GET do not include any HTTP body. However in some rare cases users may need to be able to include the message body.",title:"Get With Body",required:!1,deprecated:!1},ignoreResponseBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If this option is true, The http producer won't read response body and cache the input stream",title:"Ignore Response Body",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},okStatusCodeRange:{kind:"parameter",type:"string",defaultValue:"200-299",description:"The status codes which are considered a success response. The values are inclusive. Multiple ranges can be defined, separated by comma, e.g. 200-204,209,301-304. Each range must be a single number or from-to with the dash included.",title:"Ok Status Code Range",required:!1,deprecated:!1},preserveHostHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, HttpProducer will set the Host header to the value contained in the current exchange Host header, useful in reverse proxy applications where you want the Host header received by the downstream server to reflect the URL called by the upstream client, this allows applications which use the Host header to generate accurate URL's for a proxied service",title:"Preserve Host Header",required:!1,deprecated:!1},skipRequestHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to skip mapping all the Camel headers as HTTP request headers. If there are no data from Camel headers needed to be included in the HTTP request then this can avoid parsing overhead with many object allocations for the JVM garbage collector.",title:"Skip Request Headers",required:!1,deprecated:!1},skipResponseHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to skip mapping all the HTTP response headers to Camel headers. If there are no data needed from HTTP headers then this can avoid parsing overhead with many object allocations for the JVM garbage collector.",title:"Skip Response Headers",required:!1,deprecated:!1},userAgent:{kind:"parameter",type:"string",description:"To set a custom HTTP User-Agent request header",title:"User Agent",required:!1,deprecated:!1},clientBuilder:{kind:"parameter",type:"object",description:"Provide access to the http client request parameters used on new RequestConfig instances used by producers or consumers of this endpoint.",title:"Client Builder",required:!1,deprecated:!1},clientConnectionManager:{kind:"parameter",type:"object",description:"To use a custom HttpClientConnectionManager to manage connections",title:"Client Connection Manager",required:!1,deprecated:!1},connectionsPerRoute:{kind:"parameter",type:"integer",defaultValue:"20",description:"The maximum number of connections per route.",title:"Connections Per Route",required:!1,deprecated:!1},httpClient:{kind:"parameter",type:"object",description:"Sets a custom HttpClient to be used by the producer",title:"Http Client",required:!1,deprecated:!1},httpClientConfigurer:{kind:"parameter",type:"object",description:"Register a custom configuration strategy for new HttpClient instances created by producers or consumers such as to configure authentication mechanisms etc.",title:"Http Client Configurer",required:!1,deprecated:!1},httpClientOptions:{kind:"parameter",type:"object",description:"To configure the HttpClient using the key/values from the Map.",title:"Http Client Options",required:!1,deprecated:!1},httpConnectionOptions:{kind:"parameter",type:"object",description:"To configure the connection and the socket using the key/values from the Map.",title:"Http Connection Options",required:!1,deprecated:!1},httpContext:{kind:"parameter",type:"object",description:"To use a custom HttpContext instance",title:"Http Context",required:!1,deprecated:!1},maxTotalConnections:{kind:"parameter",type:"integer",defaultValue:"200",description:"The maximum number of connections.",title:"Max Total Connections",required:!1,deprecated:!1},useSystemProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To use System Properties as fallback for configuration",title:"Use System Properties",required:!1,deprecated:!1},proxyAuthDomain:{kind:"parameter",type:"string",description:"Proxy authentication domain to use with NTML",title:"Proxy Auth Domain",required:!1,deprecated:!1},proxyAuthHost:{kind:"parameter",type:"string",description:"Proxy authentication host",title:"Proxy Auth Host",required:!1,deprecated:!1},proxyAuthMethod:{kind:"parameter",type:"string",enum:["Basic","Digest","NTLM"],description:"Proxy authentication method to use",title:"Proxy Auth Method",required:!1,deprecated:!1},proxyAuthNtHost:{kind:"parameter",type:"string",description:"Proxy authentication domain (workstation name) to use with NTML",title:"Proxy Auth Nt Host",required:!1,deprecated:!1},proxyAuthPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy Auth Password",required:!1,deprecated:!1},proxyAuthPort:{kind:"parameter",type:"integer",description:"Proxy authentication port",title:"Proxy Auth Port",required:!1,deprecated:!1},proxyAuthScheme:{kind:"parameter",type:"string",enum:["http","https"],description:"Proxy authentication scheme to use",title:"Proxy Auth Scheme",required:!1,deprecated:!1},proxyAuthUsername:{kind:"parameter",type:"string",description:"Proxy authentication username",title:"Proxy Auth Username",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy hostname to use",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy port to use",title:"Proxy Port",required:!1,deprecated:!1},authDomain:{kind:"parameter",type:"string",description:"Authentication domain to use with NTML",title:"Auth Domain",required:!1,deprecated:!1},authenticationPreemptive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If this option is true, camel-http sends preemptive basic authentication to the server.",title:"Authentication Preemptive",required:!1,deprecated:!1},authHost:{kind:"parameter",type:"string",description:"Authentication host to use with NTML",title:"Auth Host",required:!1,deprecated:!1},authMethod:{kind:"parameter",type:"string",description:"Authentication methods allowed to use as a comma separated list of values Basic, Digest or NTLM.",title:"Auth Method",required:!1,deprecated:!1},authMethodPriority:{kind:"parameter",type:"string",enum:["Basic","Digest","NTLM"],description:"Which authentication method to prioritize to use, either as Basic, Digest or NTLM.",title:"Auth Method Priority",required:!1,deprecated:!1},authPassword:{kind:"parameter",type:"string",description:"Authentication password",title:"Auth Password",required:!1,deprecated:!1},authUsername:{kind:"parameter",type:"string",description:"Authentication username",title:"Auth Username",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters. Important: Only one instance of org.apache.camel.util.jsse.SSLContextParameters is supported per HttpComponent. If you need to use 2 or more different instances, you need to define a new HttpComponent per instance you need.",title:"Ssl Context Parameters",required:!1,deprecated:!1},x509HostnameVerifier:{kind:"parameter",type:"object",description:"To use a custom X509HostnameVerifier such as DefaultHostnameVerifier or NoopHostnameVerifier",title:"X509 Hostname Verifier",required:!1,deprecated:!1}}},"hwcloud-dms":{type:"object",title:"Huawei Distributed Message Service (DMS)",group:"cloud",icon:"generic24.png",description:"To integrate with a fully managed, high-performance message queuing service on Huawei Cloud",properties:{operation:{kind:"path",type:"string",description:"Operation to be performed",title:"Operation",required:!0,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the cloud user",title:"API access key (AK)",required:!0,deprecated:!1},accessUser:{kind:"parameter",type:"string",description:"The username of a RabbitMQ instance. This option is mandatory when creating a RabbitMQ instance.",title:"Access user",required:!1,deprecated:!1},availableZones:{kind:"parameter",type:"array",description:"The ID of an available zone. This option is mandatory when creating an instance and it cannot be an empty array.",title:"Available zones",required:!1,deprecated:!1},endpoint:{kind:"parameter",type:"string",description:"DMS url. Carries higher precedence than region parameter based client initialization",title:"Service endpoint",required:!1,deprecated:!1},engine:{kind:"parameter",type:"string",enum:["kafka","rabbitmq"],description:"The message engine. Either kafka or rabbitmq. If the parameter is not specified, all instances will be queried",title:"Engine type",required:!1,deprecated:!1},engineVersion:{kind:"parameter",type:"string",description:"The version of the message engine. This option is mandatory when creating an instance.",title:"Engine version",required:!1,deprecated:!1},ignoreSslVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL verification",title:"SSL Verification Ignored",required:!1,deprecated:!1},instanceId:{kind:"parameter",type:"string",description:"The id of the instance. This option is mandatory when deleting or querying an instance",title:"Instance id",required:!1,deprecated:!1},kafkaManagerPassword:{kind:"parameter",type:"string",description:"The password for logging in to the Kafka Manager. This option is mandatory when creating a Kafka instance.",title:"Kafka manager password",required:!1,deprecated:!1},kafkaManagerUser:{kind:"parameter",type:"string",description:"The username for logging in to the Kafka Manager. This option is mandatory when creating a Kafka instance.",title:"Kafka manager username",required:!1,deprecated:!1},name:{kind:"parameter",type:"string",description:"The name of the instance for creating and updating an instance. This option is mandatory when creating an instance",title:"Name",required:!1,deprecated:!1},partitionNum:{kind:"parameter",type:"integer",description:"The maximum number of partitions in a Kafka instance. This option is mandatory when creating a Kafka instance.",title:"Partition Number",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password of a RabbitMQ instance. This option is mandatory when creating a RabbitMQ instance.",title:"Password",required:!1,deprecated:!1},productId:{kind:"parameter",type:"string",description:"The product ID. This option is mandatory when creating an instance.",title:"Product ID",required:!1,deprecated:!1},projectId:{kind:"parameter",type:"string",description:"Cloud project ID",title:"Project ID",required:!0,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy server ip/hostname",title:"Proxy server host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy server port",title:"Proxy server port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"Proxy authentication user",title:"Proxy user",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"DMS service region",title:"Service region",required:!0,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for the cloud user",title:"API secret key (SK)",required:!0,deprecated:!1},securityGroupId:{kind:"parameter",type:"string",description:"The security group which the instance belongs to. This option is mandatory when creating an instance.",title:"Security group ID",required:!1,deprecated:!1},serviceKeys:{kind:"parameter",type:"object",description:"Configuration object for cloud service authentication",title:"Service Configuration",required:!1,deprecated:!1},specification:{kind:"parameter",type:"string",description:"The baseline bandwidth of a Kafka instance. This option is mandatory when creating a Kafka instance.",title:"Engine version",required:!1,deprecated:!1},storageSpace:{kind:"parameter",type:"integer",description:"The message storage space. This option is mandatory when creating an instance.",title:"Storage space",required:!1,deprecated:!1},storageSpecCode:{kind:"parameter",type:"string",description:"The storage I/O specification. This option is mandatory when creating an instance.",title:"Storage specification code",required:!1,deprecated:!1},subnetId:{kind:"parameter",type:"string",description:"The subnet ID. This option is mandatory when creating an instance.",title:"Subnet ID",required:!1,deprecated:!1},vpcId:{kind:"parameter",type:"string",description:"The VPC ID. This option is mandatory when creating an instance.",title:"VPC ID",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hwcloud-frs":{type:"object",title:"Huawei Cloud Face Recognition Service (FRS)",group:"cloud,messaging",icon:"generic24.png",description:"Face Recognition Service (FRS) is an intelligent service that uses computers to process, analyze, and understand facial images based on human facial features.",properties:{operation:{kind:"path",type:"string",description:"Name of Face Recognition operation to perform, including faceDetection, faceVerification and faceLiveDetection",title:"Operation name",required:!0,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the cloud user",title:"Account access key (AK)",required:!0,deprecated:!1},actions:{kind:"parameter",type:"string",description:"This param is mandatory when the operation is faceLiveDetection, indicating the action code sequence list. Actions are separated by commas (,). Currently, the following actions are supported: 1: Shake the head to the left. 2: Shake the head to the right. 3: Nod the head. 4: Mouth movement.",title:"Actions",required:!1,deprecated:!1},actionTimes:{kind:"parameter",type:"string",description:"This param can be used when the operation is faceLiveDetection, indicating the action time array. The length of the array is the same as the number of actions. Each item contains the start time and end time of the action in the corresponding sequence. The unit is the milliseconds from the video start time.",title:"Action Time",required:!1,deprecated:!1},anotherImageBase64:{kind:"parameter",type:"string",description:"This param can be used when operation is faceVerification, indicating the Base64 character string converted from the other image. It needs to be configured if imageBase64 is set. The image size cannot exceed 10 MB. The image resolution of the narrow sides must be greater than 15 pixels, and that of the wide sides cannot exceed 4096 pixels. The supported image formats include JPG, PNG, and BMP.",title:"Another Image in Base64",required:!1,deprecated:!1},anotherImageFilePath:{kind:"parameter",type:"string",description:"This param can be used when operation is faceVerification, indicating the local file path of the other image. It needs to be configured if imageFilePath is set. Image size cannot exceed 8 MB, and it is recommended that the image size be less than 1 MB.",title:"Another Image File Path",required:!1,deprecated:!1},anotherImageUrl:{kind:"parameter",type:"string",description:"This param can be used when operation is faceVerification, indicating the URL of the other image. It needs to be configured if imageUrl is set. The options are as follows: 1.HTTP/HTTPS URLs on the public network 2.OBS URLs. To use OBS data, authorization is required, including service authorization, temporary authorization, and anonymous public authorization. For details, see Configuring the Access Permission of OBS.",title:"Another Image Url",required:!1,deprecated:!1},endpoint:{kind:"parameter",type:"string",description:"Fully qualified Face Recognition service url. Carries higher precedence than region based configuration.",title:"Service endpoint",required:!1,deprecated:!1},imageBase64:{kind:"parameter",type:"string",description:"This param can be used when operation is faceDetection or faceVerification, indicating the Base64 character string converted from an image. Any one of imageBase64, imageUrl and imageFilePath needs to be set, and the priority is imageBase64 imageUrl imageFilePath. The Image size cannot exceed 10 MB. The image resolution of the narrow sides must be greater than 15 pixels, and that of the wide sides cannot exceed 4096 pixels. The supported image formats include JPG, PNG, and BMP.",title:"Image in Base64",required:!1,deprecated:!1},imageFilePath:{kind:"parameter",type:"string",description:"This param can be used when operation is faceDetection or faceVerification, indicating the local image file path. Any one of imageBase64, imageUrl and imageFilePath needs to be set, and the priority is imageBase64 imageUrl imageFilePath. Image size cannot exceed 8 MB, and it is recommended that the image size be less than 1 MB.",title:"Image File Path",required:!1,deprecated:!1},imageUrl:{kind:"parameter",type:"string",description:"This param can be used when operation is faceDetection or faceVerification, indicating the URL of an image. Any one of imageBase64, imageUrl and imageFilePath needs to be set, and the priority is imageBase64 imageUrl imageFilePath. The options are as follows: 1.HTTP/HTTPS URLs on the public network 2.OBS URLs. To use OBS data, authorization is required, including service authorization, temporary authorization, and anonymous public authorization. For details, see Configuring the Access Permission of OBS.",title:"Image Url",required:!1,deprecated:!1},projectId:{kind:"parameter",type:"string",description:"Cloud project ID",title:"Project ID",required:!0,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy server ip/hostname",title:"Proxy server host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy server port",title:"Proxy server port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"Proxy authentication user",title:"Proxy user",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"Face Recognition service region. Currently only cn-north-1 and cn-north-4 are supported. This is lower precedence than endpoint based configuration.",title:"Service region",required:!0,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for the cloud user",title:"Account secret key (SK)",required:!0,deprecated:!1},serviceKeys:{kind:"parameter",type:"object",description:"Configuration object for cloud service authentication",title:"Service Configuration",required:!1,deprecated:!1},videoBase64:{kind:"parameter",type:"string",description:"This param can be used when operation is faceLiveDetection, indicating the Base64 character string converted from a video. Any one of videoBase64, videoUrl and videoFilePath needs to be set, and the priority is videoBase64 videoUrl videoFilePath. Requirements are as follows: 1.The video size after Base64 encoding cannot exceed 8 MB. It is recommended that the video file be compressed to 200 KB to 2 MB on the client. 2.The video duration must be 1 to 15 seconds. 3.The recommended frame rate is 10 fps to 30 fps. 4.The encapsulation format can be MP4, AVI, FLV, WEBM, ASF, or MOV. 5.The video encoding format can be H.261, H.263, H.264, HEVC, VC-1, VP8, VP9, or WMV3.",title:"Video in Base64",required:!1,deprecated:!1},videoFilePath:{kind:"parameter",type:"string",description:"This param can be used when operation is faceLiveDetection, indicating the local video file path. Any one of videoBase64, videoUrl and videoFilePath needs to be set, and the priority is videoBase64 videoUrl videoFilePath. The video requirements are as follows: 1.The size of a video file cannot exceed 8 MB. It is recommended that the video file be compressed to 200 KB to 2 MB on the client. 2.The video duration must be 1 to 15 seconds. 3.The recommended frame rate is 10 fps to 30 fps. 4.The encapsulation format can be MP4, AVI, FLV, WEBM, ASF, or MOV. 5.The video encoding format can be H.261, H.263, H.264, HEVC, VC-1, VP8, VP9, or WMV3.",title:"Video File Path",required:!1,deprecated:!1},videoUrl:{kind:"parameter",type:"string",description:"This param can be used when operation is faceLiveDetection, indicating the URL of a video. Any one of videoBase64, videoUrl and videoFilePath needs to be set, and the priority is videoBase64 videoUrl videoFilePath. Currently, only the URL of an OBS bucket on HUAWEI CLOUD is supported and FRS must have the permission to read data in the OBS bucket. For details about how to enable the read permission, see Service Authorization. The video requirements are as follows: 1.The video size after Base64 encoding cannot exceed 8 MB. 2.The video duration must be 1 to 15 seconds. 3.The recommended frame rate is 10 fps to 30 fps. 4.The encapsulation format can be MP4, AVI, FLV, WEBM, ASF, or MOV. 5.The video encoding format can be H.261, H.263, H.264, HEVC, VC-1, VP8, VP9, or WMV3.",title:"Video Url",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},ignoreSslVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL verification",title:"SSL Verification Ignored",required:!1,deprecated:!1}}},"hwcloud-functiongraph":{type:"object",title:"Huawei FunctionGraph",group:"cloud,serverless",icon:"generic24.png",description:"To call serverless functions on Huawei Cloud",properties:{operation:{kind:"path",type:"string",description:"Operation to be performed",title:"Operation",required:!0,deprecated:!1},endpoint:{kind:"parameter",type:"string",description:"FunctionGraph url. Carries higher precedence than region parameter based client initialization",title:"Service endpoint",required:!1,deprecated:!1},functionName:{kind:"parameter",type:"string",description:"Name of the function to invoke",title:"Function name",required:!1,deprecated:!1},functionPackage:{kind:"parameter",type:"string",defaultValue:"default",description:"Functions that can be logically grouped together",title:"Function package",required:!1,deprecated:!1},projectId:{kind:"parameter",type:"string",description:"Cloud project ID",title:"Project ID",required:!0,deprecated:!1},region:{kind:"parameter",type:"string",description:"FunctionGraph service region. This is lower precedence than endpoint based configuration",title:"Service region",required:!0,deprecated:!1},serviceKeys:{kind:"parameter",type:"object",description:"Configuration object for cloud service authentication",title:"Service Configuration",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy server ip/hostname",title:"Proxy server host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy server port",title:"Proxy server port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"Proxy authentication user",title:"Proxy user",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the cloud user",title:"API access key (AK)",required:!0,deprecated:!1},ignoreSslVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL verification",title:"SSL Verification Ignored",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for the cloud user",title:"API secret key (SK)",required:!0,deprecated:!1}}},"hwcloud-iam":{type:"object",title:"Huawei Identity and Access Management (IAM)",group:"cloud",icon:"generic24.png",description:"To securely manage users on Huawei Cloud",properties:{operation:{kind:"path",type:"string",description:"Operation to be performed",title:"Operation",required:!0,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the cloud user",title:"API access key (AK)",required:!0,deprecated:!1},groupId:{kind:"parameter",type:"string",description:"Group ID to perform operation with",title:"Group ID",required:!1,deprecated:!1},ignoreSslVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL verification",title:"SSL Verification Ignored",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy server ip/hostname",title:"Proxy server host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy server port",title:"Proxy server port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"Proxy authentication user",title:"Proxy user",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"IAM service region",title:"Service region",required:!0,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for the cloud user",title:"API secret key (SK)",required:!0,deprecated:!1},serviceKeys:{kind:"parameter",type:"object",description:"Configuration object for cloud service authentication",title:"Service Configuration",required:!1,deprecated:!1},userId:{kind:"parameter",type:"string",description:"User ID to perform operation with",title:"User ID",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"hwcloud-imagerecognition":{type:"object",title:"Huawei Cloud Image Recognition",group:"cloud,messaging",icon:"generic24.png",description:"To identify objects, scenes, and concepts in images on Huawei Cloud",properties:{operation:{kind:"path",type:"string",description:"Name of Image Recognition operation to perform, including celebrityRecognition and tagRecognition",title:"Operation name",required:!0,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the cloud user",title:"Account access key (AK)",required:!0,deprecated:!1},endpoint:{kind:"parameter",type:"string",description:"Fully qualified Image Recognition service url. Carries higher precedence than region based configuration.",title:"Service endpoint",required:!1,deprecated:!1},imageContent:{kind:"parameter",type:"string",description:"Indicates the Base64 character string converted from the image. The size cannot exceed 10 MB. The image resolution of the narrow sides must be greater than 15 pixels, and that of the wide sides cannot exceed 4096 pixels.The supported image formats include JPG, PNG, and BMP. Configure either this parameter or imageUrl, and this one carries higher precedence than imageUrl.",title:"Image in Base64",required:!1,deprecated:!1},imageUrl:{kind:"parameter",type:"string",description:"Indicates the URL of an image. The options are as follows: HTTP/HTTPS URLs on the public network OBS URLs. To use OBS data, authorization is required, including service authorization, temporary authorization, and anonymous public authorization. For details, see Configuring the Access Permission of OBS. Configure either this parameter or imageContent, and this one carries lower precedence than imageContent.",title:"Image Url",required:!1,deprecated:!1},projectId:{kind:"parameter",type:"string",description:"Cloud project ID",title:"Project ID",required:!0,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy server ip/hostname",title:"Proxy server host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy server port",title:"Proxy server port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"Proxy authentication user",title:"Proxy user",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"Image Recognition service region. Currently only cn-north-1 and cn-north-4 are supported. This is lower precedence than endpoint based configuration.",title:"Service region",required:!0,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for the cloud user",title:"Account secret key (SK)",required:!0,deprecated:!1},serviceKeys:{kind:"parameter",type:"object",description:"Configuration object for cloud service authentication",title:"Service Configuration",required:!1,deprecated:!1},tagLanguage:{kind:"parameter",type:"string",defaultValue:"zh",description:"Indicates the language of the returned tags when the operation is tagRecognition, including zh and en.",title:"Tag Language",required:!1,deprecated:!1},tagLimit:{kind:"parameter",type:"integer",defaultValue:"50",description:"Indicates the maximum number of the returned tags when the operation is tagRecognition.",title:"Tag Limit",required:!1,deprecated:!1},threshold:{kind:"parameter",type:"number",description:"Indicates the threshold of confidence. When the operation is tagRecognition, this parameter ranges from 0 to 100. Tags whose confidence score is lower than the threshold will not be returned. The default value is 60. When the operation is celebrityRecognition, this parameter ranges from 0 to 1. Labels whose confidence score is lower than the threshold will not be returned. The default value is 0.48.",title:"Threshold of confidence",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},ignoreSslVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL verification",title:"SSL Verification Ignored",required:!1,deprecated:!1}}},"hwcloud-obs":{type:"object",title:"Huawei Object Storage Service (OBS)",group:"cloud",icon:"generic24.png",description:"To provide stable, secure, efficient, and easy-to-use cloud storage service on Huawei Cloud",properties:{operation:{kind:"path",type:"string",description:"Operation to be performed",title:"Operation",required:!0,deprecated:!1},bucketName:{kind:"parameter",type:"string",description:"Name of bucket to perform operation on",title:"Bucket Name",required:!1,deprecated:!1},endpoint:{kind:"parameter",type:"string",description:"OBS url. Carries higher precedence than region parameter based client initialization",title:"Endpoint url",required:!1,deprecated:!1},objectName:{kind:"parameter",type:"string",description:"Name of object to perform operation with",title:"Object Name",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"OBS service region. This is lower precedence than endpoint based configuration",title:"Service region",required:!0,deprecated:!1},deleteAfterRead:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines if objects should be deleted after it has been retrieved",title:"Delete after read",required:!1,deprecated:!1},delimiter:{kind:"parameter",type:"string",description:"The character used for grouping object names",title:"Delimiter",required:!1,deprecated:!1},destinationBucket:{kind:"parameter",type:"string",description:"Name of destination bucket where objects will be moved when moveAfterRead is set to true",title:"Destination Bucket",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"Get the object from the bucket with the given file name",title:"File Name",required:!1,deprecated:!1},includeFolders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, objects in folders will be consumed. Otherwise, they will be ignored and no Exchanges will be created for them",title:"Include Folders",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",defaultValue:"10",description:"The maximum number of messages to poll at each polling",title:"Maximum messages per poll",required:!1,deprecated:!1},moveAfterRead:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether objects should be moved to a different bucket after they have been retrieved. The destinationBucket option must also be set for this option to work.",title:"Move After Read",required:!1,deprecated:!1},prefix:{kind:"parameter",type:"string",description:"The object name prefix used for filtering objects to be listed",title:"Prefix",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},bucketLocation:{kind:"parameter",type:"string",description:"Location of bucket when creating a new bucket",title:"Bucket Location",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy server ip/hostname",title:"Proxy server host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy server port",title:"Proxy server port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"Proxy authentication user",title:"Proxy user",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the cloud user",title:"API access key (AK)",required:!0,deprecated:!1},ignoreSslVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL verification",title:"SSL Verification Ignored",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for the cloud user",title:"API secret key (SK)",required:!0,deprecated:!1},serviceKeys:{kind:"parameter",type:"object",description:"Configuration object for cloud service authentication",title:"Service Configuration",required:!1,deprecated:!1}}},"hwcloud-smn":{type:"object",title:"Huawei Simple Message Notification (SMN)",group:"cloud,messaging",icon:"generic24.png",description:"To broadcast messages and connect cloud services through notifications on Huawei Cloud",properties:{smnService:{kind:"path",type:"string",description:"Name of SMN service to invoke",title:"Service name",required:!0,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for the cloud user",title:"API access key (AK)",required:!0,deprecated:!1},endpoint:{kind:"parameter",type:"string",description:"Fully qualified smn service url. Carries higher precedence than region parameter based client initialization",title:"Service endpoint",required:!1,deprecated:!1},ignoreSslVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL verification",title:"SSL Verification Ignored",required:!1,deprecated:!1},messageTtl:{kind:"parameter",type:"integer",defaultValue:"3600",description:"TTL for published message",title:"Message TTL",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Name of operation to perform",title:"Operation name",required:!0,deprecated:!1},projectId:{kind:"parameter",type:"string",description:"Cloud project ID",title:"Project ID",required:!0,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"Proxy server ip/hostname",title:"Proxy server host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Proxy authentication password",title:"Proxy password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"Proxy server port",title:"Proxy server port",required:!1,deprecated:!1},proxyUser:{kind:"parameter",type:"string",description:"Proxy authentication user",title:"Proxy user",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"SMN service region. This is lower precedence than endpoint based configuration",title:"Service region",required:!0,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for the cloud user",title:"API secret key (SK)",required:!0,deprecated:!1},serviceKeys:{kind:"parameter",type:"object",description:"Configuration object for cloud service authentication",title:"Service Configuration",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"iec60870-client":{type:"object",title:"IEC 60870 Client",group:"iot",icon:"generic24.png",description:"IEC 60870 supervisory control and data acquisition (SCADA) client using NeoSCADA implementation.",properties:{uriPath:{kind:"path",type:"object",description:"The object information address",title:"Uri Path",required:!0,deprecated:!1},dataModuleOptions:{kind:"parameter",type:"object",description:"Data module options",title:"Data Module Options",required:!1,deprecated:!1},protocolOptions:{kind:"parameter",type:"object",description:"Protocol options",title:"Protocol Options",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},acknowledgeWindow:{kind:"parameter",type:"integer",defaultValue:"10",description:"Parameter W - Acknowledgment window.",title:"Acknowledge Window",required:!1,deprecated:!1},adsuAddressType:{kind:"parameter",type:"object",enum:["SIZE_1","SIZE_2"],description:"The common ASDU address size. May be either SIZE_1 or SIZE_2.",title:"Adsu Address Type",required:!1,deprecated:!1},causeOfTransmissionType:{kind:"parameter",type:"object",enum:["SIZE_1","SIZE_2"],description:"The cause of transmission type. May be either SIZE_1 or SIZE_2.",title:"Cause Of Transmission Type",required:!1,deprecated:!1},informationObjectAddressType:{kind:"parameter",type:"object",enum:["SIZE_1","SIZE_2","SIZE_3"],description:"The information address size. May be either SIZE_1, SIZE_2 or SIZE_3.",title:"Information Object Address Type",required:!1,deprecated:!1},maxUnacknowledged:{kind:"parameter",type:"integer",defaultValue:"15",description:"Parameter K - Maximum number of un-acknowledged messages.",title:"Max Unacknowledged",required:!1,deprecated:!1},timeout1:{kind:"parameter",type:"integer",defaultValue:"15000",description:"Timeout T1 in milliseconds.",title:"Timeout1",required:!1,deprecated:!1},timeout2:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Timeout T2 in milliseconds.",title:"Timeout2",required:!1,deprecated:!1},timeout3:{kind:"parameter",type:"integer",defaultValue:"20000",description:"Timeout T3 in milliseconds.",title:"Timeout3",required:!1,deprecated:!1},causeSourceAddress:{kind:"parameter",type:"integer",description:"Whether to include the source address",title:"Cause Source Address",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Timeout in millis to wait for client to establish a connected connection.",title:"Connection Timeout",required:!1,deprecated:!1},ignoreBackgroundScan:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether background scan transmissions should be ignored.",title:"Ignore Background Scan",required:!1,deprecated:!1},ignoreDaylightSavingTime:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to ignore or respect DST",title:"Ignore Daylight Saving Time",required:!1,deprecated:!1},timeZone:{kind:"parameter",type:"object",defaultValue:"UTC",description:"The timezone to use. May be any Java time zone string",title:"Time Zone",required:!1,deprecated:!1},connectionId:{kind:"parameter",type:"string",description:"An identifier grouping connection instances",title:"Connection Id",required:!1,deprecated:!1}}},"iec60870-server":{type:"object",title:"IEC 60870 Server",group:"iot",icon:"generic24.png",description:"IEC 60870 supervisory control and data acquisition (SCADA) server using NeoSCADA implementation.",properties:{uriPath:{kind:"path",type:"object",description:"The object information address",title:"Uri Path",required:!0,deprecated:!1},dataModuleOptions:{kind:"parameter",type:"object",description:"Data module options",title:"Data Module Options",required:!1,deprecated:!1},filterNonExecute:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Filter out all requests which don't have the execute bit set",title:"Filter Non Execute",required:!1,deprecated:!1},protocolOptions:{kind:"parameter",type:"object",description:"Protocol options",title:"Protocol Options",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},acknowledgeWindow:{kind:"parameter",type:"integer",defaultValue:"10",description:"Parameter W - Acknowledgment window.",title:"Acknowledge Window",required:!1,deprecated:!1},adsuAddressType:{kind:"parameter",type:"object",enum:["SIZE_1","SIZE_2"],description:"The common ASDU address size. May be either SIZE_1 or SIZE_2.",title:"Adsu Address Type",required:!1,deprecated:!1},causeOfTransmissionType:{kind:"parameter",type:"object",enum:["SIZE_1","SIZE_2"],description:"The cause of transmission type. May be either SIZE_1 or SIZE_2.",title:"Cause Of Transmission Type",required:!1,deprecated:!1},informationObjectAddressType:{kind:"parameter",type:"object",enum:["SIZE_1","SIZE_2","SIZE_3"],description:"The information address size. May be either SIZE_1, SIZE_2 or SIZE_3.",title:"Information Object Address Type",required:!1,deprecated:!1},maxUnacknowledged:{kind:"parameter",type:"integer",defaultValue:"15",description:"Parameter K - Maximum number of un-acknowledged messages.",title:"Max Unacknowledged",required:!1,deprecated:!1},timeout1:{kind:"parameter",type:"integer",defaultValue:"15000",description:"Timeout T1 in milliseconds.",title:"Timeout1",required:!1,deprecated:!1},timeout2:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Timeout T2 in milliseconds.",title:"Timeout2",required:!1,deprecated:!1},timeout3:{kind:"parameter",type:"integer",defaultValue:"20000",description:"Timeout T3 in milliseconds.",title:"Timeout3",required:!1,deprecated:!1},causeSourceAddress:{kind:"parameter",type:"integer",description:"Whether to include the source address",title:"Cause Source Address",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Timeout in millis to wait for client to establish a connected connection.",title:"Connection Timeout",required:!1,deprecated:!1},ignoreBackgroundScan:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether background scan transmissions should be ignored.",title:"Ignore Background Scan",required:!1,deprecated:!1},ignoreDaylightSavingTime:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to ignore or respect DST",title:"Ignore Daylight Saving Time",required:!1,deprecated:!1},timeZone:{kind:"parameter",type:"object",defaultValue:"UTC",description:"The timezone to use. May be any Java time zone string",title:"Time Zone",required:!1,deprecated:!1},connectionId:{kind:"parameter",type:"string",description:"An identifier grouping connection instances",title:"Connection Id",required:!1,deprecated:!1}}},"ignite-cache":{type:"object",title:"Ignite Cache",group:"cache,clustering",icon:"generic24.png",description:"Perform cache operations on an Ignite cache or consume changes from a continuous query.",properties:{cacheName:{kind:"path",type:"string",description:"The cache name.",title:"Cache Name",required:!0,deprecated:!1},propagateIncomingBodyIfNoReturnValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void.",title:"Propagate Incoming Body If No Return Value",required:!1,deprecated:!1},treatCollectionsAsCacheObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc.",title:"Treat Collections As Cache Objects",required:!1,deprecated:!1},autoUnsubscribe:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether auto unsubscribe is enabled in the Continuous Query Consumer. Default value notice: ContinuousQuery.DFLT_AUTO_UNSUBSCRIBE",title:"Auto Unsubscribe",required:!1,deprecated:!1},fireExistingQueryResults:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to process existing results that match the query. Used on initialization of the Continuous Query Consumer.",title:"Fire Existing Query Results",required:!1,deprecated:!1},oneExchangePerUpdate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to pack each update in an individual Exchange, even if multiple updates are received in one batch. Only used by the Continuous Query Consumer.",title:"One Exchange Per Update",required:!1,deprecated:!1},pageSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The page size. Only used by the Continuous Query Consumer. Default value notice: ContinuousQuery.DFLT_PAGE_SIZE",title:"Page Size",required:!1,deprecated:!1},query:{kind:"parameter",type:"object",description:"The Query to execute, only needed for operations that require it, and for the Continuous Query Consumer.",title:"Query",required:!1,deprecated:!1},remoteFilter:{kind:"parameter",type:"object",description:"The remote filter, only used by the Continuous Query Consumer.",title:"Remote Filter",required:!1,deprecated:!1},timeInterval:{kind:"parameter",type:"integer",defaultValue:"0",description:"The time interval for the Continuous Query Consumer. Default value notice: ContinuousQuery.DFLT_TIME_INTERVAL",title:"Time Interval",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},cachePeekMode:{kind:"parameter",type:"object",defaultValue:"ALL",enum:["ALL","NEAR","PRIMARY","BACKUP","ONHEAP","OFFHEAP"],description:"The CachePeekMode, only needed for operations that require it (IgniteCacheOperation#SIZE).",title:"Cache Peek Mode",required:!1,deprecated:!1},failIfInexistentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to fail the initialization if the cache doesn't exist.",title:"Fail If Inexistent Cache",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["GET","PUT","REMOVE","SIZE","REBALANCE","QUERY","CLEAR","REPLACE"],description:"The cache operation to invoke. Possible values: GET, PUT, REMOVE, SIZE, REBALANCE, QUERY, CLEAR.",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"ignite-compute":{type:"object",title:"Ignite Compute",group:"cache,clustering",icon:"generic24.png",description:"Run compute operations on an Ignite cluster.",properties:{endpointId:{kind:"path",type:"string",description:"The endpoint ID (not used).",title:"Endpoint Id",required:!0,deprecated:!1},clusterGroupExpression:{kind:"parameter",type:"object",description:"An expression that returns the Cluster Group for the IgniteCompute instance.",title:"Cluster Group Expression",required:!1,deprecated:!1},computeName:{kind:"parameter",type:"string",description:"The name of the compute job, which will be set via IgniteCompute#withName(String).",title:"Compute Name",required:!1,deprecated:!1},executionType:{kind:"parameter",type:"object",enum:["CALL","BROADCAST","APPLY","EXECUTE","RUN","AFFINITY_CALL","AFFINITY_RUN"],description:"The compute operation to perform. Possible values: CALL, BROADCAST, APPLY, EXECUTE, RUN, AFFINITY_CALL, AFFINITY_RUN. The component expects different payload types depending on the operation.",title:"Execution Type",required:!0,deprecated:!1},propagateIncomingBodyIfNoReturnValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void.",title:"Propagate Incoming Body If No Return Value",required:!1,deprecated:!1},taskName:{kind:"parameter",type:"string",description:"The task name, only applicable if using the IgniteComputeExecutionType#EXECUTE execution type.",title:"Task Name",required:!1,deprecated:!1},timeoutMillis:{kind:"parameter",type:"integer",description:"The timeout interval for triggered jobs, in milliseconds, which will be set via IgniteCompute#withTimeout(long).",title:"Timeout Millis",required:!1,deprecated:!1},treatCollectionsAsCacheObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc.",title:"Treat Collections As Cache Objects",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"ignite-events":{type:"object",title:"Ignite Events",group:"messaging,cache,clustering",icon:"generic24.png",description:"Receive events from an Ignite cluster by creating a local event listener.",properties:{endpointId:{kind:"path",type:"string",description:"The endpoint ID (not used).",title:"Endpoint Id",required:!1,deprecated:!1},clusterGroupExpression:{kind:"parameter",type:"object",description:"The cluster group expression.",title:"Cluster Group Expression",required:!1,deprecated:!1},events:{kind:"parameter",type:"string",defaultValue:"EVTS_ALL",description:"The event types to subscribe to as a comma-separated string of event constants as defined in EventType. For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.",title:"Events",required:!1,deprecated:!1},propagateIncomingBodyIfNoReturnValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void.",title:"Propagate Incoming Body If No Return Value",required:!1,deprecated:!1},treatCollectionsAsCacheObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc.",title:"Treat Collections As Cache Objects",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},"ignite-idgen":{type:"object",title:"Ignite ID Generator",group:"cache,clustering",icon:"generic24.png",description:"Interact with Ignite Atomic Sequences and ID Generators .",properties:{name:{kind:"path",type:"string",description:"The sequence name.",title:"Name",required:!0,deprecated:!1},batchSize:{kind:"parameter",type:"integer",description:"The batch size.",title:"Batch Size",required:!1,deprecated:!1},initialValue:{kind:"parameter",type:"integer",defaultValue:"0",description:"The initial value.",title:"Initial Value",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["ADD_AND_GET","GET","GET_AND_ADD","GET_AND_INCREMENT","INCREMENT_AND_GET"],description:"The operation to invoke on the Ignite ID Generator. Superseded by the IgniteConstants.IGNITE_IDGEN_OPERATION header in the IN message. Possible values: ADD_AND_GET, GET, GET_AND_ADD, GET_AND_INCREMENT, INCREMENT_AND_GET.",title:"Operation",required:!1,deprecated:!1},propagateIncomingBodyIfNoReturnValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void.",title:"Propagate Incoming Body If No Return Value",required:!1,deprecated:!1},treatCollectionsAsCacheObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc.",title:"Treat Collections As Cache Objects",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"ignite-messaging":{type:"object",title:"Ignite Messaging",group:"messaging",icon:"generic24.png",description:"Send and receive messages from an Ignite topic.",properties:{topic:{kind:"path",type:"string",description:"The topic name.",title:"Topic",required:!0,deprecated:!1},propagateIncomingBodyIfNoReturnValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void.",title:"Propagate Incoming Body If No Return Value",required:!1,deprecated:!1},treatCollectionsAsCacheObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc.",title:"Treat Collections As Cache Objects",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},clusterGroupExpression:{kind:"parameter",type:"object",description:"The cluster group expression.",title:"Cluster Group Expression",required:!1,deprecated:!1},sendMode:{kind:"parameter",type:"object",defaultValue:"UNORDERED",enum:["ORDERED","UNORDERED"],description:"The send mode to use. Possible values: UNORDERED, ORDERED.",title:"Send Mode",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",description:"The timeout for the send operation when using ordered messages.",title:"Timeout",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"ignite-queue":{type:"object",title:"Ignite Queues",group:"cache,clustering,messaging",icon:"generic24.png",description:"Interact with Ignite Queue data structures.",properties:{name:{kind:"path",type:"string",description:"The queue name.",title:"Name",required:!0,deprecated:!1},capacity:{kind:"parameter",type:"integer",description:"The queue capacity. Default: non-bounded.",title:"Capacity",required:!1,deprecated:!1},configuration:{kind:"parameter",type:"object",description:"The collection configuration. Default: empty configuration. You can also conveniently set inner properties by using configuration.xyz=123 options.",title:"Configuration",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["CONTAINS","ADD","SIZE","REMOVE","ITERATOR","CLEAR","RETAIN_ALL","ARRAY","DRAIN","ELEMENT","PEEK","OFFER","POLL","TAKE","PUT"],description:"The operation to invoke on the Ignite Queue. Superseded by the IgniteConstants.IGNITE_QUEUE_OPERATION header in the IN message. Possible values: CONTAINS, ADD, SIZE, REMOVE, ITERATOR, CLEAR, RETAIN_ALL, ARRAY, DRAIN, ELEMENT, PEEK, OFFER, POLL, TAKE, PUT.",title:"Operation",required:!1,deprecated:!1},propagateIncomingBodyIfNoReturnValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void.",title:"Propagate Incoming Body If No Return Value",required:!1,deprecated:!1},timeoutMillis:{kind:"parameter",type:"integer",description:"The queue timeout in milliseconds. Default: no timeout.",title:"Timeout Millis",required:!1,deprecated:!1},treatCollectionsAsCacheObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc.",title:"Treat Collections As Cache Objects",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"ignite-set":{type:"object",title:"Ignite Sets",group:"cache,clustering",icon:"generic24.png",description:"Interact with Ignite Set data structures.",properties:{name:{kind:"path",type:"string",description:"The set name.",title:"Name",required:!0,deprecated:!1},configuration:{kind:"parameter",type:"object",description:"The collection configuration. Default: empty configuration. You can also conveniently set inner properties by using configuration.xyz=123 options.",title:"Configuration",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["CONTAINS","ADD","SIZE","REMOVE","ITERATOR","CLEAR","RETAIN_ALL","ARRAY"],description:"The operation to invoke on the Ignite Set. Superseded by the IgniteConstants.IGNITE_SETS_OPERATION header in the IN message. Possible values: CONTAINS, ADD, SIZE, REMOVE, ITERATOR, CLEAR, RETAIN_ALL, ARRAY.The set operation to perform.",title:"Operation",required:!1,deprecated:!1},propagateIncomingBodyIfNoReturnValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void.",title:"Propagate Incoming Body If No Return Value",required:!1,deprecated:!1},treatCollectionsAsCacheObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc.",title:"Treat Collections As Cache Objects",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},imap:{type:"object",title:"IMAP",group:"mail",icon:"generic24.png",description:"Send and receive emails using imap, pop3 and smtp protocols.",properties:{host:{kind:"path",type:"string",description:"The mail server host name",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The port number of the mail server",title:"Port",required:!1,deprecated:!1},closeFolder:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.",title:"Close Folder",required:!1,deprecated:!1},copyTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.",title:"Copy To",required:!1,deprecated:!1},decodeFilename:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the MimeUtility.decodeText method will be used to decode the filename. This is similar to setting JVM system property mail.mime.encodefilename.",title:"Decode Filename",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.",title:"Delete",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.",title:"Disconnect",required:!1,deprecated:!1},handleFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Handle Failed Message",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Specifies the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid downloading thousands of files when the server starts up. Set a value of 0 or negative to disable this option.",title:"Max Messages Per Poll",required:!1,deprecated:!1},mimeDecodeHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables transparent MIME decoding and unfolding for mail headers.",title:"Mime Decode Headers",required:!1,deprecated:!1},moveTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.",title:"Move To",required:!1,deprecated:!1},peek:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Will mark the jakarta.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.",title:"Peek",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skipFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Skip Failed Message",required:!1,deprecated:!1},unseen:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit by unseen mails only.",title:"Unseen",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},failOnDuplicateFileAttachment:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to fail processing the mail if the mail message contains attachments with duplicate file names. If set to false, then the duplicate attachment is skipped and a WARN is logged. If set to true then an exception is thrown failing to process the mail message.",title:"Fail On Duplicate File Attachment",required:!1,deprecated:!1},fetchSize:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.",title:"Fetch Size",required:!1,deprecated:!1},folderName:{kind:"parameter",type:"string",defaultValue:"INBOX",description:"The folder to poll.",title:"Folder Name",required:!1,deprecated:!1},generateMissingAttachmentNames:{kind:"parameter",type:"string",description:"Set this to 'uuid' to set a UUID for the filename of the attachment if no filename was set",title:"Generate Missing Attachment Names",required:!1,deprecated:!1},handleDuplicateAttachmentNames:{kind:"parameter",type:"string",description:"Set the strategy to handle duplicate filenames of attachments never: attachments that have a filename which is already present in the attachments will be ignored unless failOnDuplicateFileAttachment is set to true. uuidPrefix: this will prefix the duplicate attachment filenames each with a uuid and underscore (uuid_filename.fileextension). uuidSuffix: this will suffix the duplicate attachment filenames each with a underscore and uuid (filename_uuid.fileextension).",title:"Handle Duplicate Attachment Names",required:!1,deprecated:!1},mailUidGenerator:{kind:"parameter",type:"object",description:"A pluggable MailUidGenerator that allows to use custom logic to generate UUID of the mail message.",title:"Mail Uid Generator",required:!1,deprecated:!1},mapMailMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw jakarta.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(jakarta.mail.Message.class).",title:"Map Mail Message",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},postProcessAction:{kind:"parameter",type:"object",description:"Refers to an MailBoxPostProcessAction for doing post processing tasks on the mailbox once the normal processing ended.",title:"Post Process Action",required:!1,deprecated:!1},bcc:{kind:"parameter",type:"string",description:"Sets the BCC email address. Separate multiple email addresses with comma.",title:"Bcc",required:!1,deprecated:!1},cc:{kind:"parameter",type:"string",description:"Sets the CC email address. Separate multiple email addresses with comma.",title:"Cc",required:!1,deprecated:!1},from:{kind:"parameter",type:"string",defaultValue:"camel@localhost",description:"The from email address",title:"From",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"The Reply-To recipients (the receivers of the response mail). Separate multiple email addresses with a comma.",title:"Reply To",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The Subject of the message being sent. Note: Setting the subject in the header takes precedence over this option.",title:"Subject",required:!1,deprecated:!1},to:{kind:"parameter",type:"string",description:"Sets the To email address. Separate multiple email addresses with comma.",title:"To",required:!1,deprecated:!1},javaMailSender:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.mail.JavaMailSender for sending emails.",title:"Java Mail Sender",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},additionalJavaMailProperties:{kind:"parameter",type:"object",description:"Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.",title:"Additional Java Mail Properties",required:!1,deprecated:!1},alternativeBodyHeader:{kind:"parameter",type:"string",defaultValue:"CamelMailAlternativeBody",description:"Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.",title:"Alternative Body Header",required:!1,deprecated:!1},attachmentsContentTransferEncodingResolver:{kind:"parameter",type:"object",description:"To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.",title:"Attachments Content Transfer Encoding Resolver",required:!1,deprecated:!1},authenticator:{kind:"parameter",type:"object",description:"The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.",title:"Authenticator",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"Sets the binding used to convert from a Camel message to and from a Mail message",title:"Binding",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The connection timeout in milliseconds.",title:"Connection Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"text/plain",description:"The mail message content type. Use text/html for HTML mails.",title:"Content Type",required:!1,deprecated:!1},contentTypeResolver:{kind:"parameter",type:"object",description:"Resolver to determine Content-Type for file attachments.",title:"Content Type Resolver",required:!1,deprecated:!1},debugMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.",title:"Debug Mode",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.",title:"Header Filter Strategy",required:!1,deprecated:!1},ignoreUnsupportedCharset:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Unsupported Charset",required:!1,deprecated:!1},ignoreUriScheme:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Uri Scheme",required:!1,deprecated:!1},javaMailProperties:{kind:"parameter",type:"object",description:"Sets the java mail options. Will clear any default properties and only use the properties provided for this method.",title:"Java Mail Properties",required:!1,deprecated:!1},session:{kind:"parameter",type:"object",description:"Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).",title:"Session",required:!1,deprecated:!1},useInlineAttachments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use disposition inline or attachment.",title:"Use Inline Attachments",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which allows to cluster consuming from the same mailbox, and let the repository coordinate whether a mail message is valid for the consumer to process. By default no repository is in use.",title:"Idempotent Repository",required:!1,deprecated:!1},idempotentRepositoryRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When using idempotent repository, then when the mail message has been successfully processed and is committed, should the message id be removed from the idempotent repository (default) or be kept in the repository. By default its assumed the message id is unique and has no value to be kept in the repository, because the mail message will be marked as seen/moved or deleted to prevent it from being consumed again. And therefore having the message id stored in the idempotent repository has little value. However this option allows to store the message id, for whatever reason you may have.",title:"Idempotent Repository Remove On Commit",required:!1,deprecated:!1},searchTerm:{kind:"parameter",type:"object",description:"Refers to a jakarta.mail.search.SearchTerm which allows to filter mails based on search criteria such as subject, body, from, sent after a certain date etc.",title:"Search Term",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for login. See also setAuthenticator(MailAuthenticator).",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters.",title:"Ssl Context Parameters",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username for login. See also setAuthenticator(MailAuthenticator).",title:"Username",required:!1,deprecated:!1},sortTerm:{kind:"parameter",type:"object",description:"Sorting order for messages. Only natively supported for IMAP. Emulated to some degree when using POP3 or when IMAP server does not have the SORT capability.",title:"Sort Term",required:!1,deprecated:!1}}},imaps:{type:"object",title:"IMAPS (Secure)",group:"mail",icon:"generic24.png",description:"Send and receive emails using imap, pop3 and smtp protocols.",properties:{host:{kind:"path",type:"string",description:"The mail server host name",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The port number of the mail server",title:"Port",required:!1,deprecated:!1},closeFolder:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.",title:"Close Folder",required:!1,deprecated:!1},copyTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.",title:"Copy To",required:!1,deprecated:!1},decodeFilename:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the MimeUtility.decodeText method will be used to decode the filename. This is similar to setting JVM system property mail.mime.encodefilename.",title:"Decode Filename",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.",title:"Delete",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.",title:"Disconnect",required:!1,deprecated:!1},handleFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Handle Failed Message",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Specifies the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid downloading thousands of files when the server starts up. Set a value of 0 or negative to disable this option.",title:"Max Messages Per Poll",required:!1,deprecated:!1},mimeDecodeHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables transparent MIME decoding and unfolding for mail headers.",title:"Mime Decode Headers",required:!1,deprecated:!1},moveTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.",title:"Move To",required:!1,deprecated:!1},peek:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Will mark the jakarta.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.",title:"Peek",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skipFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Skip Failed Message",required:!1,deprecated:!1},unseen:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit by unseen mails only.",title:"Unseen",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},failOnDuplicateFileAttachment:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to fail processing the mail if the mail message contains attachments with duplicate file names. If set to false, then the duplicate attachment is skipped and a WARN is logged. If set to true then an exception is thrown failing to process the mail message.",title:"Fail On Duplicate File Attachment",required:!1,deprecated:!1},fetchSize:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.",title:"Fetch Size",required:!1,deprecated:!1},folderName:{kind:"parameter",type:"string",defaultValue:"INBOX",description:"The folder to poll.",title:"Folder Name",required:!1,deprecated:!1},generateMissingAttachmentNames:{kind:"parameter",type:"string",description:"Set this to 'uuid' to set a UUID for the filename of the attachment if no filename was set",title:"Generate Missing Attachment Names",required:!1,deprecated:!1},handleDuplicateAttachmentNames:{kind:"parameter",type:"string",description:"Set the strategy to handle duplicate filenames of attachments never: attachments that have a filename which is already present in the attachments will be ignored unless failOnDuplicateFileAttachment is set to true. uuidPrefix: this will prefix the duplicate attachment filenames each with a uuid and underscore (uuid_filename.fileextension). uuidSuffix: this will suffix the duplicate attachment filenames each with a underscore and uuid (filename_uuid.fileextension).",title:"Handle Duplicate Attachment Names",required:!1,deprecated:!1},mailUidGenerator:{kind:"parameter",type:"object",description:"A pluggable MailUidGenerator that allows to use custom logic to generate UUID of the mail message.",title:"Mail Uid Generator",required:!1,deprecated:!1},mapMailMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw jakarta.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(jakarta.mail.Message.class).",title:"Map Mail Message",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},postProcessAction:{kind:"parameter",type:"object",description:"Refers to an MailBoxPostProcessAction for doing post processing tasks on the mailbox once the normal processing ended.",title:"Post Process Action",required:!1,deprecated:!1},bcc:{kind:"parameter",type:"string",description:"Sets the BCC email address. Separate multiple email addresses with comma.",title:"Bcc",required:!1,deprecated:!1},cc:{kind:"parameter",type:"string",description:"Sets the CC email address. Separate multiple email addresses with comma.",title:"Cc",required:!1,deprecated:!1},from:{kind:"parameter",type:"string",defaultValue:"camel@localhost",description:"The from email address",title:"From",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"The Reply-To recipients (the receivers of the response mail). Separate multiple email addresses with a comma.",title:"Reply To",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The Subject of the message being sent. Note: Setting the subject in the header takes precedence over this option.",title:"Subject",required:!1,deprecated:!1},to:{kind:"parameter",type:"string",description:"Sets the To email address. Separate multiple email addresses with comma.",title:"To",required:!1,deprecated:!1},javaMailSender:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.mail.JavaMailSender for sending emails.",title:"Java Mail Sender",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},additionalJavaMailProperties:{kind:"parameter",type:"object",description:"Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.",title:"Additional Java Mail Properties",required:!1,deprecated:!1},alternativeBodyHeader:{kind:"parameter",type:"string",defaultValue:"CamelMailAlternativeBody",description:"Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.",title:"Alternative Body Header",required:!1,deprecated:!1},attachmentsContentTransferEncodingResolver:{kind:"parameter",type:"object",description:"To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.",title:"Attachments Content Transfer Encoding Resolver",required:!1,deprecated:!1},authenticator:{kind:"parameter",type:"object",description:"The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.",title:"Authenticator",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"Sets the binding used to convert from a Camel message to and from a Mail message",title:"Binding",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The connection timeout in milliseconds.",title:"Connection Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"text/plain",description:"The mail message content type. Use text/html for HTML mails.",title:"Content Type",required:!1,deprecated:!1},contentTypeResolver:{kind:"parameter",type:"object",description:"Resolver to determine Content-Type for file attachments.",title:"Content Type Resolver",required:!1,deprecated:!1},debugMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.",title:"Debug Mode",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.",title:"Header Filter Strategy",required:!1,deprecated:!1},ignoreUnsupportedCharset:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Unsupported Charset",required:!1,deprecated:!1},ignoreUriScheme:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Uri Scheme",required:!1,deprecated:!1},javaMailProperties:{kind:"parameter",type:"object",description:"Sets the java mail options. Will clear any default properties and only use the properties provided for this method.",title:"Java Mail Properties",required:!1,deprecated:!1},session:{kind:"parameter",type:"object",description:"Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).",title:"Session",required:!1,deprecated:!1},useInlineAttachments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use disposition inline or attachment.",title:"Use Inline Attachments",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which allows to cluster consuming from the same mailbox, and let the repository coordinate whether a mail message is valid for the consumer to process. By default no repository is in use.",title:"Idempotent Repository",required:!1,deprecated:!1},idempotentRepositoryRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When using idempotent repository, then when the mail message has been successfully processed and is committed, should the message id be removed from the idempotent repository (default) or be kept in the repository. By default its assumed the message id is unique and has no value to be kept in the repository, because the mail message will be marked as seen/moved or deleted to prevent it from being consumed again. And therefore having the message id stored in the idempotent repository has little value. However this option allows to store the message id, for whatever reason you may have.",title:"Idempotent Repository Remove On Commit",required:!1,deprecated:!1},searchTerm:{kind:"parameter",type:"object",description:"Refers to a jakarta.mail.search.SearchTerm which allows to filter mails based on search criteria such as subject, body, from, sent after a certain date etc.",title:"Search Term",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for login. See also setAuthenticator(MailAuthenticator).",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters.",title:"Ssl Context Parameters",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username for login. See also setAuthenticator(MailAuthenticator).",title:"Username",required:!1,deprecated:!1},sortTerm:{kind:"parameter",type:"object",description:"Sorting order for messages. Only natively supported for IMAP. Emulated to some degree when using POP3 or when IMAP server does not have the SORT capability.",title:"Sort Term",required:!1,deprecated:!1}}},infinispan:{type:"object",title:"Infinispan",group:"cache,clustering",icon:"generic24.png",description:"Read and write from/to Infinispan distributed key/value store and data grid.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache to use. Use current to use the existing cache name from the currently configured cached manager. Or use default for the default cache manager name.",title:"Cache Name",required:!0,deprecated:!1},hosts:{kind:"parameter",type:"string",description:"Specifies the host of the cache on Infinispan instance",title:"Hosts",required:!1,deprecated:!1},queryBuilder:{kind:"parameter",type:"object",description:"Specifies the query builder.",title:"Query Builder",required:!1,deprecated:!1},secure:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if we are connecting to a secured Infinispan instance",title:"Secure",required:!1,deprecated:!1},customListener:{kind:"parameter",type:"object",description:"Returns the custom listener in use, if provided",title:"Custom Listener",required:!1,deprecated:!1},eventTypes:{kind:"parameter",type:"string",description:"Specifies the set of event types to register by the consumer.Multiple event can be separated by comma. The possible event types are: CLIENT_CACHE_ENTRY_CREATED, CLIENT_CACHE_ENTRY_MODIFIED, CLIENT_CACHE_ENTRY_REMOVED, CLIENT_CACHE_ENTRY_EXPIRED, CLIENT_CACHE_FAILOVER",title:"Event Types",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},defaultValue:{kind:"parameter",type:"object",description:"Set a specific default value for some producer operations",title:"Default Value",required:!1,deprecated:!1},key:{kind:"parameter",type:"object",description:"Set a specific key for producer operations",title:"Key",required:!1,deprecated:!1},oldValue:{kind:"parameter",type:"object",description:"Set a specific old value for some producer operations",title:"Old Value",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"PUT",enum:["PUT","PUTASYNC","PUTALL","PUTALLASYNC","PUTIFABSENT","PUTIFABSENTASYNC","GET","GETORDEFAULT","CONTAINSKEY","CONTAINSVALUE","REMOVE","REMOVEASYNC","REPLACE","REPLACEASYNC","SIZE","CLEAR","CLEARASYNC","QUERY","STATS","COMPUTE","COMPUTEASYNC"],description:"The operation to perform",title:"Operation",required:!1,deprecated:!1},value:{kind:"parameter",type:"object",description:"Set a specific value for producer operations",title:"Value",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},cacheContainer:{kind:"parameter",type:"object",description:"Specifies the cache Container to connect",title:"Cache Container",required:!1,deprecated:!1},cacheContainerConfiguration:{kind:"parameter",type:"object",description:"The CacheContainer configuration. Used if the cacheContainer is not defined.",title:"Cache Container Configuration",required:!1,deprecated:!1},configurationProperties:{kind:"parameter",type:"object",description:"Implementation specific properties for the CacheManager",title:"Configuration Properties",required:!1,deprecated:!1},configurationUri:{kind:"parameter",type:"string",description:"An implementation specific URI for the CacheManager",title:"Configuration Uri",required:!1,deprecated:!1},flags:{kind:"parameter",type:"string",description:"A comma separated list of org.infinispan.client.hotrod.Flag to be applied by default on each cache invocation.",title:"Flags",required:!1,deprecated:!1},remappingFunction:{kind:"parameter",type:"object",description:"Set a specific remappingFunction to use in a compute operation.",title:"Remapping Function",required:!1,deprecated:!1},resultHeader:{kind:"parameter",type:"string",description:"Store the operation result in a header instead of the message body. By default, resultHeader == null and the query result is stored in the message body, any existing content in the message body is discarded. If resultHeader is set, the value is used as the name of the header to store the query result and the original message body is preserved. This value can be overridden by an in message header named: CamelInfinispanOperationResultHeader",title:"Result Header",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Define the password to access the infinispan instance",title:"Password",required:!1,deprecated:!1},saslMechanism:{kind:"parameter",type:"string",description:"Define the SASL Mechanism to access the infinispan instance",title:"Sasl Mechanism",required:!1,deprecated:!1},securityRealm:{kind:"parameter",type:"string",description:"Define the security realm to access the infinispan instance",title:"Security Realm",required:!1,deprecated:!1},securityServerName:{kind:"parameter",type:"string",description:"Define the security server name to access the infinispan instance",title:"Security Server Name",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Define the username to access the infinispan instance",title:"Username",required:!1,deprecated:!1}}},"infinispan-embedded":{type:"object",title:"Infinispan Embedded",group:"cache,clustering",icon:"generic24.png",description:"Read and write from/to Infinispan distributed key/value store and data grid.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache to use. Use current to use the existing cache name from the currently configured cached manager. Or use default for the default cache manager name.",title:"Cache Name",required:!0,deprecated:!1},queryBuilder:{kind:"parameter",type:"object",description:"Specifies the query builder.",title:"Query Builder",required:!1,deprecated:!1},clusteredListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the listener will be installed for the entire cluster",title:"Clustered Listener",required:!1,deprecated:!1},customListener:{kind:"parameter",type:"object",description:"Returns the custom listener in use, if provided",title:"Custom Listener",required:!1,deprecated:!1},eventTypes:{kind:"parameter",type:"string",description:"Specifies the set of event types to register by the consumer.Multiple event can be separated by comma. The possible event types are: CACHE_ENTRY_ACTIVATED, CACHE_ENTRY_PASSIVATED, CACHE_ENTRY_VISITED, CACHE_ENTRY_LOADED, CACHE_ENTRY_EVICTED, CACHE_ENTRY_CREATED, CACHE_ENTRY_REMOVED, CACHE_ENTRY_MODIFIED, TRANSACTION_COMPLETED, TRANSACTION_REGISTERED, CACHE_ENTRY_INVALIDATED, CACHE_ENTRY_EXPIRED, DATA_REHASHED, TOPOLOGY_CHANGED, PARTITION_STATUS_CHANGED, PERSISTENCE_AVAILABILITY_CHANGED",title:"Event Types",required:!1,deprecated:!1},sync:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, the consumer will receive notifications synchronously",title:"Sync",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},defaultValue:{kind:"parameter",type:"object",description:"Set a specific default value for some producer operations",title:"Default Value",required:!1,deprecated:!1},key:{kind:"parameter",type:"object",description:"Set a specific key for producer operations",title:"Key",required:!1,deprecated:!1},oldValue:{kind:"parameter",type:"object",description:"Set a specific old value for some producer operations",title:"Old Value",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"PUT",enum:["PUT","PUTASYNC","PUTALL","PUTALLASYNC","PUTIFABSENT","PUTIFABSENTASYNC","GET","GETORDEFAULT","CONTAINSKEY","CONTAINSVALUE","REMOVE","REMOVEASYNC","REPLACE","REPLACEASYNC","SIZE","CLEAR","CLEARASYNC","QUERY","STATS","COMPUTE","COMPUTEASYNC"],description:"The operation to perform",title:"Operation",required:!1,deprecated:!1},value:{kind:"parameter",type:"object",description:"Set a specific value for producer operations",title:"Value",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},cacheContainer:{kind:"parameter",type:"object",description:"Specifies the cache Container to connect",title:"Cache Container",required:!1,deprecated:!1},cacheContainerConfiguration:{kind:"parameter",type:"object",description:"The CacheContainer configuration. Used if the cacheContainer is not defined.",title:"Cache Container Configuration",required:!1,deprecated:!1},configurationUri:{kind:"parameter",type:"string",description:"An implementation specific URI for the CacheManager",title:"Configuration Uri",required:!1,deprecated:!1},flags:{kind:"parameter",type:"string",description:"A comma separated list of org.infinispan.context.Flag to be applied by default on each cache invocation",title:"Flags",required:!1,deprecated:!1},remappingFunction:{kind:"parameter",type:"object",description:"Set a specific remappingFunction to use in a compute operation.",title:"Remapping Function",required:!1,deprecated:!1},resultHeader:{kind:"parameter",type:"string",description:"Store the operation result in a header instead of the message body. By default, resultHeader == null and the query result is stored in the message body, any existing content in the message body is discarded. If resultHeader is set, the value is used as the name of the header to store the query result and the original message body is preserved. This value can be overridden by an in message header named: CamelInfinispanOperationResultHeader",title:"Result Header",required:!1,deprecated:!1}}},influxdb:{type:"object",title:"InfluxDB",group:"database",icon:"generic24.png",description:"Interact with InfluxDB v1, a time series database.",properties:{connectionBean:{kind:"path",type:"string",description:"Connection to the influx database, of class InfluxDB.class",title:"Connection Bean",required:!0,deprecated:!1},autoCreateDatabase:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if we want to auto create the database if it's not present",title:"Auto Create Database",required:!1,deprecated:!1},batch:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if this operation is a batch operation or not",title:"Batch",required:!1,deprecated:!1},checkDatabaseExistence:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Define if we want to check the database existence while starting the endpoint",title:"Check Database Existence",required:!1,deprecated:!1},databaseName:{kind:"parameter",type:"string",description:"The name of the database where the time series will be stored",title:"Database Name",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",defaultValue:"insert",description:"Define if this operation is an insert or a query",title:"Operation",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"Define the query in case of operation query",title:"Query",required:!1,deprecated:!1},retentionPolicy:{kind:"parameter",type:"string",defaultValue:"default",description:"The string that defines the retention policy to the data created by the endpoint",title:"Retention Policy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},influxdb2:{type:"object",title:"InfluxDB2",group:"database",icon:"generic24.png",description:"Interact with InfluxDB v2, a time series database.",properties:{connectionBean:{kind:"path",type:"string",description:"Connection to the Influx database, of class com.influxdb.client.InfluxDBClient.class.",title:"Connection Bean",required:!0,deprecated:!1},autoCreateBucket:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Define if we want to auto create the bucket if it's not present.",title:"Auto Create Bucket",required:!1,deprecated:!1},autoCreateOrg:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Define if we want to auto create the organization if it's not present.",title:"Auto Create Org",required:!1,deprecated:!1},bucket:{kind:"parameter",type:"string",description:"The name of the bucket where the time series will be stored.",title:"Bucket",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"INSERT",enum:["INSERT","PING"],description:"Define if this operation is an insert of ping.",title:"Operation",required:!1,deprecated:!1},org:{kind:"parameter",type:"string",description:"The name of the organization where the time series will be stored.",title:"Org",required:!0,deprecated:!1},retentionPolicy:{kind:"parameter",type:"string",defaultValue:"default",description:"Define the retention policy to the data created by the endpoint.",title:"Retention Policy",required:!1,deprecated:!1},writePrecision:{kind:"parameter",type:"object",defaultValue:"ms",enum:["ms","s","us","ns"],description:"The format or precision of time series timestamps.",title:"Write Precision",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},irc:{type:"object",title:"IRC",group:"chat",icon:"generic24.png",description:"Send and receive messages to/from and IRC chat.",properties:{hostname:{kind:"path",type:"string",description:"Hostname for the IRC chat server",title:"Hostname",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number for the IRC chat server. If no port is configured then a default port of either 6667, 6668 or 6669 is used.",title:"Port",required:!1,deprecated:!1},autoRejoin:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to auto re-join when being kicked",title:"Auto Rejoin",required:!1,deprecated:!1},channels:{kind:"parameter",type:"string",description:"Comma separated list of IRC channels.",title:"Channels",required:!1,deprecated:!1},commandTimeout:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Delay in milliseconds before sending commands after the connection is established.",title:"Command Timeout",required:!1,deprecated:!1},keys:{kind:"parameter",type:"string",description:"Comma separated list of keys for channels.",title:"Keys",required:!1,deprecated:!1},namesOnJoin:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sends NAMES command to channel after joining it. onReply has to be true in order to process the result which will have the header value irc.num = '353'.",title:"Names On Join",required:!1,deprecated:!1},nickname:{kind:"parameter",type:"string",description:"The nickname used in chat.",title:"Nickname",required:!1,deprecated:!1},persistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Use persistent messages.",title:"Persistent",required:!1,deprecated:!0},realname:{kind:"parameter",type:"string",description:"The IRC user's actual name.",title:"Realname",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},colors:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not the server supports color codes.",title:"Colors",required:!1,deprecated:!1},onJoin:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle user join events.",title:"On Join",required:!1,deprecated:!1},onKick:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle kick events.",title:"On Kick",required:!1,deprecated:!1},onMode:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle mode change events.",title:"On Mode",required:!1,deprecated:!1},onNick:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle nickname change events.",title:"On Nick",required:!1,deprecated:!1},onPart:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle user part events.",title:"On Part",required:!1,deprecated:!1},onPrivmsg:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle private message events.",title:"On Privmsg",required:!1,deprecated:!1},onQuit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle user quit events.",title:"On Quit",required:!1,deprecated:!1},onReply:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to handle general responses to commands or informational messages.",title:"On Reply",required:!1,deprecated:!1},onTopic:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Handle topic change events.",title:"On Topic",required:!1,deprecated:!1},nickPassword:{kind:"parameter",type:"string",description:"Your IRC server nickname password.",title:"Nick Password",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The IRC server password.",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"Used for configuring security using SSL. Reference to a org.apache.camel.support.jsse.SSLContextParameters in the Registry. This reference overrides any configured SSLContextParameters at the component level. Note that this setting overrides the trustManager option.",title:"Ssl Context Parameters",required:!1,deprecated:!1},trustManager:{kind:"parameter",type:"object",description:"The trust manager used to verify the SSL server's certificate.",title:"Trust Manager",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The IRC server user name.",title:"Username",required:!1,deprecated:!1}}},ironmq:{type:"object",title:"IronMQ",group:"cloud,messaging",icon:"generic24.png",description:"Send and receive messages to/from IronMQ an elastic and durable hosted message queue as a service.",properties:{queueName:{kind:"path",type:"string",description:"The name of the IronMQ queue",title:"Queue Name",required:!0,deprecated:!1},client:{kind:"parameter",type:"object",description:"Reference to a io.iron.ironmq.Client in the Registry.",title:"Client",required:!1,deprecated:!1},ironMQCloud:{kind:"parameter",type:"string",defaultValue:"https://mq-aws-us-east-1-1.iron.io",description:"IronMq Cloud url. Urls for public clusters: https://mq-aws-us-east-1-1.iron.io (US) and https://mq-aws-eu-west-1-1.iron.io (EU)",title:"Iron MQCloud",required:!1,deprecated:!1},preserveHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should message headers be preserved when publishing messages. This will add the Camel headers to the Iron MQ message as a json payload with a header list, and a message body. Useful when Camel is both consumer and producer.",title:"Preserve Headers",required:!1,deprecated:!1},projectId:{kind:"parameter",type:"string",description:"IronMQ projectId",title:"Project Id",required:!1,deprecated:!1},token:{kind:"parameter",type:"string",description:"IronMQ token",title:"Token",required:!1,deprecated:!1},batchDelete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should messages be deleted in one batch. This will limit the number of api requests since messages are deleted in one request, instead of one pr. exchange. If enabled care should be taken that the consumer is idempotent when processing exchanges.",title:"Batch Delete",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of concurrent consumers.",title:"Concurrent Consumers",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of messages to poll pr. call. Maximum is 100.",title:"Max Messages Per Poll",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"60",description:"After timeout (in seconds), item will be placed back onto the queue.",title:"Timeout",required:!1,deprecated:!1},wait:{kind:"parameter",type:"integer",description:"Time in seconds to wait for a message to become available. This enables long polling. Default is 0 (does not wait), maximum is 30.",title:"Wait",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},visibilityDelay:{kind:"parameter",type:"integer",description:"The item will not be available on the queue until this many seconds have passed. Default is 0 seconds.",title:"Visibility Delay",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},jcache:{type:"object",title:"JCache",group:"cache,clustering",icon:"generic24.png",description:"Perform caching operations against JSR107/JCache.",properties:{cacheName:{kind:"path",type:"string",description:"The name of the cache",title:"Cache Name",required:!0,deprecated:!1},cacheConfiguration:{kind:"parameter",type:"object",description:"A Configuration for the Cache",title:"Cache Configuration",required:!1,deprecated:!1},cacheConfigurationProperties:{kind:"parameter",type:"object",description:"The Properties for the javax.cache.spi.CachingProvider to create the CacheManager",title:"Cache Configuration Properties",required:!1,deprecated:!1},cachingProvider:{kind:"parameter",type:"string",description:"The fully qualified class name of the javax.cache.spi.CachingProvider",title:"Caching Provider",required:!1,deprecated:!1},configurationUri:{kind:"parameter",type:"string",description:"An implementation specific URI for the CacheManager",title:"Configuration Uri",required:!1,deprecated:!1},managementEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether management gathering is enabled",title:"Management Enabled",required:!1,deprecated:!1},readThrough:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If read-through caching should be used",title:"Read Through",required:!1,deprecated:!1},statisticsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether statistics gathering is enabled",title:"Statistics Enabled",required:!1,deprecated:!1},storeByValue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If cache should use store-by-value or store-by-reference semantics",title:"Store By Value",required:!1,deprecated:!1},writeThrough:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If write-through caching should be used",title:"Write Through",required:!1,deprecated:!1},filteredEvents:{kind:"parameter",type:"string",enum:["CREATED","UPDATED","REMOVED","EXPIRED"],description:"Events a consumer should filter (multiple events can be separated by comma). If using filteredEvents option, then eventFilters one will be ignored",title:"Filtered Events",required:!1,deprecated:!1},oldValueRequired:{kind:"parameter",type:"boolean",defaultValue:"false",description:"if the old value is required for events",title:"Old Value Required",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"if the event listener should block the thread causing the event",title:"Synchronous",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},eventFilters:{kind:"parameter",type:"array",description:"The CacheEntryEventFilter. If using eventFilters option, then filteredEvents one will be ignored",title:"Event Filters",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},action:{kind:"parameter",type:"string",description:"To configure using a cache operation by default. If an operation in the message header, then the operation from the header takes precedence.",title:"Action",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},cacheLoaderFactory:{kind:"parameter",type:"object",description:"The CacheLoader factory",title:"Cache Loader Factory",required:!1,deprecated:!1},cacheWriterFactory:{kind:"parameter",type:"object",description:"The CacheWriter factory",title:"Cache Writer Factory",required:!1,deprecated:!1},createCacheIfNotExists:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Configure if a cache need to be created if it does exist or can't be pre-configured.",title:"Create Cache If Not Exists",required:!1,deprecated:!1},expiryPolicyFactory:{kind:"parameter",type:"object",description:"The ExpiryPolicy factory",title:"Expiry Policy Factory",required:!1,deprecated:!1},lookupProviders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configure if a camel-cache should try to find implementations of jcache api in runtimes like OSGi.",title:"Lookup Providers",required:!1,deprecated:!1}}},jcr:{type:"object",title:"JCR",group:"database,cms",icon:"generic24.png",description:"Read and write nodes to/from a JCR compliant content repository.",properties:{host:{kind:"path",type:"string",description:"Name of the javax.jcr.Repository to lookup from the Camel registry to be used.",title:"Host",required:!0,deprecated:!1},base:{kind:"path",type:"string",description:"Get the base node when accessing the repository",title:"Base",required:!1,deprecated:!1},deep:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When isDeep is true, events whose associated parent node is at absPath or within its subgraph are received.",title:"Deep",required:!1,deprecated:!1},eventTypes:{kind:"parameter",type:"integer",description:"eventTypes (a combination of one or more event types encoded as a bit mask value such as javax.jcr.observation.Event.NODE_ADDED, javax.jcr.observation.Event.NODE_REMOVED, etc.).",title:"Event Types",required:!1,deprecated:!1},nodeTypeNames:{kind:"parameter",type:"string",description:"When a comma separated nodeTypeName list string is set, only events whose associated parent node has one of the node types (or a subtype of one of the node types) in this list will be received.",title:"Node Type Names",required:!1,deprecated:!1},noLocal:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If noLocal is true, then events generated by the session through which the listener was registered are ignored. Otherwise, they are not ignored.",title:"No Local",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password for login",title:"Password",required:!1,deprecated:!1},sessionLiveCheckInterval:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Interval in milliseconds to wait before each session live checking The default value is 60000 ms.",title:"Session Live Check Interval",required:!1,deprecated:!1},sessionLiveCheckIntervalOnStart:{kind:"parameter",type:"duration",defaultValue:"3000",description:"Interval in milliseconds to wait before the first session live checking. The default value is 3000 ms.",title:"Session Live Check Interval On Start",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username for login",title:"Username",required:!1,deprecated:!1},uuids:{kind:"parameter",type:"string",description:"When a comma separated uuid list string is set, only events whose associated parent node has one of the identifiers in the comma separated uuid list will be received.",title:"Uuids",required:!1,deprecated:!1},workspaceName:{kind:"parameter",type:"string",description:"The workspace to access. If it's not specified then the default one will be used",title:"Workspace Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},jdbc:{type:"object",title:"JDBC",group:"database",icon:"generic24.png",description:"Access databases through SQL and JDBC.",properties:{dataSourceName:{kind:"path",type:"string",description:"Name of DataSource to lookup in the Registry. If the name is dataSource or default, then Camel will attempt to lookup a default DataSource from the registry, meaning if there is a only one instance of DataSource found, then this DataSource will be used.",title:"Data Source Name",required:!0,deprecated:!1},allowNamedParameters:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using named parameters in the queries.",title:"Allow Named Parameters",required:!1,deprecated:!1},outputClass:{kind:"parameter",type:"string",description:"Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.",title:"Output Class",required:!1,deprecated:!1},outputType:{kind:"parameter",type:"object",defaultValue:"SelectList",enum:["SelectOne","SelectList","StreamList"],description:"Determines the output the producer should use.",title:"Output Type",required:!1,deprecated:!1},parameters:{kind:"parameter",type:"object",description:"Optional parameters to the java.sql.Statement. For example to set maxRows, fetchSize etc.",title:"Parameters",required:!1,deprecated:!1},readSize:{kind:"parameter",type:"integer",description:"The default maximum number of rows that can be read by a polling query. The default value is 0.",title:"Read Size",required:!1,deprecated:!1},resetAutoCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag. When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.",title:"Reset Auto Commit",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether transactions are in use.",title:"Transacted",required:!1,deprecated:!1},useGetBytesForBlob:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To read BLOB columns as bytes instead of string data. This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.",title:"Use Get Bytes For Blob",required:!1,deprecated:!1},useHeadersAsParameters:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set this option to true to use the prepareStatementStrategy with named parameters. This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.",title:"Use Headers As Parameters",required:!1,deprecated:!1},useJDBC4ColumnNameAndLabelSemantics:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name. JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel. Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your JDBC driver if you get problem using this component This option is default true.",title:"Use JDBC4 Column Name And Label Semantics",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},beanRowMapper:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass. The default implementation will lower case the row names and skip underscores, and dashes. For example CUST_ID is mapped as custId.",title:"Bean Row Mapper",required:!1,deprecated:!1},connectionStrategy:{kind:"parameter",type:"object",description:"To use a custom strategy for working with connections. Do not use a custom strategy when using the spring-jdbc component because a special Spring ConnectionStrategy is used by default to support Spring Transactions.",title:"Connection Strategy",required:!1,deprecated:!1},prepareStatementStrategy:{kind:"parameter",type:"object",description:"Allows the plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.",title:"Prepare Statement Strategy",required:!1,deprecated:!1}}},jetty:{type:"object",title:"Jetty",group:"http",icon:"generic24.png",description:"Expose HTTP endpoints using Jetty 11.",properties:{httpUri:{kind:"path",type:"string",description:"The url of the HTTP endpoint to call.",title:"Http Uri",required:!0,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},httpBinding:{kind:"parameter",type:"object",description:"To use a custom HttpBinding to control the mapping between Camel message and HttpClient.",title:"Http Binding",required:!1,deprecated:!1},chunked:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is false the Servlet will disable the HTTP streaming and set the content-length header on the response",title:"Chunked",required:!1,deprecated:!1},disableStreamCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether or not the raw input stream from Servlet is cached or not (Camel will read the stream into a in memory/overflow to file, Stream caching) cache. By default Camel will cache the Servlet input stream to support reading it multiple times to ensure it Camel can retrieve all data from the stream. However you can set this option to true when you for example need to access the raw stream, such as streaming it directly to a file or other persistent store. DefaultHttpBinding will copy the request input stream into a stream cache and put it into message body if this option is false to support reading the stream multiple times. If you use Servlet to bridge/proxy an endpoint then consider enabling this option to improve performance, in case you do not need to read the message payload multiple times. The http producer will by default cache the response body stream. If setting this option to true, then the producers will not cache the response body stream but use the response stream as-is as the message body.",title:"Disable Stream Cache",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side, and if the caused Exception was send back serialized in the response as a application/x-java-serialized-object content type. On the producer side the exception will be deserialized and thrown as is, instead of the HttpOperationFailedException. The caused exception is required to be serialized. This is by default turned off. If you enable this then be aware that Java will deserialize the incoming data from the request to Java and that can be a potential security risk.",title:"Transfer Exception",required:!1,deprecated:!1},async:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configure the consumer to work in async mode",title:"Async",required:!1,deprecated:!1},continuationTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Allows to set a timeout in millis when using Jetty as consumer (server). By default Jetty uses 30000. You can use a value of = 0 to never expire. If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client. This option is only in use when using Jetty with the Asynchronous Routing Engine.",title:"Continuation Timeout",required:!1,deprecated:!1},enableCORS:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.",title:"Enable CORS",required:!1,deprecated:!1},enableJmx:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.",title:"Enable Jmx",required:!1,deprecated:!1},enableMultipartFilter:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether org.apache.camel.component.jetty.MultiPartFilter is enabled or not. You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.",title:"Enable Multipart Filter",required:!1,deprecated:!1},httpMethodRestrict:{kind:"parameter",type:"string",description:"Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc. Multiple methods can be specified separated by comma.",title:"Http Method Restrict",required:!1,deprecated:!1},matchOnUriPrefix:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found.",title:"Match On Uri Prefix",required:!1,deprecated:!1},muteException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side the response's body won't contain the exception's stack trace.",title:"Mute Exception",required:!1,deprecated:!1},responseBufferSize:{kind:"parameter",type:"integer",description:"To use a custom buffer size on the jakarta.servlet.ServletResponse.",title:"Response Buffer Size",required:!1,deprecated:!1},sendDateHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, jetty server will send the date header to the client which sends the request. NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.",title:"Send Date Header",required:!1,deprecated:!1},sendServerVersion:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If the option is true, jetty will send the server header with the jetty version information to the client which sends the request. NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.",title:"Send Server Version",required:!1,deprecated:!1},sessionSupport:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable the session manager on the server side of Jetty.",title:"Session Support",required:!1,deprecated:!1},useContinuation:{kind:"parameter",type:"boolean",description:"Whether or not to use Jetty continuations for the Jetty Server.",title:"Use Continuation",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},eagerCheckContentAvailable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to eager check whether the HTTP requests has content if the content-length header is 0 or not present. This can be turned on in case HTTP clients do not send streamed data.",title:"Eager Check Content Available",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},filterInitParameters:{kind:"parameter",type:"object",description:"Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.",title:"Filter Init Parameters",required:!1,deprecated:!1},filters:{kind:"parameter",type:"array",description:"Allows using a custom filters which is putted into a list and can be find in the Registry. Multiple values can be separated by comma.",title:"Filters",required:!1,deprecated:!1},handlers:{kind:"parameter",type:"array",description:"Specifies a comma-delimited set of Handler instances to lookup in your Registry. These handlers are added to the Jetty servlet context (for example, to add security). Important: You can not use different handlers with different Jetty endpoints using the same port number. The handlers is associated to the port number. If you need different handlers, then use different port numbers.",title:"Handlers",required:!1,deprecated:!1},mapHttpMessageBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Body of the exchange will be mapped to HTTP body. Setting this to false will avoid the HTTP mapping.",title:"Map Http Message Body",required:!1,deprecated:!1},mapHttpMessageFormUrlEncodedBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Form Encoded body of the exchange will be mapped to HTTP. Setting this to false will avoid the HTTP Form Encoded body mapping.",title:"Map Http Message Form Url Encoded Body",required:!1,deprecated:!1},mapHttpMessageHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Headers of the exchange will be mapped to HTTP headers. Setting this to false will avoid the HTTP Headers mapping.",title:"Map Http Message Headers",required:!1,deprecated:!1},multipartFilter:{kind:"parameter",type:"object",description:"Allows using a custom multipart filter. Note: setting multipartFilterRef forces the value of enableMultipartFilter to true.",title:"Multipart Filter",required:!1,deprecated:!1},optionsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP OPTIONS for this Servlet consumer. By default OPTIONS is turned off.",title:"Options Enabled",required:!1,deprecated:!1},traceEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP TRACE for this Servlet consumer. By default TRACE is turned off.",title:"Trace Enabled",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},jgroups:{type:"object",title:"JGroups",group:"clustering,messaging",icon:"generic24.png",description:"Exchange messages with JGroups clusters.",properties:{clusterName:{kind:"path",type:"string",description:"The name of the JGroups cluster the component should connect to.",title:"Cluster Name",required:!0,deprecated:!1},channelProperties:{kind:"parameter",type:"string",description:"Specifies configuration properties of the JChannel used by the endpoint.",title:"Channel Properties",required:!1,deprecated:!1},enableViewMessages:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the consumer endpoint will receive org.jgroups.View messages as well (not only org.jgroups.Message instances). By default only regular messages are consumed by the endpoint.",title:"Enable View Messages",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"jgroups-raft":{type:"object",title:"JGroups raft",group:"clustering,messaging",icon:"generic24.png",description:"Exchange messages with JGroups-raft clusters.",properties:{clusterName:{kind:"path",type:"string",description:"The name of the JGroupsraft cluster the component should connect to.",title:"Cluster Name",required:!0,deprecated:!1},enableRoleChangeEvents:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the consumer endpoint will receive roleChange event as well (not just connecting and/or using the state machine). By default it is set to false.",title:"Enable Role Change Events",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},jira:{type:"object",title:"Jira",group:"document",icon:"generic24.png",description:"Interact with JIRA issue tracker.",properties:{type:{kind:"path",type:"object",enum:["ADDCOMMENT","ADDISSUE","ATTACH","DELETEISSUE","NEWISSUES","NEWCOMMENTS","WATCHUPDATES","UPDATEISSUE","TRANSITIONISSUE","WATCHERS","ADDISSUELINK","ADDWORKLOG","FETCHISSUE","FETCHCOMMENTS"],description:"Operation to perform. Consumers: NewIssues, NewComments. Producers: AddIssue, AttachFile, DeleteIssue, TransitionIssue, UpdateIssue, Watchers. See this class javadoc description for more information.",title:"Type",required:!0,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"6000",description:"Time in milliseconds to elapse for the next poll.",title:"Delay",required:!1,deprecated:!1},jiraUrl:{kind:"parameter",type:"string",description:"The Jira server url, example: http://my_jira.com:8081",title:"Jira Url",required:!0,deprecated:!1},jql:{kind:"parameter",type:"string",description:"JQL is the query language from JIRA which allows you to retrieve the data you want. For example jql=project=MyProject Where MyProject is the product key in Jira. It is important to use the RAW() and set the JQL inside it to prevent camel parsing it, example: RAW(project in (MYP, COM) AND resolution = Unresolved)",title:"Jql",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"integer",defaultValue:"50",description:"Max number of issues to search for",title:"Max Results",required:!1,deprecated:!1},sendOnlyUpdatedField:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Indicator for sending only changed fields in exchange body or issue object. By default consumer sends only changed fields.",title:"Send Only Updated Field",required:!1,deprecated:!1},watchedFields:{kind:"parameter",type:"string",defaultValue:"Status,Priority",description:"Comma separated list of fields to watch for changes. Status,Priority are the defaults.",title:"Watched Fields",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"(OAuth or Personal Access Token authentication) The access token generated by the Jira server.",title:"Access Token",required:!1,deprecated:!1},consumerKey:{kind:"parameter",type:"string",description:"(OAuth only) The consumer key from Jira settings.",title:"Consumer Key",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"(Basic authentication only) The password or the API Token to authenticate to the Jira server. Use only if username basic authentication is used.",title:"Password",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"string",description:"(OAuth only) The private key generated by the client to encrypt the conversation to the server.",title:"Private Key",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"(Basic authentication only) The username to authenticate to the Jira server. Use only if OAuth is not enabled on the Jira server. Do not set the username and OAuth token parameter, if they are both set, the username basic authentication takes precedence.",title:"Username",required:!1,deprecated:!1},verificationCode:{kind:"parameter",type:"string",description:"(OAuth only) The verification code from Jira generated in the first step of the authorization proccess.",title:"Verification Code",required:!1,deprecated:!1}}},jms:{type:"object",title:"JMS",group:"messaging",icon:"generic24.png",description:"Sent and receive messages to/from a JMS Queue or Topic.",properties:{destinationType:{kind:"path",type:"string",defaultValue:"queue",enum:["queue","topic","temp-queue","temp-topic"],description:"The kind of destination to use",title:"Destination Type",required:!1,deprecated:!1},destinationName:{kind:"path",type:"string",description:"Name of the queue or topic to use as destination",title:"Destination Name",required:!0,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Sets the JMS client ID to use. Note that this value, if specified, must be unique and can only be used by a single JMS connection instance. It is typically only required for durable topic subscriptions. If using Apache ActiveMQ you may prefer to use Virtual Topics instead.",title:"Client Id",required:!1,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"The connection factory to be use. A connection factory must be configured either on the component or endpoint.",title:"Connection Factory",required:!1,deprecated:!1},disableReplyTo:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether Camel ignores the JMSReplyTo header in messages. If true, Camel does not send a reply back to the destination specified in the JMSReplyTo header. You can use this option if you want Camel to consume from a route and you do not want Camel to automatically send back a reply message because another component in your code handles the reply message. You can also use this option if you want to use Camel as a proxy between different message brokers and you want to route message from one system to another.",title:"Disable Reply To",required:!1,deprecated:!1},durableSubscriptionName:{kind:"parameter",type:"string",description:"The durable subscriber name for specifying durable topic subscriptions. The clientId option must be configured as well.",title:"Durable Subscription Name",required:!1,deprecated:!1},jmsMessageType:{kind:"parameter",type:"object",enum:["Bytes","Map","Object","Stream","Text"],description:"Allows you to force the use of a specific jakarta.jms.Message implementation for sending JMS messages. Possible values are: Bytes, Map, Object, Stream, Text. By default, Camel would determine which JMS message type to use from the In body type. This option allows you to specify it.",title:"Jms Message Type",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination (overrides any incoming value of Message.getJMSReplyTo() in consumer).",title:"Reply To",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to test the connection on startup. This ensures that when Camel starts that all the JMS consumers have a valid connection to the JMS broker. If a connection cannot be granted then Camel throws an exception on startup. This ensures that Camel is not started with failed connections. The JMS producers is tested as well.",title:"Test Connection On Startup",required:!1,deprecated:!1},acknowledgementModeName:{kind:"parameter",type:"string",defaultValue:"AUTO_ACKNOWLEDGE",enum:["SESSION_TRANSACTED","CLIENT_ACKNOWLEDGE","AUTO_ACKNOWLEDGE","DUPS_OK_ACKNOWLEDGE"],description:"The JMS acknowledgement name, which is one of: SESSION_TRANSACTED, CLIENT_ACKNOWLEDGE, AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE",title:"Acknowledgement Mode Name",required:!1,deprecated:!1},artemisConsumerPriority:{kind:"parameter",type:"integer",description:"Consumer priorities allow you to ensure that high priority consumers receive messages while they are active. Normally, active consumers connected to a queue receive messages from it in a round-robin fashion. When consumer priorities are in use, messages are delivered round-robin if multiple active consumers exist with the same high priority. Messages will only going to lower priority consumers when the high priority consumers do not have credit available to consume the message, or those high priority consumers have declined to accept the message (for instance because it does not meet the criteria of any selectors associated with the consumer).",title:"Artemis Consumer Priority",required:!1,deprecated:!1},asyncConsumer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the JmsConsumer processes the Exchange asynchronously. If enabled then the JmsConsumer may pickup the next message from the JMS queue, while the previous message is being processed asynchronously (by the Asynchronous Routing Engine). This means that messages may be processed not 100% strictly in order. If disabled (as default) then the Exchange is fully processed before the JmsConsumer will pickup the next message from the JMS queue. Note if transacted has been enabled, then asyncConsumer=true does not run asynchronously, as transaction must be executed synchronously (Camel 3.0 may support async transactions).",title:"Async Consumer",required:!1,deprecated:!1},autoStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether the consumer container should auto-startup.",title:"Auto Startup",required:!1,deprecated:!1},cacheLevel:{kind:"parameter",type:"integer",description:"Sets the cache level by ID for the underlying JMS resources. See cacheLevelName option for more details.",title:"Cache Level",required:!1,deprecated:!1},cacheLevelName:{kind:"parameter",type:"string",defaultValue:"CACHE_AUTO",enum:["CACHE_AUTO","CACHE_CONNECTION","CACHE_CONSUMER","CACHE_NONE","CACHE_SESSION"],description:"Sets the cache level by name for the underlying JMS resources. Possible values are: CACHE_AUTO, CACHE_CONNECTION, CACHE_CONSUMER, CACHE_NONE, and CACHE_SESSION. The default setting is CACHE_AUTO. See the Spring documentation and Transactions Cache Levels for more information.",title:"Cache Level Name",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Concurrent Consumers",required:!1,deprecated:!1},maxConcurrentConsumers:{kind:"parameter",type:"integer",description:"Specifies the maximum number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToMaxConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Max Concurrent Consumers",required:!1,deprecated:!1},replyToDeliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether to use persistent delivery by default for replies.",title:"Reply To Delivery Persistent",required:!1,deprecated:!1},selector:{kind:"parameter",type:"string",description:"Sets the JMS selector to use",title:"Selector",required:!1,deprecated:!1},subscriptionDurable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether to make the subscription durable. The durable subscription name to be used can be specified through the subscriptionName property. Default is false. Set this to true to register a durable subscription, typically in combination with a subscriptionName value (unless your message listener class name is good enough as subscription name). Only makes sense when listening to a topic (pub-sub domain), therefore this method switches the pubSubDomain flag as well.",title:"Subscription Durable",required:!1,deprecated:!1},subscriptionName:{kind:"parameter",type:"string",description:"Set the name of a subscription to create. To be applied in case of a topic (pub-sub domain) with a shared or durable subscription. The subscription name needs to be unique within this client's JMS client id. Default is the class name of the specified message listener. Note: Only 1 concurrent consumer (which is the default of this message listener container) is allowed for each subscription, except for a shared subscription (which requires JMS 2.0).",title:"Subscription Name",required:!1,deprecated:!1},subscriptionShared:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether to make the subscription shared. The shared subscription name to be used can be specified through the subscriptionName property. Default is false. Set this to true to register a shared subscription, typically in combination with a subscriptionName value (unless your message listener class name is good enough as subscription name). Note that shared subscriptions may also be durable, so this flag can (and often will) be combined with subscriptionDurable as well. Only makes sense when listening to a topic (pub-sub domain), therefore this method switches the pubSubDomain flag as well. Requires a JMS 2.0 compatible message broker.",title:"Subscription Shared",required:!1,deprecated:!1},acceptMessagesWhileStopping:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether the consumer accept messages while it is stopping. You may consider enabling this option, if you start and stop JMS routes at runtime, while there are still messages enqueued on the queue. If this option is false, and you stop the JMS route, then messages may be rejected, and the JMS broker would have to attempt redeliveries, which yet again may be rejected, and eventually the message may be moved at a dead letter queue on the JMS broker. To avoid this its recommended to enable this option.",title:"Accept Messages While Stopping",required:!1,deprecated:!1},allowReplyManagerQuickStop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the DefaultMessageListenerContainer used in the reply managers for request-reply messaging allow the DefaultMessageListenerContainer.runningAllowed flag to quick stop in case JmsConfiguration#isAcceptMessagesWhileStopping is enabled, and org.apache.camel.CamelContext is currently being stopped. This quick stop ability is enabled by default in the regular JMS consumers but to enable for reply managers you must enable this flag.",title:"Allow Reply Manager Quick Stop",required:!1,deprecated:!1},consumerType:{kind:"parameter",type:"object",defaultValue:"Default",enum:["Simple","Default","Custom"],description:"The consumer type to use, which can be one of: Simple, Default, or Custom. The consumer type determines which Spring JMS listener to use. Default will use org.springframework.jms.listener.DefaultMessageListenerContainer, Simple will use org.springframework.jms.listener.SimpleMessageListenerContainer. When Custom is specified, the MessageListenerContainerFactory defined by the messageListenerContainerFactory option will determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use.",title:"Consumer Type",required:!1,deprecated:!1},defaultTaskExecutorType:{kind:"parameter",type:"object",enum:["ThreadPool","SimpleAsync"],description:"Specifies what default TaskExecutor type to use in the DefaultMessageListenerContainer, for both consumer endpoints and the ReplyTo consumer of producer endpoints. Possible values: SimpleAsync (uses Spring's SimpleAsyncTaskExecutor) or ThreadPool (uses Spring's ThreadPoolTaskExecutor with optimal values - cached threadpool-like). If not set, it defaults to the previous behaviour, which uses a cached thread pool for consumer endpoints and SimpleAsync for reply consumers. The use of ThreadPool is recommended to reduce thread trash in elastic configurations with dynamically increasing and decreasing concurrent consumers.",title:"Default Task Executor Type",required:!1,deprecated:!1},eagerLoadingOfProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables eager loading of JMS properties and payload as soon as a message is loaded which generally is inefficient as the JMS properties may not be required but sometimes can catch early any issues with the underlying JMS provider and the use of JMS properties. See also the option eagerPoisonBody.",title:"Eager Loading Of Properties",required:!1,deprecated:!1},eagerPoisonBody:{kind:"parameter",type:"string",defaultValue:"Poison JMS message due to ${exception.message}",description:"If eagerLoadingOfProperties is enabled and the JMS message payload (JMS body or JMS properties) is poison (cannot be read/mapped), then set this text as the message body instead so the message can be processed (the cause of the poison are already stored as exception on the Exchange). This can be turned off by setting eagerPoisonBody=false. See also the option eagerLoadingOfProperties.",title:"Eager Poison Body",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},exposeListenerSession:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether the listener session should be exposed when consuming messages.",title:"Expose Listener Session",required:!1,deprecated:!1},replyToConsumerType:{kind:"parameter",type:"object",defaultValue:"Default",enum:["Simple","Default","Custom"],description:"The consumer type of the reply consumer (when doing request/reply), which can be one of: Simple, Default, or Custom. The consumer type determines which Spring JMS listener to use. Default will use org.springframework.jms.listener.DefaultMessageListenerContainer, Simple will use org.springframework.jms.listener.SimpleMessageListenerContainer. When Custom is specified, the MessageListenerContainerFactory defined by the messageListenerContainerFactory option will determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use.",title:"Reply To Consumer Type",required:!1,deprecated:!1},replyToSameDestinationAllowed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a JMS consumer is allowed to send a reply message to the same destination that the consumer is using to consume from. This prevents an endless loop by consuming and sending back the same message to itself.",title:"Reply To Same Destination Allowed",required:!1,deprecated:!1},taskExecutor:{kind:"parameter",type:"object",description:"Allows you to specify a custom task executor for consuming messages.",title:"Task Executor",required:!1,deprecated:!1},deliveryDelay:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets delivery delay to use for send calls for JMS. This option requires JMS 2.0 compliant broker.",title:"Delivery Delay",required:!1,deprecated:!1},deliveryMode:{kind:"parameter",type:"integer",enum:["1","2"],description:"Specifies the delivery mode to be used. Possible values are those defined by jakarta.jms.DeliveryMode. NON_PERSISTENT = 1 and PERSISTENT = 2.",title:"Delivery Mode",required:!1,deprecated:!1},deliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether persistent delivery is used by default.",title:"Delivery Persistent",required:!1,deprecated:!1},explicitQosEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set if the deliveryMode, priority or timeToLive qualities of service should be used when sending messages. This option is based on Spring's JmsTemplate. The deliveryMode, priority and timeToLive options are applied to the current endpoint. This contrasts with the preserveMessageQos option, which operates at message granularity, reading QoS properties exclusively from the Camel In message headers.",title:"Explicit Qos Enabled",required:!1,deprecated:!1},formatDateHeadersToIso8601:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether JMS date properties should be formatted according to the ISO 8601 standard.",title:"Format Date Headers To Iso8601",required:!1,deprecated:!1},preserveMessageQos:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set to true, if you want to send message using the QoS settings specified on the message, instead of the QoS settings on the JMS endpoint. The following three headers are considered JMSPriority, JMSDeliveryMode, and JMSExpiration. You can provide all or only some of them. If not provided, Camel will fall back to use the values from the endpoint instead. So, when using this option, the headers override the values from the endpoint. The explicitQosEnabled option, by contrast, will only use options set on the endpoint, and not values from the message header.",title:"Preserve Message Qos",required:!1,deprecated:!1},priority:{kind:"parameter",type:"integer",defaultValue:"4",enum:["1","2","3","4","5","6","7","8","9"],description:"Values greater than 1 specify the message priority when sending (where 1 is the lowest priority and 9 is the highest). The explicitQosEnabled option must also be enabled in order for this option to have any effect.",title:"Priority",required:!1,deprecated:!1},replyToConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when doing request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Concurrent Consumers",required:!1,deprecated:!1},replyToMaxConcurrentConsumers:{kind:"parameter",type:"integer",description:"Specifies the maximum number of concurrent consumers when using request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Max Concurrent Consumers",required:!1,deprecated:!1},replyToOnTimeoutMaxConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the maximum number of concurrent consumers for continue routing when timeout occurred when using request/reply over JMS.",title:"Reply To On Timeout Max Concurrent Consumers",required:!1,deprecated:!1},replyToOverride:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination in the JMS message, which overrides the setting of replyTo. It is useful if you want to forward the message to a remote Queue and receive the reply message from the ReplyTo destination.",title:"Reply To Override",required:!1,deprecated:!1},replyToType:{kind:"parameter",type:"object",enum:["Temporary","Shared","Exclusive"],description:"Allows for explicitly specifying which kind of strategy to use for replyTo queues when doing request/reply over JMS. Possible values are: Temporary, Shared, or Exclusive. By default Camel will use temporary queues. However if replyTo has been configured, then Shared is used by default. This option allows you to use exclusive queues instead of shared ones. See Camel JMS documentation for more details, and especially the notes about the implications if running in a clustered environment, and the fact that Shared reply queues has lower performance than its alternatives Temporary and Exclusive.",title:"Reply To Type",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"duration",defaultValue:"20000",description:"The timeout for waiting for a reply when using the InOut Exchange Pattern (in milliseconds). The default is 20 seconds. You can include the header CamelJmsRequestTimeout to override this endpoint configured timeout value, and thus have per message individual timeout values. See also the requestTimeoutCheckerInterval option.",title:"Request Timeout",required:!1,deprecated:!1},timeToLive:{kind:"parameter",type:"integer",defaultValue:"-1",description:"When sending messages, specifies the time-to-live of the message (in milliseconds).",title:"Time To Live",required:!1,deprecated:!1},allowAdditionalHeaders:{kind:"parameter",type:"string",description:"This option is used to allow additional headers which may have values that are invalid according to JMS specification. For example some message systems such as WMQ do this with header names using prefix JMS_IBM_MQMD_ containing values with byte array or other invalid types. You can specify multiple header names separated by comma, and use as suffix for wildcard matching.",title:"Allow Additional Headers",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow sending messages with no body. If this option is false and the message body is null, then an JMSException is thrown.",title:"Allow Null Body",required:!1,deprecated:!1},alwaysCopyMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, Camel will always make a JMS message copy of the message when it is passed to the producer for sending. Copying the message is needed in some situations, such as when a replyToDestinationSelectorName is set (incidentally, Camel will set the alwaysCopyMessage option to true, if a replyToDestinationSelectorName is set)",title:"Always Copy Message",required:!1,deprecated:!1},correlationProperty:{kind:"parameter",type:"string",description:"When using InOut exchange pattern use this JMS property instead of JMSCorrelationID JMS property to correlate messages. If set messages will be correlated solely on the value of this property JMSCorrelationID property will be ignored and not set by Camel.",title:"Correlation Property",required:!1,deprecated:!1},disableTimeToLive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use this option to force disabling time to live. For example when you do request/reply over JMS, then Camel will by default use the requestTimeout value as time to live on the message being sent. The problem is that the sender and receiver systems have to have their clocks synchronized, so they are in sync. This is not always so easy to archive. So you can use disableTimeToLive=true to not set a time to live value on the sent message. Then the message will not expire on the receiver system. See below in section About time to live for more details.",title:"Disable Time To Live",required:!1,deprecated:!1},forceSendOriginalMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When using mapJmsMessage=false Camel will create a new JMS message to send to a new JMS destination if you touch the headers (get or set) during the route. Set this option to true to force Camel to send the original JMS message that was received.",title:"Force Send Original Message",required:!1,deprecated:!1},includeSentJMSMessageID:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only applicable when sending to JMS destination using InOnly (eg fire and forget). Enabling this option will enrich the Camel Exchange with the actual JMSMessageID that was used by the JMS client when the message was sent to the JMS destination.",title:"Include Sent JMSMessage ID",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},replyToCacheLevelName:{kind:"parameter",type:"string",enum:["CACHE_AUTO","CACHE_CONNECTION","CACHE_CONSUMER","CACHE_NONE","CACHE_SESSION"],description:"Sets the cache level by name for the reply consumer when doing request/reply over JMS. This option only applies when using fixed reply queues (not temporary). Camel will by default use: CACHE_CONSUMER for exclusive or shared w/ replyToSelectorName. And CACHE_SESSION for shared without replyToSelectorName. Some JMS brokers such as IBM WebSphere may require to set the replyToCacheLevelName=CACHE_NONE to work. Note: If using temporary queues then CACHE_NONE is not allowed, and you must use a higher value such as CACHE_CONSUMER or CACHE_SESSION.",title:"Reply To Cache Level Name",required:!1,deprecated:!1},replyToDestinationSelectorName:{kind:"parameter",type:"string",description:"Sets the JMS Selector using the fixed name to be used so you can filter out your own replies from the others when using a shared queue (that is, if you are not using a temporary reply queue).",title:"Reply To Destination Selector Name",required:!1,deprecated:!1},streamMessageTypeEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether StreamMessage type is enabled or not. Message payloads of streaming kind such as files, InputStream, etc will either by sent as BytesMessage or StreamMessage. This option controls which kind will be used. By default BytesMessage is used which enforces the entire message payload to be read into memory. By enabling this option the message payload is read into memory in chunks and each chunk is then written to the StreamMessage until no more data.",title:"Stream Message Type Enabled",required:!1,deprecated:!1},allowSerializedHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Controls whether or not to include serialized headers. Applies only when transferExchange is true. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level.",title:"Allow Serialized Headers",required:!1,deprecated:!1},artemisStreamingEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether optimizing for Apache Artemis streaming mode. This can reduce memory overhead when using Artemis with JMS StreamMessage types. This option must only be enabled if Apache Artemis is being used.",title:"Artemis Streaming Enabled",required:!1,deprecated:!1},asyncStartListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to startup the JmsConsumer message listener asynchronously, when starting a route. For example if a JmsConsumer cannot get a connection to a remote JMS broker, then it may block while retrying and/or failover. This will cause Camel to block while starting routes. By setting this option to true, you will let routes startup, while the JmsConsumer connects to the JMS broker using a dedicated thread in asynchronous mode. If this option is used, then beware that if the connection could not be established, then an exception is logged at WARN level, and the consumer will not be able to receive messages; You can then restart the route to retry.",title:"Async Start Listener",required:!1,deprecated:!1},asyncStopListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to stop the JmsConsumer message listener asynchronously, when stopping a route.",title:"Async Stop Listener",required:!1,deprecated:!1},destinationResolver:{kind:"parameter",type:"object",description:"A pluggable org.springframework.jms.support.destination.DestinationResolver that allows you to use your own resolver (for example, to lookup the real destination in a JNDI registry).",title:"Destination Resolver",required:!1,deprecated:!1},errorHandler:{kind:"parameter",type:"object",description:"Specifies a org.springframework.util.ErrorHandler to be invoked in case of any uncaught exceptions thrown while processing a Message. By default these exceptions will be logged at the WARN level, if no errorHandler has been configured. You can configure logging level and whether stack traces should be logged using errorHandlerLoggingLevel and errorHandlerLogStackTrace options. This makes it much easier to configure, than having to code a custom errorHandler.",title:"Error Handler",required:!1,deprecated:!1},exceptionListener:{kind:"parameter",type:"object",description:"Specifies the JMS Exception Listener that is to be notified of any underlying JMS exceptions.",title:"Exception Listener",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},idleConsumerLimit:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specify the limit for the number of consumers that are allowed to be idle at any given time.",title:"Idle Consumer Limit",required:!1,deprecated:!1},idleTaskExecutionLimit:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the limit for idle executions of a receive task, not having received any message within its execution. If this limit is reached, the task will shut down and leave receiving to other executing tasks (in the case of dynamic scheduling; see the maxConcurrentConsumers setting). There is additional doc available from Spring.",title:"Idle Task Execution Limit",required:!1,deprecated:!1},includeAllJMSXProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to include all JMSXxxx properties when mapping from JMS to Camel Message. Setting this to true will include properties such as JMSXAppID, and JMSXUserID etc. Note: If you are using a custom headerFilterStrategy then this option does not apply.",title:"Include All JMSXProperties",required:!1,deprecated:!1},jmsKeyFormatStrategy:{kind:"parameter",type:"object",enum:["default","passthrough"],description:"Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification. Camel provides two implementations out of the box: default and passthrough. The default strategy will safely marshal dots and hyphens (. and -). The passthrough strategy leaves the key as is. Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters. You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy and refer to it using the # notation.",title:"Jms Key Format Strategy",required:!1,deprecated:!1},mapJmsMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should auto map the received JMS message to a suited payload type, such as jakarta.jms.TextMessage to a String etc.",title:"Map Jms Message",required:!1,deprecated:!1},maxMessagesPerTask:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The number of messages per task. -1 is unlimited. If you use a range for concurrent consumers (eg min max), then this option can be used to set a value to eg 100 to control how fast the consumers will shrink when less work is required.",title:"Max Messages Per Task",required:!1,deprecated:!1},messageConverter:{kind:"parameter",type:"object",description:"To use a custom Spring org.springframework.jms.support.converter.MessageConverter so you can be in control how to map to/from a jakarta.jms.Message.",title:"Message Converter",required:!1,deprecated:!1},messageCreatedStrategy:{kind:"parameter",type:"object",description:"To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of jakarta.jms.Message objects when Camel is sending a JMS message.",title:"Message Created Strategy",required:!1,deprecated:!1},messageIdEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When sending, specifies whether message IDs should be added. This is just an hint to the JMS broker. If the JMS provider accepts this hint, these messages must have the message ID set to null; if the provider ignores the hint, the message ID must be set to its normal unique value.",title:"Message Id Enabled",required:!1,deprecated:!1},messageListenerContainerFactory:{kind:"parameter",type:"object",description:"Registry ID of the MessageListenerContainerFactory used to determine what org.springframework.jms.listener.AbstractMessageListenerContainer to use to consume messages. Setting this will automatically set consumerType to Custom.",title:"Message Listener Container Factory",required:!1,deprecated:!1},messageTimestampEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether timestamps should be enabled by default on sending messages. This is just an hint to the JMS broker. If the JMS provider accepts this hint, these messages must have the timestamp set to zero; if the provider ignores the hint the timestamp must be set to its normal value.",title:"Message Timestamp Enabled",required:!1,deprecated:!1},pubSubNoLocal:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to inhibit the delivery of messages published by its own connection.",title:"Pub Sub No Local",required:!1,deprecated:!1},receiveTimeout:{kind:"parameter",type:"duration",defaultValue:"1000",description:"The timeout for receiving messages (in milliseconds).",title:"Receive Timeout",required:!1,deprecated:!1},recoveryInterval:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Specifies the interval between recovery attempts, i.e. when a connection is being refreshed, in milliseconds. The default is 5000 ms, that is, 5 seconds.",title:"Recovery Interval",required:!1,deprecated:!1},requestTimeoutCheckerInterval:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Configures how often Camel should check for timed out Exchanges when doing request/reply over JMS. By default Camel checks once per second. But if you must react faster when a timeout occurs, then you can lower this interval, to check more frequently. The timeout is determined by the option requestTimeout.",title:"Request Timeout Checker Interval",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and you are using Request Reply messaging (InOut) and an Exchange failed on the consumer side, then the caused Exception will be send back in response as a jakarta.jms.ObjectMessage. If the client is Camel, the returned Exception is rethrown. This allows you to use Camel JMS as a bridge in your routing - for example, using persistent queues to enable robust routing. Notice that if you also have transferExchange enabled, this option takes precedence. The caught exception is required to be serializable. The original Exception on the consumer side can be wrapped in an outer exception such as org.apache.camel.RuntimeCamelException when returned to the producer. Use this with caution as the data is using Java Object serialization and requires the received to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumer!",title:"Transfer Exception",required:!1,deprecated:!1},transferExchange:{kind:"parameter",type:"boolean",defaultValue:"false",description:"You can transfer the exchange over the wire instead of just the body and headers. The following fields are transferred: In body, Out body, Fault body, In headers, Out headers, Fault headers, exchange properties, exchange exception. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level. You must enable this option on both the producer and consumer side, so Camel knows the payloads is an Exchange and not a regular payload. Use this with caution as the data is using Java Object serialization and requires the receiver to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumers having to use compatible Camel versions!",title:"Transfer Exchange",required:!1,deprecated:!1},useMessageIDAsCorrelationID:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether JMSMessageID should always be used as JMSCorrelationID for InOut messages.",title:"Use Message IDAs Correlation ID",required:!1,deprecated:!1},waitForProvisionCorrelationToBeUpdatedCounter:{kind:"parameter",type:"integer",defaultValue:"50",description:"Number of times to wait for provisional correlation id to be updated to the actual correlation id when doing request/reply over JMS and when the option useMessageIDAsCorrelationID is enabled.",title:"Wait For Provision Correlation To Be Updated Counter",required:!1,deprecated:!1},waitForProvisionCorrelationToBeUpdatedThreadSleepingTime:{kind:"parameter",type:"duration",defaultValue:"100",description:"Interval in millis to sleep each time while waiting for provisional correlation id to be updated.",title:"Wait For Provision Correlation To Be Updated Thread Sleeping Time",required:!1,deprecated:!1},errorHandlerLoggingLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Allows to configure the default errorHandler logging level for logging uncaught exceptions.",title:"Error Handler Logging Level",required:!1,deprecated:!1},errorHandlerLogStackTrace:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows to control whether stacktraces should be logged or not, by the default errorHandler.",title:"Error Handler Log Stack Trace",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use with the ConnectionFactory. You can also configure username/password directly on the ConnectionFactory.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use with the ConnectionFactory. You can also configure username/password directly on the ConnectionFactory.",title:"Username",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to use transacted mode",title:"Transacted",required:!1,deprecated:!1},transactedInOut:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether InOut operations (request reply) default to using transacted mode If this flag is set to true, then Spring JmsTemplate will have sessionTransacted set to true, and the acknowledgeMode as transacted on the JmsTemplate used for InOut operations. Note from Spring JMS: that within a JTA transaction, the parameters passed to createQueue, createTopic methods are not taken into account. Depending on the Java EE transaction context, the container makes its own decisions on these values. Analogously, these parameters are not taken into account within a locally managed transaction either, since Spring JMS operates on an existing JMS Session in this case. Setting this flag to true will use a short local JMS transaction when running outside of a managed transaction, and a synchronized local JMS transaction in case of a managed transaction (other than an XA transaction) being present. This has the effect of a local JMS transaction being managed alongside the main transaction (which might be a native JDBC transaction), with the JMS transaction committing right after the main transaction.",title:"Transacted In Out",required:!1,deprecated:!1},lazyCreateTransactionManager:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, Camel will create a JmsTransactionManager, if there is no transactionManager injected when option transacted=true.",title:"Lazy Create Transaction Manager",required:!1,deprecated:!1},transactionManager:{kind:"parameter",type:"object",description:"The Spring transaction manager to use.",title:"Transaction Manager",required:!1,deprecated:!1},transactionName:{kind:"parameter",type:"string",description:"The name of the transaction to use.",title:"Transaction Name",required:!1,deprecated:!1},transactionTimeout:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The timeout value of the transaction (in seconds), if using transacted mode.",title:"Transaction Timeout",required:!1,deprecated:!1}}},jmx:{type:"object",title:"JMX",group:"monitoring",icon:"generic24.png",description:"Receive JMX notifications.",properties:{serverURL:{kind:"path",type:"string",description:"Server url comes from the remaining endpoint. Use platform to connect to local JVM.",title:"Server URL",required:!1,deprecated:!1},format:{kind:"parameter",type:"string",defaultValue:"xml",enum:["xml","raw"],description:"Format for the message body. Either xml or raw. If xml, the notification is serialized to xml. If raw, then the raw java object is set as the body.",title:"Format",required:!1,deprecated:!1},granularityPeriod:{kind:"parameter",type:"duration",defaultValue:"10000",description:"The frequency to poll the bean to check the monitor (monitor types only).",title:"Granularity Period",required:!1,deprecated:!1},monitorType:{kind:"parameter",type:"string",enum:["counter","gauge","string"],description:"The type of monitor to create. One of string, gauge, counter (monitor types only).",title:"Monitor Type",required:!1,deprecated:!1},objectDomain:{kind:"parameter",type:"string",description:"The domain for the mbean you're connecting to",title:"Object Domain",required:!0,deprecated:!1},objectName:{kind:"parameter",type:"string",description:"The name key for the mbean you're connecting to. This value is mutually exclusive with the object properties that get passed.",title:"Object Name",required:!1,deprecated:!1},observedAttribute:{kind:"parameter",type:"string",description:"The attribute to observe for the monitor bean or consumer.",title:"Observed Attribute",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},executorService:{kind:"parameter",type:"object",description:"To use a custom shared thread pool for the consumers. By default each consume has their own thread-pool to process and route notifications.",title:"Executor Service",required:!1,deprecated:!1},handback:{kind:"parameter",type:"object",description:"Value to handback to the listener when a notification is received. This value will be put in the message header with the key JMXConstants#JMX_HANDBACK.",title:"Handback",required:!1,deprecated:!1},notificationFilter:{kind:"parameter",type:"object",description:"Reference to a bean that implements the NotificationFilter.",title:"Notification Filter",required:!1,deprecated:!1},objectProperties:{kind:"parameter",type:"object",description:"Properties for the object name. These values will be used if the objectName param is not set",title:"Object Properties",required:!1,deprecated:!1},reconnectDelay:{kind:"parameter",type:"integer",defaultValue:"10",description:"The number of seconds to wait before attempting to retry establishment of the initial connection or attempt to reconnect a lost connection",title:"Reconnect Delay",required:!1,deprecated:!1},reconnectOnConnectionFailure:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true the consumer will attempt to reconnect to the JMX server when any connection failure occurs. The consumer will attempt to re-establish the JMX connection every 'x' seconds until the connection is made-- where 'x' is the configured reconnectionDelay",title:"Reconnect On Connection Failure",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true the consumer will throw an exception if unable to establish the JMX connection upon startup. If false, the consumer will attempt to establish the JMX connection every 'x' seconds until the connection is made -- where 'x' is the configured reconnectionDelay",title:"Test Connection On Startup",required:!1,deprecated:!1},initThreshold:{kind:"parameter",type:"integer",description:"Initial threshold for the monitor. The value must exceed this before notifications are fired (counter monitor only).",title:"Init Threshold",required:!1,deprecated:!1},modulus:{kind:"parameter",type:"integer",description:"The value at which the counter is reset to zero (counter monitor only).",title:"Modulus",required:!1,deprecated:!1},offset:{kind:"parameter",type:"integer",description:"The amount to increment the threshold after it's been exceeded (counter monitor only).",title:"Offset",required:!1,deprecated:!1},differenceMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, then the value reported in the notification is the difference from the threshold as opposed to the value itself (counter and gauge monitor only).",title:"Difference Mode",required:!1,deprecated:!1},notifyHigh:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the gauge will fire a notification when the high threshold is exceeded (gauge monitor only).",title:"Notify High",required:!1,deprecated:!1},notifyLow:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the gauge will fire a notification when the low threshold is exceeded (gauge monitor only).",title:"Notify Low",required:!1,deprecated:!1},thresholdHigh:{kind:"parameter",type:"number",description:"Value for the gauge's high threshold (gauge monitor only).",title:"Threshold High",required:!1,deprecated:!1},thresholdLow:{kind:"parameter",type:"number",description:"Value for the gauge's low threshold (gauge monitor only).",title:"Threshold Low",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Credentials for making a remote connection",title:"Password",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",description:"Credentials for making a remote connection",title:"User",required:!1,deprecated:!1},notifyDiffer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, will fire a notification when the string attribute differs from the string to compare (string monitor or consumer). By default the consumer will notify match if observed attribute and string to compare has been configured.",title:"Notify Differ",required:!1,deprecated:!1},notifyMatch:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, will fire a notification when the string attribute matches the string to compare (string monitor or consumer). By default the consumer will notify match if observed attribute and string to compare has been configured.",title:"Notify Match",required:!1,deprecated:!1},stringToCompare:{kind:"parameter",type:"string",description:"Value for attribute to compare (string monitor or consumer). By default the consumer will notify match if observed attribute and string to compare has been configured.",title:"String To Compare",required:!1,deprecated:!1}}},jolt:{type:"object",title:"JOLT",group:"transformation",icon:"generic24.png",description:"JSON to JSON transformation using JOLT.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},inputType:{kind:"parameter",type:"object",defaultValue:"Hydrated",enum:["Hydrated","JsonString"],description:"Specifies if the input is hydrated JSON or a JSON String.",title:"Input Type",required:!1,deprecated:!1},outputType:{kind:"parameter",type:"object",defaultValue:"Hydrated",enum:["Hydrated","JsonString"],description:"Specifies if the output should be hydrated JSON or a JSON String.",title:"Output Type",required:!1,deprecated:!1},transformDsl:{kind:"parameter",type:"object",defaultValue:"Chainr",enum:["Chainr","Shiftr","Defaultr","Removr","Sortr"],description:"Specifies the Transform DSL of the endpoint resource. If none is specified Chainr will be used.",title:"Transform Dsl",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},jooq:{type:"object",title:"JOOQ",group:"database",icon:"generic24.png",description:"Store and retrieve Java objects from an SQL database using JOOQ.",properties:{entityType:{kind:"path",type:"string",description:"JOOQ entity class",title:"Entity Type",required:!1,deprecated:!1},databaseConfiguration:{kind:"parameter",type:"object",description:"To use a specific database configuration",title:"Database Configuration",required:!1,deprecated:!1},consumeDelete:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Delete entity after it is consumed",title:"Consume Delete",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",defaultValue:"NONE",enum:["EXECUTE","FETCH","NONE"],description:"Type of operation to execute on query",title:"Operation",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"To execute plain SQL query",title:"Query",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},jpa:{type:"object",title:"JPA",group:"database",icon:"generic24.png",description:"Store and retrieve Java objects from databases using Java Persistence API (JPA).",properties:{entityType:{kind:"path",type:"string",description:"Entity class name",title:"Entity Type",required:!0,deprecated:!1},joinTransaction:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The camel-jpa component will join transaction by default. You can use this option to turn this off, for example if you use LOCAL_RESOURCE and join transaction doesn't work with your JPA provider. This option can also be set globally on the JpaComponent, instead of having to set it on all endpoints.",title:"Join Transaction",required:!1,deprecated:!1},maximumResults:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Set the maximum number of results to retrieve on the Query.",title:"Maximum Results",required:!1,deprecated:!1},namedQuery:{kind:"parameter",type:"string",description:"To use a named query.",title:"Named Query",required:!1,deprecated:!1},nativeQuery:{kind:"parameter",type:"string",description:"To use a custom native query. You may want to use the option resultClass also when using native queries.",title:"Native Query",required:!1,deprecated:!1},persistenceUnit:{kind:"parameter",type:"string",defaultValue:"camel",description:"The JPA persistence unit used by default.",title:"Persistence Unit",required:!0,deprecated:!1},query:{kind:"parameter",type:"string",description:"To use a custom query.",title:"Query",required:!1,deprecated:!1},resultClass:{kind:"parameter",type:"string",description:"Defines the type of the returned payload (we will call entityManager.createNativeQuery(nativeQuery, resultClass) instead of entityManager.createNativeQuery(nativeQuery)). Without this option, we will return an object array. Only has an affect when using in conjunction with native query when consuming data.",title:"Result Class",required:!1,deprecated:!1},consumeDelete:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, the entity is deleted after it is consumed; if false, the entity is not deleted.",title:"Consume Delete",required:!1,deprecated:!1},consumeLockEntity:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether or not to set an exclusive lock on each entity bean while processing the results from polling.",title:"Consume Lock Entity",required:!1,deprecated:!1},deleteHandler:{kind:"parameter",type:"object",description:"To use a custom DeleteHandler to delete the row after the consumer is done processing the exchange",title:"Delete Handler",required:!1,deprecated:!1},lockModeType:{kind:"parameter",type:"object",defaultValue:"PESSIMISTIC_WRITE",enum:["READ","WRITE","OPTIMISTIC","OPTIMISTIC_FORCE_INCREMENT","PESSIMISTIC_READ","PESSIMISTIC_WRITE","PESSIMISTIC_FORCE_INCREMENT","NONE"],description:"To configure the lock mode on the consumer.",title:"Lock Mode Type",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"An integer value to define the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to avoid polling many thousands of messages when starting up the server. Set a value of 0 or negative to disable.",title:"Max Messages Per Poll",required:!1,deprecated:!1},preDeleteHandler:{kind:"parameter",type:"object",description:"To use a custom Pre-DeleteHandler to delete the row after the consumer has read the entity.",title:"Pre Delete Handler",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skipLockedEntity:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To configure whether to use NOWAIT on lock and silently skip the entity.",title:"Skip Locked Entity",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to run the consumer in transacted mode, by which all messages will either commit or rollback, when the entire batch has been processed. The default behavior (false) is to commit all the previously successfully processed messages, and only rollback the last failed message.",title:"Transacted",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},parameters:{kind:"parameter",type:"object",description:"This key/value mapping is used for building the query parameters. It is expected to be of the generic type java.util.Map where the keys are the named parameters of a given JPA query and the values are their corresponding effective values you want to select for. When it's used for producer, Simple expression can be used as a parameter value. It allows you to retrieve parameter values from the message body, header and etc.",title:"Parameters",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},findEntity:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled then the producer will find a single entity by using the message body as key and entityType as the class type. This can be used instead of a query to find a single entity.",title:"Find Entity",required:!1,deprecated:!1},firstResult:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Set the position of the first result to retrieve.",title:"First Result",required:!1,deprecated:!1},flushOnSend:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Flushes the EntityManager after the entity bean has been persisted.",title:"Flush On Send",required:!1,deprecated:!1},outputTarget:{kind:"parameter",type:"string",description:"To put the query (or find) result in a header or property instead of the body. If the value starts with the prefix property:, put the result into the so named property, otherwise into the header.",title:"Output Target",required:!1,deprecated:!1},remove:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicates to use entityManager.remove(entity).",title:"Remove",required:!1,deprecated:!1},singleResult:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled, a query or a find which would return no results or more than one result, will throw an exception instead.",title:"Single Result",required:!1,deprecated:!1},useExecuteUpdate:{kind:"parameter",type:"boolean",description:"To configure whether to use executeUpdate() when producer executes a query. When you use INSERT, UPDATE or DELETE statement as a named query, you need to specify this option to 'true'.",title:"Use Execute Update",required:!1,deprecated:!1},usePersist:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicates to use entityManager.persist(entity) instead of entityManager.merge(entity). Note: entityManager.persist(entity) doesn't work for detached entities (where the EntityManager has to execute an UPDATE instead of an INSERT query)!",title:"Use Persist",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},usePassedInEntityManager:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, then Camel will use the EntityManager from the header JpaConstants.ENTITY_MANAGER instead of the configured entity manager on the component/endpoint. This allows end users to control which entity manager will be in use.",title:"Use Passed In Entity Manager",required:!1,deprecated:!1},entityManagerProperties:{kind:"parameter",type:"object",description:"Additional properties for the entity manager to use.",title:"Entity Manager Properties",required:!1,deprecated:!1},sharedEntityManager:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use Spring's SharedEntityManager for the consumer/producer. Note in most cases joinTransaction should be set to false as this is not an EXTENDED EntityManager.",title:"Shared Entity Manager",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},jslt:{type:"object",title:"JSLT",group:"transformation",icon:"generic24.png",description:"Query or transform JSON payloads using an JSLT.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},mapBigDecimalAsFloats:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the mapper will use the USE_BIG_DECIMAL_FOR_FLOATS in serialization features",title:"Map Big Decimal As Floats",required:!1,deprecated:!1},objectMapper:{kind:"parameter",type:"object",description:"Setting a custom JSON Object Mapper to be used",title:"Object Mapper",required:!1,deprecated:!1},prettyPrint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, JSON in output message is pretty printed.",title:"Pretty Print",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"json-patch":{type:"object",title:"JsonPatch",group:"transformation",icon:"generic24.png",description:"Transforms JSON using JSON patch (RFC 6902).",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"json-validator":{type:"object",title:"JSON Schema Validator",group:"validation",icon:"generic24.png",description:"Validate JSON payloads using NetworkNT JSON Schema.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},failOnNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to fail if no body exists.",title:"Fail On Null Body",required:!1,deprecated:!1},failOnNullHeader:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to fail if no header exists when validating against a header.",title:"Fail On Null Header",required:!1,deprecated:!1},headerName:{kind:"parameter",type:"string",description:"To validate against a header instead of the message body.",title:"Header Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},errorHandler:{kind:"parameter",type:"object",description:"To use a custom ValidatorErrorHandler. The default error handler captures the errors and throws an exception.",title:"Error Handler",required:!1,deprecated:!1},uriSchemaLoader:{kind:"parameter",type:"object",description:"To use a custom schema loader allowing for adding custom format validation. The default implementation will create a schema loader that tries to determine the schema version from the $schema property of the specified schema.",title:"Uri Schema Loader",required:!1,deprecated:!1}}},jsonata:{type:"object",title:"JSONata",group:"transformation",icon:"generic24.png",description:"Transforms JSON payload using JSONata transformation.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},inputType:{kind:"parameter",type:"object",defaultValue:"Jackson",enum:["Jackson","JsonString"],description:"Specifies if the input should be Jackson JsonNode or a JSON String.",title:"Input Type",required:!1,deprecated:!1},outputType:{kind:"parameter",type:"object",defaultValue:"Jackson",enum:["Jackson","JsonString"],description:"Specifies if the output should be Jackson JsonNode or a JSON String.",title:"Output Type",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},jt400:{type:"object",title:"JT400",group:"messaging",icon:"generic24.png",description:"Exchanges messages with an IBM i system using data queues, message queues, or program call. IBM i is the replacement for AS/400 and iSeries servers.",properties:{userID:{kind:"path",type:"string",description:"Returns the ID of the IBM i user.",title:"User ID",required:!0,deprecated:!1},password:{kind:"path",type:"string",description:"Returns the password of the IBM i user.",title:"Password",required:!0,deprecated:!1},systemName:{kind:"path",type:"string",description:"Returns the name of the IBM i system.",title:"System Name",required:!0,deprecated:!1},objectPath:{kind:"path",type:"string",description:"Returns the fully qualified integrated file system path name of the target object of this endpoint.",title:"Object Path",required:!0,deprecated:!1},type:{kind:"path",type:"object",enum:["DTAQ","PGM","SRVPGM","MSGQ"],description:"Whether to work with data queues or remote program call",title:"Type",required:!0,deprecated:!1},ccsid:{kind:"parameter",type:"integer",description:"Sets the CCSID to use for the connection with the IBM i system.",title:"Ccsid",required:!1,deprecated:!1},format:{kind:"parameter",type:"object",defaultValue:"text",enum:["text","binary"],description:"Sets the data format for sending messages.",title:"Format",required:!1,deprecated:!1},guiAvailable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether IBM i prompting is enabled in the environment running Camel.",title:"Gui Available",required:!1,deprecated:!1},keyed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use keyed or non-keyed data queues.",title:"Keyed",required:!1,deprecated:!1},searchKey:{kind:"parameter",type:"string",description:"Search key for keyed data queues.",title:"Search Key",required:!1,deprecated:!1},messageAction:{kind:"parameter",type:"object",defaultValue:"OLD",enum:["OLD","REMOVE","SAME"],description:"Action to be taken on messages when read from a message queue. Messages can be marked as old (OLD), removed from the queue (REMOVE), or neither (SAME).",title:"Message Action",required:!1,deprecated:!1},readTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Timeout in millis the consumer will wait while trying to read a new message of the data queue.",title:"Read Timeout",required:!1,deprecated:!1},searchType:{kind:"parameter",type:"object",defaultValue:"EQ",enum:["EQ","NE","LT","LE","GT","GE"],description:"Search type such as EQ for equal etc.",title:"Search Type",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},sendingReply:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, the consumer endpoint will set the Jt400Constants.MESSAGE_REPLYTO_KEY header of the camel message for any IBM i inquiry messages received. If that message is then routed to a producer endpoint, the action will not be processed as sending a message to the queue, but rather a reply to the specific inquiry message.",title:"Sending Reply",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},outputFieldsIdxArray:{kind:"parameter",type:"object",description:"Specifies which fields (program parameters) are output parameters.",title:"Output Fields Idx Array",required:!1,deprecated:!1},outputFieldsLengthArray:{kind:"parameter",type:"object",description:"Specifies the fields (program parameters) length as in the IBM i program definition.",title:"Output Fields Length Array",required:!1,deprecated:!1},procedureName:{kind:"parameter",type:"string",description:"Procedure name from a service program to call",title:"Procedure Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},secured:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether connections to IBM i are secured with SSL.",title:"Secured",required:!1,deprecated:!1}}},kafka:{type:"object",title:"Kafka",group:"messaging",icon:"generic24.png",description:"Sent and receive messages to/from an Apache Kafka broker.",properties:{topic:{kind:"path",type:"string",description:"Name of the topic to use. On the consumer you can use comma to separate multiple topics. A producer can only send a message to a single topic.",title:"Topic",required:!0,deprecated:!1},additionalProperties:{kind:"parameter",type:"object",description:"Sets additional properties for either kafka consumer or kafka producer in case they can't be set directly on the camel configurations (e.g: new Kafka properties that are not reflected yet in Camel configurations), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http://localhost:8811/avro",title:"Additional Properties",required:!1,deprecated:!1},brokers:{kind:"parameter",type:"string",description:"URL of the Kafka brokers to use. The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers. This option is known as bootstrap.servers in the Kafka documentation.",title:"Brokers",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"The client id is a user-specified string sent in each request to help trace calls. It should logically identify the application making the request.",title:"Client Id",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},reconnectBackoffMaxMs:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.",title:"Reconnect Backoff Max Ms",required:!1,deprecated:!1},shutdownTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Timeout in milliseconds to wait gracefully for the consumer or producer to shutdown and terminate its worker threads.",title:"Shutdown Timeout",required:!1,deprecated:!1},allowManualCommit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow doing manual commits via KafkaManualCommit. If this option is enabled then an instance of KafkaManualCommit is stored on the Exchange message header, which allows end users to access this API and perform manual offset commits via the Kafka consumer.",title:"Allow Manual Commit",required:!1,deprecated:!1},autoCommitEnable:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, periodically commit to ZooKeeper the offset of messages already fetched by the consumer. This committed offset will be used when the process fails as the position from which the new consumer will begin.",title:"Auto Commit Enable",required:!1,deprecated:!1},autoCommitIntervalMs:{kind:"parameter",type:"integer",defaultValue:"5000",description:"The frequency in ms that the consumer offsets are committed to zookeeper.",title:"Auto Commit Interval Ms",required:!1,deprecated:!1},autoOffsetReset:{kind:"parameter",type:"string",defaultValue:"latest",enum:["latest","earliest","none"],description:"What to do when there is no initial offset in ZooKeeper or if an offset is out of range: earliest : automatically reset the offset to the earliest offset latest : automatically reset the offset to the latest offset fail: throw exception to the consumer",title:"Auto Offset Reset",required:!1,deprecated:!1},breakOnFirstError:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This options controls what happens when a consumer is processing an exchange and it fails. If the option is false then the consumer continues to the next message and processes it. If the option is true then the consumer breaks out. Using the default NoopCommitManager will cause the consumer to not commit the offset so that the message is re-attempted. The consumer should use the KafkaManualCommit to determine the best way to handle the message. Using either the SynchCommitManager or the AsynchCommitManager the consumer will seek back to the offset of the message that caused a failure, and then re-attempt to process this message. However this can lead to endless processing of the same message if its bound to fail every time, eg a poison message. Therefore its recommended to deal with that for example by using Camel's error handler.",title:"Break On First Error",required:!1,deprecated:!1},checkCrcs:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatically check the CRC32 of the records consumed. This ensures no on-the-wire or on-disk corruption to the messages occurred. This check adds some overhead, so it may be disabled in cases seeking extreme performance.",title:"Check Crcs",required:!1,deprecated:!1},commitTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"The maximum time, in milliseconds, that the code will wait for a synchronous commit to complete",title:"Commit Timeout Ms",required:!1,deprecated:!1},consumerRequestTimeoutMs:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.",title:"Consumer Request Timeout Ms",required:!1,deprecated:!1},consumersCount:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of consumers that connect to kafka server. Each consumer is run on a separate thread, that retrieves and process the incoming data.",title:"Consumers Count",required:!1,deprecated:!1},fetchMaxBytes:{kind:"parameter",type:"integer",defaultValue:"52428800",description:"The maximum amount of data the server should return for a fetch request This is not an absolute maximum, if the first message in the first non-empty partition of the fetch is larger than this value, the message will still be returned to ensure that the consumer can make progress. The maximum message size accepted by the broker is defined via message.max.bytes (broker config) or max.message.bytes (topic config). Note that the consumer performs multiple fetches in parallel.",title:"Fetch Max Bytes",required:!1,deprecated:!1},fetchMinBytes:{kind:"parameter",type:"integer",defaultValue:"1",description:"The minimum amount of data the server should return for a fetch request. If insufficient data is available the request will wait for that much data to accumulate before answering the request.",title:"Fetch Min Bytes",required:!1,deprecated:!1},fetchWaitMaxMs:{kind:"parameter",type:"integer",defaultValue:"500",description:"The maximum amount of time the server will block before answering the fetch request if there isn't sufficient data to immediately satisfy fetch.min.bytes",title:"Fetch Wait Max Ms",required:!1,deprecated:!1},groupId:{kind:"parameter",type:"string",description:"A string that uniquely identifies the group of consumer processes to which this consumer belongs. By setting the same group id multiple processes indicate that they are all part of the same consumer group. This option is required for consumers.",title:"Group Id",required:!1,deprecated:!1},groupInstanceId:{kind:"parameter",type:"string",description:"A unique identifier of the consumer instance provided by the end user. Only non-empty strings are permitted. If set, the consumer is treated as a static member, which means that only one instance with this ID is allowed in the consumer group at any time. This can be used in combination with a larger session timeout to avoid group rebalances caused by transient unavailability (e.g. process restarts). If not set, the consumer will join the group as a dynamic member, which is the traditional behavior.",title:"Group Instance Id",required:!1,deprecated:!1},headerDeserializer:{kind:"parameter",type:"object",description:"To use a custom KafkaHeaderDeserializer to deserialize kafka headers values",title:"Header Deserializer",required:!1,deprecated:!1},heartbeatIntervalMs:{kind:"parameter",type:"integer",defaultValue:"3000",description:"The expected time between heartbeats to the consumer coordinator when using Kafka's group management facilities. Heartbeats are used to ensure that the consumer's session stays active and to facilitate rebalancing when new consumers join or leave the group. The value must be set lower than session.timeout.ms, but typically should be set no higher than 1/3 of that value. It can be adjusted even lower to control the expected time for normal rebalances.",title:"Heartbeat Interval Ms",required:!1,deprecated:!1},keyDeserializer:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.common.serialization.StringDeserializer",description:"Deserializer class for the key that implements the Deserializer interface.",title:"Key Deserializer",required:!1,deprecated:!1},maxPartitionFetchBytes:{kind:"parameter",type:"integer",defaultValue:"1048576",description:"The maximum amount of data per-partition the server will return. The maximum total memory used for a request will be #partitions max.partition.fetch.bytes. This size must be at least as large as the maximum message size the server allows or else it is possible for the producer to send messages larger than the consumer can fetch. If that happens, the consumer can get stuck trying to fetch a large message on a certain partition.",title:"Max Partition Fetch Bytes",required:!1,deprecated:!1},maxPollIntervalMs:{kind:"parameter",type:"duration",description:"The maximum delay between invocations of poll() when using consumer group management. This places an upper bound on the amount of time that the consumer can be idle before fetching more records. If poll() is not called before expiration of this timeout, then the consumer is considered failed and the group will rebalance in order to reassign the partitions to another member.",title:"Max Poll Interval Ms",required:!1,deprecated:!1},maxPollRecords:{kind:"parameter",type:"integer",defaultValue:"500",description:"The maximum number of records returned in a single call to poll()",title:"Max Poll Records",required:!1,deprecated:!1},offsetRepository:{kind:"parameter",type:"object",description:"The offset repository to use in order to locally store the offset of each partition of the topic. Defining one will disable the autocommit.",title:"Offset Repository",required:!1,deprecated:!1},partitionAssignor:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.clients.consumer.RangeAssignor",description:"The class name of the partition assignment strategy that the client will use to distribute partition ownership amongst consumer instances when group management is used",title:"Partition Assignor",required:!1,deprecated:!1},pollOnError:{kind:"parameter",type:"object",defaultValue:"ERROR_HANDLER",enum:["DISCARD","ERROR_HANDLER","RECONNECT","RETRY","STOP"],description:"What to do if kafka threw an exception while polling for new messages. Will by default use the value from the component configuration unless an explicit value has been configured on the endpoint level. DISCARD will discard the message and continue to poll next message. ERROR_HANDLER will use Camel's error handler to process the exception, and afterwards continue to poll next message. RECONNECT will re-connect the consumer and try poll the message again RETRY will let the consumer retry polling the same message again STOP will stop the consumer (have to be manually started/restarted if the consumer should be able to consume messages again)",title:"Poll On Error",required:!1,deprecated:!1},pollTimeoutMs:{kind:"parameter",type:"duration",defaultValue:"5000",description:"The timeout used when polling the KafkaConsumer.",title:"Poll Timeout Ms",required:!1,deprecated:!1},seekTo:{kind:"parameter",type:"object",enum:["BEGINNING","END"],description:"Set if KafkaConsumer will read from the beginning or the end on startup: SeekPolicy.BEGINNING: read from the beginning. SeekPolicy.END: read from the end.",title:"Seek To",required:!1,deprecated:!1},sessionTimeoutMs:{kind:"parameter",type:"integer",defaultValue:"45000",description:"The timeout used to detect failures when using Kafka's group management facilities.",title:"Session Timeout Ms",required:!1,deprecated:!1},specificAvroReader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This enables the use of a specific Avro reader for use with the Confluent Platform schema registry and the io.confluent.kafka.serializers.KafkaAvroDeserializer. This option is only available in the Confluent Platform (not standard Apache Kafka)",title:"Specific Avro Reader",required:!1,deprecated:!1},topicIsPattern:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the topic is a pattern (regular expression). This can be used to subscribe to dynamic number of topics matching the pattern.",title:"Topic Is Pattern",required:!1,deprecated:!1},valueDeserializer:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.common.serialization.StringDeserializer",description:"Deserializer class for value that implements the Deserializer interface.",title:"Value Deserializer",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},isolationLevel:{kind:"parameter",type:"string",defaultValue:"read_uncommitted",enum:["read_uncommitted","read_committed"],description:"Controls how to read messages written transactionally. If set to read_committed, consumer.poll() will only return transactional messages which have been committed. If set to read_uncommitted (the default), consumer.poll() will return all messages, even transactional messages which have been aborted. Non-transactional messages will be returned unconditionally in either mode. Messages will always be returned in offset order. Hence, in read_committed mode, consumer.poll() will only return messages up to the last stable offset (LSO), which is the one less than the offset of the first open transaction. In particular any messages appearing after messages belonging to ongoing transactions will be withheld until the relevant transaction has been completed. As a result, read_committed consumers will not be able to read up to the high watermark when there are in flight transactions. Further, when in read_committed the seekToEnd method will return the LSO",title:"Isolation Level",required:!1,deprecated:!1},kafkaManualCommitFactory:{kind:"parameter",type:"object",description:"Factory to use for creating KafkaManualCommit instances. This allows to plugin a custom factory to create custom KafkaManualCommit instances in case special logic is needed when doing manual commits that deviates from the default implementation that comes out of the box.",title:"Kafka Manual Commit Factory",required:!1,deprecated:!1},batchWithIndividualHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If this feature is enabled and a single element of a batch is an Exchange or Message, the producer will generate individual kafka header values for it by using the batch Message to determine the values. Normal behaviour consists in always using the same header values (which are determined by the parent Exchange which contains the Iterable or Iterator).",title:"Batch With Individual Headers",required:!1,deprecated:!1},bufferMemorySize:{kind:"parameter",type:"integer",defaultValue:"33554432",description:"The total bytes of memory the producer can use to buffer records waiting to be sent to the server. If records are sent faster than they can be delivered to the server the producer will either block or throw an exception based on the preference specified by block.on.buffer.full.This setting should correspond roughly to the total memory the producer will use, but is not a hard bound since not all memory the producer uses is used for buffering. Some additional memory will be used for compression (if compression is enabled) as well as for maintaining in-flight requests.",title:"Buffer Memory Size",required:!1,deprecated:!1},compressionCodec:{kind:"parameter",type:"string",defaultValue:"none",enum:["none","gzip","snappy","lz4","zstd"],description:"This parameter allows you to specify the compression codec for all data generated by this producer. Valid values are none, gzip, snappy, lz4 and zstd.",title:"Compression Codec",required:!1,deprecated:!1},connectionMaxIdleMs:{kind:"parameter",type:"integer",defaultValue:"540000",description:"Close idle connections after the number of milliseconds specified by this config.",title:"Connection Max Idle Ms",required:!1,deprecated:!1},deliveryTimeoutMs:{kind:"parameter",type:"integer",defaultValue:"120000",description:"An upper bound on the time to report success or failure after a call to send() returns. This limits the total time that a record will be delayed prior to sending, the time to await acknowledgement from the broker (if expected), and the time allowed for retriable send failures.",title:"Delivery Timeout Ms",required:!1,deprecated:!1},enableIdempotence:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When set to 'true', the producer will ensure that exactly one copy of each message is written in the stream. If 'false', producer retries due to broker failures, etc., may write duplicates of the retried message in the stream. Note that enabling idempotence requires max.in.flight.requests.per.connection to be less than or equal to 5 (with message ordering preserved for any allowable value), retries to be greater than 0, and acks must be 'all'. Idempotence is enabled by default if no conflicting configurations are set. If conflicting configurations are set and idempotence is not explicitly enabled, idempotence is disabled. If idempotence is explicitly enabled and conflicting configurations are set, a ConfigException is thrown.",title:"Enable Idempotence",required:!1,deprecated:!1},headerSerializer:{kind:"parameter",type:"object",description:"To use a custom KafkaHeaderSerializer to serialize kafka headers values",title:"Header Serializer",required:!1,deprecated:!1},key:{kind:"parameter",type:"string",description:"The record key (or null if no key is specified). If this option has been configured then it take precedence over header KafkaConstants#KEY",title:"Key",required:!1,deprecated:!1},keySerializer:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.common.serialization.StringSerializer",description:"The serializer class for keys (defaults to the same as for messages if nothing is given).",title:"Key Serializer",required:!1,deprecated:!1},lingerMs:{kind:"parameter",type:"integer",defaultValue:"0",description:"The producer groups together any records that arrive in between request transmissions into a single batched request. Normally this occurs only under load when records arrive faster than they can be sent out. However in some circumstances the client may want to reduce the number of requests even under moderate load. This setting accomplishes this by adding a small amount of artificial delay that is, rather than immediately sending out a record the producer will wait for up to the given delay to allow other records to be sent so that they can be batched together. This can be thought of as analogous to Nagle's algorithm in TCP. This setting gives the upper bound on the delay for batching: once we get batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if we have fewer than this many bytes accumulated for this partition we will 'linger' for the specified time waiting for more records to show up. This setting defaults to 0 (i.e. no delay). Setting linger.ms=5, for example, would have the effect of reducing the number of requests sent but would add up to 5ms of latency to records sent in the absense of load.",title:"Linger Ms",required:!1,deprecated:!1},maxBlockMs:{kind:"parameter",type:"integer",defaultValue:"60000",description:"The configuration controls how long the KafkaProducer's send(), partitionsFor(), initTransactions(), sendOffsetsToTransaction(), commitTransaction() and abortTransaction() methods will block. For send() this timeout bounds the total time waiting for both metadata fetch and buffer allocation (blocking in the user-supplied serializers or partitioner is not counted against this timeout). For partitionsFor() this timeout bounds the time spent waiting for metadata if it is unavailable. The transaction-related methods always block, but may time out if the transaction coordinator could not be discovered or did not respond within the timeout.",title:"Max Block Ms",required:!1,deprecated:!1},maxInFlightRequest:{kind:"parameter",type:"integer",defaultValue:"5",description:"The maximum number of unacknowledged requests the client will send on a single connection before blocking. Note that if this setting is set to be greater than 1 and there are failed sends, there is a risk of message re-ordering due to retries (i.e., if retries are enabled).",title:"Max In Flight Request",required:!1,deprecated:!1},maxRequestSize:{kind:"parameter",type:"integer",defaultValue:"1048576",description:"The maximum size of a request. This is also effectively a cap on the maximum record size. Note that the server has its own cap on record size which may be different from this. This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.",title:"Max Request Size",required:!1,deprecated:!1},metadataMaxAgeMs:{kind:"parameter",type:"integer",defaultValue:"300000",description:"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions.",title:"Metadata Max Age Ms",required:!1,deprecated:!1},metricReporters:{kind:"parameter",type:"string",description:"A list of classes to use as metrics reporters. Implementing the MetricReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.",title:"Metric Reporters",required:!1,deprecated:!1},metricsSampleWindowMs:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The window of time a metrics sample is computed over.",title:"Metrics Sample Window Ms",required:!1,deprecated:!1},noOfMetricsSample:{kind:"parameter",type:"integer",defaultValue:"2",description:"The number of samples maintained to compute metrics.",title:"No Of Metrics Sample",required:!1,deprecated:!1},partitioner:{kind:"parameter",type:"string",description:"The partitioner class for partitioning messages amongst sub-topics. The default partitioner is based on the hash of the key.",title:"Partitioner",required:!1,deprecated:!1},partitionerIgnoreKeys:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the message keys should be ignored when computing partition. This setting has effect only when partitioner is not set",title:"Partitioner Ignore Keys",required:!1,deprecated:!1},partitionKey:{kind:"parameter",type:"integer",description:"The partition to which the record will be sent (or null if no partition was specified). If this option has been configured then it take precedence over header KafkaConstants#PARTITION_KEY",title:"Partition Key",required:!1,deprecated:!1},producerBatchSize:{kind:"parameter",type:"integer",defaultValue:"16384",description:"The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition. This helps performance on both the client and the server. This configuration controls the default batch size in bytes. No attempt will be made to batch records larger than this size. Requests sent to brokers will contain multiple batches, one for each partition with data available to be sent. A small batch size will make batching less common and may reduce throughput (a batch size of zero will disable batching entirely). A very large batch size may use memory a bit more wastefully as we will always allocate a buffer of the specified batch size in anticipation of additional records.",title:"Producer Batch Size",required:!1,deprecated:!1},queueBufferingMaxMessages:{kind:"parameter",type:"integer",defaultValue:"10000",description:"The maximum number of unsent messages that can be queued up the producer when using async mode before either the producer must be blocked or data must be dropped.",title:"Queue Buffering Max Messages",required:!1,deprecated:!1},receiveBufferBytes:{kind:"parameter",type:"integer",defaultValue:"65536",description:"The size of the TCP receive buffer (SO_RCVBUF) to use when reading data.",title:"Receive Buffer Bytes",required:!1,deprecated:!1},reconnectBackoffMs:{kind:"parameter",type:"integer",defaultValue:"50",description:"The amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all requests sent by the consumer to the broker.",title:"Reconnect Backoff Ms",required:!1,deprecated:!1},recordMetadata:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the producer should store the RecordMetadata results from sending to Kafka. The results are stored in a List containing the RecordMetadata metadata's. The list is stored on a header with the key KafkaConstants#KAFKA_RECORDMETA",title:"Record Metadata",required:!1,deprecated:!1},requestRequiredAcks:{kind:"parameter",type:"string",defaultValue:"all",enum:["all","-1","0","1"],description:"The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the durability of records that are sent. The following settings are allowed: acks=0 If set to zero then the producer will not wait for any acknowledgment from the server at all. The record will be immediately added to the socket buffer and considered sent. No guarantee can be made that the server has received the record in this case, and the retries configuration will not take effect (as the client won't generally know of any failures). The offset given back for each record will always be set to -1. acks=1 This will mean the leader will write the record to its local log but will respond without awaiting full acknowledgement from all followers. In this case should the leader fail immediately after acknowledging the record but before the followers have replicated it then the record will be lost. acks=all This means the leader will wait for the full set of in-sync replicas to acknowledge the record. This guarantees that the record will not be lost as long as at least one in-sync replica remains alive. This is the strongest available guarantee. This is equivalent to the acks=-1 setting. Note that enabling idempotence requires this config value to be 'all'. If conflicting configurations are set and idempotence is not explicitly enabled, idempotence is disabled.",title:"Request Required Acks",required:!1,deprecated:!1},requestTimeoutMs:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The amount of time the broker will wait trying to meet the request.required.acks requirement before sending back an error to the client.",title:"Request Timeout Ms",required:!1,deprecated:!1},retries:{kind:"parameter",type:"integer",description:"Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error. Note that this retry is no different than if the client resent the record upon receiving the error. Produce requests will be failed before the number of retries has been exhausted if the timeout configured by delivery.timeout.ms expires first before successful acknowledgement. Users should generally prefer to leave this config unset and instead use delivery.timeout.ms to control retry behavior. Enabling idempotence requires this config value to be greater than 0. If conflicting configurations are set and idempotence is not explicitly enabled, idempotence is disabled. Allowing retries while setting enable.idempotence to false and max.in.flight.requests.per.connection to 1 will potentially change the ordering of records because if two batches are sent to a single partition, and the first fails and is retried but the second succeeds, then the records in the second batch may appear first.",title:"Retries",required:!1,deprecated:!1},retryBackoffMs:{kind:"parameter",type:"integer",defaultValue:"100",description:"Before each retry, the producer refreshes the metadata of relevant topics to see if a new leader has been elected. Since the leader election takes a bit of time, this property specifies the amount of time that the producer waits before refreshing the metadata.",title:"Retry Backoff Ms",required:!1,deprecated:!1},sendBufferBytes:{kind:"parameter",type:"integer",defaultValue:"131072",description:"Socket write buffer size",title:"Send Buffer Bytes",required:!1,deprecated:!1},valueSerializer:{kind:"parameter",type:"string",defaultValue:"org.apache.kafka.common.serialization.StringSerializer",description:"The serializer class for messages.",title:"Value Serializer",required:!1,deprecated:!1},workerPool:{kind:"parameter",type:"object",description:"To use a custom worker pool for continue routing Exchange after kafka server has acknowledge the message that was sent to it from KafkaProducer using asynchronous non-blocking processing. If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.",title:"Worker Pool",required:!1,deprecated:!1},workerPoolCoreSize:{kind:"parameter",type:"integer",defaultValue:"10",description:"Number of core threads for the worker pool for continue routing Exchange after kafka server has acknowledge the message that was sent to it from KafkaProducer using asynchronous non-blocking processing.",title:"Worker Pool Core Size",required:!1,deprecated:!1},workerPoolMaxSize:{kind:"parameter",type:"integer",defaultValue:"20",description:"Maximum number of threads for the worker pool for continue routing Exchange after kafka server has acknowledge the message that was sent to it from KafkaProducer using asynchronous non-blocking processing.",title:"Worker Pool Max Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},kafkaClientFactory:{kind:"parameter",type:"object",description:"Factory to use for creating org.apache.kafka.clients.consumer.KafkaConsumer and org.apache.kafka.clients.producer.KafkaProducer instances. This allows to configure a custom factory to create instances with logic that extends the vanilla Kafka clients.",title:"Kafka Client Factory",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},schemaRegistryURL:{kind:"parameter",type:"string",description:"URL of the Confluent Platform schema registry servers to use. The format is host1:port1,host2:port2. This is known as schema.registry.url in the Confluent Platform documentation. This option is only available in the Confluent Platform (not standard Apache Kafka)",title:"Schema Registry URL",required:!1,deprecated:!1},interceptorClasses:{kind:"parameter",type:"string",description:"Sets interceptors for producer or consumers. Producer interceptors have to be classes implementing org.apache.kafka.clients.producer.ProducerInterceptor Consumer interceptors have to be classes implementing org.apache.kafka.clients.consumer.ConsumerInterceptor Note that if you use Producer interceptor on a consumer it will throw a class cast exception in runtime",title:"Interceptor Classes",required:!1,deprecated:!1},kerberosBeforeReloginMinTime:{kind:"parameter",type:"integer",defaultValue:"60000",description:"Login thread sleep time between refresh attempts.",title:"Kerberos Before Relogin Min Time",required:!1,deprecated:!1},kerberosConfigLocation:{kind:"parameter",type:"string",description:"Location of the kerberos config file.",title:"Kerberos Config Location",required:!1,deprecated:!1},kerberosInitCmd:{kind:"parameter",type:"string",defaultValue:"/usr/bin/kinit",description:"Kerberos kinit command path. Default is /usr/bin/kinit",title:"Kerberos Init Cmd",required:!1,deprecated:!1},kerberosPrincipalToLocalRules:{kind:"parameter",type:"string",defaultValue:"DEFAULT",description:"A list of rules for mapping from principal names to short names (typically operating system usernames). The rules are evaluated in order and the first rule that matches a principal name is used to map it to a short name. Any later rules in the list are ignored. By default, principal names of the form {username}/{hostname}{REALM} are mapped to {username}. For more details on the format please see the security authorization and acls documentation (at the Apache Kafka project). Multiple values can be separated by comma",title:"Kerberos Principal To Local Rules",required:!1,deprecated:!1},kerberosRenewJitter:{kind:"parameter",type:"number",defaultValue:"0.05",description:"Percentage of random jitter added to the renewal time.",title:"Kerberos Renew Jitter",required:!1,deprecated:!1},kerberosRenewWindowFactor:{kind:"parameter",type:"number",defaultValue:"0.8",description:"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket.",title:"Kerberos Renew Window Factor",required:!1,deprecated:!1},saslJaasConfig:{kind:"parameter",type:"string",description:"Expose the kafka sasl.jaas.config parameter Example: org.apache.kafka.common.security.plain.PlainLoginModule required username=USERNAME password=PASSWORD;",title:"Sasl Jaas Config",required:!1,deprecated:!1},saslKerberosServiceName:{kind:"parameter",type:"string",description:"The Kerberos principal name that Kafka runs as. This can be defined either in Kafka's JAAS config or in Kafka's config.",title:"Sasl Kerberos Service Name",required:!1,deprecated:!1},saslMechanism:{kind:"parameter",type:"string",defaultValue:"GSSAPI",description:"The Simple Authentication and Security Layer (SASL) Mechanism used. For the valid values see http://www.iana.org/assignments/sasl-mechanisms/sasl-mechanisms.xhtml",title:"Sasl Mechanism",required:!1,deprecated:!1},securityProtocol:{kind:"parameter",type:"string",defaultValue:"PLAINTEXT",description:"Protocol used to communicate with brokers. SASL_PLAINTEXT, PLAINTEXT, SASL_SSL and SSL are supported",title:"Security Protocol",required:!1,deprecated:!1},sslCipherSuites:{kind:"parameter",type:"string",description:"A list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported.",title:"Ssl Cipher Suites",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"SSL configuration using a Camel SSLContextParameters object. If configured it's applied before the other SSL endpoint parameters. NOTE: Kafka only supports loading keystore from file locations, so prefix the location with file: in the KeyStoreParameters.resource option.",title:"Ssl Context Parameters",required:!1,deprecated:!1},sslEnabledProtocols:{kind:"parameter",type:"string",description:"The list of protocols enabled for SSL connections. The default is TLSv1.2,TLSv1.3 when running with Java 11 or newer, TLSv1.2 otherwise. With the default value for Java 11, clients and servers will prefer TLSv1.3 if both support it and fallback to TLSv1.2 otherwise (assuming both support at least TLSv1.2). This default should be fine for most cases. Also see the config documentation for SslProtocol.",title:"Ssl Enabled Protocols",required:!1,deprecated:!1},sslEndpointAlgorithm:{kind:"parameter",type:"string",defaultValue:"https",description:"The endpoint identification algorithm to validate server hostname using server certificate. Use none or false to disable server hostname verification.",title:"Ssl Endpoint Algorithm",required:!1,deprecated:!1},sslKeymanagerAlgorithm:{kind:"parameter",type:"string",defaultValue:"SunX509",description:"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine.",title:"Ssl Keymanager Algorithm",required:!1,deprecated:!1},sslKeyPassword:{kind:"parameter",type:"string",description:"The password of the private key in the key store file or the PEM key specified in sslKeystoreKey. This is required for clients only if two-way authentication is configured.",title:"Ssl Key Password",required:!1,deprecated:!1},sslKeystoreLocation:{kind:"parameter",type:"string",description:"The location of the key store file. This is optional for the client and can be used for two-way authentication for the client.",title:"Ssl Keystore Location",required:!1,deprecated:!1},sslKeystorePassword:{kind:"parameter",type:"string",description:"The store password for the key store file. This is optional for the client and only needed if sslKeystoreLocation' is configured. Key store password is not supported for PEM format.",title:"Ssl Keystore Password",required:!1,deprecated:!1},sslKeystoreType:{kind:"parameter",type:"string",defaultValue:"JKS",description:"The file format of the key store file. This is optional for client. Default value is JKS",title:"Ssl Keystore Type",required:!1,deprecated:!1},sslProtocol:{kind:"parameter",type:"string",description:"The SSL protocol used to generate the SSLContext. The default is TLSv1.3 when running with Java 11 or newer, TLSv1.2 otherwise. This value should be fine for most use cases. Allowed values in recent JVMs are TLSv1.2 and TLSv1.3. TLS, TLSv1.1, SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities. With the default value for this config and sslEnabledProtocols, clients will downgrade to TLSv1.2 if the server does not support TLSv1.3. If this config is set to TLSv1.2, clients will not use TLSv1.3 even if it is one of the values in sslEnabledProtocols and the server only supports TLSv1.3.",title:"Ssl Protocol",required:!1,deprecated:!1},sslProvider:{kind:"parameter",type:"string",description:"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM.",title:"Ssl Provider",required:!1,deprecated:!1},sslTrustmanagerAlgorithm:{kind:"parameter",type:"string",defaultValue:"PKIX",description:"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine.",title:"Ssl Trustmanager Algorithm",required:!1,deprecated:!1},sslTruststoreLocation:{kind:"parameter",type:"string",description:"The location of the trust store file.",title:"Ssl Truststore Location",required:!1,deprecated:!1},sslTruststorePassword:{kind:"parameter",type:"string",description:"The password for the trust store file. If a password is not set, trust store file configured will still be used, but integrity checking is disabled. Trust store password is not supported for PEM format.",title:"Ssl Truststore Password",required:!1,deprecated:!1},sslTruststoreType:{kind:"parameter",type:"string",defaultValue:"JKS",description:"The file format of the trust store file. Default value is JKS.",title:"Ssl Truststore Type",required:!1,deprecated:!1}}},kamelet:{type:"object",title:"Kamelet",group:"core",icon:"generic24.png",description:"To call Kamelets",properties:{templateId:{kind:"path",type:"string",description:"The Route Template ID",title:"Template Id",required:!0,deprecated:!1},routeId:{kind:"path",type:"string",description:"The Route ID. Default value notice: The ID will be auto-generated if not provided",title:"Route Id",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},block:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If sending a message to a direct endpoint which has no active consumer, then we can tell the producer to block and wait for the consumer to become active.",title:"Block",required:!1,deprecated:!1},failIfNoConsumers:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the producer should fail by throwing an exception, when sending to a kamelet endpoint with no active consumers.",title:"Fail If No Consumers",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The timeout value to use if block is enabled.",title:"Timeout",required:!1,deprecated:!1},location:{kind:"parameter",type:"string",description:"Location of the Kamelet to use which can be specified as a resource from file system, classpath etc. The location cannot use wildcards, and must refer to a file including extension, for example file:/etc/foo-kamelet.xml",title:"Location",required:!1,deprecated:!1}}},knative:{type:"object",title:"Knative",group:"cloud",icon:"generic24.png",description:"Send and receive events from Knative.",properties:{type:{kind:"path",type:"object",enum:["endpoint","channel","event"],description:"The Knative resource type",title:"Type",required:!1,deprecated:!1},typeId:{kind:"path",type:"string",description:"The identifier of the Knative resource",title:"Type Id",required:!1,deprecated:!1},ceOverride:{kind:"parameter",type:"object",description:"CloudEvent headers to override",title:"Ce Override",required:!1,deprecated:!1},cloudEventsSpecVersion:{kind:"parameter",type:"string",defaultValue:"1.0",enum:["1.0","1.0.1"],description:"Set the version of the cloudevents spec.",title:"Cloud Events Spec Version",required:!1,deprecated:!1},cloudEventsType:{kind:"parameter",type:"string",defaultValue:"org.apache.camel.event",description:"Set the event-type information of the produced events.",title:"Cloud Events Type",required:!1,deprecated:!1},environment:{kind:"parameter",type:"object",description:"The environment",title:"Environment",required:!1,deprecated:!1},filters:{kind:"parameter",type:"object",description:"Set the filters.",title:"Filters",required:!1,deprecated:!1},transportOptions:{kind:"parameter",type:"object",description:"Set the transport options.",title:"Transport Options",required:!1,deprecated:!1},replyWithCloudEvent:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Transforms the reply into a cloud event that will be processed by the caller. When listening to events from a Knative Broker, if this flag is enabled, replies will be published to the same Broker where the request comes from (beware that if you don't change the type of the received message, you may create a loop and receive your same reply). When this flag is disabled, CloudEvent headers are removed from the reply.",title:"Reply With Cloud Event",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},reply:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If the consumer should construct a full reply to knative request.",title:"Reply",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The version of the k8s resource referenced by the endpoint.",title:"Api Version",required:!1,deprecated:!1},kind:{kind:"parameter",type:"string",description:"The type of the k8s resource referenced by the endpoint.",title:"Kind",required:!1,deprecated:!1},name:{kind:"parameter",type:"string",description:"The name of the k8s resource referenced by the endpoint.",title:"Name",required:!1,deprecated:!1}}},"kubernetes-config-maps":{type:"object",title:"Kubernetes ConfigMap",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes ConfigMaps and get notified on ConfigMaps changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-custom-resources":{type:"object",title:"Kubernetes Custom Resources",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Custom Resources and get notified on Deployment changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-deployments":{type:"object",title:"Kubernetes Deployments",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Deployments and get notified on Deployment changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-events":{type:"object",title:"Kubernetes Event",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Events and get notified on Events changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-hpa":{type:"object",title:"Kubernetes HPA",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Horizontal Pod Autoscalers (HPA) and get notified on HPA changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-job":{type:"object",title:"Kubernetes Job",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Jobs.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-namespaces":{type:"object",title:"Kubernetes Namespaces",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Namespaces and get notified on Namespace changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-nodes":{type:"object",title:"Kubernetes Nodes",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Nodes and get notified on Node changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-persistent-volumes":{type:"object",title:"Kubernetes Persistent Volume",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Persistent Volumes and get notified on Persistent Volume changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-persistent-volumes-claims":{type:"object",title:"Kubernetes Persistent Volume Claim",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Persistent Volumes Claims and get notified on Persistent Volumes Claim changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-pods":{type:"object",title:"Kubernetes Pods",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Pods and get notified on Pod changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-replication-controllers":{type:"object",title:"Kubernetes Replication Controller",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Replication Controllers and get notified on Replication Controllers changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-resources-quota":{type:"object",title:"Kubernetes Resources Quota",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Resources Quotas.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-secrets":{type:"object",title:"Kubernetes Secrets",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Secrets.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-service-accounts":{type:"object",title:"Kubernetes Service Account",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Service Accounts.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"kubernetes-services":{type:"object",title:"Kubernetes Services",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Kubernetes Services and get notified on Service changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},kudu:{type:"object",title:"Kudu",group:"database,iot,cloud",icon:"generic24.png",description:"Interact with Apache Kudu, a free and open source column-oriented data store of the Apache Hadoop ecosystem.",properties:{host:{kind:"path",type:"string",description:"Host of the server to connect to",title:"Host",required:!1,deprecated:!1},port:{kind:"path",type:"string",description:"Port of the server to connect to",title:"Port",required:!1,deprecated:!1},tableName:{kind:"path",type:"string",description:"Table to connect to",title:"Table Name",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["INSERT","DELETE","UPDATE","UPSERT","CREATE_TABLE","SCAN"],description:"Operation to perform",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},language:{type:"object",title:"Language",group:"core,script",icon:"generic24.png",description:"Execute scripts in any of the languages supported by Camel.",properties:{languageName:{kind:"path",type:"string",enum:["bean","constant","csimple","datasonnet","exchangeProperty","file","groovy","header","hl7terser","joor","jq","jsonpath","mvel","ognl","ref","simple","spel","sql","tokenize","xpath","xquery","xtokenize"],description:"Sets the name of the language to use",title:"Language Name",required:!0,deprecated:!1},resourceUri:{kind:"path",type:"string",description:"Path to the resource, or a reference to lookup a bean in the Registry to use as the resource",title:"Resource Uri",required:!1,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},binary:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the script is binary content or text content. By default the script is read as text content (eg java.lang.String)",title:"Binary",required:!1,deprecated:!1},cacheScript:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to cache the compiled script and reuse Notice reusing the script can cause side effects from processing one Camel org.apache.camel.Exchange to the next org.apache.camel.Exchange.",title:"Cache Script",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},resultType:{kind:"parameter",type:"string",description:"Sets the class of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},script:{kind:"parameter",type:"string",description:"Sets the script to execute",title:"Script",required:!1,deprecated:!1},transform:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not the result of the script should be used as message body. This options is default true.",title:"Transform",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},ldap:{type:"object",title:"LDAP",group:"database,security",icon:"generic24.png",description:"Perform searches on LDAP servers.",properties:{dirContextName:{kind:"path",type:"string",description:"Name of either a javax.naming.directory.DirContext, or java.util.Hashtable, or Map bean to lookup in the registry. If the bean is either a Hashtable or Map then a new javax.naming.directory.DirContext instance is created for each use. If the bean is a javax.naming.directory.DirContext then the bean is used as given. The latter may not be possible in all situations where the javax.naming.directory.DirContext must not be shared, and in those situations it can be better to use java.util.Hashtable or Map instead.",title:"Dir Context Name",required:!0,deprecated:!1},base:{kind:"parameter",type:"string",defaultValue:"ou=system",description:"The base DN for searches.",title:"Base",required:!1,deprecated:!1},pageSize:{kind:"parameter",type:"integer",description:"When specified the ldap module uses paging to retrieve all results (most LDAP Servers throw an exception when trying to retrieve more than 1000 entries in one query). To be able to use this a LdapContext (subclass of DirContext) has to be passed in as ldapServerBean (otherwise an exception is thrown)",title:"Page Size",required:!1,deprecated:!1},returnedAttributes:{kind:"parameter",type:"string",description:"Comma-separated list of attributes that should be set in each entry of the result",title:"Returned Attributes",required:!1,deprecated:!1},scope:{kind:"parameter",type:"string",defaultValue:"subtree",enum:["object","onelevel","subtree"],description:"Specifies how deeply to search the tree of entries, starting at the base DN.",title:"Scope",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},ldif:{type:"object",title:"LDIF",group:"database,security",icon:"generic24.png",description:"Perform updates on an LDAP server from an LDIF body content.",properties:{ldapConnectionName:{kind:"path",type:"string",description:"The name of the LdapConnection bean to pull from the registry. Note that this must be of scope prototype to avoid it being shared among threads or using a connection that has timed out.",title:"Ldap Connection Name",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},log:{type:"object",title:"Log",group:"core,monitoring",icon:"log24.png",description:"Log messages to the underlying logging mechanism.",properties:{loggerName:{kind:"path",type:"string",description:"Name of the logging category to use",title:"Logger Name",required:!0,deprecated:!1},groupActiveOnly:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If true, will hide stats when no new messages have been received for a time interval, if false, show stats regardless of message traffic.",title:"Group Active Only",required:!1,deprecated:!1},groupDelay:{kind:"parameter",type:"integer",description:"Set the initial delay for stats (in millis)",title:"Group Delay",required:!1,deprecated:!1},groupInterval:{kind:"parameter",type:"integer",description:"If specified will group message stats by this time interval (in millis)",title:"Group Interval",required:!1,deprecated:!1},groupSize:{kind:"parameter",type:"integer",description:"An integer that specifies a group size for throughput logging.",title:"Group Size",required:!1,deprecated:!1},level:{kind:"parameter",type:"string",defaultValue:"INFO",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level to use. The default value is INFO.",title:"Level",required:!1,deprecated:!1},logMask:{kind:"parameter",type:"boolean",description:"If true, mask sensitive information like password or passphrase in the log.",title:"Log Mask",required:!1,deprecated:!1},marker:{kind:"parameter",type:"string",description:"An optional Marker name to use.",title:"Marker",required:!1,deprecated:!1},plain:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled only the body will be printed out",title:"Plain",required:!1,deprecated:!1},sourceLocationLoggerName:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled then the source location of where the log endpoint is used in Camel routes, would be used as logger name, instead of the given name. However, if the source location is disabled or not possible to resolve then the existing logger name will be used.",title:"Source Location Logger Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},exchangeFormatter:{kind:"parameter",type:"object",description:"To use a custom exchange formatter",title:"Exchange Formatter",required:!1,deprecated:!1},maxChars:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Limits the number of characters logged per line.",title:"Max Chars",required:!1,deprecated:!1},multiline:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled then each information is outputted on a newline.",title:"Multiline",required:!1,deprecated:!1},showAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Quick option for turning all options on. (multiline, maxChars has to be manually set if to be used)",title:"Show All",required:!1,deprecated:!1},showAllProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Show all of the exchange properties (both internal and custom).",title:"Show All Properties",required:!1,deprecated:!1},showBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Show the message body.",title:"Show Body",required:!1,deprecated:!1},showBodyType:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Show the body Java type.",title:"Show Body Type",required:!1,deprecated:!1},showCachedStreams:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether Camel should show cached stream bodies or not (org.apache.camel.StreamCache).",title:"Show Cached Streams",required:!1,deprecated:!1},showCaughtException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the exchange has a caught exception, show the exception message (no stack trace). A caught exception is stored as a property on the exchange (using the key org.apache.camel.Exchange#EXCEPTION_CAUGHT) and for instance a doCatch can catch exceptions.",title:"Show Caught Exception",required:!1,deprecated:!1},showException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the exchange has an exception, show the exception message (no stacktrace)",title:"Show Exception",required:!1,deprecated:!1},showExchangeId:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Show the unique exchange ID.",title:"Show Exchange Id",required:!1,deprecated:!1},showExchangePattern:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Shows the Message Exchange Pattern (or MEP for short).",title:"Show Exchange Pattern",required:!1,deprecated:!1},showFiles:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled Camel will output files",title:"Show Files",required:!1,deprecated:!1},showFuture:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled Camel will on Future objects wait for it to complete to obtain the payload to be logged.",title:"Show Future",required:!1,deprecated:!1},showHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Show the message headers.",title:"Show Headers",required:!1,deprecated:!1},showProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Show the exchange properties (only custom). Use showAllProperties to show both internal and custom properties.",title:"Show Properties",required:!1,deprecated:!1},showStackTrace:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Show the stack trace, if an exchange has an exception. Only effective if one of showAll, showException or showCaughtException are enabled.",title:"Show Stack Trace",required:!1,deprecated:!1},showStreams:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether Camel should show stream bodies or not (eg such as java.io.InputStream). Beware if you enable this option then you may not be able later to access the message body as the stream have already been read by this logger. To remedy this you will have to use Stream Caching.",title:"Show Streams",required:!1,deprecated:!1},skipBodyLineSeparator:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to skip line separators when logging the message body. This allows to log the message body in one line, setting this option to false will preserve any line separators from the body, which then will log the body as is.",title:"Skip Body Line Separator",required:!1,deprecated:!1},style:{kind:"parameter",type:"object",defaultValue:"Default",enum:["Default","Tab","Fixed"],description:"Sets the outputs style to use.",title:"Style",required:!1,deprecated:!1}}},lpr:{type:"object",title:"Printer",group:"document",icon:"generic24.png",description:"Send print jobs to printers.",properties:{hostname:{kind:"path",type:"string",description:"Hostname of the printer",title:"Hostname",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number of the printer",title:"Port",required:!1,deprecated:!1},printername:{kind:"path",type:"string",description:"Name of the printer",title:"Printername",required:!1,deprecated:!1},copies:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of copies to print",title:"Copies",required:!1,deprecated:!1},docFlavor:{kind:"parameter",type:"object",description:"Sets DocFlavor to use.",title:"Doc Flavor",required:!1,deprecated:!1},flavor:{kind:"parameter",type:"string",description:"Sets DocFlavor to use.",title:"Flavor",required:!1,deprecated:!1},mediaSize:{kind:"parameter",type:"string",defaultValue:"na-letter",description:"Sets the stationary as defined by enumeration names in the javax.print.attribute.standard.MediaSizeName API. The default setting is to use North American Letter sized stationary. The value's case is ignored, e.g. values of iso_a4 and ISO_A4 may be used.",title:"Media Size",required:!1,deprecated:!1},mediaTray:{kind:"parameter",type:"string",description:"Sets MediaTray supported by the javax.print.DocFlavor API, for example upper,middle etc.",title:"Media Tray",required:!1,deprecated:!1},mimeType:{kind:"parameter",type:"string",description:"Sets mimeTypes supported by the javax.print.DocFlavor API",title:"Mime Type",required:!1,deprecated:!1},orientation:{kind:"parameter",type:"string",defaultValue:"portrait",enum:["portrait","landscape","reverse-portrait","reverse-landscape"],description:"Sets the page orientation.",title:"Orientation",required:!1,deprecated:!1},printerPrefix:{kind:"parameter",type:"string",description:"Sets the prefix name of the printer, it is useful when the printer name does not start with //hostname/printer",title:"Printer Prefix",required:!1,deprecated:!1},sendToPrinter:{kind:"parameter",type:"boolean",defaultValue:"true",description:"etting this option to false prevents sending of the print data to the printer",title:"Send To Printer",required:!1,deprecated:!1},sides:{kind:"parameter",type:"string",defaultValue:"one-sided",enum:["one-sided","duplex","tumble","two-sided-short-edge","two-sided-long-edge"],description:"Sets one sided or two sided printing based on the javax.print.attribute.standard.Sides API",title:"Sides",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},lucene:{type:"object",title:"Lucene",group:"database,search",icon:"generic24.png",description:"Perform inserts or queries against Apache Lucene databases.",properties:{host:{kind:"path",type:"string",description:"The URL to the lucene server",title:"Host",required:!0,deprecated:!1},operation:{kind:"path",type:"object",enum:["insert","query"],description:"Operation to do such as insert or query.",title:"Operation",required:!0,deprecated:!1},analyzer:{kind:"parameter",type:"object",description:"An Analyzer builds TokenStreams, which analyze text. It thus represents a policy for extracting index terms from text. The value for analyzer can be any class that extends the abstract class org.apache.lucene.analysis.Analyzer. Lucene also offers a rich set of analyzers out of the box",title:"Analyzer",required:!1,deprecated:!1},indexDir:{kind:"parameter",type:"string",description:"A file system directory in which index files are created upon analysis of the document by the specified analyzer",title:"Index Dir",required:!1,deprecated:!1},maxHits:{kind:"parameter",type:"integer",description:"An integer value that limits the result set of the search operation",title:"Max Hits",required:!1,deprecated:!1},srcDir:{kind:"parameter",type:"string",description:"An optional directory containing files to be used to be analyzed and added to the index at producer startup.",title:"Src Dir",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},lumberjack:{type:"object",title:"Lumberjack",group:"monitoring",icon:"generic24.png",description:"Receive logs messages using the Lumberjack protocol.",properties:{host:{kind:"path",type:"string",description:"Network interface on which to listen for Lumberjack",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"5044",description:"Network port on which to listen for Lumberjack",title:"Port",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"SSL configuration",title:"Ssl Context Parameters",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},mapstruct:{type:"object",title:"MapStruct",group:"transformation",icon:"generic24.png",description:"Type Conversion using Mapstruct",properties:{className:{kind:"path",type:"string",description:"The fully qualified class name of the POJO that mapstruct should convert to (target)",title:"Class Name",required:!0,deprecated:!1},mandatory:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether there must exist a mapstruct converter to convert to the POJO.",title:"Mandatory",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},master:{type:"object",title:"Master",group:"clustering",icon:"generic24.png",description:"Have only a single consumer in a cluster consuming from a given endpoint; with automatic failover if the JVM dies.",properties:{namespace:{kind:"path",type:"string",description:"The name of the cluster namespace to use",title:"Namespace",required:!0,deprecated:!1},delegateUri:{kind:"path",type:"string",description:"The endpoint uri to use in master/slave mode",title:"Delegate Uri",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},metrics:{type:"object",title:"Metrics",group:"monitoring",icon:"generic24.png",description:"Collect various metrics directly from Camel routes using the DropWizard metrics library.",properties:{metricsType:{kind:"path",type:"object",enum:["gauge","counter","histogram","meter","timer"],description:"Type of metrics",title:"Metrics Type",required:!0,deprecated:!1},metricsName:{kind:"path",type:"string",description:"Name of metrics",title:"Metrics Name",required:!0,deprecated:!1},action:{kind:"parameter",type:"object",enum:["start","stop"],description:"Action when using timer type",title:"Action",required:!1,deprecated:!1},decrement:{kind:"parameter",type:"integer",description:"Decrement value when using counter type",title:"Decrement",required:!1,deprecated:!1},increment:{kind:"parameter",type:"integer",description:"Increment value when using counter type",title:"Increment",required:!1,deprecated:!1},mark:{kind:"parameter",type:"integer",description:"Mark when using meter type",title:"Mark",required:!1,deprecated:!1},subject:{kind:"parameter",type:"object",description:"Subject value when using gauge type",title:"Subject",required:!1,deprecated:!1},value:{kind:"parameter",type:"integer",description:"Value value when using histogram type",title:"Value",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},micrometer:{type:"object",title:"Micrometer",group:"monitoring",icon:"generic24.png",description:"Collect various metrics directly from Camel routes using the Micrometer library.",properties:{metricsType:{kind:"path",type:"object",enum:["counter","summary","timer"],description:"Type of metrics",title:"Metrics Type",required:!0,deprecated:!1},metricsName:{kind:"path",type:"string",description:"Name of metrics",title:"Metrics Name",required:!0,deprecated:!1},tags:{kind:"path",type:"object",description:"Tags of metrics",title:"Tags",required:!1,deprecated:!1},action:{kind:"parameter",type:"string",enum:["start","stop"],description:"Action expression when using timer type",title:"Action",required:!1,deprecated:!1},decrement:{kind:"parameter",type:"string",description:"Decrement value expression when using counter type",title:"Decrement",required:!1,deprecated:!1},increment:{kind:"parameter",type:"string",description:"Increment value expression when using counter type",title:"Increment",required:!1,deprecated:!1},metricsDescription:{kind:"parameter",type:"string",description:"Description of metrics",title:"Metrics Description",required:!1,deprecated:!1},value:{kind:"parameter",type:"string",description:"Value expression when using histogram type",title:"Value",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},mina:{type:"object",title:"Mina",group:"networking",icon:"generic24.png",description:"Socket level networking using TCP or UDP with Apache Mina 2.x.",properties:{protocol:{kind:"path",type:"string",description:"Protocol to use",title:"Protocol",required:!0,deprecated:!1},host:{kind:"path",type:"string",description:"Hostname to use. Use localhost or 0.0.0.0 for local server as consumer. For producer use the hostname or ip address of the remote server.",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number",title:"Port",required:!0,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to disconnect(close) from Mina session right after use. Can be used for both consumer and producer.",title:"Disconnect",required:!1,deprecated:!1},minaLogger:{kind:"parameter",type:"boolean",defaultValue:"false",description:"You can enable the Apache MINA logging filter. Apache MINA uses slf4j logging at INFO level to log all input and output.",title:"Mina Logger",required:!1,deprecated:!1},sync:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to set endpoint as one-way or request-response.",title:"Sync",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"You can configure the timeout that specifies how long to wait for a response from a remote server. The timeout unit is in milliseconds, so 60000 is 60 seconds.",title:"Timeout",required:!1,deprecated:!1},writeTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Maximum amount of time it should take to send data to the MINA session. Default is 10000 milliseconds.",title:"Write Timeout",required:!1,deprecated:!1},clientMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the clientMode is true, mina consumer will connect the address as a TCP client.",title:"Client Mode",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},noReplyLogLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"If sync is enabled this option dictates MinaConsumer which logging level to use when logging a there is no reply to send back.",title:"No Reply Log Level",required:!1,deprecated:!1},cachedAddress:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to create the InetAddress once and reuse. Setting this to false allows to pickup DNS changes in the network.",title:"Cached Address",required:!1,deprecated:!1},lazySessionCreation:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sessions can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started.",title:"Lazy Session Creation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},disconnectOnNoReply:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If sync is enabled then this option dictates MinaConsumer if it should disconnect where there is no reply to send back.",title:"Disconnect On No Reply",required:!1,deprecated:!1},maximumPoolSize:{kind:"parameter",type:"integer",defaultValue:"16",description:"Number of worker threads in the worker pool for TCP and UDP",title:"Maximum Pool Size",required:!1,deprecated:!1},orderedThreadPoolExecutor:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use ordered thread pool, to ensure events are processed orderly on the same channel.",title:"Ordered Thread Pool Executor",required:!1,deprecated:!1},transferExchange:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only used for TCP. You can transfer the exchange over the wire instead of just the body. The following fields are transferred: In body, Out body, fault body, In headers, Out headers, fault headers, exchange properties, exchange exception. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level.",title:"Transfer Exchange",required:!1,deprecated:!1},allowDefaultCodec:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The mina component installs a default codec if both, codec is null and textline is false. Setting allowDefaultCodec to false prevents the mina component from installing a default codec as the first element in the filter chain. This is useful in scenarios where another filter must be the first in the filter chain, like the SSL filter.",title:"Allow Default Codec",required:!1,deprecated:!1},codec:{kind:"parameter",type:"object",description:"To use a custom minda codec implementation.",title:"Codec",required:!1,deprecated:!1},decoderMaxLineLength:{kind:"parameter",type:"integer",defaultValue:"1024",description:"To set the textline protocol decoder max line length. By default the default value of Mina itself is used which are 1024.",title:"Decoder Max Line Length",required:!1,deprecated:!1},encoderMaxLineLength:{kind:"parameter",type:"integer",defaultValue:"-1",description:"To set the textline protocol encoder max line length. By default the default value of Mina itself is used which are Integer.MAX_VALUE.",title:"Encoder Max Line Length",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"You can configure the encoding (a charset name) to use for the TCP textline codec and the UDP protocol. If not provided, Camel will use the JVM default Charset",title:"Encoding",required:!1,deprecated:!1},filters:{kind:"parameter",type:"array",description:"You can set a list of Mina IoFilters to use.",title:"Filters",required:!1,deprecated:!1},textline:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only used for TCP. If no codec is specified, you can use this flag to indicate a text line based codec; if not specified or the value is false, then Object Serialization is assumed over TCP.",title:"Textline",required:!1,deprecated:!1},textlineDelimiter:{kind:"parameter",type:"object",enum:["DEFAULT","AUTO","UNIX","WINDOWS","MAC"],description:"Only used for TCP and if textline=true. Sets the text line delimiter to use. If none provided, Camel will use DEFAULT. This delimiter is used to mark the end of text.",title:"Textline Delimiter",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure SSL security.",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},minio:{type:"object",title:"Minio",group:"cloud,file",icon:"generic24.png",description:"Store and retrieve objects from Minio Storage Service using Minio SDK.",properties:{bucketName:{kind:"path",type:"string",description:"Bucket name",title:"Bucket Name",required:!0,deprecated:!1},autoCreateBucket:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting the autocreation of the bucket if bucket name not exist.",title:"Auto Create Bucket",required:!1,deprecated:!1},customHttpClient:{kind:"parameter",type:"object",description:"Set custom HTTP client for authenticated access.",title:"Custom Http Client",required:!1,deprecated:!1},endpoint:{kind:"parameter",type:"string",description:"Endpoint can be an URL, domain name, IPv4 address or IPv6 address.",title:"Endpoint",required:!1,deprecated:!1},minioClient:{kind:"parameter",type:"object",description:"Reference to a Minio Client object in the registry.",title:"Minio Client",required:!1,deprecated:!1},objectLock:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set when creating new bucket.",title:"Object Lock",required:!1,deprecated:!1},policy:{kind:"parameter",type:"string",description:"The policy for this queue to set in the method.",title:"Policy",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"TCP/IP port number. 80 and 443 are used as defaults for HTTP and HTTPS.",title:"Proxy Port",required:!1,deprecated:!1},region:{kind:"parameter",type:"string",description:"The region in which Minio client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1). You'll need to use the name Region.EU_WEST_1.id()",title:"Region",required:!1,deprecated:!1},secure:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flag to indicate to use secure connection to minio service or not.",title:"Secure",required:!1,deprecated:!1},serverSideEncryption:{kind:"parameter",type:"object",description:"Server-side encryption.",title:"Server Side Encryption",required:!1,deprecated:!1},serverSideEncryptionCustomerKey:{kind:"parameter",type:"object",description:"Server-side encryption for source object while copy/move objects.",title:"Server Side Encryption Customer Key",required:!1,deprecated:!1},autoCloseBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true and includeBody is true, then the MinioObject.close() method will be called on exchange completion. This option is strongly related to includeBody option. In case of setting includeBody to true and autocloseBody to false, it will be up to the caller to close the MinioObject stream. Setting autocloseBody to true, will close the MinioObject stream automatically.",title:"Auto Close Body",required:!1,deprecated:!1},bypassGovernanceMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set this flag if you want to bypassGovernanceMode when deleting a particular object.",title:"Bypass Governance Mode",required:!1,deprecated:!1},deleteAfterRead:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Delete objects from Minio after they have been retrieved. The delete is only performed if the Exchange is committed. If a rollback occurs, the object is not deleted. If this option is false, then the same objects will be retrieve over and over again on the polls. Therefore you need to use the Idempotent Consumer EIP in the route to filter out duplicates. You can filter using the MinioConstants#BUCKET_NAME and MinioConstants#OBJECT_NAME headers, or only the MinioConstants#OBJECT_NAME header.",title:"Delete After Read",required:!1,deprecated:!1},delimiter:{kind:"parameter",type:"string",description:"The delimiter which is used in the ListObjectsRequest to only consume objects we are interested in.",title:"Delimiter",required:!1,deprecated:!1},destinationBucketName:{kind:"parameter",type:"string",description:"Destination bucket name.",title:"Destination Bucket Name",required:!1,deprecated:!1},destinationObjectName:{kind:"parameter",type:"string",description:"Destination object name.",title:"Destination Object Name",required:!1,deprecated:!1},includeBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If it is true, the exchange body will be set to a stream to the contents of the file. If false, the headers will be set with the Minio object metadata, but the body will be null. This option is strongly related to autocloseBody option. In case of setting includeBody to true and autocloseBody to false, it will be up to the caller to close the MinioObject stream. Setting autocloseBody to true, will close the MinioObject stream automatically.",title:"Include Body",required:!1,deprecated:!1},includeFolders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"The flag which is used in the ListObjectsRequest to set include folders.",title:"Include Folders",required:!1,deprecated:!1},includeUserMetadata:{kind:"parameter",type:"boolean",defaultValue:"false",description:"The flag which is used in the ListObjectsRequest to get objects with user meta data.",title:"Include User Metadata",required:!1,deprecated:!1},includeVersions:{kind:"parameter",type:"boolean",defaultValue:"false",description:"The flag which is used in the ListObjectsRequest to get objects with versioning.",title:"Include Versions",required:!1,deprecated:!1},length:{kind:"parameter",type:"integer",description:"Number of bytes of object data from offset.",title:"Length",required:!1,deprecated:!1},matchETag:{kind:"parameter",type:"string",description:"Set match ETag parameter for get object(s).",title:"Match ETag",required:!1,deprecated:!1},maxConnections:{kind:"parameter",type:"integer",defaultValue:"60",description:"Set the maxConnections parameter in the minio client configuration",title:"Max Connections",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",defaultValue:"10",description:"Gets the maximum number of messages as a limit to poll at each polling. Gets the maximum number of messages as a limit to poll at each polling. The default value is 10. Use 0 or a negative number to set it as unlimited.",title:"Max Messages Per Poll",required:!1,deprecated:!1},modifiedSince:{kind:"parameter",type:"object",description:"Set modified since parameter for get object(s).",title:"Modified Since",required:!1,deprecated:!1},moveAfterRead:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Move objects from bucket to a different bucket after they have been retrieved. To accomplish the operation the destinationBucket option must be set. The copy bucket operation is only performed if the Exchange is committed. If a rollback occurs, the object is not moved.",title:"Move After Read",required:!1,deprecated:!1},notMatchETag:{kind:"parameter",type:"string",description:"Set not match ETag parameter for get object(s).",title:"Not Match ETag",required:!1,deprecated:!1},objectName:{kind:"parameter",type:"string",description:"To get the object from the bucket with the given object name.",title:"Object Name",required:!1,deprecated:!1},offset:{kind:"parameter",type:"integer",description:"Start byte position of object data.",title:"Offset",required:!1,deprecated:!1},prefix:{kind:"parameter",type:"string",description:"Object name starts with prefix.",title:"Prefix",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"List recursively than directory structure emulation.",title:"Recursive",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},startAfter:{kind:"parameter",type:"string",description:"list objects in bucket after this object name.",title:"Start After",required:!1,deprecated:!1},unModifiedSince:{kind:"parameter",type:"object",description:"Set un modified since parameter for get object(s).",title:"Un Modified Since",required:!1,deprecated:!1},useVersion1:{kind:"parameter",type:"boolean",defaultValue:"false",description:"when true, version 1 of REST API is used.",title:"Use Version1",required:!1,deprecated:!1},versionId:{kind:"parameter",type:"string",description:"Set specific version_ID of a object when deleting the object.",title:"Version Id",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},deleteAfterWrite:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Delete file object after the Minio file has been uploaded.",title:"Delete After Write",required:!1,deprecated:!1},keyName:{kind:"parameter",type:"string",description:"Setting the key name for an element in the bucket through endpoint parameter.",title:"Key Name",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["copyObject","listObjects","deleteObject","deleteObjects","deleteBucket","listBuckets","getObject","getObjectRange","createDownloadLink","createUploadLink"],description:"The operation to do in case the user don't want to do only an upload.",title:"Operation",required:!1,deprecated:!1},pojoRequest:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If we want to use a POJO request as body or not.",title:"Pojo Request",required:!1,deprecated:!1},storageClass:{kind:"parameter",type:"string",description:"The storage class to set in the request.",title:"Storage Class",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Amazon AWS Secret Access Key or Minio Access Key. If not set camel will connect to service for anonymous access.",title:"Access Key",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Amazon AWS Access Key Id or Minio Secret Key. If not set camel will connect to service for anonymous access.",title:"Secret Key",required:!1,deprecated:!1}}},mllp:{type:"object",title:"MLLP",group:"HEALTH",icon:"generic24.png",description:"Communicate with external systems using the MLLP protocol.",properties:{hostname:{kind:"path",type:"string",description:"Hostname or IP for connection for the TCP connection. The default value is null, which means any local IP address",title:"Hostname",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number for the TCP connection",title:"Port",required:!0,deprecated:!1},autoAck:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enable/Disable the automatic generation of a MLLP Acknowledgement MLLP Consumers only",title:"Auto Ack",required:!1,deprecated:!1},charsetName:{kind:"parameter",type:"string",description:"Sets the default charset to use",title:"Charset Name",required:!1,deprecated:!1},hl7Headers:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enable/Disable the automatic generation of message headers from the HL7 Message MLLP Consumers only",title:"Hl7 Headers",required:!1,deprecated:!1},requireEndOfData:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enable/Disable strict compliance to the MLLP standard. The MLLP standard specifies START_OF_BLOCKhl7 payloadEND_OF_BLOCKEND_OF_DATA, however, some systems do not send the final END_OF_DATA byte. This setting controls whether or not the final END_OF_DATA byte is required or optional.",title:"Require End Of Data",required:!1,deprecated:!1},stringPayload:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enable/Disable converting the payload to a String. If enabled, HL7 Payloads received from external systems will be validated converted to a String. If the charsetName property is set, that character set will be used for the conversion. If the charsetName property is not set, the value of MSH-18 will be used to determine th appropriate character set. If MSH-18 is not set, then the default ISO-8859-1 character set will be use.",title:"String Payload",required:!1,deprecated:!1},validatePayload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable/Disable the validation of HL7 Payloads If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or a MllpInvalidAcknowledgementException will be thrown.",title:"Validate Payload",required:!1,deprecated:!1},acceptTimeout:{kind:"parameter",type:"integer",defaultValue:"60000",description:"Timeout (in milliseconds) while waiting for a TCP connection TCP Server Only",title:"Accept Timeout",required:!1,deprecated:!1},backlog:{kind:"parameter",type:"integer",defaultValue:"5",description:"The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is refused.",title:"Backlog",required:!1,deprecated:!1},bindRetryInterval:{kind:"parameter",type:"integer",defaultValue:"5000",description:"TCP Server Only - The number of milliseconds to wait between bind attempts",title:"Bind Retry Interval",required:!1,deprecated:!1},bindTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"TCP Server Only - The number of milliseconds to retry binding to a server port",title:"Bind Timeout",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to receive incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. If disabled, the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions by logging them at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},lenientBind:{kind:"parameter",type:"boolean",defaultValue:"false",description:"TCP Server Only - Allow the endpoint to start before the TCP ServerSocket is bound. In some environments, it may be desirable to allow the endpoint to start before the TCP ServerSocket is bound.",title:"Lenient Bind",required:!1,deprecated:!1},maxConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"5",description:"The maximum number of concurrent MLLP Consumer connections that will be allowed. If a new connection is received and the maximum is number are already established, the new connection will be reset immediately.",title:"Max Concurrent Consumers",required:!1,deprecated:!1},reuseAddress:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable/disable the SO_REUSEADDR socket option.",title:"Reuse Address",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",defaultValue:"InOut",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Timeout (in milliseconds) for establishing for a TCP connection TCP Client only",title:"Connect Timeout",required:!1,deprecated:!1},idleTimeoutStrategy:{kind:"parameter",type:"object",defaultValue:"RESET",enum:["RESET","CLOSE"],description:"decide what action to take when idle timeout occurs. Possible values are : RESET: set SO_LINGER to 0 and reset the socket CLOSE: close the socket gracefully default is RESET.",title:"Idle Timeout Strategy",required:!1,deprecated:!1},keepAlive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enable/disable the SO_KEEPALIVE socket option.",title:"Keep Alive",required:!1,deprecated:!1},tcpNoDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enable/disable the TCP_NODELAY socket option.",title:"Tcp No Delay",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},maxBufferSize:{kind:"parameter",type:"integer",defaultValue:"1073741824",description:"Maximum buffer size used when receiving or sending data over the wire.",title:"Max Buffer Size",required:!1,deprecated:!1},minBufferSize:{kind:"parameter",type:"integer",defaultValue:"2048",description:"Minimum buffer size used when receiving or sending data over the wire.",title:"Min Buffer Size",required:!1,deprecated:!1},readTimeout:{kind:"parameter",type:"integer",defaultValue:"5000",description:"The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received",title:"Read Timeout",required:!1,deprecated:!1},receiveBufferSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Sets the SO_RCVBUF option to the specified value (in bytes)",title:"Receive Buffer Size",required:!1,deprecated:!1},receiveTimeout:{kind:"parameter",type:"integer",defaultValue:"15000",description:"The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame",title:"Receive Timeout",required:!1,deprecated:!1},sendBufferSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"Sets the SO_SNDBUF option to the specified value (in bytes)",title:"Send Buffer Size",required:!1,deprecated:!1},idleTimeout:{kind:"parameter",type:"integer",description:"The approximate idle time allowed before the Client TCP Connection will be reset. A null value or a value less than or equal to zero will disable the idle timeout.",title:"Idle Timeout",required:!1,deprecated:!1}}},mock:{type:"object",title:"Mock",group:"core,testing",icon:"generic24.png",description:"Test routes and mediation rules using mocks.",properties:{name:{kind:"path",type:"string",description:"Name of mock endpoint",title:"Name",required:!0,deprecated:!1},assertPeriod:{kind:"parameter",type:"duration",description:"Sets a grace period after which the mock endpoint will re-assert to ensure the preliminary assertion is still valid. This is used for example to assert that exactly a number of messages arrives. For example if expected count was set to 5, then the assertion is satisfied when 5 or more message arrives. To ensure that exactly 5 messages arrives, then you would need to wait a little period to ensure no further message arrives. This is what you can use this method for. By default this period is disabled.",title:"Assert Period",required:!1,deprecated:!1},expectedCount:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies the expected number of message exchanges that should be received by this endpoint. Beware: If you want to expect that 0 messages, then take extra care, as 0 matches when the tests starts, so you need to set a assert period time to let the test run for a while to make sure there are still no messages arrived; for that use setAssertPeriod(long). An alternative is to use NotifyBuilder, and use the notifier to know when Camel is done routing some messages, before you call the assertIsSatisfied() method on the mocks. This allows you to not use a fixed assert period, to speedup testing times. If you want to assert that exactly nth message arrives to this mock endpoint, then see also the setAssertPeriod(long) method for further details.",title:"Expected Count",required:!1,deprecated:!1},failFast:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether assertIsSatisfied() should fail fast at the first detected failed expectation while it may otherwise wait for all expected messages to arrive before performing expectations verifications. Is by default true. Set to false to use behavior as in Camel 2.x.",title:"Fail Fast",required:!1,deprecated:!1},log:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To turn on logging when the mock receives an incoming message. This will log only one time at INFO level for the incoming message. For more detailed logging then set the logger to DEBUG level for the org.apache.camel.component.mock.MockEndpoint class.",title:"Log",required:!1,deprecated:!1},reportGroup:{kind:"parameter",type:"integer",description:"A number that is used to turn on throughput logging based on groups of the size.",title:"Report Group",required:!1,deprecated:!1},resultMinimumWaitTime:{kind:"parameter",type:"duration",description:"Sets the minimum expected amount of time (in millis) the assertIsSatisfied() will wait on a latch until it is satisfied",title:"Result Minimum Wait Time",required:!1,deprecated:!1},resultWaitTime:{kind:"parameter",type:"duration",description:"Sets the maximum amount of time (in millis) the assertIsSatisfied() will wait on a latch until it is satisfied",title:"Result Wait Time",required:!1,deprecated:!1},retainFirst:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies to only retain the first nth number of received Exchanges. This is used when testing with big data, to reduce memory consumption by not storing copies of every Exchange this mock endpoint receives. Important: When using this limitation, then the getReceivedCounter() will still return the actual number of received Exchanges. For example if we have received 5000 Exchanges, and have configured to only retain the first 10 Exchanges, then the getReceivedCounter() will still return 5000 but there is only the first 10 Exchanges in the getExchanges() and getReceivedExchanges() methods. When using this method, then some of the other expectation methods is not supported, for example the expectedBodiesReceived(Object...) sets a expectation on the first number of bodies received. You can configure both setRetainFirst(int) and setRetainLast(int) methods, to limit both the first and last received.",title:"Retain First",required:!1,deprecated:!1},retainLast:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies to only retain the last nth number of received Exchanges. This is used when testing with big data, to reduce memory consumption by not storing copies of every Exchange this mock endpoint receives. Important: When using this limitation, then the getReceivedCounter() will still return the actual number of received Exchanges. For example if we have received 5000 Exchanges, and have configured to only retain the last 20 Exchanges, then the getReceivedCounter() will still return 5000 but there is only the last 20 Exchanges in the getExchanges() and getReceivedExchanges() methods. When using this method, then some of the other expectation methods is not supported, for example the expectedBodiesReceived(Object...) sets a expectation on the first number of bodies received. You can configure both setRetainFirst(int) and setRetainLast(int) methods, to limit both the first and last received.",title:"Retain Last",required:!1,deprecated:!1},sleepForEmptyTest:{kind:"parameter",type:"duration",description:"Allows a sleep to be specified to wait to check that this endpoint really is empty when expectedMessageCount(int) is called with zero",title:"Sleep For Empty Test",required:!1,deprecated:!1},copyOnExchange:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to make a deep copy of the incoming Exchange when received at this mock endpoint. Is by default true.",title:"Copy On Exchange",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},mongodb:{type:"object",title:"MongoDB",group:"database",icon:"generic24.png",description:"Perform operations on MongoDB documents and collections.",properties:{connectionBean:{kind:"path",type:"string",description:"Sets the connection bean reference used to lookup a client for connecting to a database if no hosts parameter is present.",title:"Connection Bean",required:!0,deprecated:!1},collection:{kind:"parameter",type:"string",description:"Sets the name of the MongoDB collection to bind to this endpoint",title:"Collection",required:!1,deprecated:!1},collectionIndex:{kind:"parameter",type:"string",description:"Sets the collection index (JSON FORMAT : { field1 : order1, field2 : order2})",title:"Collection Index",required:!1,deprecated:!1},createCollection:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Create collection during initialisation if it doesn't exist. Default is true.",title:"Create Collection",required:!1,deprecated:!1},database:{kind:"parameter",type:"string",description:"Sets the name of the MongoDB database to target",title:"Database",required:!1,deprecated:!1},hosts:{kind:"parameter",type:"string",description:"Host address of mongodb server in host:port format. It's possible also use more than one address, as comma separated list of hosts: host1:port1,host2:port2. If the hosts parameter is specified, the provided connectionBean is ignored.",title:"Hosts",required:!1,deprecated:!1},mongoConnection:{kind:"parameter",type:"object",description:"Sets the connection bean used as a client for connecting to a database.",title:"Mongo Connection",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["findById","findOneByQuery","findAll","findDistinct","insert","save","update","remove","bulkWrite","aggregate","getDbStats","getColStats","count","command"],description:"Sets the operation this endpoint will execute against MongoDB.",title:"Operation",required:!1,deprecated:!1},outputType:{kind:"parameter",type:"object",enum:["DocumentList","Document","MongoIterable"],description:"Convert the output of the producer to the selected type : DocumentList Document or MongoIterable. DocumentList or MongoIterable applies to findAll and aggregate. Document applies to all other operations.",title:"Output Type",required:!1,deprecated:!1},consumerType:{kind:"parameter",type:"string",description:"Consumer type.",title:"Consumer Type",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},appName:{kind:"parameter",type:"string",description:"Sets the logical name of the application. The application name may be used by the client to identify the application to the server, for use in server logs, slow query logs, and profile collection. Default: null",title:"App Name",required:!1,deprecated:!1},compressors:{kind:"parameter",type:"string",description:"Specifies one or more compression algorithms that the driver will attempt to use to compress requests sent to the connected MongoDB instance. Possible values include: zlib, snappy, and zstd. Default: null",title:"Compressors",required:!1,deprecated:!1},connectTimeoutMS:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Specifies the maximum amount of time, in milliseconds, the Java driver waits for a connection to open before timing out. A value of 0 instructs the driver to never time out while waiting for a connection to open. Default: 10000 (10 seconds)",title:"Connect Timeout MS",required:!1,deprecated:!1},cursorRegenerationDelay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"MongoDB tailable cursors will block until new data arrives. If no new data is inserted, after some time the cursor will be automatically freed and closed by the MongoDB server. The client is expected to regenerate the cursor if needed. This value specifies the time to wait before attempting to fetch a new cursor, and if the attempt fails, how long before the next attempt is made. Default value is 1000ms.",title:"Cursor Regeneration Delay",required:!1,deprecated:!1},directConnection:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies that the driver must connect to the host directly. Default: false",title:"Direct Connection",required:!1,deprecated:!1},dynamicity:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether this endpoint will attempt to dynamically resolve the target database and collection from the incoming Exchange properties. Can be used to override at runtime the database and collection specified on the otherwise static endpoint URI. It is disabled by default to boost performance. Enabling it will take a minimal performance hit.",title:"Dynamicity",required:!1,deprecated:!1},heartbeatFrequencyMS:{kind:"parameter",type:"integer",description:"heartbeatFrequencyMS controls when the driver checks the state of the MongoDB deployment. Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. Default: Single-threaded drivers: 60 seconds. Multi-threaded drivers: 10 seconds.",title:"Heartbeat Frequency MS",required:!1,deprecated:!1},loadBalanced:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true the driver will assume that it's connecting to MongoDB through a load balancer.",title:"Load Balanced",required:!1,deprecated:!1},localThresholdMS:{kind:"parameter",type:"integer",defaultValue:"15",description:"The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. Default: 15 milliseconds.",title:"Local Threshold MS",required:!1,deprecated:!1},maxConnecting:{kind:"parameter",type:"integer",defaultValue:"2",description:"Specifies the maximum number of connections a pool may be establishing concurrently. Default: 2",title:"Max Connecting",required:!1,deprecated:!1},maxIdleTimeMS:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies the maximum amount of time, in milliseconds, the Java driver will allow a pooled connection to idle before closing the connection. A value of 0 indicates that there is no upper bound on how long the driver can allow a pooled collection to be idle. Default: 0",title:"Max Idle Time MS",required:!1,deprecated:!1},maxLifeTimeMS:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies the maximum amount of time, in milliseconds, the Java driver will continue to use a pooled connection before closing the connection. A value of 0 indicates that there is no upper bound on how long the driver can keep a pooled connection open. Default: 0",title:"Max Life Time MS",required:!1,deprecated:!1},maxPoolSize:{kind:"parameter",type:"integer",defaultValue:"100",description:"The maximum number of connections in the connection pool. The default value is 100.",title:"Max Pool Size",required:!1,deprecated:!1},maxStalenessSeconds:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Specifies, in seconds, how stale a secondary can be before the driver stops communicating with that secondary. The minimum value is either 90 seconds or the heartbeat frequency plus 10 seconds, whichever is greater. For more information, see the server documentation for the maxStalenessSeconds option. Not providing a parameter or explicitly specifying -1 indicates that there should be no staleness check for secondaries. Default: -1",title:"Max Staleness Seconds",required:!1,deprecated:!1},minPoolSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies the minimum number of connections that must exist at any moment in a single connection pool. Default: 0",title:"Min Pool Size",required:!1,deprecated:!1},readPreference:{kind:"parameter",type:"string",defaultValue:"PRIMARY",enum:["PRIMARY","PRIMARY_PREFERRED","SECONDARY","SECONDARY_PREFERRED","NEAREST"],description:"Configure how MongoDB clients route read operations to the members of a replica set. Possible values are PRIMARY, PRIMARY_PREFERRED, SECONDARY, SECONDARY_PREFERRED or NEAREST",title:"Read Preference",required:!1,deprecated:!1},readPreferenceTags:{kind:"parameter",type:"string",description:"A representation of a tag set as a comma-separated list of colon-separated key-value pairs, e.g. dc:ny,rack:1. Spaces are stripped from beginning and end of all keys and values. To specify a list of tag sets, using multiple readPreferenceTags, e.g. readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:ny;readPreferenceTags= Note the empty value for the last one, which means match any secondary as a last resort. Order matters when using multiple readPreferenceTags.",title:"Read Preference Tags",required:!1,deprecated:!1},replicaSet:{kind:"parameter",type:"string",description:"Specifies that the connection string provided includes multiple hosts. When specified, the driver attempts to find all members of that set.",title:"Replica Set",required:!1,deprecated:!1},retryReads:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies that the driver must retry supported read operations if they fail due to a network error. Default: true",title:"Retry Reads",required:!1,deprecated:!1},retryWrites:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies that the driver must retry supported write operations if they fail due to a network error. Default: true",title:"Retry Writes",required:!1,deprecated:!1},serverSelectionTimeoutMS:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Specifies how long (in milliseconds) to block for server selection before throwing an exception. Default: 30,000 milliseconds.",title:"Server Selection Timeout MS",required:!1,deprecated:!1},socketTimeoutMS:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies the maximum amount of time, in milliseconds, the Java driver will wait to send or receive a request before timing out. A value of 0 instructs the driver to never time out while waiting to send or receive a request. Default: 0",title:"Socket Timeout MS",required:!1,deprecated:!1},srvMaxHosts:{kind:"parameter",type:"integer",description:"The maximum number of hosts from the SRV record to connect to.",title:"Srv Max Hosts",required:!1,deprecated:!1},srvServiceName:{kind:"parameter",type:"string",defaultValue:"mongodb",description:"Specifies the service name of the SRV resource recordsthe driver retrieves to construct your seed list. You must use the DNS Seed List Connection Format in your connection URI to use this option. Default: mongodb",title:"Srv Service Name",required:!1,deprecated:!1},tls:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies that all communication with MongoDB instances should use TLS. Supersedes the ssl option. Default: false",title:"Tls",required:!1,deprecated:!1},tlsAllowInvalidHostnames:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies that the driver should allow invalid hostnames in the certificate for TLS connections. Supersedes sslInvalidHostNameAllowed. Has the same effect as tlsInsecure by setting tlsAllowInvalidHostnames to true. Default: false",title:"Tls Allow Invalid Hostnames",required:!1,deprecated:!1},waitQueueTimeoutMS:{kind:"parameter",type:"integer",defaultValue:"120000",description:"Specifies the maximum amount of time, in milliseconds that a thread may wait for a connection to become available. Default: 120000 (120 seconds)",title:"Wait Queue Timeout MS",required:!1,deprecated:!1},writeConcern:{kind:"parameter",type:"string",defaultValue:"ACKNOWLEDGED",enum:["ACKNOWLEDGED","W1","W2","W3","UNACKNOWLEDGED","JOURNALED","MAJORITY"],description:"Configure the connection bean with the level of acknowledgment requested from MongoDB for write operations to a standalone mongod, replicaset or cluster. Possible values are ACKNOWLEDGED, W1, W2, W3, UNACKNOWLEDGED, JOURNALED or MAJORITY.",title:"Write Concern",required:!1,deprecated:!1},writeResultAsHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"In write operations, it determines whether instead of returning WriteResult as the body of the OUT message, we transfer the IN message to the OUT and attach the WriteResult as a header.",title:"Write Result As Header",required:!1,deprecated:!1},zlibCompressionLevel:{kind:"parameter",type:"integer",description:"Specifies the degree of compression that Zlib should use to decrease the size of requests to the connected MongoDB instance. The level can range from -1 to 9, with lower values compressing faster (but resulting in larger requests) and larger values compressing slower (but resulting in smaller requests). Default: null",title:"Zlib Compression Level",required:!1,deprecated:!1},fullDocument:{kind:"parameter",type:"object",defaultValue:"default",enum:["default","updateLookup","required","whenAvailable"],description:"Specifies whether changeStream consumer include a copy of the full document when modified by update operations. Possible values are default, updateLookup, required and whenAvailable.",title:"Full Document",required:!1,deprecated:!1},streamFilter:{kind:"parameter",type:"string",description:"Filter condition for change streams consumer.",title:"Stream Filter",required:!1,deprecated:!1},authSource:{kind:"parameter",type:"string",description:"The database name associated with the user's credentials.",title:"Auth Source",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"User password for mongodb connection",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username for mongodb connection",title:"Username",required:!1,deprecated:!1},persistentId:{kind:"parameter",type:"string",description:"One tail tracking collection can host many trackers for several tailable consumers. To keep them separate, each tracker should have its own unique persistentId.",title:"Persistent Id",required:!1,deprecated:!1},persistentTailTracking:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable persistent tail tracking, which is a mechanism to keep track of the last consumed message across system restarts. The next time the system is up, the endpoint will recover the cursor from the point where it last stopped slurping records.",title:"Persistent Tail Tracking",required:!1,deprecated:!1},tailTrackCollection:{kind:"parameter",type:"string",description:"Collection where tail tracking information will be persisted. If not specified, MongoDbTailTrackingConfig#DEFAULT_COLLECTION will be used by default.",title:"Tail Track Collection",required:!1,deprecated:!1},tailTrackDb:{kind:"parameter",type:"string",description:"Indicates what database the tail tracking mechanism will persist to. If not specified, the current database will be picked by default. Dynamicity will not be taken into account even if enabled, i.e. the tail tracking database will not vary past endpoint initialisation.",title:"Tail Track Db",required:!1,deprecated:!1},tailTrackField:{kind:"parameter",type:"string",description:"Field where the last tracked value will be placed. If not specified, MongoDbTailTrackingConfig#DEFAULT_FIELD will be used by default.",title:"Tail Track Field",required:!1,deprecated:!1},tailTrackIncreasingField:{kind:"parameter",type:"string",description:"Correlation field in the incoming record which is of increasing nature and will be used to position the tailing cursor every time it is generated. The cursor will be (re)created with a query of type: tailTrackIncreasingField greater than lastValue (possibly recovered from persistent tail tracking). Can be of type Integer, Date, String, etc. NOTE: No support for dot notation at the current time, so the field should be at the top level of the document.",title:"Tail Track Increasing Field",required:!1,deprecated:!1}}},"mongodb-gridfs":{type:"object",title:"MongoDB GridFS",group:"database,file",icon:"generic24.png",description:"Interact with MongoDB GridFS.",properties:{connectionBean:{kind:"path",type:"string",description:"Name of com.mongodb.client.MongoClient to use.",title:"Connection Bean",required:!0,deprecated:!1},bucket:{kind:"parameter",type:"string",defaultValue:"fs",description:"Sets the name of the GridFS bucket within the database. Default is fs.",title:"Bucket",required:!1,deprecated:!1},database:{kind:"parameter",type:"string",description:"Sets the name of the MongoDB database to target",title:"Database",required:!0,deprecated:!1},readPreference:{kind:"parameter",type:"object",description:"Sets a MongoDB ReadPreference on the Mongo connection. Read preferences set directly on the connection will be overridden by this setting. The com.mongodb.ReadPreference#valueOf(String) utility method is used to resolve the passed readPreference value. Some examples for the possible values are nearest, primary or secondary etc.",title:"Read Preference",required:!1,deprecated:!1},writeConcern:{kind:"parameter",type:"object",enum:["ACKNOWLEDGED","W1","W2","W3","UNACKNOWLEDGED","JOURNALED","MAJORITY"],description:"Set the WriteConcern for write operations on MongoDB using the standard ones. Resolved from the fields of the WriteConcern class by calling the WriteConcern#valueOf(String) method.",title:"Write Concern",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"500",description:"Sets the delay between polls within the Consumer. Default is 500ms",title:"Delay",required:!1,deprecated:!1},fileAttributeName:{kind:"parameter",type:"string",defaultValue:"camel-processed",description:"If the QueryType uses a FileAttribute, this sets the name of the attribute that is used. Default is camel-processed.",title:"File Attribute Name",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Sets the initialDelay before the consumer will start polling. Default is 1000ms",title:"Initial Delay",required:!1,deprecated:!1},persistentTSCollection:{kind:"parameter",type:"string",defaultValue:"camel-timestamps",description:"If the QueryType uses a persistent timestamp, this sets the name of the collection within the DB to store the timestamp.",title:"Persistent TSCollection",required:!1,deprecated:!1},persistentTSObject:{kind:"parameter",type:"string",defaultValue:"camel-timestamp",description:"If the QueryType uses a persistent timestamp, this is the ID of the object in the collection to store the timestamp.",title:"Persistent TSObject",required:!1,deprecated:!1},query:{kind:"parameter",type:"string",description:"Additional query parameters (in JSON) that are used to configure the query used for finding files in the GridFsConsumer",title:"Query",required:!1,deprecated:!1},queryStrategy:{kind:"parameter",type:"object",defaultValue:"TimeStamp",enum:["TimeStamp","PersistentTimestamp","FileAttribute","TimeStampAndFileAttribute","PersistentTimestampAndFileAttribute"],description:"Sets the QueryStrategy that is used for polling for new files. Default is Timestamp",title:"Query Strategy",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Sets the operation this endpoint will execute against GridFs.",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},mustache:{type:"object",title:"Mustache",group:"transformation",icon:"generic24.png",description:"Transform messages using a Mustache template.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"Character encoding of the resource content.",title:"Encoding",required:!1,deprecated:!1},endDelimiter:{kind:"parameter",type:"string",defaultValue:"}}",description:"Characters used to mark template code end.",title:"End Delimiter",required:!1,deprecated:!1},startDelimiter:{kind:"parameter",type:"string",defaultValue:"{{",description:"Characters used to mark template code beginning.",title:"Start Delimiter",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},mvel:{type:"object",title:"MVEL",group:"transformation,script",icon:"generic24.png",description:"Transform messages using an MVEL template.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"Character encoding of the resource content.",title:"Encoding",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},mybatis:{type:"object",title:"MyBatis",group:"database",icon:"generic24.png",description:"Performs a query, poll, insert, update or delete in a relational database using MyBatis.",properties:{statement:{kind:"path",type:"string",description:"The statement name in the MyBatis XML mapping file which maps to the query, insert, update or delete operation you wish to evaluate.",title:"Statement",required:!0,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",defaultValue:"0",description:"This option is intended to split results returned by the database pool into the batches and deliver them in multiple exchanges. This integer defines the maximum messages to deliver in single exchange. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid when starting up the server that there are thousands of files. Set a value of 0 or negative to disable it.",title:"Max Messages Per Poll",required:!1,deprecated:!1},onConsume:{kind:"parameter",type:"string",description:"Statement to run after data has been processed in the route",title:"On Consume",required:!1,deprecated:!1},routeEmptyResultSet:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether allow empty resultset to be routed to the next hop",title:"Route Empty Result Set",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables or disables transaction. If enabled then if processing an exchange failed then the consumer breaks out processing any further exchanges to cause a rollback eager.",title:"Transacted",required:!1,deprecated:!1},useIterator:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Process resultset individually or as a list",title:"Use Iterator",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},processingStrategy:{kind:"parameter",type:"object",description:"To use a custom MyBatisProcessingStrategy",title:"Processing Strategy",required:!1,deprecated:!1},executorType:{kind:"parameter",type:"object",defaultValue:"SIMPLE",enum:["SIMPLE","REUSE","BATCH"],description:"The executor type to be used while executing statements. simple - executor does nothing special. reuse - executor reuses prepared statements. batch - executor reuses statements and batches updates.",title:"Executor Type",required:!1,deprecated:!1},inputHeader:{kind:"parameter",type:"string",description:"User the header value for input parameters instead of the message body. By default, inputHeader == null and the input parameters are taken from the message body. If outputHeader is set, the value is used and query parameters will be taken from the header instead of the body.",title:"Input Header",required:!1,deprecated:!1},outputHeader:{kind:"parameter",type:"string",description:"Store the query result in a header instead of the message body. By default, outputHeader == null and the query result is stored in the message body, any existing content in the message body is discarded. If outputHeader is set, the value is used as the name of the header to store the query result and the original message body is preserved. Setting outputHeader will also omit populating the default CamelMyBatisResult header since it would be the same as outputHeader all the time.",title:"Output Header",required:!1,deprecated:!1},statementType:{kind:"parameter",type:"object",enum:["SelectOne","SelectList","Insert","InsertList","Update","UpdateList","Delete","DeleteList"],description:"Mandatory to specify for the producer to control which kind of operation to invoke.",title:"Statement Type",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},"mybatis-bean":{type:"object",title:"MyBatis Bean",group:"database",icon:"generic24.png",description:"Perform queries, inserts, updates or deletes in a relational database using MyBatis.",properties:{beanName:{kind:"path",type:"string",description:"Name of the bean with the MyBatis annotations. This can either by a type alias or a FQN class name.",title:"Bean Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",description:"Name of the method on the bean that has the SQL query to be executed.",title:"Method Name",required:!0,deprecated:!1},executorType:{kind:"parameter",type:"object",defaultValue:"SIMPLE",enum:["SIMPLE","REUSE","BATCH"],description:"The executor type to be used while executing statements. simple - executor does nothing special. reuse - executor reuses prepared statements. batch - executor reuses statements and batches updates.",title:"Executor Type",required:!1,deprecated:!1},inputHeader:{kind:"parameter",type:"string",description:"User the header value for input parameters instead of the message body. By default, inputHeader == null and the input parameters are taken from the message body. If outputHeader is set, the value is used and query parameters will be taken from the header instead of the body.",title:"Input Header",required:!1,deprecated:!1},outputHeader:{kind:"parameter",type:"string",description:"Store the query result in a header instead of the message body. By default, outputHeader == null and the query result is stored in the message body, any existing content in the message body is discarded. If outputHeader is set, the value is used as the name of the header to store the query result and the original message body is preserved. Setting outputHeader will also omit populating the default CamelMyBatisResult header since it would be the same as outputHeader all the time.",title:"Output Header",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},nats:{type:"object",title:"Nats",group:"messaging",icon:"generic24.png",description:"Send and receive messages from NATS messaging system.",properties:{topic:{kind:"path",type:"string",description:"The name of topic we want to use",title:"Topic",required:!0,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"2000",description:"Timeout for connection attempts. (in milliseconds)",title:"Connection Timeout",required:!1,deprecated:!1},flushConnection:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Define if we want to flush connection when stopping or not",title:"Flush Connection",required:!1,deprecated:!1},flushTimeout:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Set the flush timeout (in milliseconds)",title:"Flush Timeout",required:!1,deprecated:!1},maxPingsOut:{kind:"parameter",type:"integer",defaultValue:"2",description:"maximum number of pings have not received a response allowed by the client",title:"Max Pings Out",required:!1,deprecated:!1},maxReconnectAttempts:{kind:"parameter",type:"integer",defaultValue:"60",description:"Max reconnection attempts",title:"Max Reconnect Attempts",required:!1,deprecated:!1},noEcho:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Turn off echo. If supported by the gnatsd version you are connecting to this flag will prevent the server from echoing messages back to the connection if it has subscriptions on the subject being published to.",title:"No Echo",required:!1,deprecated:!1},noRandomizeServers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not randomizing the order of servers for the connection attempts",title:"No Randomize Servers",required:!1,deprecated:!1},pedantic:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not running in pedantic mode (this affects performance)",title:"Pedantic",required:!1,deprecated:!1},pingInterval:{kind:"parameter",type:"integer",defaultValue:"120000",description:"Ping interval to be aware if connection is still alive (in milliseconds)",title:"Ping Interval",required:!1,deprecated:!1},reconnect:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not using reconnection feature",title:"Reconnect",required:!1,deprecated:!1},reconnectTimeWait:{kind:"parameter",type:"integer",defaultValue:"2000",description:"Waiting time before attempts reconnection (in milliseconds)",title:"Reconnect Time Wait",required:!1,deprecated:!1},requestCleanupInterval:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Interval to clean up cancelled/timed out requests.",title:"Request Cleanup Interval",required:!1,deprecated:!1},servers:{kind:"parameter",type:"string",description:"URLs to one or more NAT servers. Use comma to separate URLs when specifying multiple servers.",title:"Servers",required:!1,deprecated:!1},verbose:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not running in verbose mode",title:"Verbose",required:!1,deprecated:!1},maxMessages:{kind:"parameter",type:"string",description:"Stop receiving messages from a topic we are subscribing to after maxMessages",title:"Max Messages",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"10",description:"Consumer thread pool size (default is 10)",title:"Pool Size",required:!1,deprecated:!1},queueName:{kind:"parameter",type:"string",description:"The Queue name if we are using nats for a queue configuration",title:"Queue Name",required:!1,deprecated:!1},replyToDisabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Can be used to turn off sending back reply message in the consumer.",title:"Reply To Disabled",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},replySubject:{kind:"parameter",type:"string",description:"the subject to which subscribers should send response",title:"Reply Subject",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"integer",defaultValue:"20000",description:"Request timeout in milliseconds",title:"Request Timeout",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connection:{kind:"parameter",type:"object",description:"Reference an already instantiated connection to Nats server",title:"Connection",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"Define the header filtering strategy",title:"Header Filter Strategy",required:!1,deprecated:!1},traceConnection:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not connection trace messages should be printed to standard out for fine grained debugging of connection issues.",title:"Trace Connection",required:!1,deprecated:!1},secure:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set secure option indicating TLS is required",title:"Secure",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},netty:{type:"object",title:"Netty",group:"networking",icon:"generic24.png",description:"Socket level networking using TCP or UDP with Netty 4.x.",properties:{protocol:{kind:"path",type:"string",enum:["tcp","udp"],description:"The protocol to use which can be tcp or udp.",title:"Protocol",required:!0,deprecated:!1},host:{kind:"path",type:"string",description:"The hostname. For the consumer the hostname is localhost or 0.0.0.0. For the producer the hostname is the remote host to connect to",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The host port number",title:"Port",required:!0,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect(close) from Netty Channel right after use. Can be used for both consumer and producer.",title:"Disconnect",required:!1,deprecated:!1},keepAlive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to ensure socket is not closed due to inactivity",title:"Keep Alive",required:!1,deprecated:!1},reuseAddress:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to facilitate socket multiplexing",title:"Reuse Address",required:!1,deprecated:!1},reuseChannel:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option allows producers and consumers (in client mode) to reuse the same Netty Channel for the lifecycle of processing the Exchange. This is useful if you need to call a server multiple times in a Camel route and want to use the same network connection. When using this, the channel is not returned to the connection pool until the Exchange is done; or disconnected if the disconnect option is set to true. The reused Channel is stored on the Exchange as an exchange property with the key NettyConstants#NETTY_CHANNEL which allows you to obtain the channel during routing and use it as well.",title:"Reuse Channel",required:!1,deprecated:!1},sync:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to set endpoint as one-way or request-response",title:"Sync",required:!1,deprecated:!1},tcpNoDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to improve TCP protocol performance",title:"Tcp No Delay",required:!1,deprecated:!1},broadcast:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Setting to choose Multicast over UDP",title:"Broadcast",required:!1,deprecated:!1},clientMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the clientMode is true, netty consumer will connect the address as a TCP client.",title:"Client Mode",required:!1,deprecated:!1},reconnect:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used only in clientMode in consumer, the consumer will attempt to reconnect on disconnection if this is enabled",title:"Reconnect",required:!1,deprecated:!1},reconnectInterval:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Used if reconnect and clientMode is enabled. The interval in milli seconds to attempt reconnection",title:"Reconnect Interval",required:!1,deprecated:!1},backlog:{kind:"parameter",type:"integer",description:"Allows to configure a backlog for netty consumer (server). Note the backlog is just a best effort depending on the OS. Setting this option to a value such as 200, 500 or 1000, tells the TCP stack how long the accept queue can be If this option is not configured, then the backlog depends on OS setting.",title:"Backlog",required:!1,deprecated:!1},bossCount:{kind:"parameter",type:"integer",defaultValue:"1",description:"When netty works on nio mode, it uses default bossCount parameter from Netty, which is 1. User can use this option to override the default bossCount from Netty",title:"Boss Count",required:!1,deprecated:!1},bossGroup:{kind:"parameter",type:"object",description:"Set the BossGroup which could be used for handling the new connection of the server side across the NettyEndpoint",title:"Boss Group",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},disconnectOnNoReply:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If sync is enabled then this option dictates NettyConsumer if it should disconnect where there is no reply to send back.",title:"Disconnect On No Reply",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},nettyServerBootstrapFactory:{kind:"parameter",type:"object",description:"To use a custom NettyServerBootstrapFactory",title:"Netty Server Bootstrap Factory",required:!1,deprecated:!1},networkInterface:{kind:"parameter",type:"string",description:"When using UDP then this option can be used to specify a network interface by its name, such as eth0 to join a multicast group.",title:"Network Interface",required:!1,deprecated:!1},noReplyLogLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"If sync is enabled this option dictates NettyConsumer which logging level to use when logging a there is no reply to send back.",title:"No Reply Log Level",required:!1,deprecated:!1},serverClosedChannelExceptionCaughtLogLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"If the server (NettyConsumer) catches an java.nio.channels.ClosedChannelException then its logged using this logging level. This is used to avoid logging the closed channel exceptions, as clients can disconnect abruptly and then cause a flood of closed exceptions in the Netty server.",title:"Server Closed Channel Exception Caught Log Level",required:!1,deprecated:!1},serverExceptionCaughtLogLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"If the server (NettyConsumer) catches an exception then its logged using this logging level.",title:"Server Exception Caught Log Level",required:!1,deprecated:!1},serverInitializerFactory:{kind:"parameter",type:"object",description:"To use a custom ServerInitializerFactory",title:"Server Initializer Factory",required:!1,deprecated:!1},usingExecutorService:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use ordered thread pool, to ensure events are processed orderly on the same channel.",title:"Using Executor Service",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Time to wait for a socket connection to be available. Value is in milliseconds.",title:"Connect Timeout",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"integer",description:"Allows to use a timeout for the Netty producer when calling a remote server. By default no timeout is in use. The value is in milli seconds, so eg 30000 is 30 seconds. The requestTimeout is using Netty's ReadTimeoutHandler to trigger the timeout.",title:"Request Timeout",required:!1,deprecated:!1},clientInitializerFactory:{kind:"parameter",type:"object",description:"To use a custom ClientInitializerFactory",title:"Client Initializer Factory",required:!1,deprecated:!1},correlationManager:{kind:"parameter",type:"object",description:"To use a custom correlation manager to manage how request and reply messages are mapped when using request/reply with the netty producer. This should only be used if you have a way to map requests together with replies such as if there is correlation ids in both the request and reply messages. This can be used if you want to multiplex concurrent messages on the same channel (aka connection) in netty. When doing this you must have a way to correlate the request and reply messages so you can store the right reply on the inflight Camel Exchange before its continued routed. We recommend extending the TimeoutCorrelationManagerSupport when you build custom correlation managers. This provides support for timeout and other complexities you otherwise would need to implement as well. See also the producerPoolEnabled option for more details.",title:"Correlation Manager",required:!1,deprecated:!1},lazyChannelCreation:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Channels can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started.",title:"Lazy Channel Creation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},producerPoolBlockWhenExhausted:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets the value for the blockWhenExhausted configuration attribute. It determines whether to block when the borrowObject() method is invoked when the pool is exhausted (the maximum number of active objects has been reached).",title:"Producer Pool Block When Exhausted",required:!1,deprecated:!1},producerPoolEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether producer pool is enabled or not. Important: If you turn this off then a single shared connection is used for the producer, also if you are doing request/reply. That means there is a potential issue with interleaved responses if replies comes back out-of-order. Therefore you need to have a correlation id in both the request and reply messages so you can properly correlate the replies to the Camel callback that is responsible for continue processing the message in Camel. To do this you need to implement NettyCamelStateCorrelationManager as correlation manager and configure it via the correlationManager option. See also the correlationManager option for more details.",title:"Producer Pool Enabled",required:!1,deprecated:!1},producerPoolMaxIdle:{kind:"parameter",type:"integer",defaultValue:"100",description:"Sets the cap on the number of idle instances in the pool.",title:"Producer Pool Max Idle",required:!1,deprecated:!1},producerPoolMaxTotal:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the cap on the number of objects that can be allocated by the pool (checked out to clients, or idle awaiting checkout) at a given time. Use a negative value for no limit.",title:"Producer Pool Max Total",required:!1,deprecated:!1},producerPoolMaxWait:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum duration (value in millis) the borrowObject() method should block before throwing an exception when the pool is exhausted and producerPoolBlockWhenExhausted is true. When less than 0, the borrowObject() method may block indefinitely.",title:"Producer Pool Max Wait",required:!1,deprecated:!1},producerPoolMinEvictableIdle:{kind:"parameter",type:"integer",defaultValue:"300000",description:"Sets the minimum amount of time (value in millis) an object may sit idle in the pool before it is eligible for eviction by the idle object evictor.",title:"Producer Pool Min Evictable Idle",required:!1,deprecated:!1},producerPoolMinIdle:{kind:"parameter",type:"integer",description:"Sets the minimum number of instances allowed in the producer pool before the evictor thread (if active) spawns new objects.",title:"Producer Pool Min Idle",required:!1,deprecated:!1},udpConnectionlessSending:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option supports connection less udp sending which is a real fire and forget. A connected udp send receive the PortUnreachableException if no one is listen on the receiving port.",title:"Udp Connectionless Sending",required:!1,deprecated:!1},useByteBuf:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the useByteBuf is true, netty producer will turn the message body into ByteBuf before sending it out.",title:"Use Byte Buf",required:!1,deprecated:!1},hostnameVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To enable/disable hostname verification on SSLEngine",title:"Hostname Verification",required:!1,deprecated:!1},allowSerializedHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only used for TCP when transferExchange is true. When set to true, serializable objects in headers and properties will be added to the exchange. Otherwise Camel will exclude any non-serializable objects and log it at WARN level.",title:"Allow Serialized Headers",required:!1,deprecated:!1},channelGroup:{kind:"parameter",type:"object",description:"To use a explicit ChannelGroup.",title:"Channel Group",required:!1,deprecated:!1},nativeTransport:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use native transport instead of NIO. Native transport takes advantage of the host operating system and is only supported on some platforms. You need to add the netty JAR for the host operating system you are using. See more details at: http://netty.io/wiki/native-transports.html",title:"Native Transport",required:!1,deprecated:!1},options:{kind:"parameter",type:"object",description:"Allows to configure additional netty options using option. as prefix. For example option.child.keepAlive=false to set the netty option child.keepAlive=false. See the Netty documentation for possible options that can be used.",title:"Options",required:!1,deprecated:!1},receiveBufferSize:{kind:"parameter",type:"integer",defaultValue:"65536",description:"The TCP/UDP buffer sizes to be used during inbound communication. Size is bytes.",title:"Receive Buffer Size",required:!1,deprecated:!1},receiveBufferSizePredictor:{kind:"parameter",type:"integer",description:"Configures the buffer size predictor. See details at Jetty documentation and this mail thread.",title:"Receive Buffer Size Predictor",required:!1,deprecated:!1},sendBufferSize:{kind:"parameter",type:"integer",defaultValue:"65536",description:"The TCP/UDP buffer sizes to be used during outbound communication. Size is bytes.",title:"Send Buffer Size",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},transferExchange:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only used for TCP. You can transfer the exchange over the wire instead of just the body. The following fields are transferred: In body, Out body, fault body, In headers, Out headers, fault headers, exchange properties, exchange exception. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level.",title:"Transfer Exchange",required:!1,deprecated:!1},udpByteArrayCodec:{kind:"parameter",type:"boolean",defaultValue:"false",description:"For UDP only. If enabled the using byte array codec instead of Java serialization protocol.",title:"Udp Byte Array Codec",required:!1,deprecated:!1},unixDomainSocketPath:{kind:"parameter",type:"string",description:"Path to unix domain socket to use instead of inet socket. Host and port parameters will not be used, however required. It is ok to set dummy values for them. Must be used with nativeTransport=true and clientMode=false.",title:"Unix Domain Socket Path",required:!1,deprecated:!1},workerCount:{kind:"parameter",type:"integer",description:"When netty works on nio mode, it uses default workerCount parameter from Netty (which is cpu_core_threads x 2). User can use this option to override the default workerCount from Netty.",title:"Worker Count",required:!1,deprecated:!1},workerGroup:{kind:"parameter",type:"object",description:"To use a explicit EventLoopGroup as the boss thread pool. For example to share a thread pool with multiple consumers or producers. By default each consumer or producer has their own worker pool with 2 x cpu count core threads.",title:"Worker Group",required:!1,deprecated:!1},allowDefaultCodec:{kind:"parameter",type:"boolean",defaultValue:"true",description:"The netty component installs a default codec if both, encoder/decoder is null and textline is false. Setting allowDefaultCodec to false prevents the netty component from installing a default codec as the first element in the filter chain.",title:"Allow Default Codec",required:!1,deprecated:!1},autoAppendDelimiter:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to auto append missing end delimiter when sending using the textline codec.",title:"Auto Append Delimiter",required:!1,deprecated:!1},decoderMaxLineLength:{kind:"parameter",type:"integer",defaultValue:"1024",description:"The max line length to use for the textline codec.",title:"Decoder Max Line Length",required:!1,deprecated:!1},decoders:{kind:"parameter",type:"string",description:"A list of decoders to be used. You can use a String which have values separated by comma, and have the values be looked up in the Registry. Just remember to prefix the value with # so Camel knows it should lookup.",title:"Decoders",required:!1,deprecated:!1},delimiter:{kind:"parameter",type:"object",defaultValue:"LINE",enum:["LINE","NULL"],description:"The delimiter to use for the textline codec. Possible values are LINE and NULL.",title:"Delimiter",required:!1,deprecated:!1},encoders:{kind:"parameter",type:"string",description:"A list of encoders to be used. You can use a String which have values separated by comma, and have the values be looked up in the Registry. Just remember to prefix the value with # so Camel knows it should lookup.",title:"Encoders",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"The encoding (a charset name) to use for the textline codec. If not provided, Camel will use the JVM default Charset.",title:"Encoding",required:!1,deprecated:!1},textline:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only used for TCP. If no codec is specified, you can use this flag to indicate a text line based codec; if not specified or the value is false, then Object Serialization is assumed over TCP - however only Strings are allowed to be serialized by default.",title:"Textline",required:!1,deprecated:!1},enabledProtocols:{kind:"parameter",type:"string",defaultValue:"TLSv1.2,TLSv1.3",description:"Which protocols to enable when using SSL",title:"Enabled Protocols",required:!1,deprecated:!1},keyStoreFile:{kind:"parameter",type:"string",description:"Client side certificate keystore to be used for encryption",title:"Key Store File",required:!1,deprecated:!1},keyStoreFormat:{kind:"parameter",type:"string",description:"Keystore format to be used for payload encryption. Defaults to JKS if not set",title:"Key Store Format",required:!1,deprecated:!1},keyStoreResource:{kind:"parameter",type:"string",description:"Client side certificate keystore to be used for encryption. Is loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Key Store Resource",required:!1,deprecated:!1},needClientAuth:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configures whether the server needs client authentication when using SSL.",title:"Need Client Auth",required:!1,deprecated:!1},passphrase:{kind:"parameter",type:"string",description:"Password setting to use in order to encrypt/decrypt payloads sent using SSH",title:"Passphrase",required:!1,deprecated:!1},securityProvider:{kind:"parameter",type:"string",description:"Security provider to be used for payload encryption. Defaults to SunX509 if not set.",title:"Security Provider",required:!1,deprecated:!1},ssl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Setting to specify whether SSL encryption is applied to this endpoint",title:"Ssl",required:!1,deprecated:!1},sslClientCertHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When enabled and in SSL mode, then the Netty consumer will enrich the Camel Message with headers having information about the client certificate such as subject name, issuer name, serial number, and the valid date range.",title:"Ssl Client Cert Headers",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1},sslHandler:{kind:"parameter",type:"object",description:"Reference to a class that could be used to return an SSL Handler",title:"Ssl Handler",required:!1,deprecated:!1},trustStoreFile:{kind:"parameter",type:"string",description:"Server side certificate keystore to be used for encryption",title:"Trust Store File",required:!1,deprecated:!1},trustStoreResource:{kind:"parameter",type:"string",description:"Server side certificate keystore to be used for encryption. Is loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Trust Store Resource",required:!1,deprecated:!1}}},"netty-http":{type:"object",title:"Netty HTTP",group:"networking,http",icon:"generic24.png",description:"Netty HTTP server and client using the Netty 4.x.",properties:{protocol:{kind:"path",type:"string",enum:["http","https"],description:"The protocol to use which is either http, https or proxy - a consumer only option.",title:"Protocol",required:!0,deprecated:!1},host:{kind:"path",type:"string",description:"The local hostname such as localhost, or 0.0.0.0 when being a consumer. The remote HTTP server hostname when using producer.",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The host port number",title:"Port",required:!1,deprecated:!1},path:{kind:"path",type:"string",description:"Resource path",title:"Path",required:!1,deprecated:!1},bridgeEndpoint:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the option is true, the producer will ignore the NettyHttpConstants.HTTP_URI header, and use the endpoint's URI for request. You may also set the throwExceptionOnFailure to be false to let the producer send all the fault response back. The consumer working in the bridge mode will skip the gzip compression and WWW URL form encoding (by adding the Exchange.SKIP_GZIP_ENCODING and Exchange.SKIP_WWW_FORM_URLENCODED headers to the consumed exchange).",title:"Bridge Endpoint",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect(close) from Netty Channel right after use. Can be used for both consumer and producer.",title:"Disconnect",required:!1,deprecated:!1},keepAlive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to ensure socket is not closed due to inactivity",title:"Keep Alive",required:!1,deprecated:!1},reuseAddress:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to facilitate socket multiplexing",title:"Reuse Address",required:!1,deprecated:!1},reuseChannel:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option allows producers and consumers (in client mode) to reuse the same Netty Channel for the lifecycle of processing the Exchange. This is useful if you need to call a server multiple times in a Camel route and want to use the same network connection. When using this, the channel is not returned to the connection pool until the Exchange is done; or disconnected if the disconnect option is set to true. The reused Channel is stored on the Exchange as an exchange property with the key NettyConstants#NETTY_CHANNEL which allows you to obtain the channel during routing and use it as well.",title:"Reuse Channel",required:!1,deprecated:!1},sync:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to set endpoint as one-way or request-response",title:"Sync",required:!1,deprecated:!1},tcpNoDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to improve TCP protocol performance",title:"Tcp No Delay",required:!1,deprecated:!1},matchOnUriPrefix:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not Camel should try to find a target consumer by matching the URI prefix if no exact match is found.",title:"Match On Uri Prefix",required:!1,deprecated:!1},muteException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side the response's body won't contain the exception's stack trace.",title:"Mute Exception",required:!1,deprecated:!1},send503whenSuspended:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to send back HTTP status code 503 when the consumer has been suspended. If the option is false then the Netty Acceptor is unbound when the consumer is suspended, so clients cannot connect anymore.",title:"Send503when Suspended",required:!1,deprecated:!1},backlog:{kind:"parameter",type:"integer",description:"Allows to configure a backlog for netty consumer (server). Note the backlog is just a best effort depending on the OS. Setting this option to a value such as 200, 500 or 1000, tells the TCP stack how long the accept queue can be If this option is not configured, then the backlog depends on OS setting.",title:"Backlog",required:!1,deprecated:!1},bossCount:{kind:"parameter",type:"integer",defaultValue:"1",description:"When netty works on nio mode, it uses default bossCount parameter from Netty, which is 1. User can use this option to override the default bossCount from Netty",title:"Boss Count",required:!1,deprecated:!1},bossGroup:{kind:"parameter",type:"object",description:"Set the BossGroup which could be used for handling the new connection of the server side across the NettyEndpoint",title:"Boss Group",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},chunkedMaxContentLength:{kind:"parameter",type:"integer",defaultValue:"1048576",description:"Value in bytes the max content length per chunked frame received on the Netty HTTP server.",title:"Chunked Max Content Length",required:!1,deprecated:!1},compression:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allow using gzip/deflate for compression on the Netty HTTP server if the client supports it from the HTTP headers.",title:"Compression",required:!1,deprecated:!1},disconnectOnNoReply:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If sync is enabled then this option dictates NettyConsumer if it should disconnect where there is no reply to send back.",title:"Disconnect On No Reply",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},httpMethodRestrict:{kind:"parameter",type:"string",description:"To disable HTTP methods on the Netty HTTP consumer. You can specify multiple separated by comma.",title:"Http Method Restrict",required:!1,deprecated:!1},logWarnOnBadRequest:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether Netty HTTP server should log a WARN if decoding the HTTP request failed and a HTTP Status 400 (bad request) is returned.",title:"Log Warn On Bad Request",required:!1,deprecated:!1},mapHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is enabled, then during binding from Netty to Camel Message then the headers will be mapped as well (eg added as header to the Camel Message as well). You can turn off this option to disable this. The headers can still be accessed from the org.apache.camel.component.netty.http.NettyHttpMessage message with the method getHttpRequest() that returns the Netty HTTP request io.netty.handler.codec.http.HttpRequest instance.",title:"Map Headers",required:!1,deprecated:!1},maxChunkSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"The maximum length of the content or each chunk. If the content length (or the length of each chunk) exceeds this value, the content or chunk will be split into multiple io.netty.handler.codec.http.HttpContents whose length is maxChunkSize at maximum. See io.netty.handler.codec.http.HttpObjectDecoder",title:"Max Chunk Size",required:!1,deprecated:!1},maxHeaderSize:{kind:"parameter",type:"integer",defaultValue:"8192",description:"The maximum length of all headers. If the sum of the length of each header exceeds this value, a io.netty.handler.codec.TooLongFrameException will be raised.",title:"Max Header Size",required:!1,deprecated:!1},maxInitialLineLength:{kind:"parameter",type:"integer",defaultValue:"4096",description:"The maximum length of the initial line (e.g. {code GET / HTTP/1.0} or {code HTTP/1.0 200 OK}) If the length of the initial line exceeds this value, a TooLongFrameException will be raised. See io.netty.handler.codec.http.HttpObjectDecoder",title:"Max Initial Line Length",required:!1,deprecated:!1},nettyServerBootstrapFactory:{kind:"parameter",type:"object",description:"To use a custom NettyServerBootstrapFactory",title:"Netty Server Bootstrap Factory",required:!1,deprecated:!1},nettySharedHttpServer:{kind:"parameter",type:"object",description:"To use a shared Netty HTTP server. See Netty HTTP Server Example for more details.",title:"Netty Shared Http Server",required:!1,deprecated:!1},noReplyLogLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"If sync is enabled this option dictates NettyConsumer which logging level to use when logging a there is no reply to send back.",title:"No Reply Log Level",required:!1,deprecated:!1},serverClosedChannelExceptionCaughtLogLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"If the server (NettyConsumer) catches an java.nio.channels.ClosedChannelException then its logged using this logging level. This is used to avoid logging the closed channel exceptions, as clients can disconnect abruptly and then cause a flood of closed exceptions in the Netty server.",title:"Server Closed Channel Exception Caught Log Level",required:!1,deprecated:!1},serverExceptionCaughtLogLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"If the server (NettyConsumer) catches an exception then its logged using this logging level.",title:"Server Exception Caught Log Level",required:!1,deprecated:!1},serverInitializerFactory:{kind:"parameter",type:"object",description:"To use a custom ServerInitializerFactory",title:"Server Initializer Factory",required:!1,deprecated:!1},traceEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP TRACE for this Netty HTTP consumer. By default TRACE is turned off.",title:"Trace Enabled",required:!1,deprecated:!1},urlDecodeHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If this option is enabled, then during binding from Netty to Camel Message then the header values will be URL decoded (eg %20 will be a space character. Notice this option is used by the default org.apache.camel.component.netty.http.NettyHttpBinding and therefore if you implement a custom org.apache.camel.component.netty.http.NettyHttpBinding then you would need to decode the headers accordingly to this option.",title:"Url Decode Headers",required:!1,deprecated:!1},usingExecutorService:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use ordered thread pool, to ensure events are processed orderly on the same channel.",title:"Using Executor Service",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Time to wait for a socket connection to be available. Value is in milliseconds.",title:"Connect Timeout",required:!1,deprecated:!1},cookieHandler:{kind:"parameter",type:"object",description:"Configure a cookie handler to maintain a HTTP session",title:"Cookie Handler",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"integer",description:"Allows to use a timeout for the Netty producer when calling a remote server. By default no timeout is in use. The value is in milli seconds, so eg 30000 is 30 seconds. The requestTimeout is using Netty's ReadTimeoutHandler to trigger the timeout.",title:"Request Timeout",required:!1,deprecated:!1},throwExceptionOnFailure:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server. This allows you to get all responses regardless of the HTTP status code.",title:"Throw Exception On Failure",required:!1,deprecated:!1},clientInitializerFactory:{kind:"parameter",type:"object",description:"To use a custom ClientInitializerFactory",title:"Client Initializer Factory",required:!1,deprecated:!1},lazyChannelCreation:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Channels can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started.",title:"Lazy Channel Creation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},okStatusCodeRange:{kind:"parameter",type:"string",defaultValue:"200-299",description:"The status codes which are considered a success response. The values are inclusive. Multiple ranges can be defined, separated by comma, e.g. 200-204,209,301-304. Each range must be a single number or from-to with the dash included. The default range is 200-299",title:"Ok Status Code Range",required:!1,deprecated:!1},producerPoolBlockWhenExhausted:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets the value for the blockWhenExhausted configuration attribute. It determines whether to block when the borrowObject() method is invoked when the pool is exhausted (the maximum number of active objects has been reached).",title:"Producer Pool Block When Exhausted",required:!1,deprecated:!1},producerPoolEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether producer pool is enabled or not. Important: If you turn this off then a single shared connection is used for the producer, also if you are doing request/reply. That means there is a potential issue with interleaved responses if replies comes back out-of-order. Therefore you need to have a correlation id in both the request and reply messages so you can properly correlate the replies to the Camel callback that is responsible for continue processing the message in Camel. To do this you need to implement NettyCamelStateCorrelationManager as correlation manager and configure it via the correlationManager option. See also the correlationManager option for more details.",title:"Producer Pool Enabled",required:!1,deprecated:!1},producerPoolMaxIdle:{kind:"parameter",type:"integer",defaultValue:"100",description:"Sets the cap on the number of idle instances in the pool.",title:"Producer Pool Max Idle",required:!1,deprecated:!1},producerPoolMaxTotal:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the cap on the number of objects that can be allocated by the pool (checked out to clients, or idle awaiting checkout) at a given time. Use a negative value for no limit.",title:"Producer Pool Max Total",required:!1,deprecated:!1},producerPoolMaxWait:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum duration (value in millis) the borrowObject() method should block before throwing an exception when the pool is exhausted and producerPoolBlockWhenExhausted is true. When less than 0, the borrowObject() method may block indefinitely.",title:"Producer Pool Max Wait",required:!1,deprecated:!1},producerPoolMinEvictableIdle:{kind:"parameter",type:"integer",defaultValue:"300000",description:"Sets the minimum amount of time (value in millis) an object may sit idle in the pool before it is eligible for eviction by the idle object evictor.",title:"Producer Pool Min Evictable Idle",required:!1,deprecated:!1},producerPoolMinIdle:{kind:"parameter",type:"integer",description:"Sets the minimum number of instances allowed in the producer pool before the evictor thread (if active) spawns new objects.",title:"Producer Pool Min Idle",required:!1,deprecated:!1},useRelativePath:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to use a relative path in HTTP requests.",title:"Use Relative Path",required:!1,deprecated:!1},hostnameVerification:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To enable/disable hostname verification on SSLEngine",title:"Hostname Verification",required:!1,deprecated:!1},allowSerializedHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only used for TCP when transferExchange is true. When set to true, serializable objects in headers and properties will be added to the exchange. Otherwise Camel will exclude any non-serializable objects and log it at WARN level.",title:"Allow Serialized Headers",required:!1,deprecated:!1},channelGroup:{kind:"parameter",type:"object",description:"To use a explicit ChannelGroup.",title:"Channel Group",required:!1,deprecated:!1},configuration:{kind:"parameter",type:"object",description:"To use a custom configured NettyHttpConfiguration for configuring this endpoint.",title:"Configuration",required:!1,deprecated:!1},disableStreamCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether or not the raw input stream from Netty HttpRequest#getContent() or HttpResponset#getContent() is cached or not (Camel will read the stream into a in light-weight memory based Stream caching) cache. By default Camel will cache the Netty input stream to support reading it multiple times to ensure it Camel can retrieve all data from the stream. However you can set this option to true when you for example need to access the raw stream, such as streaming it directly to a file or other persistent store. Mind that if you enable this option, then you cannot read the Netty stream multiple times out of the box, and you would need manually to reset the reader index on the Netty raw stream. Also Netty will auto-close the Netty stream when the Netty HTTP server/HTTP client is done processing, which means that if the asynchronous routing engine is in use then any asynchronous thread that may continue routing the org.apache.camel.Exchange may not be able to read the Netty stream, because Netty has closed it.",title:"Disable Stream Cache",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.",title:"Header Filter Strategy",required:!1,deprecated:!1},nativeTransport:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use native transport instead of NIO. Native transport takes advantage of the host operating system and is only supported on some platforms. You need to add the netty JAR for the host operating system you are using. See more details at: http://netty.io/wiki/native-transports.html",title:"Native Transport",required:!1,deprecated:!1},nettyHttpBinding:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.netty.http.NettyHttpBinding for binding to/from Netty and Camel Message API.",title:"Netty Http Binding",required:!1,deprecated:!1},options:{kind:"parameter",type:"object",description:"Allows to configure additional netty options using option. as prefix. For example option.child.keepAlive=false to set the netty option child.keepAlive=false. See the Netty documentation for possible options that can be used.",title:"Options",required:!1,deprecated:!1},receiveBufferSize:{kind:"parameter",type:"integer",defaultValue:"65536",description:"The TCP/UDP buffer sizes to be used during inbound communication. Size is bytes.",title:"Receive Buffer Size",required:!1,deprecated:!1},receiveBufferSizePredictor:{kind:"parameter",type:"integer",description:"Configures the buffer size predictor. See details at Jetty documentation and this mail thread.",title:"Receive Buffer Size Predictor",required:!1,deprecated:!1},sendBufferSize:{kind:"parameter",type:"integer",defaultValue:"65536",description:"The TCP/UDP buffer sizes to be used during outbound communication. Size is bytes.",title:"Send Buffer Size",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side, and if the caused Exception was send back serialized in the response as a application/x-java-serialized-object content type. On the producer side the exception will be deserialized and thrown as is, instead of the HttpOperationFailedException. The caused exception is required to be serialized. This is by default turned off. If you enable this then be aware that Java will deserialize the incoming data from the request to Java and that can be a potential security risk.",title:"Transfer Exception",required:!1,deprecated:!1},transferExchange:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Only used for TCP. You can transfer the exchange over the wire instead of just the body. The following fields are transferred: In body, Out body, fault body, In headers, Out headers, fault headers, exchange properties, exchange exception. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level.",title:"Transfer Exchange",required:!1,deprecated:!1},unixDomainSocketPath:{kind:"parameter",type:"string",description:"Path to unix domain socket to use instead of inet socket. Host and port parameters will not be used, however required. It is ok to set dummy values for them. Must be used with nativeTransport=true and clientMode=false.",title:"Unix Domain Socket Path",required:!1,deprecated:!1},workerCount:{kind:"parameter",type:"integer",description:"When netty works on nio mode, it uses default workerCount parameter from Netty (which is cpu_core_threads x 2). User can use this option to override the default workerCount from Netty.",title:"Worker Count",required:!1,deprecated:!1},workerGroup:{kind:"parameter",type:"object",description:"To use a explicit EventLoopGroup as the boss thread pool. For example to share a thread pool with multiple consumers or producers. By default each consumer or producer has their own worker pool with 2 x cpu count core threads.",title:"Worker Group",required:!1,deprecated:!1},decoders:{kind:"parameter",type:"string",description:"A list of decoders to be used. You can use a String which have values separated by comma, and have the values be looked up in the Registry. Just remember to prefix the value with # so Camel knows it should lookup.",title:"Decoders",required:!1,deprecated:!1},encoders:{kind:"parameter",type:"string",description:"A list of encoders to be used. You can use a String which have values separated by comma, and have the values be looked up in the Registry. Just remember to prefix the value with # so Camel knows it should lookup.",title:"Encoders",required:!1,deprecated:!1},enabledProtocols:{kind:"parameter",type:"string",defaultValue:"TLSv1.2,TLSv1.3",description:"Which protocols to enable when using SSL",title:"Enabled Protocols",required:!1,deprecated:!1},keyStoreFile:{kind:"parameter",type:"string",description:"Client side certificate keystore to be used for encryption",title:"Key Store File",required:!1,deprecated:!1},keyStoreFormat:{kind:"parameter",type:"string",description:"Keystore format to be used for payload encryption. Defaults to JKS if not set",title:"Key Store Format",required:!1,deprecated:!1},keyStoreResource:{kind:"parameter",type:"string",description:"Client side certificate keystore to be used for encryption. Is loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Key Store Resource",required:!1,deprecated:!1},needClientAuth:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configures whether the server needs client authentication when using SSL.",title:"Need Client Auth",required:!1,deprecated:!1},passphrase:{kind:"parameter",type:"string",description:"Password setting to use in order to encrypt/decrypt payloads sent using SSH",title:"Passphrase",required:!1,deprecated:!1},securityConfiguration:{kind:"parameter",type:"object",description:"Refers to a org.apache.camel.component.netty.http.NettyHttpSecurityConfiguration for configuring secure web resources.",title:"Security Configuration",required:!1,deprecated:!1},securityOptions:{kind:"parameter",type:"object",description:"To configure NettyHttpSecurityConfiguration using key/value pairs from the map",title:"Security Options",required:!1,deprecated:!1},securityProvider:{kind:"parameter",type:"string",description:"Security provider to be used for payload encryption. Defaults to SunX509 if not set.",title:"Security Provider",required:!1,deprecated:!1},ssl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Setting to specify whether SSL encryption is applied to this endpoint",title:"Ssl",required:!1,deprecated:!1},sslClientCertHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When enabled and in SSL mode, then the Netty consumer will enrich the Camel Message with headers having information about the client certificate such as subject name, issuer name, serial number, and the valid date range.",title:"Ssl Client Cert Headers",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1},sslHandler:{kind:"parameter",type:"object",description:"Reference to a class that could be used to return an SSL Handler",title:"Ssl Handler",required:!1,deprecated:!1},trustStoreFile:{kind:"parameter",type:"string",description:"Server side certificate keystore to be used for encryption",title:"Trust Store File",required:!1,deprecated:!1},trustStoreResource:{kind:"parameter",type:"string",description:"Server side certificate keystore to be used for encryption. Is loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Trust Store Resource",required:!1,deprecated:!1}}},nitrite:{type:"object",title:"Nitrite",group:"database",icon:"generic24.png",description:"Access Nitrite databases.",properties:{database:{kind:"path",type:"string",description:"Path to database file. Will be created if not exists.",title:"Database",required:!0,deprecated:!1},collection:{kind:"parameter",type:"string",description:"Name of Nitrite collection. Cannot be used in combination with repositoryClass option.",title:"Collection",required:!1,deprecated:!1},repositoryClass:{kind:"parameter",type:"string",description:"Class of Nitrite ObjectRepository. Cannot be used in combination with collection option.",title:"Repository Class",required:!1,deprecated:!1},repositoryName:{kind:"parameter",type:"string",description:"Optional name of ObjectRepository. Can be only used in combination with repositoryClass, otherwise have no effect",title:"Repository Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password for Nitrite database. Required, if option username specified.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username for Nitrite database. Database is not secured if option not specified.",title:"Username",required:!1,deprecated:!1}}},oaipmh:{type:"object",title:"OAI-PMH",group:"search",icon:"generic24.png",description:"Harvest metadata using OAI-PMH protocol",properties:{baseUrl:{kind:"path",type:"string",description:"Base URL of the repository to which the request is made through the OAI-PMH protocol",title:"Base Url",required:!0,deprecated:!1},from:{kind:"parameter",type:"string",description:"Specifies a lower bound for datestamp-based selective harvesting. UTC DateTime value",title:"From",required:!1,deprecated:!1},identifier:{kind:"parameter",type:"string",description:"Identifier of the requested resources. Applicable only with certain verbs",title:"Identifier",required:!1,deprecated:!1},metadataPrefix:{kind:"parameter",type:"string",defaultValue:"oai_dc",description:"Specifies the metadataPrefix of the format that should be included in the metadata part of the returned records.",title:"Metadata Prefix",required:!1,deprecated:!1},set:{kind:"parameter",type:"string",description:"Specifies membership as a criteria for set-based selective harvesting",title:"Set",required:!1,deprecated:!1},until:{kind:"parameter",type:"string",description:"Specifies an upper bound for datestamp-based selective harvesting. UTC DateTime value.",title:"Until",required:!1,deprecated:!1},verb:{kind:"parameter",type:"string",defaultValue:"ListRecords",description:"Request name supported by OAI-PMh protocol",title:"Verb",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},onlyFirst:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Returns the response of a single request. Otherwise it will make requests until there is no more data to return.",title:"Only First",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},ignoreSSLWarnings:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Ignore SSL certificate warnings",title:"Ignore SSLWarnings",required:!1,deprecated:!1},ssl:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Causes the defined url to make an https request",title:"Ssl",required:!1,deprecated:!1}}},olingo2:{type:"object",title:"Olingo2",group:"cloud",icon:"generic24.png",description:"Communicate with OData 2.0 services using Apache Olingo.",properties:{apiName:{kind:"path",type:"object",enum:["DEFAULT"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},connectTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"HTTP connection creation timeout in milliseconds, defaults to 30,000 (30 seconds)",title:"Connect Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"application/json;charset=utf-8",description:"Content-Type header value can be used to specify JSON or XML message format, defaults to application/json;charset=utf-8",title:"Content Type",required:!1,deprecated:!1},entityProviderReadProperties:{kind:"parameter",type:"object",description:"Custom entity provider read properties applied to all read operations.",title:"Entity Provider Read Properties",required:!1,deprecated:!1},entityProviderWriteProperties:{kind:"parameter",type:"object",description:"Custom entity provider write properties applied to create, update, patch, batch and merge operations. For instance users can skip the Json object wrapper or enable content only mode when sending request data. A service URI set in the properties will always be overwritten by the serviceUri configuration parameter. Please consider to using the serviceUri configuration parameter instead of setting the respective write property here.",title:"Entity Provider Write Properties",required:!1,deprecated:!1},filterAlreadySeen:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set this to true to filter out results that have already been communicated by this component.",title:"Filter Already Seen",required:!1,deprecated:!1},httpHeaders:{kind:"parameter",type:"object",description:"Custom HTTP headers to inject into every request, this could include OAuth tokens, etc.",title:"Http Headers",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},proxy:{kind:"parameter",type:"object",description:"HTTP proxy server configuration",title:"Proxy",required:!1,deprecated:!1},serviceUri:{kind:"parameter",type:"string",description:"Target OData service base URI, e.g. http://services.odata.org/OData/OData.svc",title:"Service Uri",required:!1,deprecated:!1},socketTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"HTTP request timeout in milliseconds, defaults to 30,000 (30 seconds)",title:"Socket Timeout",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},splitResult:{kind:"parameter",type:"boolean",defaultValue:"true",description:"For endpoints that return an array or collection, a consumer endpoint will map every element to distinct messages, unless splitResult is set to false.",title:"Split Result",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},httpAsyncClientBuilder:{kind:"parameter",type:"object",description:"Custom HTTP async client builder for more complex HTTP client configuration, overrides connectionTimeout, socketTimeout, proxy and sslContext. Note that a socketTimeout MUST be specified in the builder, otherwise OData requests could block indefinitely",title:"Http Async Client Builder",required:!1,deprecated:!1},httpClientBuilder:{kind:"parameter",type:"object",description:"Custom HTTP client builder for more complex HTTP client configuration, overrides connectionTimeout, socketTimeout, proxy and sslContext. Note that a socketTimeout MUST be specified in the builder, otherwise OData requests could block indefinitely",title:"Http Client Builder",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},olingo4:{type:"object",title:"Olingo4",group:"cloud",icon:"generic24.png",description:"Communicate with OData 4.0 services using Apache Olingo OData API.",properties:{apiName:{kind:"path",type:"object",enum:["DEFAULT"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},connectTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"HTTP connection creation timeout in milliseconds, defaults to 30,000 (30 seconds)",title:"Connect Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"application/json;charset=utf-8",description:"Content-Type header value can be used to specify JSON or XML message format, defaults to application/json;charset=utf-8",title:"Content Type",required:!1,deprecated:!1},filterAlreadySeen:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set this to true to filter out results that have already been communicated by this component.",title:"Filter Already Seen",required:!1,deprecated:!1},httpHeaders:{kind:"parameter",type:"object",description:"Custom HTTP headers to inject into every request, this could include OAuth tokens, etc.",title:"Http Headers",required:!1,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},proxy:{kind:"parameter",type:"object",description:"HTTP proxy server configuration",title:"Proxy",required:!1,deprecated:!1},serviceUri:{kind:"parameter",type:"string",description:"Target OData service base URI, e.g. http://services.odata.org/OData/OData.svc",title:"Service Uri",required:!1,deprecated:!1},socketTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"HTTP request timeout in milliseconds, defaults to 30,000 (30 seconds)",title:"Socket Timeout",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},splitResult:{kind:"parameter",type:"boolean",defaultValue:"true",description:"For endpoints that return an array or collection, a consumer endpoint will map every element to distinct messages, unless splitResult is set to false.",title:"Split Result",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},httpAsyncClientBuilder:{kind:"parameter",type:"object",description:"Custom HTTP async client builder for more complex HTTP client configuration, overrides connectionTimeout, socketTimeout, proxy and sslContext. Note that a socketTimeout MUST be specified in the builder, otherwise OData requests could block indefinitely",title:"Http Async Client Builder",required:!1,deprecated:!1},httpClientBuilder:{kind:"parameter",type:"object",description:"Custom HTTP client builder for more complex HTTP client configuration, overrides connectionTimeout, socketTimeout, proxy and sslContext. Note that a socketTimeout MUST be specified in the builder, otherwise OData requests could block indefinitely",title:"Http Client Builder",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},opensearch:{type:"object",title:"OpenSearch",group:"search,monitoring",icon:"generic24.png",description:"Send requests to OpenSearch via Java Client API.",properties:{clusterName:{kind:"path",type:"string",description:"Name of the cluster",title:"Cluster Name",required:!0,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The time in ms to wait before connection will timeout.",title:"Connection Timeout",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Disconnect after it finish calling the producer",title:"Disconnect",required:!1,deprecated:!1},from:{kind:"parameter",type:"integer",description:"Starting index of the response.",title:"From",required:!1,deprecated:!1},hostAddresses:{kind:"parameter",type:"string",description:"Comma separated list with ip:port formatted remote transport addresses to use.",title:"Host Addresses",required:!1,deprecated:!1},indexName:{kind:"parameter",type:"string",description:"The name of the index to act against",title:"Index Name",required:!1,deprecated:!1},maxRetryTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The time in ms before retry",title:"Max Retry Timeout",required:!1,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["Index","Update","Bulk","GetById","MultiGet","MultiSearch","Delete","DeleteIndex","Search","Exists","Ping"],description:"What operation to perform",title:"Operation",required:!1,deprecated:!1},scrollKeepAliveMs:{kind:"parameter",type:"integer",defaultValue:"60000",description:"Time in ms during which OpenSearch will keep search context alive",title:"Scroll Keep Alive Ms",required:!1,deprecated:!1},size:{kind:"parameter",type:"integer",description:"Size of the response.",title:"Size",required:!1,deprecated:!1},socketTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The timeout in ms to wait before the socket will timeout.",title:"Socket Timeout",required:!1,deprecated:!1},useScroll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable scroll usage",title:"Use Scroll",required:!1,deprecated:!1},waitForActiveShards:{kind:"parameter",type:"integer",defaultValue:"1",description:"Index creation waits for the write consistency number of shards to be available",title:"Wait For Active Shards",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},documentClass:{kind:"parameter",type:"string",defaultValue:"ObjectNode",description:"The class to use when deserializing the documents.",title:"Document Class",required:!1,deprecated:!1},enableSniffer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable automatically discover nodes from a running OpenSearch cluster. If this option is used in conjunction with Spring Boot then it's managed by the Spring Boot configuration (see: Disable Sniffer in Spring Boot).",title:"Enable Sniffer",required:!1,deprecated:!1},sniffAfterFailureDelay:{kind:"parameter",type:"integer",defaultValue:"60000",description:"The delay of a sniff execution scheduled after a failure (in milliseconds)",title:"Sniff After Failure Delay",required:!1,deprecated:!1},snifferInterval:{kind:"parameter",type:"integer",defaultValue:"300000",description:"The interval between consecutive ordinary sniff executions in milliseconds. Will be honoured when sniffOnFailure is disabled or when there are no failures between consecutive sniff executions",title:"Sniffer Interval",required:!1,deprecated:!1},certificatePath:{kind:"parameter",type:"string",description:"The certificate that can be used to access the ES Cluster. It can be loaded by default from classpath, but you can prefix with classpath:, file:, or http: to load the resource from different systems.",title:"Certificate Path",required:!1,deprecated:!1},enableSSL:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable SSL",title:"Enable SSL",required:!1,deprecated:!1}}},"openshift-build-configs":{type:"object",title:"Openshift Build Config",group:"container,cloud",icon:"generic24.png",description:"Perform operations on OpenShift Build Configs.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"openshift-builds":{type:"object",title:"Openshift Builds",group:"container,cloud",icon:"generic24.png",description:"Perform operations on OpenShift Builds.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"openshift-deploymentconfigs":{type:"object",title:"Openshift Deployment Configs",group:"container,cloud",icon:"generic24.png",description:"Perform operations on Openshift Deployment Configs and get notified on Deployment Config changes.",properties:{masterUrl:{kind:"path",type:"string",description:"Kubernetes Master url",title:"Master Url",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The Kubernetes API Version to use",title:"Api Version",required:!1,deprecated:!1},dnsDomain:{kind:"parameter",type:"string",description:"The dns domain, used for ServiceCall EIP",title:"Dns Domain",required:!1,deprecated:!1},kubernetesClient:{kind:"parameter",type:"object",description:"Default KubernetesClient to use if provided",title:"Kubernetes Client",required:!1,deprecated:!1},namespace:{kind:"parameter",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},portName:{kind:"parameter",type:"string",description:"The port name, used for ServiceCall EIP",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"parameter",type:"string",defaultValue:"tcp",description:"The port protocol, used for ServiceCall EIP",title:"Port Protocol",required:!1,deprecated:!1},crdGroup:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Group we would like to watch",title:"Crd Group",required:!1,deprecated:!1},crdName:{kind:"parameter",type:"string",description:"The Consumer CRD Resource name we would like to watch",title:"Crd Name",required:!1,deprecated:!1},crdPlural:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Plural we would like to watch",title:"Crd Plural",required:!1,deprecated:!1},crdScope:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Scope we would like to watch",title:"Crd Scope",required:!1,deprecated:!1},crdVersion:{kind:"parameter",type:"string",description:"The Consumer CRD Resource Version we would like to watch",title:"Crd Version",required:!1,deprecated:!1},labelKey:{kind:"parameter",type:"string",description:"The Consumer Label key when watching at some resources",title:"Label Key",required:!1,deprecated:!1},labelValue:{kind:"parameter",type:"string",description:"The Consumer Label value when watching at some resources",title:"Label Value",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Consumer pool size",title:"Pool Size",required:!1,deprecated:!1},resourceName:{kind:"parameter",type:"string",description:"The Consumer Resource Name we would like to watch",title:"Resource Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"Producer operation to do on Kubernetes",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",description:"Connection timeout in milliseconds to use when making requests to the Kubernetes API server.",title:"Connection Timeout",required:!1,deprecated:!1},caCertData:{kind:"parameter",type:"string",description:"The CA Cert Data",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"parameter",type:"string",description:"The CA Cert File",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"parameter",type:"string",description:"The Client Cert Data",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"parameter",type:"string",description:"The Client Cert File",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"parameter",type:"string",description:"The Key Algorithm used by the client",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"parameter",type:"string",description:"The Client Key data",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"parameter",type:"string",description:"The Client Key file",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"parameter",type:"string",description:"The Client Key Passphrase",title:"Client Key Passphrase",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The Auth Token",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to connect to Kubernetes",title:"Password",required:!1,deprecated:!1},trustCerts:{kind:"parameter",type:"boolean",description:"Define if the certs we used are trusted anyway or not",title:"Trust Certs",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to connect to Kubernetes",title:"Username",required:!1,deprecated:!1}}},"openstack-cinder":{type:"object",title:"OpenStack Cinder",group:"container",icon:"generic24.png",description:"Access data in OpenStack Cinder block storage.",properties:{host:{kind:"path",type:"string",description:"OpenStack host url",title:"Host",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",defaultValue:"V3",enum:["V2","V3"],description:"OpenStack API version",title:"Api Version",required:!1,deprecated:!1},config:{kind:"parameter",type:"object",description:"OpenStack configuration",title:"Config",required:!1,deprecated:!1},domain:{kind:"parameter",type:"string",defaultValue:"default",description:"Authentication domain",title:"Domain",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"The operation to do",title:"Operation",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"OpenStack password",title:"Password",required:!0,deprecated:!1},project:{kind:"parameter",type:"string",description:"The project ID",title:"Project",required:!0,deprecated:!1},subsystem:{kind:"parameter",type:"string",enum:["snapshots","volumes"],description:"OpenStack Cinder subsystem",title:"Subsystem",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"OpenStack username",title:"Username",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"openstack-glance":{type:"object",title:"OpenStack Glance",group:"container",icon:"generic24.png",description:"Manage VM images and metadata definitions in OpenStack Glance.",properties:{host:{kind:"path",type:"string",description:"OpenStack host url",title:"Host",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",defaultValue:"V3",enum:["V2","V3"],description:"OpenStack API version",title:"Api Version",required:!1,deprecated:!1},config:{kind:"parameter",type:"object",description:"OpenStack configuration",title:"Config",required:!1,deprecated:!1},domain:{kind:"parameter",type:"string",defaultValue:"default",description:"Authentication domain",title:"Domain",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"The operation to do",title:"Operation",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"OpenStack password",title:"Password",required:!0,deprecated:!1},project:{kind:"parameter",type:"string",description:"The project ID",title:"Project",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"OpenStack username",title:"Username",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"openstack-keystone":{type:"object",title:"OpenStack Keystone",group:"container",icon:"generic24.png",description:"Access OpenStack Keystone for API client authentication, service discovery and distributed multi-tenant authorization.",properties:{host:{kind:"path",type:"string",description:"OpenStack host url",title:"Host",required:!0,deprecated:!1},config:{kind:"parameter",type:"object",description:"OpenStack configuration",title:"Config",required:!1,deprecated:!1},domain:{kind:"parameter",type:"string",defaultValue:"default",description:"Authentication domain",title:"Domain",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"The operation to do",title:"Operation",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"OpenStack password",title:"Password",required:!0,deprecated:!1},project:{kind:"parameter",type:"string",description:"The project ID",title:"Project",required:!0,deprecated:!1},subsystem:{kind:"parameter",type:"string",enum:["regions","domains","projects","users","groups"],description:"OpenStack Keystone subsystem",title:"Subsystem",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"OpenStack username",title:"Username",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"openstack-neutron":{type:"object",title:"OpenStack Neutron",group:"container",icon:"generic24.png",description:"Access OpenStack Neutron for network services.",properties:{host:{kind:"path",type:"string",description:"OpenStack host url",title:"Host",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",defaultValue:"V3",enum:["V2","V3"],description:"OpenStack API version",title:"Api Version",required:!1,deprecated:!1},config:{kind:"parameter",type:"object",description:"OpenStack configuration",title:"Config",required:!1,deprecated:!1},domain:{kind:"parameter",type:"string",defaultValue:"default",description:"Authentication domain",title:"Domain",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"The operation to do",title:"Operation",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"OpenStack password",title:"Password",required:!0,deprecated:!1},project:{kind:"parameter",type:"string",description:"The project ID",title:"Project",required:!0,deprecated:!1},subsystem:{kind:"parameter",type:"string",enum:["networks","subnets","ports","routers"],description:"OpenStack Neutron subsystem",title:"Subsystem",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"OpenStack username",title:"Username",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"openstack-nova":{type:"object",title:"OpenStack Nova",group:"container",icon:"generic24.png",description:"Access OpenStack to manage compute resources.",properties:{host:{kind:"path",type:"string",description:"OpenStack host url",title:"Host",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",defaultValue:"V3",enum:["V2","V3"],description:"OpenStack API version",title:"Api Version",required:!1,deprecated:!1},config:{kind:"parameter",type:"object",description:"OpenStack configuration",title:"Config",required:!1,deprecated:!1},domain:{kind:"parameter",type:"string",defaultValue:"default",description:"Authentication domain",title:"Domain",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"The operation to do",title:"Operation",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"OpenStack password",title:"Password",required:!0,deprecated:!1},project:{kind:"parameter",type:"string",description:"The project ID",title:"Project",required:!0,deprecated:!1},subsystem:{kind:"parameter",type:"string",enum:["flavors","servers","keypairs"],description:"OpenStack Nova subsystem",title:"Subsystem",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"OpenStack username",title:"Username",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"openstack-swift":{type:"object",title:"OpenStack Swift",group:"container",icon:"generic24.png",description:"Access OpenStack Swift object/blob store.",properties:{host:{kind:"path",type:"string",description:"OpenStack host url",title:"Host",required:!0,deprecated:!1},apiVersion:{kind:"parameter",type:"string",defaultValue:"V3",enum:["V2","V3"],description:"OpenStack API version",title:"Api Version",required:!1,deprecated:!1},config:{kind:"parameter",type:"object",description:"OpenStack configuration",title:"Config",required:!1,deprecated:!1},domain:{kind:"parameter",type:"string",defaultValue:"default",description:"Authentication domain",title:"Domain",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",description:"The operation to do",title:"Operation",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"OpenStack password",title:"Password",required:!0,deprecated:!1},project:{kind:"parameter",type:"string",description:"The project ID",title:"Project",required:!0,deprecated:!1},subsystem:{kind:"parameter",type:"string",enum:["objects","containers"],description:"OpenStack Swift subsystem",title:"Subsystem",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"OpenStack username",title:"Username",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},optaplanner:{type:"object",title:"OptaPlanner",group:"workflow",icon:"generic24.png",description:"Solve planning problems with OptaPlanner.",properties:{problemName:{kind:"path",type:"string",description:"Problem name",title:"Problem Name",required:!0,deprecated:!1},problemId:{kind:"parameter",type:"integer",defaultValue:"1L",description:"In case of using SolverManager : the problem id",title:"Problem Id",required:!1,deprecated:!1},solverId:{kind:"parameter",type:"string",defaultValue:"DEFAULT_SOLVER",description:"Specifies the solverId to user for the solver instance key",title:"Solver Id",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},async:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies to perform operations in async mode",title:"Async",required:!1,deprecated:!1},threadPoolSize:{kind:"parameter",type:"integer",defaultValue:"10",description:"Specifies the thread pool size to use when async is true",title:"Thread Pool Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},configFile:{kind:"parameter",type:"string",description:"If SolverManager is absent from the header {OptaPlannerConstants.SOLVER_MANAGER} : A SolverManager will be created using this Optaplanner config file.",title:"Config File",required:!1,deprecated:!1},solverManager:{kind:"parameter",type:"object",description:"SolverManager",title:"Solver Manager",required:!1,deprecated:!1}}},paho:{type:"object",title:"Paho",group:"messaging,iot",icon:"generic24.png",description:"Communicate with MQTT message brokers using Eclipse Paho MQTT Client.",properties:{topic:{kind:"path",type:"string",description:"Name of the topic",title:"Topic",required:!0,deprecated:!1},automaticReconnect:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether the client will automatically attempt to reconnect to the server if the connection is lost. If set to false, the client will not attempt to automatically reconnect to the server in the event that the connection is lost. If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server. It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay will double until it is at 2 minutes at which point the delay will stay at 2 minutes.",title:"Automatic Reconnect",required:!1,deprecated:!1},brokerUrl:{kind:"parameter",type:"string",defaultValue:"tcp://localhost:1883",description:"The URL of the MQTT broker.",title:"Broker Url",required:!1,deprecated:!1},cleanSession:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether the client and server should remember state across restarts and reconnects. If set to false both the client and server will maintain state across restarts of the client, the server and the connection. As state is maintained: Message delivery will be reliable meeting the specified QOS even if the client, server or connection are restarted. The server will treat a subscription as durable. If set to true the client and server will not maintain state across restarts of the client, the server or the connection. This means Message delivery to the specified QOS cannot be maintained if the client, server or connection are restarted The server will treat a subscription as non-durable",title:"Clean Session",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"MQTT client identifier. The identifier must be unique.",title:"Client Id",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30",description:"Sets the connection timeout value. This value, measured in seconds, defines the maximum time interval the client will wait for the network connection to the MQTT server to be established. The default timeout is 30 seconds. A value of 0 disables timeout processing meaning the client will wait until the network connection is made successfully or fails.",title:"Connection Timeout",required:!1,deprecated:!1},filePersistenceDirectory:{kind:"parameter",type:"string",description:"Base directory used by file persistence. Will by default use user directory.",title:"File Persistence Directory",required:!1,deprecated:!1},keepAliveInterval:{kind:"parameter",type:"integer",defaultValue:"60",description:"Sets the keep alive interval. This value, measured in seconds, defines the maximum time interval between messages sent or received. It enables the client to detect if the server is no longer available, without having to wait for the TCP/IP timeout. The client will ensure that at least one message travels across the network within each keep alive period. In the absence of a data-related message during the time period, the client sends a very small ping message, which the server will acknowledge. A value of 0 disables keepalive processing in the client. The default value is 60 seconds",title:"Keep Alive Interval",required:!1,deprecated:!1},maxInflight:{kind:"parameter",type:"integer",defaultValue:"10",description:"Sets the max inflight. please increase this value in a high traffic environment. The default value is 10",title:"Max Inflight",required:!1,deprecated:!1},maxReconnectDelay:{kind:"parameter",type:"integer",defaultValue:"128000",description:"Get the maximum time (in millis) to wait between reconnects",title:"Max Reconnect Delay",required:!1,deprecated:!1},mqttVersion:{kind:"parameter",type:"integer",description:"Sets the MQTT version. The default action is to connect with version 3.1.1, and to fall back to 3.1 if that fails. Version 3.1.1 or 3.1 can be selected specifically, with no fall back, by using the MQTT_VERSION_3_1_1 or MQTT_VERSION_3_1 options respectively.",title:"Mqtt Version",required:!1,deprecated:!1},persistence:{kind:"parameter",type:"object",defaultValue:"MEMORY",enum:["FILE","MEMORY"],description:"Client persistence to be used - memory or file.",title:"Persistence",required:!1,deprecated:!1},qos:{kind:"parameter",type:"integer",defaultValue:"2",description:"Client quality of service level (0-2).",title:"Qos",required:!1,deprecated:!1},retained:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Retain option",title:"Retained",required:!1,deprecated:!1},serverURIs:{kind:"parameter",type:"string",description:"Set a list of one or more serverURIs the client may connect to. Multiple servers can be separated by comma. Each serverURI specifies the address of a server that the client may connect to. Two types of connection are supported tcp:// for a TCP connection and ssl:// for a TCP connection secured by SSL/TLS. For example: tcp://localhost:1883 ssl://localhost:8883 If the port is not specified, it will default to 1883 for tcp:// URIs, and 8883 for ssl:// URIs. If serverURIs is set then it overrides the serverURI parameter passed in on the constructor of the MQTT client. When an attempt to connect is initiated the client will start with the first serverURI in the list and work through the list until a connection is established with a server. If a connection cannot be made to any of the servers then the connect attempt fails. Specifying a list of servers that a client may connect to has several uses: High Availability and reliable message delivery Some MQTT servers support a high availability feature where two or more equal MQTT servers share state. An MQTT client can connect to any of the equal servers and be assured that messages are reliably delivered and durable subscriptions are maintained no matter which server the client connects to. The cleansession flag must be set to false if durable subscriptions and/or reliable message delivery is required. Hunt List A set of servers may be specified that are not equal (as in the high availability option). As no state is shared across the servers reliable message delivery and durable subscriptions are not valid. The cleansession flag must be set to true if the hunt list mode is used",title:"Server URIs",required:!1,deprecated:!1},willPayload:{kind:"parameter",type:"string",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. Sets the message for the LWT.",title:"Will Payload",required:!1,deprecated:!1},willQos:{kind:"parameter",type:"integer",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. Sets the quality of service to publish the message at (0, 1 or 2).",title:"Will Qos",required:!1,deprecated:!1},willRetained:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. Sets whether or not the message should be retained.",title:"Will Retained",required:!1,deprecated:!1},willTopic:{kind:"parameter",type:"string",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. Sets the topic that the willPayload will be published to.",title:"Will Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"To use an existing mqtt client",title:"Client",required:!1,deprecated:!1},customWebSocketHeaders:{kind:"parameter",type:"object",description:"Sets the Custom WebSocket Headers for the WebSocket Connection.",title:"Custom Web Socket Headers",required:!1,deprecated:!1},executorServiceTimeout:{kind:"parameter",type:"integer",defaultValue:"1",description:"Set the time in seconds that the executor service should wait when terminating before forcefully terminating. It is not recommended to change this value unless you are absolutely sure that you need to.",title:"Executor Service Timeout",required:!1,deprecated:!1},httpsHostnameVerificationEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether SSL HostnameVerifier is enabled or not. The default value is true.",title:"Https Hostname Verification Enabled",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to be used for authentication against the MQTT broker",title:"Password",required:!1,deprecated:!1},socketFactory:{kind:"parameter",type:"object",description:"Sets the SocketFactory to use. This allows an application to apply its own policies around the creation of network sockets. If using an SSL connection, an SSLSocketFactory can be used to supply application-specific security settings.",title:"Socket Factory",required:!1,deprecated:!1},sslClientProps:{kind:"parameter",type:"object",description:"Sets the SSL properties for the connection. Note that these properties are only valid if an implementation of the Java Secure Socket Extensions (JSSE) is available. These properties are not used if a custom SocketFactory has been set. The following properties can be used: com.ibm.ssl.protocol One of: SSL, SSLv3, TLS, TLSv1, SSL_TLS. com.ibm.ssl.contextProvider Underlying JSSE provider. For example IBMJSSE2 or SunJSSE com.ibm.ssl.keyStore The name of the file that contains the KeyStore object that you want the KeyManager to use. For example /mydir/etc/key.p12 com.ibm.ssl.keyStorePassword The password for the KeyStore object that you want the KeyManager to use. The password can either be in plain-text, or may be obfuscated using the static method: com.ibm.micro.security.Password.obfuscate(char password). This obfuscates the password using a simple and insecure XOR and Base64 encoding mechanism. Note that this is only a simple scrambler to obfuscate clear-text passwords. com.ibm.ssl.keyStoreType Type of key store, for example PKCS12, JKS, or JCEKS. com.ibm.ssl.keyStoreProvider Key store provider, for example IBMJCE or IBMJCEFIPS. com.ibm.ssl.trustStore The name of the file that contains the KeyStore object that you want the TrustManager to use. com.ibm.ssl.trustStorePassword The password for the TrustStore object that you want the TrustManager to use. The password can either be in plain-text, or may be obfuscated using the static method: com.ibm.micro.security.Password.obfuscate(char password). This obfuscates the password using a simple and insecure XOR and Base64 encoding mechanism. Note that this is only a simple scrambler to obfuscate clear-text passwords. com.ibm.ssl.trustStoreType The type of KeyStore object that you want the default TrustManager to use. Same possible values as keyStoreType. com.ibm.ssl.trustStoreProvider Trust store provider, for example IBMJCE or IBMJCEFIPS. com.ibm.ssl.enabledCipherSuites A list of which ciphers are enabled. Values are dependent on the provider, for example: SSL_RSA_WITH_AES_128_CBC_SHA;SSL_RSA_WITH_3DES_EDE_CBC_SHA. com.ibm.ssl.keyManager Sets the algorithm that will be used to instantiate a KeyManagerFactory object instead of using the default algorithm available in the platform. Example values: IbmX509 or IBMJ9X509. com.ibm.ssl.trustManager Sets the algorithm that will be used to instantiate a TrustManagerFactory object instead of using the default algorithm available in the platform. Example values: PKIX or IBMJ9X509.",title:"Ssl Client Props",required:!1,deprecated:!1},sslHostnameVerifier:{kind:"parameter",type:"object",description:"Sets the HostnameVerifier for the SSL connection. Note that it will be used after handshake on a connection and you should do actions by yourself when hostname is verified error. There is no default HostnameVerifier",title:"Ssl Hostname Verifier",required:!1,deprecated:!1},userName:{kind:"parameter",type:"string",description:"Username to be used for authentication against the MQTT broker",title:"User Name",required:!1,deprecated:!1}}},"paho-mqtt5":{type:"object",title:"Paho MQTT 5",group:"messaging,iot",icon:"generic24.png",description:"Communicate with MQTT message brokers using Eclipse Paho MQTT v5 Client.",properties:{topic:{kind:"path",type:"string",description:"Name of the topic",title:"Topic",required:!0,deprecated:!1},automaticReconnect:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether the client will automatically attempt to reconnect to the server if the connection is lost. If set to false, the client will not attempt to automatically reconnect to the server in the event that the connection is lost. If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server. It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay will double until it is at 2 minutes at which point the delay will stay at 2 minutes.",title:"Automatic Reconnect",required:!1,deprecated:!1},brokerUrl:{kind:"parameter",type:"string",defaultValue:"tcp://localhost:1883",description:"The URL of the MQTT broker.",title:"Broker Url",required:!1,deprecated:!1},cleanStart:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether the client and server should remember state across restarts and reconnects. If set to false both the client and server will maintain state across restarts of the client, the server and the connection. As state is maintained: Message delivery will be reliable meeting the specified QOS even if the client, server or connection are restarted. The server will treat a subscription as durable. If set to true the client and server will not maintain state across restarts of the client, the server or the connection. This means Message delivery to the specified QOS cannot be maintained if the client, server or connection are restarted The server will treat a subscription as non-durable",title:"Clean Start",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"MQTT client identifier. The identifier must be unique.",title:"Client Id",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30",description:"Sets the connection timeout value. This value, measured in seconds, defines the maximum time interval the client will wait for the network connection to the MQTT server to be established. The default timeout is 30 seconds. A value of 0 disables timeout processing meaning the client will wait until the network connection is made successfully or fails.",title:"Connection Timeout",required:!1,deprecated:!1},filePersistenceDirectory:{kind:"parameter",type:"string",description:"Base directory used by file persistence. Will by default use user directory.",title:"File Persistence Directory",required:!1,deprecated:!1},keepAliveInterval:{kind:"parameter",type:"integer",defaultValue:"60",description:"Sets the keep alive interval. This value, measured in seconds, defines the maximum time interval between messages sent or received. It enables the client to detect if the server is no longer available, without having to wait for the TCP/IP timeout. The client will ensure that at least one message travels across the network within each keep alive period. In the absence of a data-related message during the time period, the client sends a very small ping message, which the server will acknowledge. A value of 0 disables keepalive processing in the client. The default value is 60 seconds",title:"Keep Alive Interval",required:!1,deprecated:!1},maxReconnectDelay:{kind:"parameter",type:"integer",defaultValue:"128000",description:"Get the maximum time (in millis) to wait between reconnects",title:"Max Reconnect Delay",required:!1,deprecated:!1},persistence:{kind:"parameter",type:"object",defaultValue:"MEMORY",enum:["FILE","MEMORY"],description:"Client persistence to be used - memory or file.",title:"Persistence",required:!1,deprecated:!1},qos:{kind:"parameter",type:"integer",defaultValue:"2",description:"Client quality of service level (0-2).",title:"Qos",required:!1,deprecated:!1},receiveMaximum:{kind:"parameter",type:"integer",defaultValue:"65535",description:"Sets the Receive Maximum. This value represents the limit of QoS 1 and QoS 2 publications that the client is willing to process concurrently. There is no mechanism to limit the number of QoS 0 publications that the Server might try to send. The default value is 65535",title:"Receive Maximum",required:!1,deprecated:!1},retained:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Retain option",title:"Retained",required:!1,deprecated:!1},serverURIs:{kind:"parameter",type:"string",description:"Set a list of one or more serverURIs the client may connect to. Multiple servers can be separated by comma. Each serverURI specifies the address of a server that the client may connect to. Two types of connection are supported tcp:// for a TCP connection and ssl:// for a TCP connection secured by SSL/TLS. For example: tcp://localhost:1883 ssl://localhost:8883 If the port is not specified, it will default to 1883 for tcp:// URIs, and 8883 for ssl:// URIs. If serverURIs is set then it overrides the serverURI parameter passed in on the constructor of the MQTT client. When an attempt to connect is initiated the client will start with the first serverURI in the list and work through the list until a connection is established with a server. If a connection cannot be made to any of the servers then the connect attempt fails. Specifying a list of servers that a client may connect to has several uses: High Availability and reliable message delivery Some MQTT servers support a high availability feature where two or more equal MQTT servers share state. An MQTT client can connect to any of the equal servers and be assured that messages are reliably delivered and durable subscriptions are maintained no matter which server the client connects to. The cleansession flag must be set to false if durable subscriptions and/or reliable message delivery is required. Hunt List A set of servers may be specified that are not equal (as in the high availability option). As no state is shared across the servers reliable message delivery and durable subscriptions are not valid. The cleansession flag must be set to true if the hunt list mode is used",title:"Server URIs",required:!1,deprecated:!1},sessionExpiryInterval:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the Session Expiry Interval. This value, measured in seconds, defines the maximum time that the broker will maintain the session for once the client disconnects. Clients should only connect with a long Session Expiry interval if they intend to connect to the server at some later point in time. By default this value is -1 and so will not be sent, in this case, the session will not expire. If a 0 is sent, the session will end immediately once the Network Connection is closed. When the client has determined that it has no longer any use for the session, it should disconnect with a Session Expiry Interval set to 0.",title:"Session Expiry Interval",required:!1,deprecated:!1},willMqttProperties:{kind:"parameter",type:"object",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. The MQTT properties set for the message.",title:"Will Mqtt Properties",required:!1,deprecated:!1},willPayload:{kind:"parameter",type:"string",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. The byte payload for the message.",title:"Will Payload",required:!1,deprecated:!1},willQos:{kind:"parameter",type:"integer",defaultValue:"1",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. The quality of service to publish the message at (0, 1 or 2).",title:"Will Qos",required:!1,deprecated:!1},willRetained:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. Whether or not the message should be retained.",title:"Will Retained",required:!1,deprecated:!1},willTopic:{kind:"parameter",type:"string",description:"Sets the Last Will and Testament (LWT) for the connection. In the event that this client unexpectedly loses its connection to the server, the server will publish a message to itself using the supplied details. The topic to publish to.",title:"Will Topic",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"To use an existing mqtt client",title:"Client",required:!1,deprecated:!1},customWebSocketHeaders:{kind:"parameter",type:"object",description:"Sets the Custom WebSocket Headers for the WebSocket Connection.",title:"Custom Web Socket Headers",required:!1,deprecated:!1},executorServiceTimeout:{kind:"parameter",type:"integer",defaultValue:"1",description:"Set the time in seconds that the executor service should wait when terminating before forcefully terminating. It is not recommended to change this value unless you are absolutely sure that you need to.",title:"Executor Service Timeout",required:!1,deprecated:!1},httpsHostnameVerificationEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether SSL HostnameVerifier is enabled or not. The default value is true.",title:"Https Hostname Verification Enabled",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to be used for authentication against the MQTT broker",title:"Password",required:!1,deprecated:!1},socketFactory:{kind:"parameter",type:"object",description:"Sets the SocketFactory to use. This allows an application to apply its own policies around the creation of network sockets. If using an SSL connection, an SSLSocketFactory can be used to supply application-specific security settings.",title:"Socket Factory",required:!1,deprecated:!1},sslClientProps:{kind:"parameter",type:"object",description:"Sets the SSL properties for the connection. Note that these properties are only valid if an implementation of the Java Secure Socket Extensions (JSSE) is available. These properties are not used if a custom SocketFactory has been set. The following properties can be used: com.ibm.ssl.protocol One of: SSL, SSLv3, TLS, TLSv1, SSL_TLS. com.ibm.ssl.contextProvider Underlying JSSE provider. For example IBMJSSE2 or SunJSSE com.ibm.ssl.keyStore The name of the file that contains the KeyStore object that you want the KeyManager to use. For example /mydir/etc/key.p12 com.ibm.ssl.keyStorePassword The password for the KeyStore object that you want the KeyManager to use. The password can either be in plain-text, or may be obfuscated using the static method: com.ibm.micro.security.Password.obfuscate(char password). This obfuscates the password using a simple and insecure XOR and Base64 encoding mechanism. Note that this is only a simple scrambler to obfuscate clear-text passwords. com.ibm.ssl.keyStoreType Type of key store, for example PKCS12, JKS, or JCEKS. com.ibm.ssl.keyStoreProvider Key store provider, for example IBMJCE or IBMJCEFIPS. com.ibm.ssl.trustStore The name of the file that contains the KeyStore object that you want the TrustManager to use. com.ibm.ssl.trustStorePassword The password for the TrustStore object that you want the TrustManager to use. The password can either be in plain-text, or may be obfuscated using the static method: com.ibm.micro.security.Password.obfuscate(char password). This obfuscates the password using a simple and insecure XOR and Base64 encoding mechanism. Note that this is only a simple scrambler to obfuscate clear-text passwords. com.ibm.ssl.trustStoreType The type of KeyStore object that you want the default TrustManager to use. Same possible values as keyStoreType. com.ibm.ssl.trustStoreProvider Trust store provider, for example IBMJCE or IBMJCEFIPS. com.ibm.ssl.enabledCipherSuites A list of which ciphers are enabled. Values are dependent on the provider, for example: SSL_RSA_WITH_AES_128_CBC_SHA;SSL_RSA_WITH_3DES_EDE_CBC_SHA. com.ibm.ssl.keyManager Sets the algorithm that will be used to instantiate a KeyManagerFactory object instead of using the default algorithm available in the platform. Example values: IbmX509 or IBMJ9X509. com.ibm.ssl.trustManager Sets the algorithm that will be used to instantiate a TrustManagerFactory object instead of using the default algorithm available in the platform. Example values: PKIX or IBMJ9X509.",title:"Ssl Client Props",required:!1,deprecated:!1},sslHostnameVerifier:{kind:"parameter",type:"object",description:"Sets the HostnameVerifier for the SSL connection. Note that it will be used after handshake on a connection and you should do actions by yourself when hostname is verified error. There is no default HostnameVerifier",title:"Ssl Hostname Verifier",required:!1,deprecated:!1},userName:{kind:"parameter",type:"string",description:"Username to be used for authentication against the MQTT broker",title:"User Name",required:!1,deprecated:!1}}},pdf:{type:"object",title:"PDF",group:"document,transformation",icon:"generic24.png",description:"Create, modify or extract content from PDF documents.",properties:{operation:{kind:"path",type:"object",enum:["create","append","extractText"],description:"Operation type",title:"Operation",required:!0,deprecated:!1},font:{kind:"parameter",type:"string",defaultValue:"Helvetica",enum:["Courier","Courier-Bold","Courier-Oblique","Courier-BoldOblique","Helvetica","Helvetica-Bold","Helvetica-Oblique","Helvetica-BoldOblique","Times-Roman","Times-Bold","Times-Italic","Times-BoldItalic","Symbol","ZapfDingbats"],description:"Font",title:"Font",required:!1,deprecated:!1},fontSize:{kind:"parameter",type:"number",defaultValue:"14.0",description:"Font size in pixels",title:"Font Size",required:!1,deprecated:!1},marginBottom:{kind:"parameter",type:"integer",defaultValue:"20",description:"Margin bottom in pixels",title:"Margin Bottom",required:!1,deprecated:!1},marginLeft:{kind:"parameter",type:"integer",defaultValue:"20",description:"Margin left in pixels",title:"Margin Left",required:!1,deprecated:!1},marginRight:{kind:"parameter",type:"integer",defaultValue:"40",description:"Margin right in pixels",title:"Margin Right",required:!1,deprecated:!1},marginTop:{kind:"parameter",type:"integer",defaultValue:"20",description:"Margin top in pixels",title:"Margin Top",required:!1,deprecated:!1},pageSize:{kind:"parameter",type:"string",defaultValue:"A4",enum:["LETTER","LEGAL","A0","A1","A2","A3","A4","A5","A6"],description:"Page size",title:"Page Size",required:!1,deprecated:!1},textProcessingFactory:{kind:"parameter",type:"object",defaultValue:"lineTermination",enum:["autoFormatting","lineTermination"],description:"Text processing to use. autoFormatting: Text is getting sliced by words, then max amount of words that fits in the line will be written into pdf document. With this strategy all words that doesn't fit in the line will be moved to the new line. lineTermination: Builds set of classes for line-termination writing strategy. Text getting sliced by line termination symbol and then it will be written regardless it fits in the line or not.",title:"Text Processing Factory",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"pg-replication-slot":{type:"object",title:"PostgresSQL Replication Slot",group:"database",icon:"generic24.png",description:"Poll for PostgreSQL Write-Ahead Log (WAL) records using Streaming Replication Slots.",properties:{slot:{kind:"path",type:"string",description:"Replication Slot name",title:"Slot",required:!0,deprecated:!1},host:{kind:"path",type:"string",defaultValue:"localhost",description:"Postgres host",title:"Host",required:!1,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"5432",description:"Postgres port",title:"Port",required:!1,deprecated:!1},database:{kind:"path",type:"string",description:"Postgres database name",title:"Database",required:!0,deprecated:!1},outputPlugin:{kind:"path",type:"string",description:"Output plugin name",title:"Output Plugin",required:!0,deprecated:!1},password:{kind:"parameter",type:"string",description:"Postgres password",title:"Password",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",defaultValue:"postgres",description:"Postgres user",title:"User",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},autoCreateSlot:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Auto create slot if it does not exist",title:"Auto Create Slot",required:!1,deprecated:!1},slotOptions:{kind:"parameter",type:"object",description:"Slot options to be passed to the output plugin.",title:"Slot Options",required:!1,deprecated:!1},statusInterval:{kind:"parameter",type:"integer",defaultValue:"10",description:"Specifies the number of seconds between status packets sent back to Postgres server.",title:"Status Interval",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},pgevent:{type:"object",title:"PostgresSQL Event",group:"database",icon:"generic24.png",description:"Send and receive PostgreSQL events via LISTEN and NOTIFY commands.",properties:{host:{kind:"path",type:"string",defaultValue:"localhost",description:"To connect using hostname and port to the database.",title:"Host",required:!1,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"5432",description:"To connect using hostname and port to the database.",title:"Port",required:!1,deprecated:!1},database:{kind:"path",type:"string",description:"The database name. The database name can take any characters because it is sent as a quoted identifier. It is part of the endpoint URI, so diacritical marks and non-Latin letters have to be URL encoded.",title:"Database",required:!0,deprecated:!1},channel:{kind:"path",type:"string",description:"The channel name",title:"Channel",required:!0,deprecated:!1},datasource:{kind:"parameter",type:"object",description:"To connect using the given javax.sql.DataSource instead of using hostname and port.",title:"Datasource",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},pass:{kind:"parameter",type:"string",description:"Password for login",title:"Pass",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",defaultValue:"postgres",description:"Username for login",title:"User",required:!1,deprecated:!1}}},"platform-http":{type:"object",title:"Platform HTTP",group:"http",icon:"generic24.png",description:"Expose HTTP endpoints using the HTTP server available in the current platform.",properties:{path:{kind:"path",type:"string",description:"The path under which this endpoint serves the HTTP requests, for proxy use 'proxy'",title:"Path",required:!0,deprecated:!1},consumes:{kind:"parameter",type:"string",description:"The content type this endpoint accepts as an input, such as application/xml or application/json. null or &#42;/&#42; mean no restriction.",title:"Consumes",required:!1,deprecated:!1},httpMethodRestrict:{kind:"parameter",type:"string",description:"A comma separated list of HTTP methods to serve, e.g. GET,POST . If no methods are specified, all methods will be served.",title:"Http Method Restrict",required:!1,deprecated:!1},matchOnUriPrefix:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found.",title:"Match On Uri Prefix",required:!1,deprecated:!1},muteException:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If enabled and an Exchange failed processing on the consumer side the response's body won't contain the exception's stack trace.",title:"Mute Exception",required:!1,deprecated:!1},produces:{kind:"parameter",type:"string",description:"The content type this endpoint produces, such as application/xml or application/json.",title:"Produces",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},fileNameExtWhitelist:{kind:"parameter",type:"string",description:"A comma or whitespace separated list of file extensions. Uploads having these extensions will be stored locally. Null value or asterisk () will allow all files.",title:"File Name Ext Whitelist",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter headers to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},platformHttpEngine:{kind:"parameter",type:"object",description:"An HTTP Server engine implementation to serve the requests of this endpoint.",title:"Platform Http Engine",required:!1,deprecated:!1}}},plc4x:{type:"object",title:"PLC4X",group:"iot",icon:"generic24.png",description:"Read and write to PLC devices",properties:{driver:{kind:"path",type:"string",description:"PLC4X connection string for the connection to the target",title:"Driver",required:!0,deprecated:!1},autoReconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to reconnect when no connection is present upon doing a request",title:"Auto Reconnect",required:!1,deprecated:!1},period:{kind:"parameter",type:"integer",description:"Interval on which the Trigger should be checked",title:"Period",required:!1,deprecated:!1},tags:{kind:"parameter",type:"object",description:"Tags as key/values from the Map to use in query",title:"Tags",required:!1,deprecated:!1},trigger:{kind:"parameter",type:"string",description:"Query to a trigger. On a rising edge of the trigger, the tags will be read once",title:"Trigger",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},pop3:{type:"object",title:"POP3",group:"mail",icon:"generic24.png",description:"Send and receive emails using imap, pop3 and smtp protocols.",properties:{host:{kind:"path",type:"string",description:"The mail server host name",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The port number of the mail server",title:"Port",required:!1,deprecated:!1},closeFolder:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.",title:"Close Folder",required:!1,deprecated:!1},copyTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.",title:"Copy To",required:!1,deprecated:!1},decodeFilename:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the MimeUtility.decodeText method will be used to decode the filename. This is similar to setting JVM system property mail.mime.encodefilename.",title:"Decode Filename",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.",title:"Delete",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.",title:"Disconnect",required:!1,deprecated:!1},handleFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Handle Failed Message",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Specifies the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid downloading thousands of files when the server starts up. Set a value of 0 or negative to disable this option.",title:"Max Messages Per Poll",required:!1,deprecated:!1},mimeDecodeHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables transparent MIME decoding and unfolding for mail headers.",title:"Mime Decode Headers",required:!1,deprecated:!1},moveTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.",title:"Move To",required:!1,deprecated:!1},peek:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Will mark the jakarta.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.",title:"Peek",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skipFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Skip Failed Message",required:!1,deprecated:!1},unseen:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit by unseen mails only.",title:"Unseen",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},failOnDuplicateFileAttachment:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to fail processing the mail if the mail message contains attachments with duplicate file names. If set to false, then the duplicate attachment is skipped and a WARN is logged. If set to true then an exception is thrown failing to process the mail message.",title:"Fail On Duplicate File Attachment",required:!1,deprecated:!1},fetchSize:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.",title:"Fetch Size",required:!1,deprecated:!1},folderName:{kind:"parameter",type:"string",defaultValue:"INBOX",description:"The folder to poll.",title:"Folder Name",required:!1,deprecated:!1},generateMissingAttachmentNames:{kind:"parameter",type:"string",description:"Set this to 'uuid' to set a UUID for the filename of the attachment if no filename was set",title:"Generate Missing Attachment Names",required:!1,deprecated:!1},handleDuplicateAttachmentNames:{kind:"parameter",type:"string",description:"Set the strategy to handle duplicate filenames of attachments never: attachments that have a filename which is already present in the attachments will be ignored unless failOnDuplicateFileAttachment is set to true. uuidPrefix: this will prefix the duplicate attachment filenames each with a uuid and underscore (uuid_filename.fileextension). uuidSuffix: this will suffix the duplicate attachment filenames each with a underscore and uuid (filename_uuid.fileextension).",title:"Handle Duplicate Attachment Names",required:!1,deprecated:!1},mailUidGenerator:{kind:"parameter",type:"object",description:"A pluggable MailUidGenerator that allows to use custom logic to generate UUID of the mail message.",title:"Mail Uid Generator",required:!1,deprecated:!1},mapMailMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw jakarta.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(jakarta.mail.Message.class).",title:"Map Mail Message",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},postProcessAction:{kind:"parameter",type:"object",description:"Refers to an MailBoxPostProcessAction for doing post processing tasks on the mailbox once the normal processing ended.",title:"Post Process Action",required:!1,deprecated:!1},bcc:{kind:"parameter",type:"string",description:"Sets the BCC email address. Separate multiple email addresses with comma.",title:"Bcc",required:!1,deprecated:!1},cc:{kind:"parameter",type:"string",description:"Sets the CC email address. Separate multiple email addresses with comma.",title:"Cc",required:!1,deprecated:!1},from:{kind:"parameter",type:"string",defaultValue:"camel@localhost",description:"The from email address",title:"From",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"The Reply-To recipients (the receivers of the response mail). Separate multiple email addresses with a comma.",title:"Reply To",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The Subject of the message being sent. Note: Setting the subject in the header takes precedence over this option.",title:"Subject",required:!1,deprecated:!1},to:{kind:"parameter",type:"string",description:"Sets the To email address. Separate multiple email addresses with comma.",title:"To",required:!1,deprecated:!1},javaMailSender:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.mail.JavaMailSender for sending emails.",title:"Java Mail Sender",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},additionalJavaMailProperties:{kind:"parameter",type:"object",description:"Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.",title:"Additional Java Mail Properties",required:!1,deprecated:!1},alternativeBodyHeader:{kind:"parameter",type:"string",defaultValue:"CamelMailAlternativeBody",description:"Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.",title:"Alternative Body Header",required:!1,deprecated:!1},attachmentsContentTransferEncodingResolver:{kind:"parameter",type:"object",description:"To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.",title:"Attachments Content Transfer Encoding Resolver",required:!1,deprecated:!1},authenticator:{kind:"parameter",type:"object",description:"The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.",title:"Authenticator",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"Sets the binding used to convert from a Camel message to and from a Mail message",title:"Binding",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The connection timeout in milliseconds.",title:"Connection Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"text/plain",description:"The mail message content type. Use text/html for HTML mails.",title:"Content Type",required:!1,deprecated:!1},contentTypeResolver:{kind:"parameter",type:"object",description:"Resolver to determine Content-Type for file attachments.",title:"Content Type Resolver",required:!1,deprecated:!1},debugMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.",title:"Debug Mode",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.",title:"Header Filter Strategy",required:!1,deprecated:!1},ignoreUnsupportedCharset:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Unsupported Charset",required:!1,deprecated:!1},ignoreUriScheme:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Uri Scheme",required:!1,deprecated:!1},javaMailProperties:{kind:"parameter",type:"object",description:"Sets the java mail options. Will clear any default properties and only use the properties provided for this method.",title:"Java Mail Properties",required:!1,deprecated:!1},session:{kind:"parameter",type:"object",description:"Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).",title:"Session",required:!1,deprecated:!1},useInlineAttachments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use disposition inline or attachment.",title:"Use Inline Attachments",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which allows to cluster consuming from the same mailbox, and let the repository coordinate whether a mail message is valid for the consumer to process. By default no repository is in use.",title:"Idempotent Repository",required:!1,deprecated:!1},idempotentRepositoryRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When using idempotent repository, then when the mail message has been successfully processed and is committed, should the message id be removed from the idempotent repository (default) or be kept in the repository. By default its assumed the message id is unique and has no value to be kept in the repository, because the mail message will be marked as seen/moved or deleted to prevent it from being consumed again. And therefore having the message id stored in the idempotent repository has little value. However this option allows to store the message id, for whatever reason you may have.",title:"Idempotent Repository Remove On Commit",required:!1,deprecated:!1},searchTerm:{kind:"parameter",type:"object",description:"Refers to a jakarta.mail.search.SearchTerm which allows to filter mails based on search criteria such as subject, body, from, sent after a certain date etc.",title:"Search Term",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for login. See also setAuthenticator(MailAuthenticator).",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters.",title:"Ssl Context Parameters",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username for login. See also setAuthenticator(MailAuthenticator).",title:"Username",required:!1,deprecated:!1},sortTerm:{kind:"parameter",type:"object",description:"Sorting order for messages. Only natively supported for IMAP. Emulated to some degree when using POP3 or when IMAP server does not have the SORT capability.",title:"Sort Term",required:!1,deprecated:!1}}},pop3s:{type:"object",title:"POP3S",group:"mail",icon:"generic24.png",description:"Send and receive emails using imap, pop3 and smtp protocols.",properties:{host:{kind:"path",type:"string",description:"The mail server host name",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The port number of the mail server",title:"Port",required:!1,deprecated:!1},closeFolder:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.",title:"Close Folder",required:!1,deprecated:!1},copyTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.",title:"Copy To",required:!1,deprecated:!1},decodeFilename:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the MimeUtility.decodeText method will be used to decode the filename. This is similar to setting JVM system property mail.mime.encodefilename.",title:"Decode Filename",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.",title:"Delete",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.",title:"Disconnect",required:!1,deprecated:!1},handleFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Handle Failed Message",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Specifies the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid downloading thousands of files when the server starts up. Set a value of 0 or negative to disable this option.",title:"Max Messages Per Poll",required:!1,deprecated:!1},mimeDecodeHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables transparent MIME decoding and unfolding for mail headers.",title:"Mime Decode Headers",required:!1,deprecated:!1},moveTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.",title:"Move To",required:!1,deprecated:!1},peek:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Will mark the jakarta.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.",title:"Peek",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skipFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Skip Failed Message",required:!1,deprecated:!1},unseen:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit by unseen mails only.",title:"Unseen",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},failOnDuplicateFileAttachment:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to fail processing the mail if the mail message contains attachments with duplicate file names. If set to false, then the duplicate attachment is skipped and a WARN is logged. If set to true then an exception is thrown failing to process the mail message.",title:"Fail On Duplicate File Attachment",required:!1,deprecated:!1},fetchSize:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.",title:"Fetch Size",required:!1,deprecated:!1},folderName:{kind:"parameter",type:"string",defaultValue:"INBOX",description:"The folder to poll.",title:"Folder Name",required:!1,deprecated:!1},generateMissingAttachmentNames:{kind:"parameter",type:"string",description:"Set this to 'uuid' to set a UUID for the filename of the attachment if no filename was set",title:"Generate Missing Attachment Names",required:!1,deprecated:!1},handleDuplicateAttachmentNames:{kind:"parameter",type:"string",description:"Set the strategy to handle duplicate filenames of attachments never: attachments that have a filename which is already present in the attachments will be ignored unless failOnDuplicateFileAttachment is set to true. uuidPrefix: this will prefix the duplicate attachment filenames each with a uuid and underscore (uuid_filename.fileextension). uuidSuffix: this will suffix the duplicate attachment filenames each with a underscore and uuid (filename_uuid.fileextension).",title:"Handle Duplicate Attachment Names",required:!1,deprecated:!1},mailUidGenerator:{kind:"parameter",type:"object",description:"A pluggable MailUidGenerator that allows to use custom logic to generate UUID of the mail message.",title:"Mail Uid Generator",required:!1,deprecated:!1},mapMailMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw jakarta.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(jakarta.mail.Message.class).",title:"Map Mail Message",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},postProcessAction:{kind:"parameter",type:"object",description:"Refers to an MailBoxPostProcessAction for doing post processing tasks on the mailbox once the normal processing ended.",title:"Post Process Action",required:!1,deprecated:!1},bcc:{kind:"parameter",type:"string",description:"Sets the BCC email address. Separate multiple email addresses with comma.",title:"Bcc",required:!1,deprecated:!1},cc:{kind:"parameter",type:"string",description:"Sets the CC email address. Separate multiple email addresses with comma.",title:"Cc",required:!1,deprecated:!1},from:{kind:"parameter",type:"string",defaultValue:"camel@localhost",description:"The from email address",title:"From",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"The Reply-To recipients (the receivers of the response mail). Separate multiple email addresses with a comma.",title:"Reply To",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The Subject of the message being sent. Note: Setting the subject in the header takes precedence over this option.",title:"Subject",required:!1,deprecated:!1},to:{kind:"parameter",type:"string",description:"Sets the To email address. Separate multiple email addresses with comma.",title:"To",required:!1,deprecated:!1},javaMailSender:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.mail.JavaMailSender for sending emails.",title:"Java Mail Sender",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},additionalJavaMailProperties:{kind:"parameter",type:"object",description:"Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.",title:"Additional Java Mail Properties",required:!1,deprecated:!1},alternativeBodyHeader:{kind:"parameter",type:"string",defaultValue:"CamelMailAlternativeBody",description:"Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.",title:"Alternative Body Header",required:!1,deprecated:!1},attachmentsContentTransferEncodingResolver:{kind:"parameter",type:"object",description:"To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.",title:"Attachments Content Transfer Encoding Resolver",required:!1,deprecated:!1},authenticator:{kind:"parameter",type:"object",description:"The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.",title:"Authenticator",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"Sets the binding used to convert from a Camel message to and from a Mail message",title:"Binding",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The connection timeout in milliseconds.",title:"Connection Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"text/plain",description:"The mail message content type. Use text/html for HTML mails.",title:"Content Type",required:!1,deprecated:!1},contentTypeResolver:{kind:"parameter",type:"object",description:"Resolver to determine Content-Type for file attachments.",title:"Content Type Resolver",required:!1,deprecated:!1},debugMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.",title:"Debug Mode",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.",title:"Header Filter Strategy",required:!1,deprecated:!1},ignoreUnsupportedCharset:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Unsupported Charset",required:!1,deprecated:!1},ignoreUriScheme:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Uri Scheme",required:!1,deprecated:!1},javaMailProperties:{kind:"parameter",type:"object",description:"Sets the java mail options. Will clear any default properties and only use the properties provided for this method.",title:"Java Mail Properties",required:!1,deprecated:!1},session:{kind:"parameter",type:"object",description:"Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).",title:"Session",required:!1,deprecated:!1},useInlineAttachments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use disposition inline or attachment.",title:"Use Inline Attachments",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which allows to cluster consuming from the same mailbox, and let the repository coordinate whether a mail message is valid for the consumer to process. By default no repository is in use.",title:"Idempotent Repository",required:!1,deprecated:!1},idempotentRepositoryRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When using idempotent repository, then when the mail message has been successfully processed and is committed, should the message id be removed from the idempotent repository (default) or be kept in the repository. By default its assumed the message id is unique and has no value to be kept in the repository, because the mail message will be marked as seen/moved or deleted to prevent it from being consumed again. And therefore having the message id stored in the idempotent repository has little value. However this option allows to store the message id, for whatever reason you may have.",title:"Idempotent Repository Remove On Commit",required:!1,deprecated:!1},searchTerm:{kind:"parameter",type:"object",description:"Refers to a jakarta.mail.search.SearchTerm which allows to filter mails based on search criteria such as subject, body, from, sent after a certain date etc.",title:"Search Term",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for login. See also setAuthenticator(MailAuthenticator).",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters.",title:"Ssl Context Parameters",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username for login. See also setAuthenticator(MailAuthenticator).",title:"Username",required:!1,deprecated:!1},sortTerm:{kind:"parameter",type:"object",description:"Sorting order for messages. Only natively supported for IMAP. Emulated to some degree when using POP3 or when IMAP server does not have the SORT capability.",title:"Sort Term",required:!1,deprecated:!1}}},pubnub:{type:"object",title:"PubNub",group:"cloud,iot,messaging",icon:"generic24.png",description:"Send and receive messages to/from PubNub data stream network for connected devices.",properties:{channel:{kind:"path",type:"string",description:"The channel used for subscribing/publishing events",title:"Channel",required:!0,deprecated:!1},uuid:{kind:"parameter",type:"string",description:"UUID to be used as a device identifier, a default UUID is generated if not passed.",title:"Uuid",required:!0,deprecated:!1},withPresence:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Also subscribe to related presence information",title:"With Presence",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",enum:["HERENOW","WHERENOW","GETSTATE","SETSTATE","GETHISTORY","PUBLISH","FIRE"],description:"The operation to perform. PUBLISH: Default. Send a message to all subscribers of a channel. FIRE: allows the client to send a message to BLOCKS Event Handlers. These messages will go directly to any Event Handlers registered on the channel. HERENOW: Obtain information about the current state of a channel including a list of unique user-ids currently subscribed to the channel and the total occupancy count. WHERENOW: Obtain information about the current list of channels to which a uuid is subscribed to. GETSTATE: Used to get key/value pairs specific to a subscriber uuid. State information is supplied as a JSON object of key/value pairs SETSTATE: Used to set key/value pairs specific to a subscriber uuid GETHISTORY: Fetches historical messages of a channel.",title:"Operation",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},pubnub:{kind:"parameter",type:"object",description:"Reference to a Pubnub client in the registry.",title:"Pubnub",required:!1,deprecated:!1},authKey:{kind:"parameter",type:"string",description:"If Access Manager is utilized, client will use this authKey in all restricted requests.",title:"Auth Key",required:!1,deprecated:!1},cipherKey:{kind:"parameter",type:"string",description:"If cipher is passed, all communications to/from PubNub will be encrypted.",title:"Cipher Key",required:!1,deprecated:!1},publishKey:{kind:"parameter",type:"string",description:"The publish key obtained from your PubNub account. Required when publishing messages.",title:"Publish Key",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"The secret key used for message signing.",title:"Secret Key",required:!1,deprecated:!1},secure:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Use SSL for secure transmission.",title:"Secure",required:!1,deprecated:!1},subscribeKey:{kind:"parameter",type:"string",description:"The subscribe key obtained from your PubNub account. Required when subscribing to channels or listening for presence events",title:"Subscribe Key",required:!1,deprecated:!1}}},pulsar:{type:"object",title:"Pulsar",group:"messaging",icon:"generic24.png",description:"Send and receive messages from/to Apache Pulsar messaging system.",properties:{persistence:{kind:"path",type:"string",enum:["persistent","non-persistent"],description:"Whether the topic is persistent or non-persistent",title:"Persistence",required:!0,deprecated:!1},tenant:{kind:"path",type:"string",description:"The tenant",title:"Tenant",required:!0,deprecated:!1},namespace:{kind:"path",type:"string",description:"The namespace",title:"Namespace",required:!0,deprecated:!1},topic:{kind:"path",type:"string",description:"The topic",title:"Topic",required:!0,deprecated:!1},authenticationClass:{kind:"parameter",type:"string",description:"The Authentication FQCN to be used while creating the client from URI",title:"Authentication Class",required:!1,deprecated:!1},authenticationParams:{kind:"parameter",type:"string",description:"The Authentication Parameters to be used while creating the client from URI",title:"Authentication Params",required:!1,deprecated:!1},serviceUrl:{kind:"parameter",type:"string",description:"The Pulsar Service URL to point while creating the client from URI",title:"Service Url",required:!1,deprecated:!1},ackGroupTimeMillis:{kind:"parameter",type:"integer",defaultValue:"100",description:"Group the consumer acknowledgments for the specified time in milliseconds - defaults to 100",title:"Ack Group Time Millis",required:!1,deprecated:!1},ackTimeoutMillis:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Timeout for unacknowledged messages in milliseconds - defaults to 10000",title:"Ack Timeout Millis",required:!1,deprecated:!1},ackTimeoutRedeliveryBackoff:{kind:"parameter",type:"object",description:"RedeliveryBackoff to use for ack timeout redelivery backoff.",title:"Ack Timeout Redelivery Backoff",required:!1,deprecated:!1},allowManualAcknowledgement:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow manual message acknowledgements. If this option is enabled, then messages are not acknowledged automatically after successful route completion. Instead, an instance of PulsarMessageReceipt is stored as a header on the org.apache.camel.Exchange. Messages can then be acknowledged using PulsarMessageReceipt at any time before the ackTimeout occurs.",title:"Allow Manual Acknowledgement",required:!1,deprecated:!1},consumerName:{kind:"parameter",type:"string",defaultValue:"sole-consumer",description:"Name of the consumer when subscription is EXCLUSIVE",title:"Consumer Name",required:!1,deprecated:!1},consumerNamePrefix:{kind:"parameter",type:"string",defaultValue:"cons",description:"Prefix to add to consumer names when a SHARED or FAILOVER subscription is used",title:"Consumer Name Prefix",required:!1,deprecated:!1},consumerQueueSize:{kind:"parameter",type:"integer",defaultValue:"10",description:"Size of the consumer queue - defaults to 10",title:"Consumer Queue Size",required:!1,deprecated:!1},deadLetterTopic:{kind:"parameter",type:"string",description:"Name of the topic where the messages which fail maxRedeliverCount times will be sent. Note: if not set, default topic name will be topicName-subscriptionName-DLQ",title:"Dead Letter Topic",required:!1,deprecated:!1},enableRetry:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To enable retry letter topic mode. The default retry letter topic uses this format: topicname-subscriptionname-RETRY",title:"Enable Retry",required:!1,deprecated:!1},keySharedPolicy:{kind:"parameter",type:"string",enum:["AUTO_SPLIT","STICKY"],description:"Policy to use by consumer when using key-shared subscription type.",title:"Key Shared Policy",required:!1,deprecated:!1},maxRedeliverCount:{kind:"parameter",type:"integer",description:"Maximum number of times that a message will be redelivered before being sent to the dead letter queue. If this value is not set, no Dead Letter Policy will be created",title:"Max Redeliver Count",required:!1,deprecated:!1},messageListener:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use the messageListener interface, or to receive messages using a separate thread pool",title:"Message Listener",required:!1,deprecated:!1},negativeAckRedeliveryBackoff:{kind:"parameter",type:"object",description:"RedeliveryBackoff to use for negative ack redelivery backoff.",title:"Negative Ack Redelivery Backoff",required:!1,deprecated:!1},negativeAckRedeliveryDelayMicros:{kind:"parameter",type:"integer",defaultValue:"60000000",description:"Set the negative acknowledgement delay",title:"Negative Ack Redelivery Delay Micros",required:!1,deprecated:!1},numberOfConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of consumers - defaults to 1",title:"Number Of Consumers",required:!1,deprecated:!1},numberOfConsumerThreads:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of threads to receive and handle messages when using a separate thread pool",title:"Number Of Consumer Threads",required:!1,deprecated:!1},readCompacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable compacted topic reading.",title:"Read Compacted",required:!1,deprecated:!1},retryLetterTopic:{kind:"parameter",type:"string",description:"Name of the topic to use in retry mode. Note: if not set, default topic name will be topicName-subscriptionName-RETRY",title:"Retry Letter Topic",required:!1,deprecated:!1},subscriptionInitialPosition:{kind:"parameter",type:"object",defaultValue:"LATEST",enum:["EARLIEST","LATEST"],description:"Control the initial position in the topic of a newly created subscription. Default is latest message.",title:"Subscription Initial Position",required:!1,deprecated:!1},subscriptionName:{kind:"parameter",type:"string",defaultValue:"subs",description:"Name of the subscription to use",title:"Subscription Name",required:!1,deprecated:!1},subscriptionTopicsMode:{kind:"parameter",type:"object",defaultValue:"PersistentOnly",enum:["PersistentOnly","NonPersistentOnly","AllTopics"],description:"Determines to which topics this consumer should be subscribed to - Persistent, Non-Persistent, or both. Only used with pattern subscriptions.",title:"Subscription Topics Mode",required:!1,deprecated:!1},subscriptionType:{kind:"parameter",type:"object",defaultValue:"EXCLUSIVE",enum:["EXCLUSIVE","SHARED","FAILOVER","KEY_SHARED"],description:"Type of the subscription EXCLUSIVESHAREDFAILOVERKEY_SHARED, defaults to EXCLUSIVE",title:"Subscription Type",required:!1,deprecated:!1},topicsPattern:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the topic is a pattern (regular expression) that allows the consumer to subscribe to all matching topics in the namespace",title:"Topics Pattern",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},batcherBuilder:{kind:"parameter",type:"object",defaultValue:"DEFAULT",description:"Control batching method used by the producer.",title:"Batcher Builder",required:!1,deprecated:!1},batchingEnabled:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Control whether automatic batching of messages is enabled for the producer.",title:"Batching Enabled",required:!1,deprecated:!1},batchingMaxMessages:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The maximum size to batch messages.",title:"Batching Max Messages",required:!1,deprecated:!1},batchingMaxPublishDelayMicros:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The maximum time period within which the messages sent will be batched if batchingEnabled is true.",title:"Batching Max Publish Delay Micros",required:!1,deprecated:!1},blockIfQueueFull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to block the producing thread if pending messages queue is full or to throw a ProducerQueueIsFullError",title:"Block If Queue Full",required:!1,deprecated:!1},chunkingEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Control whether chunking of messages is enabled for the producer.",title:"Chunking Enabled",required:!1,deprecated:!1},compressionType:{kind:"parameter",type:"object",defaultValue:"NONE",enum:["NONE","LZ4","ZLIB","ZSTD","SNAPPY"],description:"Compression type to use",title:"Compression Type",required:!1,deprecated:!1},initialSequenceId:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The first message published will have a sequence Id of initialSequenceId 1.",title:"Initial Sequence Id",required:!1,deprecated:!1},maxPendingMessages:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Size of the pending massages queue. When the queue is full, by default, any further sends will fail unless blockIfQueueFull=true",title:"Max Pending Messages",required:!1,deprecated:!1},maxPendingMessagesAcrossPartitions:{kind:"parameter",type:"integer",defaultValue:"50000",description:"The maximum number of pending messages for partitioned topics. The maxPendingMessages value will be reduced if (number of partitions maxPendingMessages) exceeds this value. Partitioned topics have a pending message queue for each partition.",title:"Max Pending Messages Across Partitions",required:!1,deprecated:!0},messageRouter:{kind:"parameter",type:"object",description:"Custom Message Router to use",title:"Message Router",required:!1,deprecated:!1},messageRoutingMode:{kind:"parameter",type:"object",defaultValue:"RoundRobinPartition",enum:["SinglePartition","RoundRobinPartition","CustomPartition"],description:"Message Routing Mode to use",title:"Message Routing Mode",required:!1,deprecated:!1},producerName:{kind:"parameter",type:"string",description:"Name of the producer. If unset, lets Pulsar select a unique identifier.",title:"Producer Name",required:!1,deprecated:!1},sendTimeoutMs:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Send timeout in milliseconds",title:"Send Timeout Ms",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},quartz:{type:"object",title:"Quartz",group:"scheduling",icon:"generic24.png",description:"Schedule sending of messages using the Quartz 2.x scheduler.",properties:{groupName:{kind:"path",type:"string",defaultValue:"Camel",description:"The quartz group name to use. The combination of group name and trigger name should be unique.",title:"Group Name",required:!1,deprecated:!1},triggerName:{kind:"path",type:"string",description:"The quartz trigger name to use. The combination of group name and trigger name should be unique.",title:"Trigger Name",required:!0,deprecated:!1},cron:{kind:"parameter",type:"string",description:"Specifies a cron expression to define when to trigger.",title:"Cron",required:!1,deprecated:!1},deleteJob:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If set to true, then the trigger automatically delete when route stop. Else if set to false, it will remain in scheduler. When set to false, it will also mean user may reuse pre-configured trigger with camel Uri. Just ensure the names match. Notice you cannot have both deleteJob and pauseJob set to true.",title:"Delete Job",required:!1,deprecated:!1},durableJob:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not the job should remain stored after it is orphaned (no triggers point to it).",title:"Durable Job",required:!1,deprecated:!1},pauseJob:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, then the trigger automatically pauses when route stop. Else if set to false, it will remain in scheduler. When set to false, it will also mean user may reuse pre-configured trigger with camel Uri. Just ensure the names match. Notice you cannot have both deleteJob and pauseJob set to true.",title:"Pause Job",required:!1,deprecated:!1},recoverableJob:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Instructs the scheduler whether or not the job should be re-executed if a 'recovery' or 'fail-over' situation is encountered.",title:"Recoverable Job",required:!1,deprecated:!1},stateful:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Uses a Quartz PersistJobDataAfterExecution and DisallowConcurrentExecution instead of the default job.",title:"Stateful",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},customCalendar:{kind:"parameter",type:"object",description:"Specifies a custom calendar to avoid specific range of date",title:"Custom Calendar",required:!1,deprecated:!1},ignoreExpiredNextFireTime:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to ignore quartz cannot schedule a trigger because the trigger will never fire in the future. This can happen when using a cron trigger that are configured to only run in the past. By default, Quartz will fail to schedule the trigger and therefore fail to start the Camel route. You can set this to true which then logs a WARN and then ignore the problem, meaning that the route will never fire in the future.",title:"Ignore Expired Next Fire Time",required:!1,deprecated:!1},jobParameters:{kind:"parameter",type:"object",description:"To configure additional options on the job.",title:"Job Parameters",required:!1,deprecated:!1},prefixJobNameWithEndpointId:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the job name should be prefixed with endpoint id",title:"Prefix Job Name With Endpoint Id",required:!1,deprecated:!1},triggerParameters:{kind:"parameter",type:"object",description:"To configure additional options on the trigger. The parameter timeZone is supported if the cron option is present. Otherwise the parameters repeatInterval and repeatCount are supported. Note: When using repeatInterval values of 1000 or less, the first few events after starting the camel context may be fired more rapidly than expected.",title:"Trigger Parameters",required:!1,deprecated:!1},usingFixedCamelContextName:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If it is true, JobDataMap uses the CamelContext name directly to reference the CamelContext, if it is false, JobDataMap uses use the CamelContext management name which could be changed during the deploy time.",title:"Using Fixed Camel Context Name",required:!1,deprecated:!1},autoStartScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not the scheduler should be auto started.",title:"Auto Start Scheduler",required:!1,deprecated:!1},triggerStartDelay:{kind:"parameter",type:"duration",defaultValue:"500",description:"In case of scheduler has already started, we want the trigger start slightly after current time to ensure endpoint is fully started before the job kicks in. Negative value shifts trigger start time in the past.",title:"Trigger Start Delay",required:!1,deprecated:!1}}},quickfix:{type:"object",title:"QuickFix",group:"messaging",icon:"generic24.png",description:"Open a Financial Interchange (FIX) session using an embedded QuickFix/J engine.",properties:{configurationName:{kind:"path",type:"string",description:"Path to the quickfix configuration file. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the configuration file using these protocols (classpath is default). ref will lookup the configuration file in the registry. bean will call a method on a bean to be used as the configuration. For bean you can specify the method name after dot, eg bean:myBean.myMethod",title:"Configuration Name",required:!0,deprecated:!1},lazyCreateEngine:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option allows creating QuickFIX/J engine on demand. Value true means the engine is started when first message is send or there's consumer configured in route definition. When false value is used, the engine is started at the endpoint creation. When this parameter is missing, the value of component's property lazyCreateEngines is being used.",title:"Lazy Create Engine",required:!1,deprecated:!1},sessionID:{kind:"parameter",type:"string",description:"The optional sessionID identifies a specific FIX session. The format of the sessionID is: (BeginString):(SenderCompID)/(SenderSubID)/(SenderLocationID)-(TargetCompID)/(TargetSubID)/(TargetLocationID)",title:"Session ID",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"reactive-streams":{type:"object",title:"Reactive Streams",group:"messaging",icon:"generic24.png",description:"Exchange messages with reactive stream processing libraries compatible with the reactive streams standard.",properties:{stream:{kind:"path",type:"string",description:"Name of the stream channel used by the endpoint to exchange messages.",title:"Stream",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of threads used to process exchanges in the Camel route.",title:"Concurrent Consumers",required:!1,deprecated:!1},exchangesRefillLowWatermark:{kind:"parameter",type:"number",defaultValue:"0.25",description:"Set the low watermark of requested exchanges to the active subscription as percentage of the maxInflightExchanges. When the number of pending items from the upstream source is lower than the watermark, new items can be requested to the subscription. If set to 0, the subscriber will request items in batches of maxInflightExchanges, only after all items of the previous batch have been processed. If set to 1, the subscriber can request a new item each time an exchange is processed (chatty). Any intermediate value can be used.",title:"Exchanges Refill Low Watermark",required:!1,deprecated:!1},forwardOnComplete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines if onComplete events should be pushed to the Camel route.",title:"Forward On Complete",required:!1,deprecated:!1},forwardOnError:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines if onError events should be pushed to the Camel route. Exceptions will be set as message body.",title:"Forward On Error",required:!1,deprecated:!1},maxInflightExchanges:{kind:"parameter",type:"integer",defaultValue:"128",description:"Maximum number of exchanges concurrently being processed by Camel. This parameter controls backpressure on the stream. Setting a non-positive value will disable backpressure.",title:"Max Inflight Exchanges",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},backpressureStrategy:{kind:"parameter",type:"object",enum:["BUFFER","OLDEST","LATEST"],description:"The backpressure strategy to use when pushing events to a slow subscriber.",title:"Backpressure Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},ref:{type:"object",title:"Ref",group:"core",icon:"generic24.png",description:"Route messages to an endpoint looked up dynamically by name in the Camel Registry.",properties:{name:{kind:"path",type:"string",description:"Name of endpoint to lookup in the registry.",title:"Name",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},rest:{type:"object",title:"REST",group:"core,rest",icon:"generic24.png",description:"Expose REST services or call external REST services.",acceptInput:"",acceptOutput:"",nextSiblingAddedAsChild:"false",properties:{method:{kind:"path",type:"string",enum:["get","post","put","delete","patch","head","trace","connect","options"],description:"HTTP method to use.",title:"Method",required:!0,deprecated:!1},path:{kind:"path",type:"string",description:"The base path",title:"Path",required:!0,deprecated:!1},uriTemplate:{kind:"path",type:"string",description:"The uri template",title:"Uri Template",required:!1,deprecated:!1},consumes:{kind:"parameter",type:"string",description:"Media type such as: 'text/xml', or 'application/json' this REST service accepts. By default we accept all kinds of types.",title:"Consumes",required:!1,deprecated:!1},inType:{kind:"parameter",type:"string",description:"To declare the incoming POJO binding type as a FQN class name",title:"In Type",required:!1,deprecated:!1},outType:{kind:"parameter",type:"string",description:"To declare the outgoing POJO binding type as a FQN class name",title:"Out Type",required:!1,deprecated:!1},produces:{kind:"parameter",type:"string",description:"Media type such as: 'text/xml', or 'application/json' this REST service returns.",title:"Produces",required:!1,deprecated:!1},routeId:{kind:"parameter",type:"string",description:"Name of the route this REST services creates",title:"Route Id",required:!1,deprecated:!1},consumerComponentName:{kind:"parameter",type:"string",description:"The Camel Rest component to use for the consumer REST transport, such as jetty, servlet, undertow. If no component has been explicitly configured, then Camel will lookup if there is a Camel component that integrates with the Rest DSL, or if a org.apache.camel.spi.RestConsumerFactory is registered in the registry. If either one is found, then that is being used.",title:"Consumer Component Name",required:!1,deprecated:!1},description:{kind:"parameter",type:"string",description:"Human description to document this REST service",title:"Description",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},apiDoc:{kind:"parameter",type:"string",description:"The openapi api doc resource to use. The resource is loaded from classpath by default and must be in JSON format.",title:"Api Doc",required:!1,deprecated:!1},bindingMode:{kind:"parameter",type:"object",enum:["auto","off","json","xml","json_xml"],description:"Configures the binding mode for the producer. If set to anything other than 'off' the producer will try to convert the body of the incoming message from inType to the json or xml, and the response from json or xml to outType.",title:"Binding Mode",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",description:"Host and port of HTTP service to use (override host in openapi schema)",title:"Host",required:!1,deprecated:!1},producerComponentName:{kind:"parameter",type:"string",description:"The Camel Rest component to use for the producer REST transport, such as http, undertow. If no component has been explicitly configured, then Camel will lookup if there is a Camel component that integrates with the Rest DSL, or if a org.apache.camel.spi.RestProducerFactory is registered in the registry. If either one is found, then that is being used.",title:"Producer Component Name",required:!1,deprecated:!1},queryParameters:{kind:"parameter",type:"string",description:"Query parameters for the HTTP service to call. The query parameters can contain multiple parameters separated by ampersand such such as foo=123&bar=456.",title:"Query Parameters",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"rest-api":{type:"object",title:"REST API",group:"core,rest",icon:"generic24.png",description:"Expose OpenAPI Specification of the REST services defined using Camel REST DSL.",acceptInput:"",acceptOutput:"",nextSiblingAddedAsChild:"false",properties:{path:{kind:"path",type:"string",description:"The base path",title:"Path",required:!0,deprecated:!1},apiComponentName:{kind:"parameter",type:"string",description:"The Camel Rest API component to use for generating the API of the REST services, such as openapi.",title:"Api Component Name",required:!1,deprecated:!1},consumerComponentName:{kind:"parameter",type:"string",description:"The Camel Rest component to use for the consumer REST transport, such as jetty, servlet, undertow. If no component has been explicitly configured, then Camel will lookup if there is a Camel component that integrates with the Rest DSL, or if a org.apache.camel.spi.RestConsumerFactory is registered in the registry. If either one is found, then that is being used.",title:"Consumer Component Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},"rest-openapi":{type:"object",title:"REST OpenApi",group:"rest,api",icon:"generic24.png",description:"Configure REST producers based on an OpenAPI specification document delegating to a component implementing the RestProducerFactory interface.",acceptInput:"",acceptOutput:"",nextSiblingAddedAsChild:"false",properties:{specificationUri:{kind:"path",type:"string",defaultValue:"openapi.json",description:"Path to the OpenApi specification file. The scheme, host base path are taken from this specification, but these can be overridden with properties on the component or endpoint level. If not given the component tries to load openapi.json resource from the classpath. Note that the host defined on the component and endpoint of this Component should contain the scheme, hostname and optionally the port in the URI syntax (i.e. http://api.example.com:8080). Overrides component configuration. The OpenApi specification can be loaded from different sources by prefixing with file: classpath: http: https:. Support for https is limited to using the JDK installed UrlHandler, and as such it can be cumbersome to setup TLS/SSL certificates for https (such as setting a number of javax.net.ssl JVM system properties). How to do that consult the JDK documentation for UrlHandler. Default value notice: By default loads openapi.json file",title:"Specification Uri",required:!1,deprecated:!1},operationId:{kind:"path",type:"string",description:"ID of the operation from the OpenApi specification.",title:"Operation Id",required:!0,deprecated:!1},basePath:{kind:"parameter",type:"string",description:"API basePath, for example /v2. Default is unset, if set overrides the value present in OpenApi specification and in the component configuration.",title:"Base Path",required:!1,deprecated:!1},componentName:{kind:"parameter",type:"string",description:"Name of the Camel component that will perform the requests. The component must be present in Camel registry and it must implement RestProducerFactory service provider interface. If not set CLASSPATH is searched for single component that implements RestProducerFactory SPI. Overrides component configuration.",title:"Component Name",required:!1,deprecated:!1},consumes:{kind:"parameter",type:"string",description:"What payload type this component capable of consuming. Could be one type, like application/json or multiple types as application/json, application/xml; q=0.5 according to the RFC7231. This equates to the value of Accept HTTP header. If set overrides any value found in the OpenApi specification and. in the component configuration",title:"Consumes",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",description:"Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port. Can be configured at the endpoint, component or in the corresponding REST configuration in the Camel Context. If you give this component a name (e.g. petstore) that REST configuration is consulted first, rest-openapi next, and global configuration last. If set overrides any value found in the OpenApi specification, RestConfiguration. Overrides all other configuration.",title:"Host",required:!1,deprecated:!1},produces:{kind:"parameter",type:"string",description:"What payload type this component is producing. For example application/json according to the RFC7231. This equates to the value of Content-Type HTTP header. If set overrides any value present in the OpenApi specification. Overrides all other configuration.",title:"Produces",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},robotframework:{type:"object",title:"Robot Framework",group:"testing",icon:"generic24.png",description:"Pass camel exchanges to acceptence test written in Robot DSL.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},argumentFiles:{kind:"parameter",type:"string",description:"A text String to read more arguments from.",title:"Argument Files",required:!1,deprecated:!1},combinedTagStats:{kind:"parameter",type:"string",description:"Creates combined statistics based on tags. Use the format tags:title List",title:"Combined Tag Stats",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},criticalTags:{kind:"parameter",type:"string",description:"Tests that have the given tags are considered critical. List",title:"Critical Tags",required:!1,deprecated:!1},debugFile:{kind:"parameter",type:"string",description:"A debug String that is written during execution.",title:"Debug File",required:!1,deprecated:!1},document:{kind:"parameter",type:"string",description:"Sets the documentation of the top-level tests suites.",title:"Document",required:!1,deprecated:!1},dryrun:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets dryrun mode on use. In the dry run mode tests are run without executing keywords originating from test libraries. Useful for validating test data syntax.",title:"Dryrun",required:!1,deprecated:!1},excludes:{kind:"parameter",type:"string",description:"Selects the tests cases by tags. List",title:"Excludes",required:!1,deprecated:!1},exitOnFailure:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets robot to stop execution immediately if a critical test fails.",title:"Exit On Failure",required:!1,deprecated:!1},includes:{kind:"parameter",type:"string",description:"Selects the tests cases by tags. List",title:"Includes",required:!1,deprecated:!1},listener:{kind:"parameter",type:"string",description:"Sets a single listener for monitoring tests execution",title:"Listener",required:!1,deprecated:!1},listeners:{kind:"parameter",type:"string",description:"Sets multiple listeners for monitoring tests execution. Use the format ListenerWithArgs:arg1:arg2 or simply ListenerWithoutArgs List",title:"Listeners",required:!1,deprecated:!1},log:{kind:"parameter",type:"string",description:"Sets the path to the generated log String.",title:"Log",required:!1,deprecated:!1},logLevel:{kind:"parameter",type:"string",description:"Sets the threshold level for logging.",title:"Log Level",required:!1,deprecated:!1},logTitle:{kind:"parameter",type:"string",description:"Sets a title for the generated tests log.",title:"Log Title",required:!1,deprecated:!1},metadata:{kind:"parameter",type:"string",description:"Sets free metadata for the top level tests suites. comma seperated list of string resulting as List",title:"Metadata",required:!1,deprecated:!1},monitorColors:{kind:"parameter",type:"string",description:"Using ANSI colors in console. Normally colors work in unixes but not in Windows. Default is 'on'. 'on' - use colors in unixes but not in Windows 'off' - never use colors 'force' - always use colors (also in Windows)",title:"Monitor Colors",required:!1,deprecated:!1},monitorWidth:{kind:"parameter",type:"string",defaultValue:"78",description:"Width of the monitor output. Default is 78.",title:"Monitor Width",required:!1,deprecated:!1},name:{kind:"parameter",type:"string",description:"Sets the name of the top-level tests suites.",title:"Name",required:!1,deprecated:!1},nonCriticalTags:{kind:"parameter",type:"string",description:"Tests that have the given tags are not critical. List",title:"Non Critical Tags",required:!1,deprecated:!1},noStatusReturnCode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, sets the return code to zero regardless of failures in test cases. Error codes are returned normally.",title:"No Status Return Code",required:!1,deprecated:!1},output:{kind:"parameter",type:"string",description:"Sets the path to the generated output String.",title:"Output",required:!1,deprecated:!1},outputDirectory:{kind:"parameter",type:"string",description:"Configures where generated reports are to be placed.",title:"Output Directory",required:!1,deprecated:!1},randomize:{kind:"parameter",type:"string",description:"Sets the test execution order to be randomized. Valid values are all, suite, and test",title:"Randomize",required:!1,deprecated:!1},report:{kind:"parameter",type:"string",description:"Sets the path to the generated report String.",title:"Report",required:!1,deprecated:!1},reportBackground:{kind:"parameter",type:"string",description:"Sets background colors for the generated report and summary.",title:"Report Background",required:!1,deprecated:!1},reportTitle:{kind:"parameter",type:"string",description:"Sets a title for the generated tests report.",title:"Report Title",required:!1,deprecated:!1},runEmptySuite:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Executes tests also if the top level test suite is empty. Useful e.g. with --include/--exclude when it is not an error that no test matches the condition.",title:"Run Empty Suite",required:!1,deprecated:!1},runFailed:{kind:"parameter",type:"string",description:"Re-run failed tests, based on output.xml String.",title:"Run Failed",required:!1,deprecated:!1},runMode:{kind:"parameter",type:"string",description:"Sets the execution mode for this tests run. Note that this setting has been deprecated in Robot Framework 2.8. Use separate dryryn, skipTeardownOnExit, exitOnFailure, and randomize settings instead.",title:"Run Mode",required:!1,deprecated:!1},skipTeardownOnExit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the teardowns are skipped if the test execution is prematurely stopped.",title:"Skip Teardown On Exit",required:!1,deprecated:!1},splitOutputs:{kind:"parameter",type:"string",description:"Splits output and log files.",title:"Split Outputs",required:!1,deprecated:!1},suites:{kind:"parameter",type:"string",description:"Selects the tests suites by name. List",title:"Suites",required:!1,deprecated:!1},suiteStatLevel:{kind:"parameter",type:"string",description:"Defines how many levels to show in the Statistics by Suite table in outputs.",title:"Suite Stat Level",required:!1,deprecated:!1},summaryTitle:{kind:"parameter",type:"string",description:"Sets a title for the generated summary report.",title:"Summary Title",required:!1,deprecated:!1},tagDocs:{kind:"parameter",type:"string",description:"Adds documentation to the specified tags. List",title:"Tag Docs",required:!1,deprecated:!1},tags:{kind:"parameter",type:"string",description:"Sets the tags(s) to all executed tests cases. List",title:"Tags",required:!1,deprecated:!1},tagStatExcludes:{kind:"parameter",type:"string",description:"Excludes these tags from the Statistics by Tag and Test Details by Tag tables in outputs. List",title:"Tag Stat Excludes",required:!1,deprecated:!1},tagStatIncludes:{kind:"parameter",type:"string",description:"Includes only these tags in the Statistics by Tag and Test Details by Tag tables in outputs. List",title:"Tag Stat Includes",required:!1,deprecated:!1},tagStatLinks:{kind:"parameter",type:"string",description:"Adds external links to the Statistics by Tag table in outputs. Use the format pattern:link:title List",title:"Tag Stat Links",required:!1,deprecated:!1},tests:{kind:"parameter",type:"string",description:"Selects the tests cases by name. List",title:"Tests",required:!1,deprecated:!1},timestampOutputs:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Adds a timestamp to all output files.",title:"Timestamp Outputs",required:!1,deprecated:!1},variableFiles:{kind:"parameter",type:"string",description:"Sets variables using variables files. Use the format path:args List",title:"Variable Files",required:!1,deprecated:!1},variables:{kind:"parameter",type:"string",description:"Sets individual variables. Use the format name:value List",title:"Variables",required:!1,deprecated:!1},warnOnSkippedFiles:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Show a warning when an invalid String is skipped.",title:"Warn On Skipped Files",required:!1,deprecated:!1},xunitFile:{kind:"parameter",type:"string",description:"Sets the path to the generated XUnit compatible result String, relative to outputDirectory. The String is in xml format. By default, the String name is derived from the testCasesDirectory parameter, replacing blanks in the directory name by underscores.",title:"Xunit File",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},rocketmq:{type:"object",title:"RocketMQ",group:"messaging",icon:"generic24.png",description:"Send and receive messages from RocketMQ cluster.",properties:{topicName:{kind:"path",type:"string",description:"Topic name of this endpoint.",title:"Topic Name",required:!0,deprecated:!1},namesrvAddr:{kind:"parameter",type:"string",defaultValue:"localhost:9876",description:"Name server address of RocketMQ cluster.",title:"Namesrv Addr",required:!1,deprecated:!1},consumerGroup:{kind:"parameter",type:"string",description:"Consumer group name.",title:"Consumer Group",required:!1,deprecated:!1},subscribeTags:{kind:"parameter",type:"string",defaultValue:"*",description:"Subscribe tags of consumer. Multiple tags could be split by , such as TagATagB",title:"Subscribe Tags",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},producerGroup:{kind:"parameter",type:"string",description:"Producer group name.",title:"Producer Group",required:!1,deprecated:!1},replyToConsumerGroup:{kind:"parameter",type:"string",description:"Consumer group name used for receiving response.",title:"Reply To Consumer Group",required:!1,deprecated:!1},replyToTopic:{kind:"parameter",type:"string",description:"Topic used for receiving response when using in-out pattern.",title:"Reply To Topic",required:!1,deprecated:!1},sendTag:{kind:"parameter",type:"string",description:"Each message would be sent with this tag.",title:"Send Tag",required:!1,deprecated:!1},waitForSendResult:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether waiting for send result before routing to next endpoint.",title:"Wait For Send Result",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},requestTimeoutCheckerIntervalMillis:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Check interval milliseconds of request timeout.",title:"Request Timeout Checker Interval Millis",required:!1,deprecated:!1},requestTimeoutMillis:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Timeout milliseconds of receiving response when using in-out pattern.",title:"Request Timeout Millis",required:!1,deprecated:!1},accessKey:{kind:"parameter",type:"string",description:"Access key for RocketMQ ACL.",title:"Access Key",required:!1,deprecated:!1},secretKey:{kind:"parameter",type:"string",description:"Secret key for RocketMQ ACL.",title:"Secret Key",required:!1,deprecated:!1}}},rss:{type:"object",title:"RSS",group:"document",icon:"generic24.png",description:"Poll RSS feeds.",properties:{feedUri:{kind:"path",type:"string",description:"The URI to the feed to poll.",title:"Feed Uri",required:!0,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},sortEntries:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to sort entries by published date. Only works when splitEntries = true.",title:"Sort Entries",required:!1,deprecated:!1},splitEntries:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether or not entries should be sent individually or whether the entire feed should be sent as a single message",title:"Split Entries",required:!1,deprecated:!1},throttleEntries:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether all entries identified in a single feed poll should be delivered immediately. If true, only one entry is processed per delay. Only applicable when splitEntries = true.",title:"Throttle Entries",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},feedHeader:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to add the feed object as a header.",title:"Feed Header",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},saga:{type:"object",title:"Saga",group:"clustering",icon:"generic24.png",description:"Execute custom actions within a route using the Saga EIP.",properties:{action:{kind:"path",type:"object",enum:["COMPLETE","COMPENSATE"],description:"Action to execute (complete or compensate)",title:"Action",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},salesforce:{type:"object",title:"Salesforce",group:"cloud,saas",icon:"generic24.png",description:"Communicate with Salesforce using Java DTOs.",properties:{operationName:{kind:"path",type:"object",enum:["getVersions","getResources","getGlobalObjects","getBasicInfo","getDescription","getSObject","createSObject","updateSObject","deleteSObject","getSObjectWithId","upsertSObject","deleteSObjectWithId","getBlobField","query","queryMore","queryAll","search","apexCall","recent","createJob","getJob","closeJob","abortJob","createBatch","getBatch","getAllBatches","getRequest","getResults","createBatchQuery","getQueryResultIds","getQueryResult","getRecentReports","getReportDescription","executeSyncReport","executeAsyncReport","getReportInstances","getReportResults","limits","approval","approvals","composite-tree","composite-batch","composite","compositeRetrieveSObjectCollections","compositeCreateSObjectCollections","compositeUpdateSObjectCollections","compositeUpsertSObjectCollections","compositeDeleteSObjectCollections","bulk2GetAllJobs","bulk2CreateJob","bulk2GetJob","bulk2CreateBatch","bulk2CloseJob","bulk2AbortJob","bulk2DeleteJob","bulk2GetSuccessfulResults","bulk2GetFailedResults","bulk2GetUnprocessedRecords","bulk2CreateQueryJob","bulk2GetQueryJob","bulk2GetAllQueryJobs","bulk2GetQueryJobResults","bulk2AbortQueryJob","bulk2DeleteQueryJob","raw","subscribe","pubSubSubscribe","pubSubPublish"],description:"The operation to use",title:"Operation Name",required:!0,deprecated:!1},topicName:{kind:"path",type:"string",description:"The name of the topic/channel to use",title:"Topic Name",required:!1,deprecated:!1},apexMethod:{kind:"parameter",type:"string",description:"APEX method name",title:"Apex Method",required:!1,deprecated:!1},apexQueryParams:{kind:"parameter",type:"object",description:"Query params for APEX method",title:"Apex Query Params",required:!1,deprecated:!1},apiVersion:{kind:"parameter",type:"string",defaultValue:"56.0",description:"Salesforce API version.",title:"Api Version",required:!1,deprecated:!1},backoffIncrement:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Backoff interval increment for Streaming connection restart attempts for failures beyond CometD auto-reconnect.",title:"Backoff Increment",required:!1,deprecated:!1},batchId:{kind:"parameter",type:"string",description:"Bulk API Batch ID",title:"Batch Id",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"object",enum:["XML","CSV","JSON","ZIP_XML","ZIP_CSV","ZIP_JSON"],description:"Bulk API content type, one of XML, CSV, ZIP_XML, ZIP_CSV",title:"Content Type",required:!1,deprecated:!1},defaultReplayId:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Default replayId setting if no value is found in initialReplayIdMap",title:"Default Replay Id",required:!1,deprecated:!1},fallBackReplayId:{kind:"parameter",type:"integer",defaultValue:"-1",description:"ReplayId to fall back to after an Invalid Replay Id response",title:"Fall Back Replay Id",required:!1,deprecated:!1},format:{kind:"parameter",type:"object",enum:["JSON","XML"],description:"Payload format to use for Salesforce API calls, either JSON or XML, defaults to JSON. As of Camel 3.12, this option only applies to the Raw operation.",title:"Format",required:!1,deprecated:!1},httpClient:{kind:"parameter",type:"object",description:"Custom Jetty Http Client to use to connect to Salesforce.",title:"Http Client",required:!1,deprecated:!1},includeDetails:{kind:"parameter",type:"boolean",description:"Include details in Salesforce1 Analytics report, defaults to false.",title:"Include Details",required:!1,deprecated:!1},initialReplayIdMap:{kind:"parameter",type:"object",description:"Replay IDs to start from per channel name.",title:"Initial Replay Id Map",required:!1,deprecated:!1},instanceId:{kind:"parameter",type:"string",description:"Salesforce1 Analytics report execution instance ID",title:"Instance Id",required:!1,deprecated:!1},jobId:{kind:"parameter",type:"string",description:"Bulk API Job ID",title:"Job Id",required:!1,deprecated:!1},limit:{kind:"parameter",type:"integer",description:"Limit on number of returned records. Applicable to some of the API, check the Salesforce documentation.",title:"Limit",required:!1,deprecated:!1},locator:{kind:"parameter",type:"string",description:"Locator provided by salesforce Bulk 2.0 API for use in getting results for a Query job.",title:"Locator",required:!1,deprecated:!1},maxBackoff:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Maximum backoff interval for Streaming connection restart attempts for failures beyond CometD auto-reconnect.",title:"Max Backoff",required:!1,deprecated:!1},maxRecords:{kind:"parameter",type:"integer",description:"The maximum number of records to retrieve per set of results for a Bulk 2.0 Query. The request is still subject to the size limits. If you are working with a very large number of query results, you may experience a timeout before receiving all the data from Salesforce. To prevent a timeout, specify the maximum number of records your client is expecting to receive in the maxRecords parameter. This splits the results into smaller sets with this value as the maximum size.",title:"Max Records",required:!1,deprecated:!1},notFoundBehaviour:{kind:"parameter",type:"object",defaultValue:"EXCEPTION",enum:["EXCEPTION","NULL"],description:"Sets the behaviour of 404 not found status received from Salesforce API. Should the body be set to NULL NotFoundBehaviour#NULL or should a exception be signaled on the exchange NotFoundBehaviour#EXCEPTION - the default.",title:"Not Found Behaviour",required:!1,deprecated:!1},notifyForFields:{kind:"parameter",type:"object",enum:["ALL","REFERENCED","SELECT","WHERE"],description:"Notify for fields, options are ALL, REFERENCED, SELECT, WHERE",title:"Notify For Fields",required:!1,deprecated:!1},notifyForOperationCreate:{kind:"parameter",type:"boolean",description:"Notify for create operation, defaults to false (API version &gt;= 29.0)",title:"Notify For Operation Create",required:!1,deprecated:!1},notifyForOperationDelete:{kind:"parameter",type:"boolean",description:"Notify for delete operation, defaults to false (API version &gt;= 29.0)",title:"Notify For Operation Delete",required:!1,deprecated:!1},notifyForOperations:{kind:"parameter",type:"object",enum:["ALL","CREATE","EXTENDED","UPDATE"],description:"Notify for operations, options are ALL, CREATE, EXTENDED, UPDATE (API version &lt; 29.0)",title:"Notify For Operations",required:!1,deprecated:!1},notifyForOperationUndelete:{kind:"parameter",type:"boolean",description:"Notify for un-delete operation, defaults to false (API version &gt;= 29.0)",title:"Notify For Operation Undelete",required:!1,deprecated:!1},notifyForOperationUpdate:{kind:"parameter",type:"boolean",description:"Notify for update operation, defaults to false (API version &gt;= 29.0)",title:"Notify For Operation Update",required:!1,deprecated:!1},objectMapper:{kind:"parameter",type:"object",description:"Custom Jackson ObjectMapper to use when serializing/deserializing Salesforce objects.",title:"Object Mapper",required:!1,deprecated:!1},pkChunking:{kind:"parameter",type:"boolean",description:"Use PK Chunking. Only for use in original Bulk API. Bulk 2.0 API performs PK chunking automatically, if necessary.",title:"Pk Chunking",required:!1,deprecated:!1},pkChunkingChunkSize:{kind:"parameter",type:"integer",description:"Chunk size for use with PK Chunking. If unspecified, salesforce default is 100,000. Maximum size is 250,000.",title:"Pk Chunking Chunk Size",required:!1,deprecated:!1},pkChunkingParent:{kind:"parameter",type:"string",description:"Specifies the parent object when you're enabling PK chunking for queries on sharing objects. The chunks are based on the parent object's records rather than the sharing object's records. For example, when querying on AccountShare, specify Account as the parent object. PK chunking is supported for sharing objects as long as the parent object is supported.",title:"Pk Chunking Parent",required:!1,deprecated:!1},pkChunkingStartRow:{kind:"parameter",type:"string",description:"Specifies the 15-character or 18-character record ID to be used as the lower boundary for the first chunk. Use this parameter to specify a starting ID when restarting a job that failed between batches.",title:"Pk Chunking Start Row",required:!1,deprecated:!1},queryLocator:{kind:"parameter",type:"string",description:"Query Locator provided by salesforce for use when a query results in more records than can be retrieved in a single call. Use this value in a subsequent call to retrieve additional records.",title:"Query Locator",required:!1,deprecated:!1},rawPayload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use raw payload String for request and response (either JSON or XML depending on format), instead of DTOs, false by default",title:"Raw Payload",required:!1,deprecated:!1},reportId:{kind:"parameter",type:"string",description:"Salesforce1 Analytics report Id",title:"Report Id",required:!1,deprecated:!1},reportMetadata:{kind:"parameter",type:"object",description:"Salesforce1 Analytics report metadata for filtering",title:"Report Metadata",required:!1,deprecated:!1},resultId:{kind:"parameter",type:"string",description:"Bulk API Result ID",title:"Result Id",required:!1,deprecated:!1},sObjectBlobFieldName:{kind:"parameter",type:"string",description:"SObject blob field name",title:"SObject Blob Field Name",required:!1,deprecated:!1},sObjectClass:{kind:"parameter",type:"string",description:"Fully qualified SObject class name, usually generated using camel-salesforce-maven-plugin",title:"SObject Class",required:!1,deprecated:!1},sObjectFields:{kind:"parameter",type:"string",description:"SObject fields to retrieve",title:"SObject Fields",required:!1,deprecated:!1},sObjectId:{kind:"parameter",type:"string",description:"SObject ID if required by API",title:"SObject Id",required:!1,deprecated:!1},sObjectIdName:{kind:"parameter",type:"string",description:"SObject external ID field name",title:"SObject Id Name",required:!1,deprecated:!1},sObjectIdValue:{kind:"parameter",type:"string",description:"SObject external ID field value",title:"SObject Id Value",required:!1,deprecated:!1},sObjectName:{kind:"parameter",type:"string",description:"SObject name if required or supported by API",title:"SObject Name",required:!1,deprecated:!1},sObjectQuery:{kind:"parameter",type:"string",description:"Salesforce SOQL query string",title:"SObject Query",required:!1,deprecated:!1},sObjectSearch:{kind:"parameter",type:"string",description:"Salesforce SOSL search string",title:"SObject Search",required:!1,deprecated:!1},streamQueryResult:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, streams SOQL query result and transparently handles subsequent requests if there are multiple pages. Otherwise, results are returned one page at a time.",title:"Stream query result",required:!1,deprecated:!1},updateTopic:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to update an existing Push Topic when using the Streaming API, defaults to false",title:"Update Topic",required:!1,deprecated:!1},pubSubBatchSize:{kind:"parameter",type:"integer",defaultValue:"100",description:"Max number of events to receive in a batch from the Pub/Sub API.",title:"Pub Sub Batch Size",required:!1,deprecated:!1},pubSubDeserializeType:{kind:"parameter",type:"object",defaultValue:"AVRO",enum:["AVRO","SPECIFIC_RECORD","GENERIC_RECORD","POJO","JSON"],description:"How to deserialize events consume from the Pub/Sub API. AVRO will try a SpecificRecord subclass if found, otherwise GenericRecord.",title:"Pub Sub Deserialize Type",required:!1,deprecated:!1},pubSubPojoClass:{kind:"parameter",type:"string",description:"Fully qualified class name to deserialize Pub/Sub API event to.",title:"Pub Sub Pojo Class",required:!1,deprecated:!1},pubSubReplayId:{kind:"parameter",type:"string",description:"The replayId value to use when subscribing to the Pub/Sub API.",title:"Pub Sub Replay Id",required:!1,deprecated:!1},replayId:{kind:"parameter",type:"integer",description:"The replayId value to use when subscribing to the Streaming API.",title:"Replay Id",required:!1,deprecated:!1},replayPreset:{kind:"parameter",type:"object",defaultValue:"LATEST",enum:["LATEST","EARLIEST","CUSTOM"],description:"Replay preset for Pub/Sub API.",title:"Replay Preset",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},allOrNone:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Composite API option to indicate to rollback all records if any are not successful.",title:"All Or None",required:!1,deprecated:!1},apexUrl:{kind:"parameter",type:"string",description:"APEX method URL",title:"Apex Url",required:!1,deprecated:!1},compositeMethod:{kind:"parameter",type:"string",description:"Composite (raw) method.",title:"Composite Method",required:!1,deprecated:!1},rawHttpHeaders:{kind:"parameter",type:"string",description:"Comma separated list of message headers to include as HTTP parameters for Raw operation.",title:"Raw Http Headers",required:!1,deprecated:!1},rawMethod:{kind:"parameter",type:"string",description:"HTTP method to use for the Raw operation",title:"Raw Method",required:!1,deprecated:!1},rawPath:{kind:"parameter",type:"string",description:"The portion of the endpoint URL after the domain name. E.g., '/services/data/v52.0/sobjects/Account/'",title:"Raw Path",required:!1,deprecated:!1},rawQueryParameters:{kind:"parameter",type:"string",description:"Comma separated list of message headers to include as query parameters for Raw operation. Do not url-encode values as this will be done automatically.",title:"Raw Query Parameters",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"sap-netweaver":{type:"object",title:"SAP NetWeaver",group:"saas",icon:"generic24.png",description:"Send requests to SAP NetWeaver Gateway using HTTP.",properties:{url:{kind:"path",type:"string",description:"Url to the SAP net-weaver gateway server.",title:"Url",required:!0,deprecated:!1},flatternMap:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If the JSON Map contains only a single entry, then flattern by storing that single entry value as the message body.",title:"Flattern Map",required:!1,deprecated:!1},json:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to return data in JSON format. If this option is false, then XML is returned in Atom format.",title:"Json",required:!1,deprecated:!1},jsonAsMap:{kind:"parameter",type:"boolean",defaultValue:"true",description:"To transform the JSON from a String to a Map in the message body.",title:"Json As Map",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password for account.",title:"Password",required:!0,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username for account.",title:"Username",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},scheduler:{type:"object",title:"Scheduler",group:"core,scheduling",icon:"generic24.png",description:"Generate messages in specified intervals using java.util.concurrent.ScheduledExecutorService.",properties:{name:{kind:"path",type:"string",description:"The name of the scheduler",title:"Name",required:!0,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of core threads in the thread pool used by the scheduling thread pool. Is by default using a single thread",title:"Pool Size",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},schematron:{type:"object",title:"Schematron",group:"validation",icon:"generic24.png",description:"Validate XML payload using the Schematron Library.",properties:{path:{kind:"path",type:"string",description:"The path to the schematron rules file. Can either be in class path or location in the file system.",title:"Path",required:!0,deprecated:!1},abort:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flag to abort the route and throw a schematron validation exception.",title:"Abort",required:!1,deprecated:!1},rules:{kind:"parameter",type:"object",description:"To use the given schematron rules instead of loading from the path",title:"Rules",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},uriResolver:{kind:"parameter",type:"object",description:"Set the URIResolver to be used for resolving schematron includes in the rules file.",title:"Uri Resolver",required:!1,deprecated:!1}}},scp:{type:"object",title:"SCP",group:"file",icon:"generic24.png",description:"Copy files to/from remote hosts using the secure copy protocol (SCP).",properties:{host:{kind:"path",type:"string",description:"Hostname of the FTP server",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port of the FTP server",title:"Port",required:!1,deprecated:!1},directoryName:{kind:"path",type:"string",description:"The starting directory",title:"Directory Name",required:!1,deprecated:!1},chmod:{kind:"parameter",type:"string",defaultValue:"664",description:"Allows you to set chmod on the stored file. For example chmod=664.",title:"Chmod",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after use. Disconnect will only disconnect the current connection to the FTP server. If you have a consumer which you want to stop, then you need to stop the consumer/route instead.",title:"Disconnect",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"Use Expression such as File Language to dynamically set the filename. For consumers, it's used as a filename filter. For producers, it's used to evaluate the filename to write. If an expression is set, it take precedence over the CamelFileName header. (Note: The header itself can also be an Expression). The expression options support both String and Expression types. If the expression is a String type, it is always evaluated using the File Language. If the expression is an Expression type, the specified Expression type is used - this allows you, for instance, to use OGNL expressions. For the consumer, you can use it to filter filenames, so you can for instance consume today's file using the File Language syntax: mydata-${date:now:yyyyMMdd}.txt. The producers support the CamelOverruleFileName header which takes precedence over any existing CamelFileName header; the CamelOverruleFileName is a header that is used only once, and makes it easier as this avoids to temporary store CamelFileName and have to restore it afterwards.",title:"File Name",required:!1,deprecated:!1},flatten:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flatten is used to flatten the file name path to strip any leading paths, so it's just the file name. This allows you to consume recursively into sub-directories, but when you eg write the files to another directory they will be written in a single directory. Setting this to true on the producer enforces that any file name in CamelFileName header will be stripped for any leading paths.",title:"Flatten",required:!1,deprecated:!1},jailStartingDirectory:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for jailing (restricting) writing files to the starting directory (and sub) only. This is enabled by default to not allow Camel to write files to outside directories (to be more secured out of the box). You can turn this off to allow writing files to directories outside the starting directory, such as parent or root folders.",title:"Jail Starting Directory",required:!1,deprecated:!1},strictHostKeyChecking:{kind:"parameter",type:"string",defaultValue:"no",enum:["no","yes"],description:"Sets whether to use strict host key checking. Possible values are: no, yes",title:"Strict Host Key Checking",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Used to specify if a null body is allowed during file writing. If set to true then an empty file will be created, when set to false, and attempting to send a null body to the file component, a GenericFileWriteException of 'Cannot write null body to file.' will be thrown. If the fileExist option is set to 'Override', then the file will be truncated, and if set to append the file will remain unchanged.",title:"Allow Null Body",required:!1,deprecated:!1},disconnectOnBatchComplete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after a Batch upload is complete. disconnectOnBatchComplete will only disconnect the current connection to the FTP server.",title:"Disconnect On Batch Complete",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},moveExistingFileStrategy:{kind:"parameter",type:"object",description:"Strategy (Custom Strategy) used to move file with special naming token to use when fileExist=Move is configured. By default, there is an implementation used if no custom strategy is provided",title:"Move Existing File Strategy",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"duration",defaultValue:"10000",description:"Sets the connect timeout for waiting for a connection to be established Used by both FTPClient and JSCH",title:"Connect Timeout",required:!1,deprecated:!1},soTimeout:{kind:"parameter",type:"duration",defaultValue:"300000",description:"Sets the so timeout FTP and FTPS Is the SocketOptions.SO_TIMEOUT value in millis. Recommended option is to set this to 300000 so as not have a hanged connection. On SFTP this option is set as timeout on the JSCH Session instance.",title:"So Timeout",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Sets the data timeout for waiting for reply Used only by FTPClient",title:"Timeout",required:!1,deprecated:!1},knownHostsFile:{kind:"parameter",type:"string",description:"Sets the known_hosts file, so that the jsch endpoint can do host key verification. You can prefix with classpath: to load the file from classpath instead of file system.",title:"Known Hosts File",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use for login",title:"Password",required:!1,deprecated:!1},preferredAuthentications:{kind:"parameter",type:"string",description:"Set a comma separated list of authentications that will be used in order of preference. Possible authentication methods are defined by JCraft JSCH. Some examples include: gssapi-with-mic,publickey,keyboard-interactive,password If not specified the JSCH and/or system defaults will be used.",title:"Preferred Authentications",required:!1,deprecated:!1},privateKeyBytes:{kind:"parameter",type:"string",description:"Set the private key bytes to that the endpoint can do private key verification. This must be used only if privateKeyFile wasn't set. Otherwise the file will have the priority.",title:"Private Key Bytes",required:!1,deprecated:!1},privateKeyFile:{kind:"parameter",type:"string",description:"Set the private key file to that the endpoint can do private key verification. You can prefix with classpath: to load the file from classpath instead of file system.",title:"Private Key File",required:!1,deprecated:!1},privateKeyFilePassphrase:{kind:"parameter",type:"string",description:"Set the private key file passphrase to that the endpoint can do private key verification.",title:"Private Key File Passphrase",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use for login",title:"Username",required:!1,deprecated:!1},useUserKnownHostsFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If knownHostFile has not been explicit configured, then use the host file from System.getProperty(user.home) /.ssh/known_hosts",title:"Use User Known Hosts File",required:!1,deprecated:!1},ciphers:{kind:"parameter",type:"string",description:"Set a comma separated list of ciphers that will be used in order of preference. Possible cipher names are defined by JCraft JSCH. Some examples include: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc,aes192-cbc,aes256-cbc. If not specified the default list from JSCH will be used.",title:"Ciphers",required:!1,deprecated:!1}}},seda:{type:"object",title:"SEDA",group:"core,messaging",icon:"generic24.png",description:"Asynchronously call another endpoint from any Camel Context in the same JVM.",properties:{name:{kind:"path",type:"string",description:"Name of queue",title:"Name",required:!0,deprecated:!1},size:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The maximum capacity of the SEDA queue (i.e., the number of messages it can hold). Will by default use the defaultSize set on the SEDA component.",title:"Size",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of concurrent threads processing exchanges.",title:"Concurrent Consumers",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},limitConcurrentConsumers:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit the number of concurrentConsumers to the maximum of 500. By default, an exception will be thrown if an endpoint is configured with a greater number. You can disable that check by turning this option off.",title:"Limit Concurrent Consumers",required:!1,deprecated:!1},multipleConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether multiple consumers are allowed. If enabled, you can use SEDA for Publish-Subscribe messaging. That is, you can send a message to the SEDA queue and have each consumer receive a copy of the message. When enabled, this option should be specified on every consumer endpoint.",title:"Multiple Consumers",required:!1,deprecated:!1},pollTimeout:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The timeout (in milliseconds) used when polling. When a timeout occurs, the consumer can check whether it is allowed to continue running. Setting a lower value allows the consumer to react more quickly upon shutdown.",title:"Poll Timeout",required:!1,deprecated:!1},purgeWhenStopping:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to purge the task queue when stopping the consumer/route. This allows to stop faster, as any pending messages on the queue is discarded.",title:"Purge When Stopping",required:!1,deprecated:!1},blockWhenFull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a thread that sends messages to a full SEDA queue will block until the queue's capacity is no longer exhausted. By default, an exception will be thrown stating that the queue is full. By enabling this option, the calling thread will instead block and wait until the message can be accepted.",title:"Block When Full",required:!1,deprecated:!1},discardIfNoConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should discard the message (do not add the message to the queue), when sending to a queue with no active consumers. Only one of the options discardIfNoConsumers and failIfNoConsumers can be enabled at the same time.",title:"Discard If No Consumers",required:!1,deprecated:!1},discardWhenFull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a thread that sends messages to a full SEDA queue will be discarded. By default, an exception will be thrown stating that the queue is full. By enabling this option, the calling thread will give up sending and continue, meaning that the message was not sent to the SEDA queue.",title:"Discard When Full",required:!1,deprecated:!1},failIfNoConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should fail by throwing an exception, when sending to a queue with no active consumers. Only one of the options discardIfNoConsumers and failIfNoConsumers can be enabled at the same time.",title:"Fail If No Consumers",required:!1,deprecated:!1},offerTimeout:{kind:"parameter",type:"duration",description:"Offer timeout (in milliseconds) can be added to the block case when queue is full. You can disable timeout by using 0 or a negative value.",title:"Offer Timeout",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Timeout (in milliseconds) before a SEDA producer will stop waiting for an asynchronous task to complete. You can disable timeout by using 0 or a negative value.",title:"Timeout",required:!1,deprecated:!1},waitForTaskToComplete:{kind:"parameter",type:"object",defaultValue:"IfReplyExpected",enum:["Never","IfReplyExpected","Always"],description:"Option to specify whether the caller should wait for the async task to complete or not before continuing. The following three options are supported: Always, Never or IfReplyExpected. The first two values are self-explanatory. The last value, IfReplyExpected, will only wait if the message is Request Reply based. The default option is IfReplyExpected.",title:"Wait For Task To Complete",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},queue:{kind:"parameter",type:"object",description:"Define the queue instance which will be used by the endpoint",title:"Queue",required:!1,deprecated:!1}}},service:{type:"object",title:"Service",group:"cloud",icon:"generic24.png",description:"Register a Camel endpoint to a Service Registry (such as Consul, Etcd) and delegate to it.",properties:{delegateUri:{kind:"path",type:"string",description:"The endpoint uri to expose as service",title:"Delegate Uri",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},servicenow:{type:"object",title:"ServiceNow",group:"api,cloud,management",icon:"generic24.png",description:"Interact with ServiceNow via its REST API.",properties:{instanceName:{kind:"path",type:"string",description:"The ServiceNow instance name",title:"Instance Name",required:!0,deprecated:!1},display:{kind:"parameter",type:"string",defaultValue:"true",enum:["false","true","all"],description:"Set this parameter to true to return only scorecards where the indicator Display field is selected. Set this parameter to all to return scorecards with any Display field value. This parameter is true by default.",title:"Display",required:!1,deprecated:!1},displayValue:{kind:"parameter",type:"string",defaultValue:"false",enum:["false","true","all"],description:"Return the display value (true), actual value (false), or both (all) for reference fields (default: false)",title:"Display Value",required:!1,deprecated:!1},excludeReferenceLink:{kind:"parameter",type:"boolean",description:"True to exclude Table API links for reference fields (default: false)",title:"Exclude Reference Link",required:!1,deprecated:!1},favorites:{kind:"parameter",type:"boolean",description:"Set this parameter to true to return only scorecards that are favorites of the querying user.",title:"Favorites",required:!1,deprecated:!1},includeAggregates:{kind:"parameter",type:"boolean",description:"Set this parameter to true to always return all available aggregates for an indicator, including when an aggregate has already been applied. If a value is not specified, this parameter defaults to false and returns no aggregates.",title:"Include Aggregates",required:!1,deprecated:!1},includeAvailableAggregates:{kind:"parameter",type:"boolean",description:"Set this parameter to true to return all available aggregates for an indicator when no aggregate has been applied. If a value is not specified, this parameter defaults to false and returns no aggregates.",title:"Include Available Aggregates",required:!1,deprecated:!1},includeAvailableBreakdowns:{kind:"parameter",type:"boolean",description:"Set this parameter to true to return all available breakdowns for an indicator. If a value is not specified, this parameter defaults to false and returns no breakdowns.",title:"Include Available Breakdowns",required:!1,deprecated:!1},includeScoreNotes:{kind:"parameter",type:"boolean",description:"Set this parameter to true to return all notes associated with the score. The note element contains the note text as well as the author and timestamp when the note was added.",title:"Include Score Notes",required:!1,deprecated:!1},includeScores:{kind:"parameter",type:"boolean",description:"Set this parameter to true to return all scores for a scorecard. If a value is not specified, this parameter defaults to false and returns only the most recent score value.",title:"Include Scores",required:!1,deprecated:!1},inputDisplayValue:{kind:"parameter",type:"boolean",description:"True to set raw value of input fields (default: false)",title:"Input Display Value",required:!1,deprecated:!1},key:{kind:"parameter",type:"boolean",description:"Set this parameter to true to return only scorecards for key indicators.",title:"Key",required:!1,deprecated:!1},models:{kind:"parameter",type:"object",description:"Defines both request and response models",title:"Models",required:!1,deprecated:!1},perPage:{kind:"parameter",type:"integer",defaultValue:"10",description:"Enter the maximum number of scorecards each query can return. By default this value is 10, and the maximum is 100.",title:"Per Page",required:!1,deprecated:!1},release:{kind:"parameter",type:"object",defaultValue:"HELSINKI",enum:["FUJI","GENEVA","HELSINKI"],description:"The ServiceNow release to target, default to Helsinki See https://docs.servicenow.com",title:"Release",required:!1,deprecated:!1},requestModels:{kind:"parameter",type:"object",description:"Defines the request model",title:"Request Models",required:!1,deprecated:!1},resource:{kind:"parameter",type:"string",description:"The default resource, can be overridden by header CamelServiceNowResource",title:"Resource",required:!1,deprecated:!1},responseModels:{kind:"parameter",type:"object",description:"Defines the response model",title:"Response Models",required:!1,deprecated:!1},sortBy:{kind:"parameter",type:"string",enum:["value","change","changeperc","gap","gapperc","duedate","name","order","default","group","indicator_group","frequency","target","date","trend","bullet","direction"],description:"Specify the value to use when sorting results. By default, queries sort records by value.",title:"Sort By",required:!1,deprecated:!1},sortDir:{kind:"parameter",type:"string",enum:["asc","desc"],description:"Specify the sort direction, ascending or descending. By default, queries sort records in descending order. Use sysparm_sortdir=asc to sort in ascending order.",title:"Sort Dir",required:!1,deprecated:!1},suppressAutoSysField:{kind:"parameter",type:"boolean",description:"True to suppress auto generation of system fields (default: false)",title:"Suppress Auto Sys Field",required:!1,deprecated:!1},suppressPaginationHeader:{kind:"parameter",type:"boolean",description:"Set this value to true to remove the Link header from the response. The Link header allows you to request additional pages of data when the number of records matching your query exceeds the query limit",title:"Suppress Pagination Header",required:!1,deprecated:!1},table:{kind:"parameter",type:"string",description:"The default table, can be overridden by header CamelServiceNowTable",title:"Table",required:!1,deprecated:!1},target:{kind:"parameter",type:"boolean",description:"Set this parameter to true to return only scorecards that have a target.",title:"Target",required:!1,deprecated:!1},topLevelOnly:{kind:"parameter",type:"boolean",description:"Gets only those categories whose parent is a catalog.",title:"Top Level Only",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"The ServiceNow REST API version, default latest",title:"Api Version",required:!1,deprecated:!1},dateFormat:{kind:"parameter",type:"string",defaultValue:"yyyy-MM-dd",description:"The date format used for Json serialization/deserialization",title:"Date Format",required:!1,deprecated:!1},dateTimeFormat:{kind:"parameter",type:"string",defaultValue:"yyyy-MM-dd HH:mm:ss",description:"The date-time format used for Json serialization/deserialization",title:"Date Time Format",required:!1,deprecated:!1},httpClientPolicy:{kind:"parameter",type:"object",description:"To configure http-client",title:"Http Client Policy",required:!1,deprecated:!1},mapper:{kind:"parameter",type:"object",description:"Sets Jackson's ObjectMapper to use for request/reply",title:"Mapper",required:!1,deprecated:!1},proxyAuthorizationPolicy:{kind:"parameter",type:"object",description:"To configure proxy authentication",title:"Proxy Authorization Policy",required:!1,deprecated:!1},retrieveTargetRecordOnImport:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set this parameter to true to retrieve the target record when using import set api. The import set result is then replaced by the target record",title:"Retrieve Target Record On Import",required:!1,deprecated:!1},timeFormat:{kind:"parameter",type:"string",defaultValue:"HH:mm:ss",description:"The time format used for Json serialization/deserialization",title:"Time Format",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"The proxy host name",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"The proxy port number",title:"Proxy Port",required:!1,deprecated:!1},apiUrl:{kind:"parameter",type:"string",description:"The ServiceNow REST API url",title:"Api Url",required:!1,deprecated:!1},oauthClientId:{kind:"parameter",type:"string",description:"OAuth2 ClientID",title:"Oauth Client Id",required:!1,deprecated:!1},oauthClientSecret:{kind:"parameter",type:"string",description:"OAuth2 ClientSecret",title:"Oauth Client Secret",required:!1,deprecated:!1},oauthTokenUrl:{kind:"parameter",type:"string",description:"OAuth token Url",title:"Oauth Token Url",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"ServiceNow account password, MUST be provided",title:"Password",required:!0,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"Password for proxy authentication",title:"Proxy Password",required:!1,deprecated:!1},proxyUserName:{kind:"parameter",type:"string",description:"Username for proxy authentication",title:"Proxy User Name",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters. See http://camel.apache.org/camel-configuration-utilities.html",title:"Ssl Context Parameters",required:!1,deprecated:!1},userName:{kind:"parameter",type:"string",description:"ServiceNow user account name, MUST be provided",title:"User Name",required:!0,deprecated:!1}}},servlet:{type:"object",title:"Servlet",group:"http",icon:"generic24.png",description:"Serve HTTP requests by a Servlet.",properties:{contextPath:{kind:"path",type:"string",description:"The context-path to use",title:"Context Path",required:!0,deprecated:!1},disableStreamCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Determines whether or not the raw input stream from Servlet is cached or not (Camel will read the stream into a in memory/overflow to file, Stream caching) cache. By default Camel will cache the Servlet input stream to support reading it multiple times to ensure it Camel can retrieve all data from the stream. However you can set this option to true when you for example need to access the raw stream, such as streaming it directly to a file or other persistent store. DefaultHttpBinding will copy the request input stream into a stream cache and put it into message body if this option is false to support reading the stream multiple times. If you use Servlet to bridge/proxy an endpoint then consider enabling this option to improve performance, in case you do not need to read the message payload multiple times. The http producer will by default cache the response body stream. If setting this option to true, then the producers will not cache the response body stream but use the response stream as-is as the message body.",title:"Disable Stream Cache",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},httpBinding:{kind:"parameter",type:"object",description:"To use a custom HttpBinding to control the mapping between Camel message and HttpClient.",title:"Http Binding",required:!1,deprecated:!1},async:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Configure the consumer to work in async mode",title:"Async",required:!1,deprecated:!1},chunked:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is false the Servlet will disable the HTTP streaming and set the content-length header on the response",title:"Chunked",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side, and if the caused Exception was send back serialized in the response as a application/x-java-serialized-object content type. On the producer side the exception will be deserialized and thrown as is, instead of the HttpOperationFailedException. The caused exception is required to be serialized. This is by default turned off. If you enable this then be aware that Java will deserialize the incoming data from the request to Java and that can be a potential security risk.",title:"Transfer Exception",required:!1,deprecated:!1},httpMethodRestrict:{kind:"parameter",type:"string",description:"Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc. Multiple methods can be specified separated by comma.",title:"Http Method Restrict",required:!1,deprecated:!1},matchOnUriPrefix:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found.",title:"Match On Uri Prefix",required:!1,deprecated:!1},muteException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side the response's body won't contain the exception's stack trace.",title:"Mute Exception",required:!1,deprecated:!1},responseBufferSize:{kind:"parameter",type:"integer",description:"To use a custom buffer size on the jakarta.servlet.ServletResponse.",title:"Response Buffer Size",required:!1,deprecated:!1},servletName:{kind:"parameter",type:"string",defaultValue:"CamelServlet",description:"Name of the servlet to use",title:"Servlet Name",required:!1,deprecated:!1},attachmentMultipartBinding:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to automatic bind multipart/form-data as attachments on the Camel Exchange. The options attachmentMultipartBinding=true and disableStreamCache=false cannot work together. Remove disableStreamCache to use AttachmentMultipartBinding. This is turn off by default as this may require servlet specific configuration to enable this when using Servlet's.",title:"Attachment Multipart Binding",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},eagerCheckContentAvailable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to eager check whether the HTTP requests has content if the content-length header is 0 or not present. This can be turned on in case HTTP clients do not send streamed data.",title:"Eager Check Content Available",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},fileNameExtWhitelist:{kind:"parameter",type:"string",description:"Whitelist of accepted filename extensions for accepting uploaded files. Multiple extensions can be separated by comma, such as txt,xml.",title:"File Name Ext Whitelist",required:!1,deprecated:!1},mapHttpMessageBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Body of the exchange will be mapped to HTTP body. Setting this to false will avoid the HTTP mapping.",title:"Map Http Message Body",required:!1,deprecated:!1},mapHttpMessageFormUrlEncodedBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Form Encoded body of the exchange will be mapped to HTTP. Setting this to false will avoid the HTTP Form Encoded body mapping.",title:"Map Http Message Form Url Encoded Body",required:!1,deprecated:!1},mapHttpMessageHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If this option is true then IN exchange Headers of the exchange will be mapped to HTTP headers. Setting this to false will avoid the HTTP Headers mapping.",title:"Map Http Message Headers",required:!1,deprecated:!1},optionsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP OPTIONS for this Servlet consumer. By default OPTIONS is turned off.",title:"Options Enabled",required:!1,deprecated:!1},traceEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP TRACE for this Servlet consumer. By default TRACE is turned off.",title:"Trace Enabled",required:!1,deprecated:!1}}},sftp:{type:"object",title:"SFTP",group:"file",icon:"generic24.png",description:"Upload and download files to/from SFTP servers.",properties:{host:{kind:"path",type:"string",description:"Hostname of the FTP server",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port of the FTP server",title:"Port",required:!1,deprecated:!1},directoryName:{kind:"path",type:"string",description:"The starting directory",title:"Directory Name",required:!1,deprecated:!1},binary:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).",title:"Binary",required:!1,deprecated:!1},charset:{kind:"parameter",type:"string",description:"This option is used to specify the encoding of the file. You can use this on the consumer, to specify the encodings of the files, which allow Camel to know the charset it should load the file content in case the file content is being accessed. Likewise when writing a file, you can use this option to specify which charset to write the file as well. Do mind that when writing the file Camel may have to read the message content into memory to be able to convert the data into the configured charset, so do not use this if you have big messages.",title:"Charset",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after use. Disconnect will only disconnect the current connection to the FTP server. If you have a consumer which you want to stop, then you need to stop the consumer/route instead.",title:"Disconnect",required:!1,deprecated:!1},doneFileName:{kind:"parameter",type:"string",description:"Producer: If provided, then Camel will write a 2nd done file when the original file has been written. The done file will be empty. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders. The done file will always be written in the same folder as the original file. Consumer: If provided, Camel will only consume files if a done file exists. This option configures what file name to use. Either you can specify a fixed name. Or you can use dynamic placeholders.The done file is always expected in the same folder as the original file. Only ${file.name} and ${file.name.next} is supported as dynamic placeholders.",title:"Done File Name",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"Use Expression such as File Language to dynamically set the filename. For consumers, it's used as a filename filter. For producers, it's used to evaluate the filename to write. If an expression is set, it take precedence over the CamelFileName header. (Note: The header itself can also be an Expression). The expression options support both String and Expression types. If the expression is a String type, it is always evaluated using the File Language. If the expression is an Expression type, the specified Expression type is used - this allows you, for instance, to use OGNL expressions. For the consumer, you can use it to filter filenames, so you can for instance consume today's file using the File Language syntax: mydata-${date:now:yyyyMMdd}.txt. The producers support the CamelOverruleFileName header which takes precedence over any existing CamelFileName header; the CamelOverruleFileName is a header that is used only once, and makes it easier as this avoids to temporary store CamelFileName and have to restore it afterwards.",title:"File Name",required:!1,deprecated:!1},jschLoggingLevel:{kind:"parameter",type:"object",defaultValue:"WARN",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The logging level to use for JSCH activity logging. As JSCH is verbose at by default at INFO level the threshold is WARN by default.",title:"Jsch Logging Level",required:!1,deprecated:!1},passiveMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets passive mode connections. Default is active mode connections.",title:"Passive Mode",required:!1,deprecated:!1},separator:{kind:"parameter",type:"object",defaultValue:"UNIX",enum:["UNIX","Windows","Auto"],description:"Sets the path separator to be used. UNIX = Uses unix style path separator Windows = Uses windows style path separator Auto = (is default) Use existing path separator in file name",title:"Separator",required:!1,deprecated:!1},fastExistsCheck:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set this option to be true, camel-ftp will use the list file directly to check if the file exists. Since some FTP server may not support to list the file directly, if the option is false, camel-ftp will use the old way to list the directory and check if the file exists. This option also influences readLock=changed to control whether it performs a fast check to update file information or not. This can be used to speed up the process if the FTP server has a lot of files.",title:"Fast Exists Check",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file will be deleted after it is processed successfully.",title:"Delete",required:!1,deprecated:!1},moveFailed:{kind:"parameter",type:"string",description:"Sets the move failure expression based on Simple language. For example, to move files into a .error subdirectory use: .error. Note: When moving the files to the fail location Camel will handle the error and will not pick up the file again.",title:"Move Failed",required:!1,deprecated:!1},noop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, the file is not moved or deleted in any way. This option is good for readonly data, or for ETL type requirements. If noop=true, Camel will set idempotent=true as well, to avoid consuming the same files over and over again.",title:"Noop",required:!1,deprecated:!1},preMove:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to dynamically set the filename when moving it before processing. For example to move in-progress files into the order directory set this value to order.",title:"Pre Move",required:!1,deprecated:!1},preSort:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When pre-sort is enabled then the consumer will sort the file and directory names during polling, that was retrieved from the file system. You may want to do this in case you need to operate on the files in a sorted order. The pre-sort is executed before the consumer starts to filter, and accept files to process by Camel. This option is default=false meaning disabled.",title:"Pre Sort",required:!1,deprecated:!1},recursive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If a directory, will look for files in all the sub-directories as well.",title:"Recursive",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},streamDownload:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the download method to use when not using a local working directory. If set to true, the remote files are streamed to the route as they are read. When set to false, the remote files are loaded into memory before being sent into the route. If enabling this option then you must set stepwise=false as both cannot be enabled at the same time.",title:"Stream Download",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},download:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the FTP consumer should download the file. If this option is set to false, then the message body will be null, but the consumer will still trigger a Camel Exchange that has details about the file such as file name, file size, etc. It's just that the file will not be downloaded.",title:"Download",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},ignoreFileNotFoundOrPermissionError:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error. By default when a directory or file does not exists or insufficient permission, then an exception is thrown. Setting this option to true allows to ignore that instead.",title:"Ignore File Not Found Or Permission Error",required:!1,deprecated:!1},inProgressRepository:{kind:"parameter",type:"object",description:"A pluggable in-progress repository org.apache.camel.spi.IdempotentRepository. The in-progress repository is used to account the current in progress files being consumed. By default a memory based repository is used.",title:"In Progress Repository",required:!1,deprecated:!1},localWorkDirectory:{kind:"parameter",type:"string",description:"When consuming, a local work directory can be used to store the remote file content directly in local files, to avoid loading the content into memory. This is beneficial, if you consume a very big remote file and thus can conserve memory.",title:"Local Work Directory",required:!1,deprecated:!1},onCompletionExceptionHandler:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.ExceptionHandler to handle any thrown exceptions that happens during the file on completion process where the consumer does either a commit or rollback. The default implementation will log any exception at WARN level and ignore.",title:"On Completion Exception Handler",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},processStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.component.file.GenericFileProcessStrategy allowing you to implement your own readLock option or similar. Can also be used when special conditions must be met before a file can be consumed, such as a special ready file exists. If this option is set then the readLock option does not apply.",title:"Process Strategy",required:!1,deprecated:!1},useList:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using LIST command when downloading a file. Default is true. In some use cases you may want to download a specific file and are not allowed to use the LIST command, and therefore you can set this option to false. Notice when using this option, then the specific file to download does not include meta-data information such as file size, timestamp, permissions etc, because those information is only possible to retrieve when LIST command is in use.",title:"Use List",required:!1,deprecated:!1},fileExist:{kind:"parameter",type:"object",defaultValue:"Override",enum:["Override","Append","Fail","Ignore","Move","TryRename"],description:"What to do if a file already exists with the same name. Override, which is the default, replaces the existing file. - Append - adds content to the existing file. - Fail - throws a GenericFileOperationException, indicating that there is already an existing file. - Ignore - silently ignores the problem and does not override the existing file, but assumes everything is okay. - Move - option requires to use the moveExisting option to be configured as well. The option eagerDeleteTargetFile can be used to control what to do if an moving the file, and there exists already an existing file, otherwise causing the move operation to fail. The Move option will move any existing files, before writing the target file. - TryRename is only applicable if tempFileName option is in use. This allows to try renaming the file from the temporary name to the actual name, without doing any exists check. This check may be faster on some file systems and especially FTP servers.",title:"File Exist",required:!1,deprecated:!1},flatten:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Flatten is used to flatten the file name path to strip any leading paths, so it's just the file name. This allows you to consume recursively into sub-directories, but when you eg write the files to another directory they will be written in a single directory. Setting this to true on the producer enforces that any file name in CamelFileName header will be stripped for any leading paths.",title:"Flatten",required:!1,deprecated:!1},jailStartingDirectory:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for jailing (restricting) writing files to the starting directory (and sub) only. This is enabled by default to not allow Camel to write files to outside directories (to be more secured out of the box). You can turn this off to allow writing files to directories outside the starting directory, such as parent or root folders.",title:"Jail Starting Directory",required:!1,deprecated:!1},moveExisting:{kind:"parameter",type:"string",description:"Expression (such as File Language) used to compute file name to use when fileExist=Move is configured. To move files into a backup subdirectory just enter backup. This option only supports the following File Language tokens: file:name, file:name.ext, file:name.noext, file:onlyname, file:onlyname.noext, file:ext, and file:parent. Notice the file:parent is not supported by the FTP component, as the FTP component can only move any existing files to a relative directory based on current dir as base.",title:"Move Existing",required:!1,deprecated:!1},tempFileName:{kind:"parameter",type:"string",description:"The same as tempPrefix option but offering a more fine grained control on the naming of the temporary filename as it uses the File Language. The location for tempFilename is relative to the final file location in the option 'fileName', not the target directory in the base uri. For example if option fileName includes a directory prefix: dir/finalFilename then tempFileName is relative to that subdirectory dir.",title:"Temp File Name",required:!1,deprecated:!1},tempPrefix:{kind:"parameter",type:"string",description:"This option is used to write the file using a temporary name and then, after the write is complete, rename it to the real name. Can be used to identify files being written and also avoid consumers (not using exclusive read locks) reading in progress files. Is often used by FTP when uploading big files.",title:"Temp Prefix",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Used to specify if a null body is allowed during file writing. If set to true then an empty file will be created, when set to false, and attempting to send a null body to the file component, a GenericFileWriteException of 'Cannot write null body to file.' will be thrown. If the fileExist option is set to 'Override', then the file will be truncated, and if set to append the file will remain unchanged.",title:"Allow Null Body",required:!1,deprecated:!1},chmod:{kind:"parameter",type:"string",description:"Allows you to set chmod on the stored file. For example chmod=640.",title:"Chmod",required:!1,deprecated:!1},chmodDirectory:{kind:"parameter",type:"string",description:"Allows you to set chmod during path creation. For example chmod=640.",title:"Chmod Directory",required:!1,deprecated:!1},disconnectOnBatchComplete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not to disconnect from remote FTP server right after a Batch upload is complete. disconnectOnBatchComplete will only disconnect the current connection to the FTP server.",title:"Disconnect On Batch Complete",required:!1,deprecated:!1},eagerDeleteTargetFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to eagerly delete any existing target file. This option only applies when you use fileExists=Override and the tempFileName option as well. You can use this to disable (set it to false) deleting the target file before the temp file is written. For example you may write big files and want the target file to exists during the temp file is being written. This ensure the target file is only deleted until the very last moment, just before the temp file is being renamed to the target filename. This option is also used to control whether to delete any existing files when fileExist=Move is enabled, and an existing file exists. If this option copyAndDeleteOnRenameFails false, then an exception will be thrown if an existing file existed, if its true, then the existing file is deleted before the move operation.",title:"Eager Delete Target File",required:!1,deprecated:!1},keepLastModified:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will keep the last modified timestamp from the source file (if any). Will use the FileConstants.FILE_LAST_MODIFIED header to located the timestamp. This header can contain either a java.util.Date or long with the timestamp. If the timestamp exists and the option is enabled it will set this timestamp on the written file. Note: This option only applies to the file producer. You cannot use this option with any of the ftp producers.",title:"Keep Last Modified",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},moveExistingFileStrategy:{kind:"parameter",type:"object",description:"Strategy (Custom Strategy) used to move file with special naming token to use when fileExist=Move is configured. By default, there is an implementation used if no custom strategy is provided",title:"Move Existing File Strategy",required:!1,deprecated:!1},sendNoop:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to send a noop command as a pre-write check before uploading files to the FTP server. This is enabled by default as a validation of the connection is still valid, which allows to silently re-connect to be able to upload the file. However if this causes problems, you can turn this option off.",title:"Send Noop",required:!1,deprecated:!1},autoCreate:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatically create missing directories in the file's pathname. For the file consumer, that means creating the starting directory. For the file producer, it means the directory the files should be written to.",title:"Auto Create",required:!1,deprecated:!1},bindAddress:{kind:"parameter",type:"string",description:"Specifies the address of the local interface against which the connection should bind.",title:"Bind Address",required:!1,deprecated:!1},bulkRequests:{kind:"parameter",type:"integer",description:"Specifies how many requests may be outstanding at any one time. Increasing this value may slightly improve file transfer speed but will increase memory usage.",title:"Bulk Requests",required:!1,deprecated:!1},compression:{kind:"parameter",type:"integer",description:"To use compression. Specify a level from 1 to 10. Important: You must manually add the needed JSCH zlib JAR to the classpath for compression support.",title:"Compression",required:!1,deprecated:!1},connectTimeout:{kind:"parameter",type:"duration",defaultValue:"10000",description:"Sets the connect timeout for waiting for a connection to be established Used by both FTPClient and JSCH",title:"Connect Timeout",required:!1,deprecated:!1},existDirCheckUsingLs:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to check for existing directory using LS command or CD. By default LS is used which is safer as otherwise Camel needs to change the directory back after checking. However LS has been reported to cause a problem on windows system in some situations and therefore you can disable this option to use CD.",title:"Exist Dir Check Using Ls",required:!1,deprecated:!1},filenameEncoding:{kind:"parameter",type:"string",description:"Encoding to use for FTP client when parsing filenames. By default, UTF-8 is used.",title:"Filename Encoding",required:!1,deprecated:!1},maximumReconnectAttempts:{kind:"parameter",type:"integer",description:"Specifies the maximum reconnect attempts Camel performs when it tries to connect to the remote FTP server. Use 0 to disable this behavior.",title:"Maximum Reconnect Attempts",required:!1,deprecated:!1},proxy:{kind:"parameter",type:"object",description:"To use a custom configured com.jcraft.jsch.Proxy. This proxy is used to consume/send messages from the target SFTP host.",title:"Proxy",required:!1,deprecated:!1},reconnectDelay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Delay in millis Camel will wait before performing a reconnect attempt.",title:"Reconnect Delay",required:!1,deprecated:!1},serverAliveCountMax:{kind:"parameter",type:"integer",defaultValue:"1",description:"Sets the number of keep-alive messages which may be sent without receiving any messages back from the server. If this threshold is reached while keep-alive messages are being sent, the connection will be disconnected. The default value is one.",title:"Server Alive Count Max",required:!1,deprecated:!1},serverAliveInterval:{kind:"parameter",type:"integer",description:"Sets the interval (millis) to send a keep-alive message. If zero is specified, any keep-alive message must not be sent. The default interval is zero.",title:"Server Alive Interval",required:!1,deprecated:!1},soTimeout:{kind:"parameter",type:"duration",defaultValue:"300000",description:"Sets the so timeout FTP and FTPS Is the SocketOptions.SO_TIMEOUT value in millis. Recommended option is to set this to 300000 so as not have a hanged connection. On SFTP this option is set as timeout on the JSCH Session instance.",title:"So Timeout",required:!1,deprecated:!1},stepwise:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether we should stepwise change directories while traversing file structures when downloading files, or as well when uploading a file to a directory. You can disable this if you for example are in a situation where you cannot change directory on the FTP server due security reasons. Stepwise cannot be used together with streamDownload.",title:"Stepwise",required:!1,deprecated:!1},throwExceptionOnConnectFailed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should an exception be thrown if connection failed (exhausted)By default exception is not thrown and a WARN is logged. You can use this to enable exception being thrown and handle the thrown exception from the org.apache.camel.spi.PollingConsumerPollStrategy rollback method.",title:"Throw Exception On Connect Failed",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Sets the data timeout for waiting for reply Used only by FTPClient",title:"Timeout",required:!1,deprecated:!1},antExclude:{kind:"parameter",type:"string",description:"Ant style filter exclusion. If both antInclude and antExclude are used, antExclude takes precedence over antInclude. Multiple exclusions may be specified in comma-delimited format.",title:"Ant Exclude",required:!1,deprecated:!1},antFilterCaseSensitive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets case sensitive flag on ant filter.",title:"Ant Filter Case Sensitive",required:!1,deprecated:!1},antInclude:{kind:"parameter",type:"string",description:"Ant style filter inclusion. Multiple inclusions may be specified in comma-delimited format.",title:"Ant Include",required:!1,deprecated:!1},eagerMaxMessagesPerPoll:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Allows for controlling whether the limit from maxMessagesPerPoll is eager or not. If eager then the limit is during the scanning of files. Where as false would scan all files, and then perform sorting. Setting this option to false allows for sorting all files first, and then limit the poll. Mind that this requires a higher memory usage as all file details are in memory to perform the sorting.",title:"Eager Max Messages Per Poll",required:!1,deprecated:!1},exclude:{kind:"parameter",type:"string",description:"Is used to exclude files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Exclude",required:!1,deprecated:!1},excludeExt:{kind:"parameter",type:"string",description:"Is used to exclude files matching file extension name (case insensitive). For example to exclude bak files, then use excludeExt=bak. Multiple extensions can be separated by comma, for example to exclude bak and dat files, use excludeExt=bak,dat. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Exclude Ext",required:!1,deprecated:!1},filter:{kind:"parameter",type:"object",description:"Pluggable filter as a org.apache.camel.component.file.GenericFileFilter class. Will skip files if filter returns false in its accept() method.",title:"Filter",required:!1,deprecated:!1},filterDirectory:{kind:"parameter",type:"string",description:"Filters the directory based on Simple language. For example to filter on current date, you can use a simple date pattern such as ${date:now:yyyMMdd}",title:"Filter Directory",required:!1,deprecated:!1},filterFile:{kind:"parameter",type:"string",description:"Filters the file based on Simple language. For example to filter on file size, you can use ${file:size} 5000",title:"Filter File",required:!1,deprecated:!1},idempotent:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to use the Idempotent Consumer EIP pattern to let Camel skip already processed files. Will by default use a memory based LRUCache that holds 1000 entries. If noop=true then idempotent will be enabled as well to avoid consuming the same files over and over again.",title:"Idempotent",required:!1,deprecated:!1},idempotentKey:{kind:"parameter",type:"string",description:"To use a custom idempotent key. By default the absolute path of the file is used. You can use the File Language, for example to use the file name and file size, you can do: idempotentKey=${file:name}-${file:size}",title:"Idempotent Key",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which by default use MemoryIdempotentRepository if none is specified and idempotent is true.",title:"Idempotent Repository",required:!1,deprecated:!1},include:{kind:"parameter",type:"string",description:"Is used to include files, if filename matches the regex pattern (matching is case in-sensitive). Notice if you use symbols such as plus sign and others you would need to configure this using the RAW() syntax if configuring this as an endpoint uri. See more details at configuring endpoint uris",title:"Include",required:!1,deprecated:!1},includeExt:{kind:"parameter",type:"string",description:"Is used to include files matching file extension name (case insensitive). For example to include txt files, then use includeExt=txt. Multiple extensions can be separated by comma, for example to include txt and xml files, use includeExt=txt,xml. Note that the file extension includes all parts, for example having a file named mydata.tar.gz will have extension as tar.gz. For more flexibility then use the include/exclude options.",title:"Include Ext",required:!1,deprecated:!1},maxDepth:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"The maximum depth to traverse when recursively processing a directory.",title:"Max Depth",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"To define a maximum messages to gather per poll. By default no maximum is set. Can be used to set a limit of e.g. 1000 to avoid when starting up the server that there are thousands of files. Set a value of 0 or negative to disabled it. Notice: If this option is in use then the File and FTP components will limit before any sorting. For example if you have 100000 files and use maxMessagesPerPoll=500, then only the first 500 files will be picked up, and then sorted. You can use the eagerMaxMessagesPerPoll option and set this to false to allow to scan all files first and then sort afterwards.",title:"Max Messages Per Poll",required:!1,deprecated:!1},minDepth:{kind:"parameter",type:"integer",description:"The minimum depth to start processing when recursively processing a directory. Using minDepth=1 means the base directory. Using minDepth=2 means the first sub directory.",title:"Min Depth",required:!1,deprecated:!1},move:{kind:"parameter",type:"string",description:"Expression (such as Simple Language) used to dynamically set the filename when moving it after processing. To move files into a .done subdirectory just enter .done.",title:"Move",required:!1,deprecated:!1},exclusiveReadLockStrategy:{kind:"parameter",type:"object",description:"Pluggable read-lock as a org.apache.camel.component.file.GenericFileExclusiveReadLockStrategy implementation.",title:"Exclusive Read Lock Strategy",required:!1,deprecated:!1},readLock:{kind:"parameter",type:"string",defaultValue:"none",enum:["none","markerFile","fileLock","rename","changed","idempotent","idempotent-changed","idempotent-rename"],description:"Used by consumer, to only poll the files if it has exclusive read-lock on the file (i.e. the file is not in-progress or being written). Camel will wait until the file lock is granted. This option provides the build in strategies: - none - No read lock is in use - markerFile - Camel creates a marker file (fileName.camelLock) and then holds a lock on it. This option is not available for the FTP component - changed - Changed is using file length/modification timestamp to detect whether the file is currently being copied or not. Will at least use 1 sec to determine this, so this option cannot consume files as fast as the others, but can be more reliable as the JDK IO API cannot always determine whether a file is currently being used by another process. The option readLockCheckInterval can be used to set the check frequency. - fileLock - is for using java.nio.channels.FileLock. This option is not avail for Windows OS and the FTP component. This approach should be avoided when accessing a remote file system via a mount/share unless that file system supports distributed file locks. - rename - rename is for using a try to rename the file as a test if we can get exclusive read-lock. - idempotent - (only for file component) idempotent is for using a idempotentRepository as the read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-changed - (only for file component) idempotent-changed is for using a idempotentRepository and changed as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that. - idempotent-rename - (only for file component) idempotent-rename is for using a idempotentRepository and rename as the combined read-lock. This allows to use read locks that supports clustering if the idempotent repository implementation supports that.Notice: The various read locks is not all suited to work in clustered mode, where concurrent consumers on different nodes is competing for the same files on a shared file system. The markerFile using a close to atomic operation to create the empty marker file, but its not guaranteed to work in a cluster. The fileLock may work better but then the file system need to support distributed file locks, and so on. Using the idempotent read lock can support clustering if the idempotent repository supports clustering, such as Hazelcast Component or Infinispan.",title:"Read Lock",required:!1,deprecated:!1},readLockCheckInterval:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Interval in millis for the read-lock, if supported by the read lock. This interval is used for sleeping between attempts to acquire the read lock. For example when using the changed read lock, you can set a higher interval period to cater for slow writes. The default of 1 sec. may be too fast if the producer is very slow writing the file. Notice: For FTP the default readLockCheckInterval is 5000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Check Interval",required:!1,deprecated:!1},readLockDeleteOrphanLockFiles:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not read lock with marker files should upon startup delete any orphan read lock files, which may have been left on the file system, if Camel was not properly shutdown (such as a JVM crash). If turning this option to false then any orphaned lock file will cause Camel to not attempt to pickup that file, this could also be due another node is concurrently reading files from the same shared directory.",title:"Read Lock Delete Orphan Lock Files",required:!1,deprecated:!1},readLockIdempotentReleaseAsync:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the delayed release task should be synchronous or asynchronous. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Idempotent Release Async",required:!1,deprecated:!1},readLockIdempotentReleaseAsyncPoolSize:{kind:"parameter",type:"integer",description:"The number of threads in the scheduled thread pool when using asynchronous release tasks. Using a default of 1 core threads should be sufficient in almost all use-cases, only set this to a higher value if either updating the idempotent repository is slow, or there are a lot of files to process. This option is not in-use if you use a shared thread pool by configuring the readLockIdempotentReleaseExecutorService option. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Idempotent Release Async Pool Size",required:!1,deprecated:!1},readLockIdempotentReleaseDelay:{kind:"parameter",type:"integer",description:"Whether to delay the release task for a period of millis. This can be used to delay the release tasks to expand the window when a file is regarded as read-locked, in an active/active cluster scenario with a shared idempotent repository, to ensure other nodes cannot potentially scan and acquire the same file, due to race-conditions. By expanding the time-window of the release tasks helps prevents these situations. Note delaying is only needed if you have configured readLockRemoveOnCommit to true.",title:"Read Lock Idempotent Release Delay",required:!1,deprecated:!1},readLockIdempotentReleaseExecutorService:{kind:"parameter",type:"object",description:"To use a custom and shared thread pool for asynchronous release tasks. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Idempotent Release Executor Service",required:!1,deprecated:!1},readLockLoggingLevel:{kind:"parameter",type:"object",defaultValue:"DEBUG",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"Logging level used when a read lock could not be acquired. By default a DEBUG is logged. You can change this level, for example to OFF to not have any logging. This option is only applicable for readLock of types: changed, fileLock, idempotent, idempotent-changed, idempotent-rename, rename.",title:"Read Lock Logging Level",required:!1,deprecated:!1},readLockMarkerFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to use marker file with the changed, rename, or exclusive read lock types. By default a marker file is used as well to guard against other processes picking up the same files. This behavior can be turned off by setting this option to false. For example if you do not want to write marker files to the file systems by the Camel application.",title:"Read Lock Marker File",required:!1,deprecated:!1},readLockMinAge:{kind:"parameter",type:"integer",defaultValue:"0",description:"This option is applied only for readLock=changed. It allows to specify a minimum age the file must be before attempting to acquire the read lock. For example use readLockMinAge=300s to require the file is at last 5 minutes old. This can speedup the changed read lock as it will only attempt to acquire files which are at least that given age.",title:"Read Lock Min Age",required:!1,deprecated:!1},readLockMinLength:{kind:"parameter",type:"integer",defaultValue:"1",description:"This option is applied only for readLock=changed. It allows you to configure a minimum file length. By default Camel expects the file to contain data, and thus the default value is 1. You can set this option to zero, to allow consuming zero-length files.",title:"Read Lock Min Length",required:!1,deprecated:!1},readLockRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file is succeeded and a commit happens. By default the file is not removed which ensures that any race-condition do not occur so another active node may attempt to grab the file. Instead the idempotent repository may support eviction strategies that you can configure to evict the file name entry after X minutes - this ensures no problems with race conditions. See more details at the readLockIdempotentReleaseDelay option.",title:"Read Lock Remove On Commit",required:!1,deprecated:!1},readLockRemoveOnRollback:{kind:"parameter",type:"boolean",defaultValue:"true",description:"This option is applied only for readLock=idempotent. It allows to specify whether to remove the file name entry from the idempotent repository when processing the file failed and a rollback happens. If this option is false, then the file name entry is confirmed (as if the file did a commit).",title:"Read Lock Remove On Rollback",required:!1,deprecated:!1},readLockTimeout:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Optional timeout in millis for the read-lock, if supported by the read-lock. If the read-lock could not be granted and the timeout triggered, then Camel will skip the file. At next poll Camel, will try the file again, and this time maybe the read-lock could be granted. Use a value of 0 or lower to indicate forever. Currently fileLock, changed and rename support the timeout. Notice: For FTP the default readLockTimeout value is 20000 instead of 10000. The readLockTimeout value must be higher than readLockCheckInterval, but a rule of thumb is to have a timeout that is at least 2 or more times higher than the readLockCheckInterval. This is needed to ensure that amble time is allowed for the read lock process to try to grab the lock before the timeout was hit.",title:"Read Lock Timeout",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},ciphers:{kind:"parameter",type:"string",description:"Set a comma separated list of ciphers that will be used in order of preference. Possible cipher names are defined by JCraft JSCH. Some examples include: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc,aes192-cbc,aes256-cbc. If not specified the default list from JSCH will be used.",title:"Ciphers",required:!1,deprecated:!1},keyExchangeProtocols:{kind:"parameter",type:"string",description:"Set a comma separated list of key exchange protocols that will be used in order of preference. Possible cipher names are defined by JCraft JSCH. Some examples include: diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1,diffie-hellman-group14-sha1, diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521. If not specified the default list from JSCH will be used.",title:"Key Exchange Protocols",required:!1,deprecated:!1},keyPair:{kind:"parameter",type:"object",description:"Sets a key pair of the public and private key so to that the SFTP endpoint can do public/private key verification.",title:"Key Pair",required:!1,deprecated:!1},knownHosts:{kind:"parameter",type:"string",description:"Sets the known_hosts from the byte array, so that the SFTP endpoint can do host key verification.",title:"Known Hosts",required:!1,deprecated:!1},knownHostsFile:{kind:"parameter",type:"string",description:"Sets the known_hosts file, so that the SFTP endpoint can do host key verification.",title:"Known Hosts File",required:!1,deprecated:!1},knownHostsUri:{kind:"parameter",type:"string",description:"Sets the known_hosts file (loaded from classpath by default), so that the SFTP endpoint can do host key verification.",title:"Known Hosts Uri",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password to use for login",title:"Password",required:!1,deprecated:!1},preferredAuthentications:{kind:"parameter",type:"string",description:"Set the preferred authentications which SFTP endpoint will used. Some example include:password,publickey. If not specified the default list from JSCH will be used.",title:"Preferred Authentications",required:!1,deprecated:!1},privateKey:{kind:"parameter",type:"string",description:"Set the private key as byte so that the SFTP endpoint can do private key verification.",title:"Private Key",required:!1,deprecated:!1},privateKeyFile:{kind:"parameter",type:"string",description:"Set the private key file so that the SFTP endpoint can do private key verification.",title:"Private Key File",required:!1,deprecated:!1},privateKeyPassphrase:{kind:"parameter",type:"string",description:"Set the private key file passphrase so that the SFTP endpoint can do private key verification.",title:"Private Key Passphrase",required:!1,deprecated:!1},privateKeyUri:{kind:"parameter",type:"string",description:"Set the private key file (loaded from classpath by default) so that the SFTP endpoint can do private key verification.",title:"Private Key Uri",required:!1,deprecated:!1},publicKeyAcceptedAlgorithms:{kind:"parameter",type:"string",description:"Set a comma separated list of public key accepted algorithms. Some examples include: ssh-dss,ssh-rsa,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521. If not specified the default list from JSCH will be used.",title:"Public Key Accepted Algorithms",required:!1,deprecated:!1},serverHostKeys:{kind:"parameter",type:"string",description:"Set a comma separated list of algorithms supported for the server host key. Some examples include: ssh-dss,ssh-rsa,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521. If not specified the default list from JSCH will be used.",title:"Server Host Keys",required:!1,deprecated:!1},strictHostKeyChecking:{kind:"parameter",type:"string",defaultValue:"no",enum:["no","yes"],description:"Sets whether to use strict host key checking.",title:"Strict Host Key Checking",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username to use for login",title:"Username",required:!1,deprecated:!1},useUserKnownHostsFile:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If knownHostFile has not been explicit configured then use the host file from System.getProperty(user.home)/.ssh/known_hosts",title:"Use User Known Hosts File",required:!1,deprecated:!1},shuffle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To shuffle the list of files (sort in random order)",title:"Shuffle",required:!1,deprecated:!1},sortBy:{kind:"parameter",type:"string",description:"Built-in sort by using the File Language. Supports nested sorts, so you can have a sort by file name and as a 2nd group sort by modified date.",title:"Sort By",required:!1,deprecated:!1},sorter:{kind:"parameter",type:"object",description:"Pluggable sorter as a java.util.Comparator class.",title:"Sorter",required:!1,deprecated:!1}}},sjms:{type:"object",title:"Simple JMS",group:"messaging",icon:"generic24.png",description:"Send and receive messages to/from a JMS Queue or Topic using plain JMS 1.x API.",properties:{destinationType:{kind:"path",type:"string",defaultValue:"queue",enum:["queue","topic"],description:"The kind of destination to use",title:"Destination Type",required:!1,deprecated:!1},destinationName:{kind:"path",type:"string",description:"DestinationName is a JMS queue or topic name. By default, the destinationName is interpreted as a queue name.",title:"Destination Name",required:!0,deprecated:!1},acknowledgementMode:{kind:"parameter",type:"object",defaultValue:"AUTO_ACKNOWLEDGE",enum:["SESSION_TRANSACTED","CLIENT_ACKNOWLEDGE","AUTO_ACKNOWLEDGE","DUPS_OK_ACKNOWLEDGE"],description:"The JMS acknowledgement name, which is one of: SESSION_TRANSACTED, CLIENT_ACKNOWLEDGE, AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE",title:"Acknowledgement Mode",required:!1,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"The connection factory to be use. A connection factory must be configured either on the component or endpoint.",title:"Connection Factory",required:!1,deprecated:!1},disableReplyTo:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether Camel ignores the JMSReplyTo header in messages. If true, Camel does not send a reply back to the destination specified in the JMSReplyTo header. You can use this option if you want Camel to consume from a route and you do not want Camel to automatically send back a reply message because another component in your code handles the reply message. You can also use this option if you want to use Camel as a proxy between different message brokers and you want to route message from one system to another.",title:"Disable Reply To",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination (overrides any incoming value of Message.getJMSReplyTo() in consumer).",title:"Reply To",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to test the connection on startup. This ensures that when Camel starts that all the JMS consumers have a valid connection to the JMS broker. If a connection cannot be granted then Camel throws an exception on startup. This ensures that Camel is not started with failed connections. The JMS producers is tested as well.",title:"Test Connection On Startup",required:!1,deprecated:!1},asyncConsumer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the JmsConsumer processes the Exchange asynchronously. If enabled then the JmsConsumer may pickup the next message from the JMS queue, while the previous message is being processed asynchronously (by the Asynchronous Routing Engine). This means that messages may be processed not 100% strictly in order. If disabled (as default) then the Exchange is fully processed before the JmsConsumer will pickup the next message from the JMS queue. Note if transacted has been enabled, then asyncConsumer=true does not run asynchronously, as transaction must be executed synchronously (Camel 3.0 may support async transactions).",title:"Async Consumer",required:!1,deprecated:!1},autoStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether the consumer container should auto-startup.",title:"Auto Startup",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Sets the JMS client ID to use. Note that this value, if specified, must be unique and can only be used by a single JMS connection instance. It is typically only required for durable topic subscriptions. If using Apache ActiveMQ you may prefer to use Virtual Topics instead.",title:"Client Id",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Concurrent Consumers",required:!1,deprecated:!1},durableSubscriptionName:{kind:"parameter",type:"string",description:"The durable subscriber name for specifying durable topic subscriptions. The clientId option must be configured as well.",title:"Durable Subscription Name",required:!1,deprecated:!1},replyToDeliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether to use persistent delivery by default for replies.",title:"Reply To Delivery Persistent",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},eagerLoadingOfProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables eager loading of JMS properties and payload as soon as a message is loaded which generally is inefficient as the JMS properties may not be required but sometimes can catch early any issues with the underlying JMS provider and the use of JMS properties. See also the option eagerPoisonBody.",title:"Eager Loading Of Properties",required:!1,deprecated:!1},eagerPoisonBody:{kind:"parameter",type:"string",defaultValue:"Poison JMS message due to ${exception.message}",description:"If eagerLoadingOfProperties is enabled and the JMS message payload (JMS body or JMS properties) is poison (cannot be read/mapped), then set this text as the message body instead so the message can be processed (the cause of the poison are already stored as exception on the Exchange). This can be turned off by setting eagerPoisonBody=false. See also the option eagerLoadingOfProperties.",title:"Eager Poison Body",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},messageSelector:{kind:"parameter",type:"string",description:"Sets the JMS Message selector syntax.",title:"Message Selector",required:!1,deprecated:!1},replyToSameDestinationAllowed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a JMS consumer is allowed to send a reply message to the same destination that the consumer is using to consume from. This prevents an endless loop by consuming and sending back the same message to itself.",title:"Reply To Same Destination Allowed",required:!1,deprecated:!1},deliveryMode:{kind:"parameter",type:"integer",enum:["1","2"],description:"Specifies the delivery mode to be used. Possible values are those defined by jakarta.jms.DeliveryMode. NON_PERSISTENT = 1 and PERSISTENT = 2.",title:"Delivery Mode",required:!1,deprecated:!1},deliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether persistent delivery is used by default.",title:"Delivery Persistent",required:!1,deprecated:!1},priority:{kind:"parameter",type:"integer",defaultValue:"4",enum:["1","2","3","4","5","6","7","8","9"],description:"Values greater than 1 specify the message priority when sending (where 1 is the lowest priority and 9 is the highest). The explicitQosEnabled option must also be enabled in order for this option to have any effect.",title:"Priority",required:!1,deprecated:!1},replyToConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when doing request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Concurrent Consumers",required:!1,deprecated:!1},replyToOverride:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination in the JMS message, which overrides the setting of replyTo. It is useful if you want to forward the message to a remote Queue and receive the reply message from the ReplyTo destination.",title:"Reply To Override",required:!1,deprecated:!1},replyToType:{kind:"parameter",type:"object",enum:["Temporary","Exclusive"],description:"Allows for explicitly specifying which kind of strategy to use for replyTo queues when doing request/reply over JMS. Possible values are: Temporary or Exclusive. By default Camel will use temporary queues. However if replyTo has been configured, then Exclusive is used.",title:"Reply To Type",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"duration",defaultValue:"20000",description:"The timeout for waiting for a reply when using the InOut Exchange Pattern (in milliseconds). The default is 20 seconds. You can include the header CamelJmsRequestTimeout to override this endpoint configured timeout value, and thus have per message individual timeout values. See also the requestTimeoutCheckerInterval option.",title:"Request Timeout",required:!1,deprecated:!1},timeToLive:{kind:"parameter",type:"integer",defaultValue:"-1",description:"When sending messages, specifies the time-to-live of the message (in milliseconds).",title:"Time To Live",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow sending messages with no body. If this option is false and the message body is null, then an JMSException is thrown.",title:"Allow Null Body",required:!1,deprecated:!1},disableTimeToLive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use this option to force disabling time to live. For example when you do request/reply over JMS, then Camel will by default use the requestTimeout value as time to live on the message being sent. The problem is that the sender and receiver systems have to have their clocks synchronized, so they are in sync. This is not always so easy to archive. So you can use disableTimeToLive=true to not set a time to live value on the sent message. Then the message will not expire on the receiver system. See below in section About time to live for more details.",title:"Disable Time To Live",required:!1,deprecated:!1},explicitQosEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set if the deliveryMode, priority or timeToLive qualities of service should be used when sending messages. This option is based on Spring's JmsTemplate. The deliveryMode, priority and timeToLive options are applied to the current endpoint. This contrasts with the preserveMessageQos option, which operates at message granularity, reading QoS properties exclusively from the Camel In message headers.",title:"Explicit Qos Enabled",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},preserveMessageQos:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set to true, if you want to send message using the QoS settings specified on the message, instead of the QoS settings on the JMS endpoint. The following three headers are considered JMSPriority, JMSDeliveryMode, and JMSExpiration. You can provide all or only some of them. If not provided, Camel will fall back to use the values from the endpoint instead. So, when using this option, the headers override the values from the endpoint. The explicitQosEnabled option, by contrast, will only use options set on the endpoint, and not values from the message header.",title:"Preserve Message Qos",required:!1,deprecated:!1},asyncStartListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to startup the consumer message listener asynchronously, when starting a route. For example if a JmsConsumer cannot get a connection to a remote JMS broker, then it may block while retrying and/or failover. This will cause Camel to block while starting routes. By setting this option to true, you will let routes startup, while the JmsConsumer connects to the JMS broker using a dedicated thread in asynchronous mode. If this option is used, then beware that if the connection could not be established, then an exception is logged at WARN level, and the consumer will not be able to receive messages; You can then restart the route to retry.",title:"Async Start Listener",required:!1,deprecated:!1},asyncStopListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to stop the consumer message listener asynchronously, when stopping a route.",title:"Async Stop Listener",required:!1,deprecated:!1},destinationCreationStrategy:{kind:"parameter",type:"object",description:"To use a custom DestinationCreationStrategy.",title:"Destination Creation Strategy",required:!1,deprecated:!1},exceptionListener:{kind:"parameter",type:"object",description:"Specifies the JMS Exception Listener that is to be notified of any underlying JMS exceptions.",title:"Exception Listener",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},includeAllJMSXProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to include all JMSXxxx properties when mapping from JMS to Camel Message. Setting this to true will include properties such as JMSXAppID, and JMSXUserID etc. Note: If you are using a custom headerFilterStrategy then this option does not apply.",title:"Include All JMSXProperties",required:!1,deprecated:!1},jmsKeyFormatStrategy:{kind:"parameter",type:"object",description:"Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification. Camel provides two implementations out of the box: default and passthrough. The default strategy will safely marshal dots and hyphens (. and -). The passthrough strategy leaves the key as is. Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters. You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy and refer to it using the # notation.",title:"Jms Key Format Strategy",required:!1,deprecated:!1},mapJmsMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should auto map the received JMS message to a suited payload type, such as jakarta.jms.TextMessage to a String etc. See section about how mapping works below for more details.",title:"Map Jms Message",required:!1,deprecated:!1},messageCreatedStrategy:{kind:"parameter",type:"object",description:"To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of jakarta.jms.Message objects when Camel is sending a JMS message.",title:"Message Created Strategy",required:!1,deprecated:!1},recoveryInterval:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Specifies the interval between recovery attempts, i.e. when a connection is being refreshed, in milliseconds. The default is 5000 ms, that is, 5 seconds.",title:"Recovery Interval",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and you are using Request Reply messaging (InOut) and an Exchange failed on the consumer side, then the caused Exception will be send back in response as a jakarta.jms.ObjectMessage. If the client is Camel, the returned Exception is rethrown. This allows you to use Camel JMS as a bridge in your routing - for example, using persistent queues to enable robust routing. Notice that if you also have transferExchange enabled, this option takes precedence. The caught exception is required to be serializable. The original Exception on the consumer side can be wrapped in an outer exception such as org.apache.camel.RuntimeCamelException when returned to the producer. Use this with caution as the data is using Java Object serialization and requires the received to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumer!",title:"Transfer Exception",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to use transacted mode",title:"Transacted",required:!1,deprecated:!1}}},sjms2:{type:"object",title:"Simple JMS2",group:"messaging",icon:"generic24.png",description:"Send and receive messages to/from a JMS Queue or Topic using plain JMS 2.x API.",properties:{destinationType:{kind:"path",type:"string",defaultValue:"queue",enum:["queue","topic"],description:"The kind of destination to use",title:"Destination Type",required:!1,deprecated:!1},destinationName:{kind:"path",type:"string",description:"DestinationName is a JMS queue or topic name. By default, the destinationName is interpreted as a queue name.",title:"Destination Name",required:!0,deprecated:!1},acknowledgementMode:{kind:"parameter",type:"object",defaultValue:"AUTO_ACKNOWLEDGE",enum:["SESSION_TRANSACTED","CLIENT_ACKNOWLEDGE","AUTO_ACKNOWLEDGE","DUPS_OK_ACKNOWLEDGE"],description:"The JMS acknowledgement name, which is one of: SESSION_TRANSACTED, CLIENT_ACKNOWLEDGE, AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE",title:"Acknowledgement Mode",required:!1,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"The connection factory to be use. A connection factory must be configured either on the component or endpoint.",title:"Connection Factory",required:!1,deprecated:!1},disableReplyTo:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether Camel ignores the JMSReplyTo header in messages. If true, Camel does not send a reply back to the destination specified in the JMSReplyTo header. You can use this option if you want Camel to consume from a route and you do not want Camel to automatically send back a reply message because another component in your code handles the reply message. You can also use this option if you want to use Camel as a proxy between different message brokers and you want to route message from one system to another.",title:"Disable Reply To",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination (overrides any incoming value of Message.getJMSReplyTo() in consumer).",title:"Reply To",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to test the connection on startup. This ensures that when Camel starts that all the JMS consumers have a valid connection to the JMS broker. If a connection cannot be granted then Camel throws an exception on startup. This ensures that Camel is not started with failed connections. The JMS producers is tested as well.",title:"Test Connection On Startup",required:!1,deprecated:!1},asyncConsumer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the JmsConsumer processes the Exchange asynchronously. If enabled then the JmsConsumer may pickup the next message from the JMS queue, while the previous message is being processed asynchronously (by the Asynchronous Routing Engine). This means that messages may be processed not 100% strictly in order. If disabled (as default) then the Exchange is fully processed before the JmsConsumer will pickup the next message from the JMS queue. Note if transacted has been enabled, then asyncConsumer=true does not run asynchronously, as transaction must be executed synchronously (Camel 3.0 may support async transactions).",title:"Async Consumer",required:!1,deprecated:!1},autoStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether the consumer container should auto-startup.",title:"Auto Startup",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Sets the JMS client ID to use. Note that this value, if specified, must be unique and can only be used by a single JMS connection instance. It is typically only required for durable topic subscriptions. If using Apache ActiveMQ you may prefer to use Virtual Topics instead.",title:"Client Id",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when consuming from JMS (not for request/reply over JMS). See also the maxMessagesPerTask option to control dynamic scaling up/down of threads. When doing request/reply over JMS then the option replyToConcurrentConsumers is used to control number of concurrent consumers on the reply message listener.",title:"Concurrent Consumers",required:!1,deprecated:!1},durable:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the topic to be durable",title:"Durable",required:!1,deprecated:!1},durableSubscriptionName:{kind:"parameter",type:"string",description:"The durable subscriber name for specifying durable topic subscriptions. The clientId option must be configured as well.",title:"Durable Subscription Name",required:!1,deprecated:!1},replyToDeliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether to use persistent delivery by default for replies.",title:"Reply To Delivery Persistent",required:!1,deprecated:!1},shared:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the topic to be shared",title:"Shared",required:!1,deprecated:!1},subscriptionId:{kind:"parameter",type:"string",description:"Sets the topic subscription id, required for durable or shared topics.",title:"Subscription Id",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},eagerLoadingOfProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables eager loading of JMS properties and payload as soon as a message is loaded which generally is inefficient as the JMS properties may not be required but sometimes can catch early any issues with the underlying JMS provider and the use of JMS properties. See also the option eagerPoisonBody.",title:"Eager Loading Of Properties",required:!1,deprecated:!1},eagerPoisonBody:{kind:"parameter",type:"string",defaultValue:"Poison JMS message due to ${exception.message}",description:"If eagerLoadingOfProperties is enabled and the JMS message payload (JMS body or JMS properties) is poison (cannot be read/mapped), then set this text as the message body instead so the message can be processed (the cause of the poison are already stored as exception on the Exchange). This can be turned off by setting eagerPoisonBody=false. See also the option eagerLoadingOfProperties.",title:"Eager Poison Body",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},messageSelector:{kind:"parameter",type:"string",description:"Sets the JMS Message selector syntax.",title:"Message Selector",required:!1,deprecated:!1},replyToSameDestinationAllowed:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a JMS consumer is allowed to send a reply message to the same destination that the consumer is using to consume from. This prevents an endless loop by consuming and sending back the same message to itself.",title:"Reply To Same Destination Allowed",required:!1,deprecated:!1},deliveryMode:{kind:"parameter",type:"integer",enum:["1","2"],description:"Specifies the delivery mode to be used. Possible values are those defined by jakarta.jms.DeliveryMode. NON_PERSISTENT = 1 and PERSISTENT = 2.",title:"Delivery Mode",required:!1,deprecated:!1},deliveryPersistent:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether persistent delivery is used by default.",title:"Delivery Persistent",required:!1,deprecated:!1},priority:{kind:"parameter",type:"integer",defaultValue:"4",enum:["1","2","3","4","5","6","7","8","9"],description:"Values greater than 1 specify the message priority when sending (where 1 is the lowest priority and 9 is the highest). The explicitQosEnabled option must also be enabled in order for this option to have any effect.",title:"Priority",required:!1,deprecated:!1},replyToConcurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Specifies the default number of concurrent consumers when doing request/reply over JMS. See also the maxMessagesPerTask option to control dynamic scaling up/down of threads.",title:"Reply To Concurrent Consumers",required:!1,deprecated:!1},replyToOverride:{kind:"parameter",type:"string",description:"Provides an explicit ReplyTo destination in the JMS message, which overrides the setting of replyTo. It is useful if you want to forward the message to a remote Queue and receive the reply message from the ReplyTo destination.",title:"Reply To Override",required:!1,deprecated:!1},replyToType:{kind:"parameter",type:"object",enum:["Temporary","Exclusive"],description:"Allows for explicitly specifying which kind of strategy to use for replyTo queues when doing request/reply over JMS. Possible values are: Temporary or Exclusive. By default Camel will use temporary queues. However if replyTo has been configured, then Exclusive is used.",title:"Reply To Type",required:!1,deprecated:!1},requestTimeout:{kind:"parameter",type:"duration",defaultValue:"20000",description:"The timeout for waiting for a reply when using the InOut Exchange Pattern (in milliseconds). The default is 20 seconds. You can include the header CamelJmsRequestTimeout to override this endpoint configured timeout value, and thus have per message individual timeout values. See also the requestTimeoutCheckerInterval option.",title:"Request Timeout",required:!1,deprecated:!1},timeToLive:{kind:"parameter",type:"integer",defaultValue:"-1",description:"When sending messages, specifies the time-to-live of the message (in milliseconds).",title:"Time To Live",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow sending messages with no body. If this option is false and the message body is null, then an JMSException is thrown.",title:"Allow Null Body",required:!1,deprecated:!1},disableTimeToLive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use this option to force disabling time to live. For example when you do request/reply over JMS, then Camel will by default use the requestTimeout value as time to live on the message being sent. The problem is that the sender and receiver systems have to have their clocks synchronized, so they are in sync. This is not always so easy to archive. So you can use disableTimeToLive=true to not set a time to live value on the sent message. Then the message will not expire on the receiver system. See below in section About time to live for more details.",title:"Disable Time To Live",required:!1,deprecated:!1},explicitQosEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set if the deliveryMode, priority or timeToLive qualities of service should be used when sending messages. This option is based on Spring's JmsTemplate. The deliveryMode, priority and timeToLive options are applied to the current endpoint. This contrasts with the preserveMessageQos option, which operates at message granularity, reading QoS properties exclusively from the Camel In message headers.",title:"Explicit Qos Enabled",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},preserveMessageQos:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set to true, if you want to send message using the QoS settings specified on the message, instead of the QoS settings on the JMS endpoint. The following three headers are considered JMSPriority, JMSDeliveryMode, and JMSExpiration. You can provide all or only some of them. If not provided, Camel will fall back to use the values from the endpoint instead. So, when using this option, the headers override the values from the endpoint. The explicitQosEnabled option, by contrast, will only use options set on the endpoint, and not values from the message header.",title:"Preserve Message Qos",required:!1,deprecated:!1},asyncStartListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to startup the consumer message listener asynchronously, when starting a route. For example if a JmsConsumer cannot get a connection to a remote JMS broker, then it may block while retrying and/or failover. This will cause Camel to block while starting routes. By setting this option to true, you will let routes startup, while the JmsConsumer connects to the JMS broker using a dedicated thread in asynchronous mode. If this option is used, then beware that if the connection could not be established, then an exception is logged at WARN level, and the consumer will not be able to receive messages; You can then restart the route to retry.",title:"Async Start Listener",required:!1,deprecated:!1},asyncStopListener:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to stop the consumer message listener asynchronously, when stopping a route.",title:"Async Stop Listener",required:!1,deprecated:!1},destinationCreationStrategy:{kind:"parameter",type:"object",description:"To use a custom DestinationCreationStrategy.",title:"Destination Creation Strategy",required:!1,deprecated:!1},exceptionListener:{kind:"parameter",type:"object",description:"Specifies the JMS Exception Listener that is to be notified of any underlying JMS exceptions.",title:"Exception Listener",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},includeAllJMSXProperties:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to include all JMSXxxx properties when mapping from JMS to Camel Message. Setting this to true will include properties such as JMSXAppID, and JMSXUserID etc. Note: If you are using a custom headerFilterStrategy then this option does not apply.",title:"Include All JMSXProperties",required:!1,deprecated:!1},jmsKeyFormatStrategy:{kind:"parameter",type:"object",description:"Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification. Camel provides two implementations out of the box: default and passthrough. The default strategy will safely marshal dots and hyphens (. and -). The passthrough strategy leaves the key as is. Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters. You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy and refer to it using the # notation.",title:"Jms Key Format Strategy",required:!1,deprecated:!1},mapJmsMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should auto map the received JMS message to a suited payload type, such as jakarta.jms.TextMessage to a String etc. See section about how mapping works below for more details.",title:"Map Jms Message",required:!1,deprecated:!1},messageCreatedStrategy:{kind:"parameter",type:"object",description:"To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of jakarta.jms.Message objects when Camel is sending a JMS message.",title:"Message Created Strategy",required:!1,deprecated:!1},recoveryInterval:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Specifies the interval between recovery attempts, i.e. when a connection is being refreshed, in milliseconds. The default is 5000 ms, that is, 5 seconds.",title:"Recovery Interval",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and you are using Request Reply messaging (InOut) and an Exchange failed on the consumer side, then the caused Exception will be send back in response as a jakarta.jms.ObjectMessage. If the client is Camel, the returned Exception is rethrown. This allows you to use Camel JMS as a bridge in your routing - for example, using persistent queues to enable robust routing. Notice that if you also have transferExchange enabled, this option takes precedence. The caught exception is required to be serializable. The original Exception on the consumer side can be wrapped in an outer exception such as org.apache.camel.RuntimeCamelException when returned to the producer. Use this with caution as the data is using Java Object serialization and requires the received to be able to deserialize the data at Class level, which forces a strong coupling between the producers and consumer!",title:"Transfer Exception",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to use transacted mode",title:"Transacted",required:!1,deprecated:!1}}},slack:{type:"object",title:"Slack",group:"social",icon:"generic24.png",description:"Send and receive messages to/from Slack.",properties:{channel:{kind:"path",type:"string",description:"The channel name (syntax #name) or slack user (syntax userName) to send a message directly to an user.",title:"Channel",required:!0,deprecated:!1},token:{kind:"parameter",type:"string",description:"The token to access Slack. This app needs to have channels:history, groups:history, im:history, mpim:history, channels:read, groups:read, im:read and mpim:read permissions. The User OAuth Token is the kind of token needed.",title:"Token",required:!1,deprecated:!1},conversationType:{kind:"parameter",type:"object",defaultValue:"PUBLIC_CHANNEL",enum:["PUBLIC_CHANNEL","PRIVATE_CHANNEL","MPIM","IM"],description:"Type of conversation",title:"Conversation Type",required:!1,deprecated:!1},maxResults:{kind:"parameter",type:"string",defaultValue:"10",description:"The Max Result for the poll",title:"Max Results",required:!1,deprecated:!1},naturalOrder:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Create exchanges in natural order (oldest to newest) or not",title:"Natural Order",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},serverUrl:{kind:"parameter",type:"string",defaultValue:"https://slack.com",description:"The Server URL of the Slack instance",title:"Server Url",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},iconEmoji:{kind:"parameter",type:"string",description:"Use a Slack emoji as an avatar",title:"Icon Emoji",required:!1,deprecated:!0},iconUrl:{kind:"parameter",type:"string",description:"The avatar that the component will use when sending message to a channel or user.",title:"Icon Url",required:!1,deprecated:!0},username:{kind:"parameter",type:"string",description:"This is the username that the bot will have when sending messages to a channel or user.",title:"Username",required:!1,deprecated:!0},webhookUrl:{kind:"parameter",type:"string",description:"The incoming webhook URL",title:"Webhook Url",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"10000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},smpp:{type:"object",title:"SMPP",group:"mobile",icon:"generic24.png",description:"Send and receive SMS messages using a SMSC (Short Message Service Center).",properties:{host:{kind:"path",type:"string",defaultValue:"localhost",description:"Hostname for the SMSC server to use.",title:"Host",required:!1,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"2775",description:"Port number for the SMSC server to use.",title:"Port",required:!1,deprecated:!1},initialReconnectDelay:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Defines the initial delay in milliseconds after the consumer/producer tries to reconnect to the SMSC, after the connection was lost.",title:"Initial Reconnect Delay",required:!1,deprecated:!1},maxReconnect:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"Defines the maximum number of attempts to reconnect to the SMSC, if SMSC returns a negative bind response",title:"Max Reconnect",required:!1,deprecated:!1},reconnectDelay:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Defines the interval in milliseconds between the reconnect attempts, if the connection to the SMSC was lost and the previous was not succeed.",title:"Reconnect Delay",required:!1,deprecated:!1},splittingPolicy:{kind:"parameter",type:"object",defaultValue:"ALLOW",enum:["ALLOW","REJECT","TRUNCATE"],description:"You can specify a policy for handling long messages: ALLOW - the default, long messages are split to 140 bytes per message TRUNCATE - long messages are split and only the first fragment will be sent to the SMSC. Some carriers drop subsequent fragments so this reduces load on the SMPP connection sending parts of a message that will never be delivered. REJECT - if a message would need to be split, it is rejected with an SMPP NegativeResponseException and the reason code signifying the message is too long.",title:"Splitting Policy",required:!1,deprecated:!1},systemType:{kind:"parameter",type:"string",description:"This parameter is used to categorize the type of ESME (External Short Message Entity) that is binding to the SMSC (max. 13 characters).",title:"System Type",required:!1,deprecated:!1},addressRange:{kind:"parameter",type:"string",description:"You can specify the address range for the SmppConsumer as defined in section 5.2.7 of the SMPP 3.4 specification. The SmppConsumer will receive messages only from SMSC's which target an address (MSISDN or IP address) within this range.",title:"Address Range",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},destAddr:{kind:"parameter",type:"string",defaultValue:"1717",description:"Defines the destination SME address. For mobile terminated messages, this is the directory number of the recipient MS. Only for SubmitSm, SubmitMulti, CancelSm and DataSm.",title:"Dest Addr",required:!1,deprecated:!1},destAddrNpi:{kind:"parameter",type:"integer",enum:["0","1","2","3","6","8","9","10","13","18"],description:"Defines the type of number (TON) to be used in the SME destination address parameters. Only for SubmitSm, SubmitMulti, CancelSm and DataSm. The following NPI values are defined: 0: Unknown 1: ISDN (E163/E164) 2: Data (X.121) 3: Telex (F.69) 6: Land Mobile (E.212) 8: National 9: Private 10: ERMES 13: Internet (IP) 18: WAP Client Id (to be defined by WAP Forum)",title:"Dest Addr Npi",required:!1,deprecated:!1},destAddrTon:{kind:"parameter",type:"integer",enum:["0","1","2","3","4","5","6"],description:"Defines the type of number (TON) to be used in the SME destination address parameters. Only for SubmitSm, SubmitMulti, CancelSm and DataSm. The following TON values are defined: 0: Unknown 1: International 2: National 3: Network Specific 4: Subscriber Number 5: Alphanumeric 6: Abbreviated",title:"Dest Addr Ton",required:!1,deprecated:!1},lazySessionCreation:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sessions can be lazily created to avoid exceptions, if the SMSC is not available when the Camel producer is started. Camel will check the in message headers 'CamelSmppSystemId' and 'CamelSmppPassword' of the first exchange. If they are present, Camel will use these data to connect to the SMSC.",title:"Lazy Session Creation",required:!1,deprecated:!1},messageReceiverRouteId:{kind:"parameter",type:"string",description:"Set this on producer in order to benefit from transceiver (TRX) binding type. So once set, you don't need to define an 'SMTPP consumer' endpoint anymore. You would set this to a 'Direct consumer' endpoint instead. DISCALIMER: This feature is only tested with 'Direct consumer' endpoint. The behavior with any other consumer type is unknown and not tested.",title:"Message Receiver Route Id",required:!1,deprecated:!1},numberingPlanIndicator:{kind:"parameter",type:"integer",enum:["0","1","2","3","6","8","9","10","13","18"],description:"Defines the numeric plan indicator (NPI) to be used in the SME. The following NPI values are defined: 0: Unknown 1: ISDN (E163/E164) 2: Data (X.121) 3: Telex (F.69) 6: Land Mobile (E.212) 8: National 9: Private 10: ERMES 13: Internet (IP) 18: WAP Client Id (to be defined by WAP Forum)",title:"Numbering Plan Indicator",required:!1,deprecated:!1},priorityFlag:{kind:"parameter",type:"integer",enum:["0","1","2","3"],description:"Allows the originating SME to assign a priority level to the short message. Only for SubmitSm and SubmitMulti. Four Priority Levels are supported: 0: Level 0 (lowest) priority 1: Level 1 priority 2: Level 2 priority 3: Level 3 (highest) priority",title:"Priority Flag",required:!1,deprecated:!1},protocolId:{kind:"parameter",type:"integer",description:"The protocol id",title:"Protocol Id",required:!1,deprecated:!1},registeredDelivery:{kind:"parameter",type:"integer",enum:["0","1","2"],description:"Is used to request an SMSC delivery receipt and/or SME originated acknowledgements. The following values are defined: 0: No SMSC delivery receipt requested. 1: SMSC delivery receipt requested where final delivery outcome is success or failure. 2: SMSC delivery receipt requested where the final delivery outcome is delivery failure.",title:"Registered Delivery",required:!1,deprecated:!1},replaceIfPresentFlag:{kind:"parameter",type:"integer",enum:["0","1"],description:"Used to request the SMSC to replace a previously submitted message, that is still pending delivery. The SMSC will replace an existing message provided that the source address, destination address and service type match the same fields in the new message. The following replace if present flag values are defined: 0: Don't replace 1: Replace",title:"Replace If Present Flag",required:!1,deprecated:!1},serviceType:{kind:"parameter",type:"string",enum:["CMT","CPT","VMN","VMA","WAP","USSD"],description:"The service type parameter can be used to indicate the SMS Application service associated with the message. The following generic service_types are defined: CMT: Cellular Messaging CPT: Cellular Paging VMN: Voice Mail Notification VMA: Voice Mail Alerting WAP: Wireless Application Protocol USSD: Unstructured Supplementary Services Data",title:"Service Type",required:!1,deprecated:!1},sourceAddr:{kind:"parameter",type:"string",defaultValue:"1616",description:"Defines the address of SME (Short Message Entity) which originated this message.",title:"Source Addr",required:!1,deprecated:!1},sourceAddrNpi:{kind:"parameter",type:"integer",enum:["0","1","2","3","6","8","9","10","13","18"],description:"Defines the numeric plan indicator (NPI) to be used in the SME originator address parameters. The following NPI values are defined: 0: Unknown 1: ISDN (E163/E164) 2: Data (X.121) 3: Telex (F.69) 6: Land Mobile (E.212) 8: National 9: Private 10: ERMES 13: Internet (IP) 18: WAP Client Id (to be defined by WAP Forum)",title:"Source Addr Npi",required:!1,deprecated:!1},sourceAddrTon:{kind:"parameter",type:"integer",enum:["0","1","2","3","4","5","6"],description:"Defines the type of number (TON) to be used in the SME originator address parameters. The following TON values are defined: 0: Unknown 1: International 2: National 3: Network Specific 4: Subscriber Number 5: Alphanumeric 6: Abbreviated",title:"Source Addr Ton",required:!1,deprecated:!1},typeOfNumber:{kind:"parameter",type:"integer",enum:["0","1","2","3","4","5","6"],description:"Defines the type of number (TON) to be used in the SME. The following TON values are defined: 0: Unknown 1: International 2: National 3: Network Specific 4: Subscriber Number 5: Alphanumeric 6: Abbreviated",title:"Type Of Number",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},enquireLinkTimer:{kind:"parameter",type:"integer",defaultValue:"60000",description:"Defines the interval in milliseconds between the confidence checks. The confidence check is used to test the communication path between an ESME and an SMSC.",title:"Enquire Link Timer",required:!1,deprecated:!1},pduProcessorDegree:{kind:"parameter",type:"integer",defaultValue:"3",description:"Sets the number of threads which can read PDU and process them in parallel.",title:"Pdu Processor Degree",required:!1,deprecated:!1},pduProcessorQueueCapacity:{kind:"parameter",type:"integer",defaultValue:"100",description:"Sets the capacity of the working queue for PDU processing.",title:"Pdu Processor Queue Capacity",required:!1,deprecated:!1},sessionStateListener:{kind:"parameter",type:"object",description:"You can refer to a org.jsmpp.session.SessionStateListener in the Registry to receive callbacks when the session state changed.",title:"Session State Listener",required:!1,deprecated:!1},singleDLR:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When true, the SMSC delivery receipt would be requested only for the last segment of a multi-segment (long) message. For short messages, with only 1 segment the behaviour is unchanged.",title:"Single DLR",required:!1,deprecated:!1},transactionTimer:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Defines the maximum period of inactivity allowed after a transaction, after which an SMPP entity may assume that the session is no longer active. This timer may be active on either communicating SMPP entity (i.e. SMSC or ESME).",title:"Transaction Timer",required:!1,deprecated:!1},alphabet:{kind:"parameter",type:"integer",enum:["0","4","8"],description:"Defines encoding of data according the SMPP 3.4 specification, section 5.2.19. 0: SMSC Default Alphabet 4: 8 bit Alphabet 8: UCS2 Alphabet",title:"Alphabet",required:!1,deprecated:!1},dataCoding:{kind:"parameter",type:"integer",description:"Defines the data coding according the SMPP 3.4 specification, section 5.2.19. Example data encodings are: 0: SMSC Default Alphabet 3: Latin 1 (ISO-8859-1) 4: Octet unspecified (8-bit binary) 8: UCS2 (ISO/IEC-10646) 13: Extended Kanji JIS(X 0212-1990)",title:"Data Coding",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",defaultValue:"ISO-8859-1",description:"Defines the encoding scheme of the short message user data. Only for SubmitSm, ReplaceSm and SubmitMulti.",title:"Encoding",required:!1,deprecated:!1},httpProxyHost:{kind:"parameter",type:"string",description:"If you need to tunnel SMPP through a HTTP proxy, set this attribute to the hostname or ip address of your HTTP proxy.",title:"Http Proxy Host",required:!1,deprecated:!1},httpProxyPassword:{kind:"parameter",type:"string",description:"If your HTTP proxy requires basic authentication, set this attribute to the password required for your HTTP proxy.",title:"Http Proxy Password",required:!1,deprecated:!1},httpProxyPort:{kind:"parameter",type:"integer",defaultValue:"3128",description:"If you need to tunnel SMPP through a HTTP proxy, set this attribute to the port of your HTTP proxy.",title:"Http Proxy Port",required:!1,deprecated:!1},httpProxyUsername:{kind:"parameter",type:"string",description:"If your HTTP proxy requires basic authentication, set this attribute to the username required for your HTTP proxy.",title:"Http Proxy Username",required:!1,deprecated:!1},proxyHeaders:{kind:"parameter",type:"object",description:"These headers will be passed to the proxy server while establishing the connection.",title:"Proxy Headers",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for connecting to SMSC server.",title:"Password",required:!1,deprecated:!1},systemId:{kind:"parameter",type:"string",defaultValue:"smppclient",description:"The system id (username) for connecting to SMSC server.",title:"System Id",required:!1,deprecated:!1},usingSSL:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether using SSL with the smpps protocol",title:"Using SSL",required:!1,deprecated:!1}}},smpps:{type:"object",title:"SMPP (Secure)",group:"mobile",icon:"generic24.png",description:"Send and receive SMS messages using a SMSC (Short Message Service Center).",properties:{host:{kind:"path",type:"string",defaultValue:"localhost",description:"Hostname for the SMSC server to use.",title:"Host",required:!1,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"2775",description:"Port number for the SMSC server to use.",title:"Port",required:!1,deprecated:!1},initialReconnectDelay:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Defines the initial delay in milliseconds after the consumer/producer tries to reconnect to the SMSC, after the connection was lost.",title:"Initial Reconnect Delay",required:!1,deprecated:!1},maxReconnect:{kind:"parameter",type:"integer",defaultValue:"2147483647",description:"Defines the maximum number of attempts to reconnect to the SMSC, if SMSC returns a negative bind response",title:"Max Reconnect",required:!1,deprecated:!1},reconnectDelay:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Defines the interval in milliseconds between the reconnect attempts, if the connection to the SMSC was lost and the previous was not succeed.",title:"Reconnect Delay",required:!1,deprecated:!1},splittingPolicy:{kind:"parameter",type:"object",defaultValue:"ALLOW",enum:["ALLOW","REJECT","TRUNCATE"],description:"You can specify a policy for handling long messages: ALLOW - the default, long messages are split to 140 bytes per message TRUNCATE - long messages are split and only the first fragment will be sent to the SMSC. Some carriers drop subsequent fragments so this reduces load on the SMPP connection sending parts of a message that will never be delivered. REJECT - if a message would need to be split, it is rejected with an SMPP NegativeResponseException and the reason code signifying the message is too long.",title:"Splitting Policy",required:!1,deprecated:!1},systemType:{kind:"parameter",type:"string",description:"This parameter is used to categorize the type of ESME (External Short Message Entity) that is binding to the SMSC (max. 13 characters).",title:"System Type",required:!1,deprecated:!1},addressRange:{kind:"parameter",type:"string",description:"You can specify the address range for the SmppConsumer as defined in section 5.2.7 of the SMPP 3.4 specification. The SmppConsumer will receive messages only from SMSC's which target an address (MSISDN or IP address) within this range.",title:"Address Range",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},destAddr:{kind:"parameter",type:"string",defaultValue:"1717",description:"Defines the destination SME address. For mobile terminated messages, this is the directory number of the recipient MS. Only for SubmitSm, SubmitMulti, CancelSm and DataSm.",title:"Dest Addr",required:!1,deprecated:!1},destAddrNpi:{kind:"parameter",type:"integer",enum:["0","1","2","3","6","8","9","10","13","18"],description:"Defines the type of number (TON) to be used in the SME destination address parameters. Only for SubmitSm, SubmitMulti, CancelSm and DataSm. The following NPI values are defined: 0: Unknown 1: ISDN (E163/E164) 2: Data (X.121) 3: Telex (F.69) 6: Land Mobile (E.212) 8: National 9: Private 10: ERMES 13: Internet (IP) 18: WAP Client Id (to be defined by WAP Forum)",title:"Dest Addr Npi",required:!1,deprecated:!1},destAddrTon:{kind:"parameter",type:"integer",enum:["0","1","2","3","4","5","6"],description:"Defines the type of number (TON) to be used in the SME destination address parameters. Only for SubmitSm, SubmitMulti, CancelSm and DataSm. The following TON values are defined: 0: Unknown 1: International 2: National 3: Network Specific 4: Subscriber Number 5: Alphanumeric 6: Abbreviated",title:"Dest Addr Ton",required:!1,deprecated:!1},lazySessionCreation:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sessions can be lazily created to avoid exceptions, if the SMSC is not available when the Camel producer is started. Camel will check the in message headers 'CamelSmppSystemId' and 'CamelSmppPassword' of the first exchange. If they are present, Camel will use these data to connect to the SMSC.",title:"Lazy Session Creation",required:!1,deprecated:!1},messageReceiverRouteId:{kind:"parameter",type:"string",description:"Set this on producer in order to benefit from transceiver (TRX) binding type. So once set, you don't need to define an 'SMTPP consumer' endpoint anymore. You would set this to a 'Direct consumer' endpoint instead. DISCALIMER: This feature is only tested with 'Direct consumer' endpoint. The behavior with any other consumer type is unknown and not tested.",title:"Message Receiver Route Id",required:!1,deprecated:!1},numberingPlanIndicator:{kind:"parameter",type:"integer",enum:["0","1","2","3","6","8","9","10","13","18"],description:"Defines the numeric plan indicator (NPI) to be used in the SME. The following NPI values are defined: 0: Unknown 1: ISDN (E163/E164) 2: Data (X.121) 3: Telex (F.69) 6: Land Mobile (E.212) 8: National 9: Private 10: ERMES 13: Internet (IP) 18: WAP Client Id (to be defined by WAP Forum)",title:"Numbering Plan Indicator",required:!1,deprecated:!1},priorityFlag:{kind:"parameter",type:"integer",enum:["0","1","2","3"],description:"Allows the originating SME to assign a priority level to the short message. Only for SubmitSm and SubmitMulti. Four Priority Levels are supported: 0: Level 0 (lowest) priority 1: Level 1 priority 2: Level 2 priority 3: Level 3 (highest) priority",title:"Priority Flag",required:!1,deprecated:!1},protocolId:{kind:"parameter",type:"integer",description:"The protocol id",title:"Protocol Id",required:!1,deprecated:!1},registeredDelivery:{kind:"parameter",type:"integer",enum:["0","1","2"],description:"Is used to request an SMSC delivery receipt and/or SME originated acknowledgements. The following values are defined: 0: No SMSC delivery receipt requested. 1: SMSC delivery receipt requested where final delivery outcome is success or failure. 2: SMSC delivery receipt requested where the final delivery outcome is delivery failure.",title:"Registered Delivery",required:!1,deprecated:!1},replaceIfPresentFlag:{kind:"parameter",type:"integer",enum:["0","1"],description:"Used to request the SMSC to replace a previously submitted message, that is still pending delivery. The SMSC will replace an existing message provided that the source address, destination address and service type match the same fields in the new message. The following replace if present flag values are defined: 0: Don't replace 1: Replace",title:"Replace If Present Flag",required:!1,deprecated:!1},serviceType:{kind:"parameter",type:"string",enum:["CMT","CPT","VMN","VMA","WAP","USSD"],description:"The service type parameter can be used to indicate the SMS Application service associated with the message. The following generic service_types are defined: CMT: Cellular Messaging CPT: Cellular Paging VMN: Voice Mail Notification VMA: Voice Mail Alerting WAP: Wireless Application Protocol USSD: Unstructured Supplementary Services Data",title:"Service Type",required:!1,deprecated:!1},sourceAddr:{kind:"parameter",type:"string",defaultValue:"1616",description:"Defines the address of SME (Short Message Entity) which originated this message.",title:"Source Addr",required:!1,deprecated:!1},sourceAddrNpi:{kind:"parameter",type:"integer",enum:["0","1","2","3","6","8","9","10","13","18"],description:"Defines the numeric plan indicator (NPI) to be used in the SME originator address parameters. The following NPI values are defined: 0: Unknown 1: ISDN (E163/E164) 2: Data (X.121) 3: Telex (F.69) 6: Land Mobile (E.212) 8: National 9: Private 10: ERMES 13: Internet (IP) 18: WAP Client Id (to be defined by WAP Forum)",title:"Source Addr Npi",required:!1,deprecated:!1},sourceAddrTon:{kind:"parameter",type:"integer",enum:["0","1","2","3","4","5","6"],description:"Defines the type of number (TON) to be used in the SME originator address parameters. The following TON values are defined: 0: Unknown 1: International 2: National 3: Network Specific 4: Subscriber Number 5: Alphanumeric 6: Abbreviated",title:"Source Addr Ton",required:!1,deprecated:!1},typeOfNumber:{kind:"parameter",type:"integer",enum:["0","1","2","3","4","5","6"],description:"Defines the type of number (TON) to be used in the SME. The following TON values are defined: 0: Unknown 1: International 2: National 3: Network Specific 4: Subscriber Number 5: Alphanumeric 6: Abbreviated",title:"Type Of Number",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},enquireLinkTimer:{kind:"parameter",type:"integer",defaultValue:"60000",description:"Defines the interval in milliseconds between the confidence checks. The confidence check is used to test the communication path between an ESME and an SMSC.",title:"Enquire Link Timer",required:!1,deprecated:!1},pduProcessorDegree:{kind:"parameter",type:"integer",defaultValue:"3",description:"Sets the number of threads which can read PDU and process them in parallel.",title:"Pdu Processor Degree",required:!1,deprecated:!1},pduProcessorQueueCapacity:{kind:"parameter",type:"integer",defaultValue:"100",description:"Sets the capacity of the working queue for PDU processing.",title:"Pdu Processor Queue Capacity",required:!1,deprecated:!1},sessionStateListener:{kind:"parameter",type:"object",description:"You can refer to a org.jsmpp.session.SessionStateListener in the Registry to receive callbacks when the session state changed.",title:"Session State Listener",required:!1,deprecated:!1},singleDLR:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When true, the SMSC delivery receipt would be requested only for the last segment of a multi-segment (long) message. For short messages, with only 1 segment the behaviour is unchanged.",title:"Single DLR",required:!1,deprecated:!1},transactionTimer:{kind:"parameter",type:"integer",defaultValue:"10000",description:"Defines the maximum period of inactivity allowed after a transaction, after which an SMPP entity may assume that the session is no longer active. This timer may be active on either communicating SMPP entity (i.e. SMSC or ESME).",title:"Transaction Timer",required:!1,deprecated:!1},alphabet:{kind:"parameter",type:"integer",enum:["0","4","8"],description:"Defines encoding of data according the SMPP 3.4 specification, section 5.2.19. 0: SMSC Default Alphabet 4: 8 bit Alphabet 8: UCS2 Alphabet",title:"Alphabet",required:!1,deprecated:!1},dataCoding:{kind:"parameter",type:"integer",description:"Defines the data coding according the SMPP 3.4 specification, section 5.2.19. Example data encodings are: 0: SMSC Default Alphabet 3: Latin 1 (ISO-8859-1) 4: Octet unspecified (8-bit binary) 8: UCS2 (ISO/IEC-10646) 13: Extended Kanji JIS(X 0212-1990)",title:"Data Coding",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",defaultValue:"ISO-8859-1",description:"Defines the encoding scheme of the short message user data. Only for SubmitSm, ReplaceSm and SubmitMulti.",title:"Encoding",required:!1,deprecated:!1},httpProxyHost:{kind:"parameter",type:"string",description:"If you need to tunnel SMPP through a HTTP proxy, set this attribute to the hostname or ip address of your HTTP proxy.",title:"Http Proxy Host",required:!1,deprecated:!1},httpProxyPassword:{kind:"parameter",type:"string",description:"If your HTTP proxy requires basic authentication, set this attribute to the password required for your HTTP proxy.",title:"Http Proxy Password",required:!1,deprecated:!1},httpProxyPort:{kind:"parameter",type:"integer",defaultValue:"3128",description:"If you need to tunnel SMPP through a HTTP proxy, set this attribute to the port of your HTTP proxy.",title:"Http Proxy Port",required:!1,deprecated:!1},httpProxyUsername:{kind:"parameter",type:"string",description:"If your HTTP proxy requires basic authentication, set this attribute to the username required for your HTTP proxy.",title:"Http Proxy Username",required:!1,deprecated:!1},proxyHeaders:{kind:"parameter",type:"object",description:"These headers will be passed to the proxy server while establishing the connection.",title:"Proxy Headers",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for connecting to SMSC server.",title:"Password",required:!1,deprecated:!1},systemId:{kind:"parameter",type:"string",defaultValue:"smppclient",description:"The system id (username) for connecting to SMSC server.",title:"System Id",required:!1,deprecated:!1},usingSSL:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether using SSL with the smpps protocol",title:"Using SSL",required:!1,deprecated:!1}}},smtp:{type:"object",title:"SMTP",group:"mail",icon:"generic24.png",description:"Send and receive emails using imap, pop3 and smtp protocols.",properties:{host:{kind:"path",type:"string",description:"The mail server host name",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The port number of the mail server",title:"Port",required:!1,deprecated:!1},closeFolder:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.",title:"Close Folder",required:!1,deprecated:!1},copyTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.",title:"Copy To",required:!1,deprecated:!1},decodeFilename:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the MimeUtility.decodeText method will be used to decode the filename. This is similar to setting JVM system property mail.mime.encodefilename.",title:"Decode Filename",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.",title:"Delete",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.",title:"Disconnect",required:!1,deprecated:!1},handleFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Handle Failed Message",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Specifies the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid downloading thousands of files when the server starts up. Set a value of 0 or negative to disable this option.",title:"Max Messages Per Poll",required:!1,deprecated:!1},mimeDecodeHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables transparent MIME decoding and unfolding for mail headers.",title:"Mime Decode Headers",required:!1,deprecated:!1},moveTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.",title:"Move To",required:!1,deprecated:!1},peek:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Will mark the jakarta.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.",title:"Peek",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skipFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Skip Failed Message",required:!1,deprecated:!1},unseen:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit by unseen mails only.",title:"Unseen",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},failOnDuplicateFileAttachment:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to fail processing the mail if the mail message contains attachments with duplicate file names. If set to false, then the duplicate attachment is skipped and a WARN is logged. If set to true then an exception is thrown failing to process the mail message.",title:"Fail On Duplicate File Attachment",required:!1,deprecated:!1},fetchSize:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.",title:"Fetch Size",required:!1,deprecated:!1},folderName:{kind:"parameter",type:"string",defaultValue:"INBOX",description:"The folder to poll.",title:"Folder Name",required:!1,deprecated:!1},generateMissingAttachmentNames:{kind:"parameter",type:"string",description:"Set this to 'uuid' to set a UUID for the filename of the attachment if no filename was set",title:"Generate Missing Attachment Names",required:!1,deprecated:!1},handleDuplicateAttachmentNames:{kind:"parameter",type:"string",description:"Set the strategy to handle duplicate filenames of attachments never: attachments that have a filename which is already present in the attachments will be ignored unless failOnDuplicateFileAttachment is set to true. uuidPrefix: this will prefix the duplicate attachment filenames each with a uuid and underscore (uuid_filename.fileextension). uuidSuffix: this will suffix the duplicate attachment filenames each with a underscore and uuid (filename_uuid.fileextension).",title:"Handle Duplicate Attachment Names",required:!1,deprecated:!1},mailUidGenerator:{kind:"parameter",type:"object",description:"A pluggable MailUidGenerator that allows to use custom logic to generate UUID of the mail message.",title:"Mail Uid Generator",required:!1,deprecated:!1},mapMailMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw jakarta.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(jakarta.mail.Message.class).",title:"Map Mail Message",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},postProcessAction:{kind:"parameter",type:"object",description:"Refers to an MailBoxPostProcessAction for doing post processing tasks on the mailbox once the normal processing ended.",title:"Post Process Action",required:!1,deprecated:!1},bcc:{kind:"parameter",type:"string",description:"Sets the BCC email address. Separate multiple email addresses with comma.",title:"Bcc",required:!1,deprecated:!1},cc:{kind:"parameter",type:"string",description:"Sets the CC email address. Separate multiple email addresses with comma.",title:"Cc",required:!1,deprecated:!1},from:{kind:"parameter",type:"string",defaultValue:"camel@localhost",description:"The from email address",title:"From",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"The Reply-To recipients (the receivers of the response mail). Separate multiple email addresses with a comma.",title:"Reply To",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The Subject of the message being sent. Note: Setting the subject in the header takes precedence over this option.",title:"Subject",required:!1,deprecated:!1},to:{kind:"parameter",type:"string",description:"Sets the To email address. Separate multiple email addresses with comma.",title:"To",required:!1,deprecated:!1},javaMailSender:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.mail.JavaMailSender for sending emails.",title:"Java Mail Sender",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},additionalJavaMailProperties:{kind:"parameter",type:"object",description:"Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.",title:"Additional Java Mail Properties",required:!1,deprecated:!1},alternativeBodyHeader:{kind:"parameter",type:"string",defaultValue:"CamelMailAlternativeBody",description:"Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.",title:"Alternative Body Header",required:!1,deprecated:!1},attachmentsContentTransferEncodingResolver:{kind:"parameter",type:"object",description:"To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.",title:"Attachments Content Transfer Encoding Resolver",required:!1,deprecated:!1},authenticator:{kind:"parameter",type:"object",description:"The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.",title:"Authenticator",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"Sets the binding used to convert from a Camel message to and from a Mail message",title:"Binding",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The connection timeout in milliseconds.",title:"Connection Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"text/plain",description:"The mail message content type. Use text/html for HTML mails.",title:"Content Type",required:!1,deprecated:!1},contentTypeResolver:{kind:"parameter",type:"object",description:"Resolver to determine Content-Type for file attachments.",title:"Content Type Resolver",required:!1,deprecated:!1},debugMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.",title:"Debug Mode",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.",title:"Header Filter Strategy",required:!1,deprecated:!1},ignoreUnsupportedCharset:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Unsupported Charset",required:!1,deprecated:!1},ignoreUriScheme:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Uri Scheme",required:!1,deprecated:!1},javaMailProperties:{kind:"parameter",type:"object",description:"Sets the java mail options. Will clear any default properties and only use the properties provided for this method.",title:"Java Mail Properties",required:!1,deprecated:!1},session:{kind:"parameter",type:"object",description:"Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).",title:"Session",required:!1,deprecated:!1},useInlineAttachments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use disposition inline or attachment.",title:"Use Inline Attachments",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which allows to cluster consuming from the same mailbox, and let the repository coordinate whether a mail message is valid for the consumer to process. By default no repository is in use.",title:"Idempotent Repository",required:!1,deprecated:!1},idempotentRepositoryRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When using idempotent repository, then when the mail message has been successfully processed and is committed, should the message id be removed from the idempotent repository (default) or be kept in the repository. By default its assumed the message id is unique and has no value to be kept in the repository, because the mail message will be marked as seen/moved or deleted to prevent it from being consumed again. And therefore having the message id stored in the idempotent repository has little value. However this option allows to store the message id, for whatever reason you may have.",title:"Idempotent Repository Remove On Commit",required:!1,deprecated:!1},searchTerm:{kind:"parameter",type:"object",description:"Refers to a jakarta.mail.search.SearchTerm which allows to filter mails based on search criteria such as subject, body, from, sent after a certain date etc.",title:"Search Term",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for login. See also setAuthenticator(MailAuthenticator).",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters.",title:"Ssl Context Parameters",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username for login. See also setAuthenticator(MailAuthenticator).",title:"Username",required:!1,deprecated:!1},sortTerm:{kind:"parameter",type:"object",description:"Sorting order for messages. Only natively supported for IMAP. Emulated to some degree when using POP3 or when IMAP server does not have the SORT capability.",title:"Sort Term",required:!1,deprecated:!1}}},smtps:{type:"object",title:"SMTPS",group:"mail",icon:"generic24.png",description:"Send and receive emails using imap, pop3 and smtp protocols.",properties:{host:{kind:"path",type:"string",description:"The mail server host name",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"The port number of the mail server",title:"Port",required:!1,deprecated:!1},closeFolder:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the consumer should close the folder after polling. Setting this option to false and having disconnect=false as well, then the consumer keep the folder open between polls.",title:"Close Folder",required:!1,deprecated:!1},copyTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be copied to a mail folder with the given name. You can override this configuration value, with a header with the key copyTo, allowing you to copy messages to folder names configured at runtime.",title:"Copy To",required:!1,deprecated:!1},decodeFilename:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set to true, the MimeUtility.decodeText method will be used to decode the filename. This is similar to setting JVM system property mail.mime.encodefilename.",title:"Decode Filename",required:!1,deprecated:!1},delete:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Deletes the messages after they have been processed. This is done by setting the DELETED flag on the mail message. If false, the SEEN flag is set instead. As of Camel 2.10 you can override this configuration option by setting a header with the key delete to determine if the mail should be deleted or not.",title:"Delete",required:!1,deprecated:!1},disconnect:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the consumer should disconnect after polling. If enabled this forces Camel to connect on each poll.",title:"Disconnect",required:!1,deprecated:!1},handleFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to handle the caused exception by the consumer's error handler. By enable the bridge error handler on the consumer, then the Camel routing error handler can handle the exception instead. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Handle Failed Message",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Specifies the maximum number of messages to gather per poll. By default, no maximum is set. Can be used to set a limit of e.g. 1000 to avoid downloading thousands of files when the server starts up. Set a value of 0 or negative to disable this option.",title:"Max Messages Per Poll",required:!1,deprecated:!1},mimeDecodeHeaders:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option enables transparent MIME decoding and unfolding for mail headers.",title:"Mime Decode Headers",required:!1,deprecated:!1},moveTo:{kind:"parameter",type:"string",description:"After processing a mail message, it can be moved to a mail folder with the given name. You can override this configuration value, with a header with the key moveTo, allowing you to move messages to folder names configured at runtime.",title:"Move To",required:!1,deprecated:!1},peek:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Will mark the jakarta.mail.Message as peeked before processing the mail message. This applies to IMAPMessage messages types only. By using peek the mail will not be eager marked as SEEN on the mail server, which allows us to rollback the mail message if there is an error processing in Camel.",title:"Peek",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},skipFailedMessage:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the mail consumer cannot retrieve a given mail message, then this option allows to skip the message and move on to retrieve the next mail message. The default behavior would be the consumer throws an exception and no mails from the batch would be able to be routed by Camel.",title:"Skip Failed Message",required:!1,deprecated:!1},unseen:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit by unseen mails only.",title:"Unseen",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},failOnDuplicateFileAttachment:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to fail processing the mail if the mail message contains attachments with duplicate file names. If set to false, then the duplicate attachment is skipped and a WARN is logged. If set to true then an exception is thrown failing to process the mail message.",title:"Fail On Duplicate File Attachment",required:!1,deprecated:!1},fetchSize:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets the maximum number of messages to consume during a poll. This can be used to avoid overloading a mail server, if a mailbox folder contains a lot of messages. Default value of -1 means no fetch size and all messages will be consumed. Setting the value to 0 is a special corner case, where Camel will not consume any messages at all.",title:"Fetch Size",required:!1,deprecated:!1},folderName:{kind:"parameter",type:"string",defaultValue:"INBOX",description:"The folder to poll.",title:"Folder Name",required:!1,deprecated:!1},generateMissingAttachmentNames:{kind:"parameter",type:"string",description:"Set this to 'uuid' to set a UUID for the filename of the attachment if no filename was set",title:"Generate Missing Attachment Names",required:!1,deprecated:!1},handleDuplicateAttachmentNames:{kind:"parameter",type:"string",description:"Set the strategy to handle duplicate filenames of attachments never: attachments that have a filename which is already present in the attachments will be ignored unless failOnDuplicateFileAttachment is set to true. uuidPrefix: this will prefix the duplicate attachment filenames each with a uuid and underscore (uuid_filename.fileextension). uuidSuffix: this will suffix the duplicate attachment filenames each with a underscore and uuid (filename_uuid.fileextension).",title:"Handle Duplicate Attachment Names",required:!1,deprecated:!1},mailUidGenerator:{kind:"parameter",type:"object",description:"A pluggable MailUidGenerator that allows to use custom logic to generate UUID of the mail message.",title:"Mail Uid Generator",required:!1,deprecated:!1},mapMailMessage:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether Camel should map the received mail message to Camel body/headers/attachments. If set to true, the body of the mail message is mapped to the body of the Camel IN message, the mail headers are mapped to IN headers, and the attachments to Camel IN attachment message. If this option is set to false then the IN message contains a raw jakarta.mail.Message. You can retrieve this raw message by calling exchange.getIn().getBody(jakarta.mail.Message.class).",title:"Map Mail Message",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},postProcessAction:{kind:"parameter",type:"object",description:"Refers to an MailBoxPostProcessAction for doing post processing tasks on the mailbox once the normal processing ended.",title:"Post Process Action",required:!1,deprecated:!1},bcc:{kind:"parameter",type:"string",description:"Sets the BCC email address. Separate multiple email addresses with comma.",title:"Bcc",required:!1,deprecated:!1},cc:{kind:"parameter",type:"string",description:"Sets the CC email address. Separate multiple email addresses with comma.",title:"Cc",required:!1,deprecated:!1},from:{kind:"parameter",type:"string",defaultValue:"camel@localhost",description:"The from email address",title:"From",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"The Reply-To recipients (the receivers of the response mail). Separate multiple email addresses with a comma.",title:"Reply To",required:!1,deprecated:!1},subject:{kind:"parameter",type:"string",description:"The Subject of the message being sent. Note: Setting the subject in the header takes precedence over this option.",title:"Subject",required:!1,deprecated:!1},to:{kind:"parameter",type:"string",description:"Sets the To email address. Separate multiple email addresses with comma.",title:"To",required:!1,deprecated:!1},javaMailSender:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.mail.JavaMailSender for sending emails.",title:"Java Mail Sender",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},additionalJavaMailProperties:{kind:"parameter",type:"object",description:"Sets additional java mail properties, that will append/override any default properties that is set based on all the other options. This is useful if you need to add some special options but want to keep the others as is.",title:"Additional Java Mail Properties",required:!1,deprecated:!1},alternativeBodyHeader:{kind:"parameter",type:"string",defaultValue:"CamelMailAlternativeBody",description:"Specifies the key to an IN message header that contains an alternative email body. For example, if you send emails in text/html format and want to provide an alternative mail body for non-HTML email clients, set the alternative mail body with this key as a header.",title:"Alternative Body Header",required:!1,deprecated:!1},attachmentsContentTransferEncodingResolver:{kind:"parameter",type:"object",description:"To use a custom AttachmentsContentTransferEncodingResolver to resolve what content-type-encoding to use for attachments.",title:"Attachments Content Transfer Encoding Resolver",required:!1,deprecated:!1},authenticator:{kind:"parameter",type:"object",description:"The authenticator for login. If set then the password and username are ignored. Can be used for tokens which can expire and therefore must be read dynamically.",title:"Authenticator",required:!1,deprecated:!1},binding:{kind:"parameter",type:"object",description:"Sets the binding used to convert from a Camel message to and from a Mail message",title:"Binding",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"The connection timeout in milliseconds.",title:"Connection Timeout",required:!1,deprecated:!1},contentType:{kind:"parameter",type:"string",defaultValue:"text/plain",description:"The mail message content type. Use text/html for HTML mails.",title:"Content Type",required:!1,deprecated:!1},contentTypeResolver:{kind:"parameter",type:"object",description:"Resolver to determine Content-Type for file attachments.",title:"Content Type Resolver",required:!1,deprecated:!1},debugMode:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enable debug mode on the underlying mail framework. The SUN Mail framework logs the debug messages to System.out by default.",title:"Debug Mode",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter headers.",title:"Header Filter Strategy",required:!1,deprecated:!1},ignoreUnsupportedCharset:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Unsupported Charset",required:!1,deprecated:!1},ignoreUriScheme:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to let Camel ignore unsupported charset in the local JVM when sending mails. If the charset is unsupported then charset=XXX (where XXX represents the unsupported charset) is removed from the content-type and it relies on the platform default instead.",title:"Ignore Uri Scheme",required:!1,deprecated:!1},javaMailProperties:{kind:"parameter",type:"object",description:"Sets the java mail options. Will clear any default properties and only use the properties provided for this method.",title:"Java Mail Properties",required:!1,deprecated:!1},session:{kind:"parameter",type:"object",description:"Specifies the mail session that camel should use for all mail interactions. Useful in scenarios where mail sessions are created and managed by some other resource, such as a JavaEE container. When using a custom mail session, then the hostname and port from the mail session will be used (if configured on the session).",title:"Session",required:!1,deprecated:!1},useInlineAttachments:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use disposition inline or attachment.",title:"Use Inline Attachments",required:!1,deprecated:!1},idempotentRepository:{kind:"parameter",type:"object",description:"A pluggable repository org.apache.camel.spi.IdempotentRepository which allows to cluster consuming from the same mailbox, and let the repository coordinate whether a mail message is valid for the consumer to process. By default no repository is in use.",title:"Idempotent Repository",required:!1,deprecated:!1},idempotentRepositoryRemoveOnCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"When using idempotent repository, then when the mail message has been successfully processed and is committed, should the message id be removed from the idempotent repository (default) or be kept in the repository. By default its assumed the message id is unique and has no value to be kept in the repository, because the mail message will be marked as seen/moved or deleted to prevent it from being consumed again. And therefore having the message id stored in the idempotent repository has little value. However this option allows to store the message id, for whatever reason you may have.",title:"Idempotent Repository Remove On Commit",required:!1,deprecated:!1},searchTerm:{kind:"parameter",type:"object",description:"Refers to a jakarta.mail.search.SearchTerm which allows to filter mails based on search criteria such as subject, body, from, sent after a certain date etc.",title:"Search Term",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password for login. See also setAuthenticator(MailAuthenticator).",title:"Password",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters.",title:"Ssl Context Parameters",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The username for login. See also setAuthenticator(MailAuthenticator).",title:"Username",required:!1,deprecated:!1},sortTerm:{kind:"parameter",type:"object",description:"Sorting order for messages. Only natively supported for IMAP. Emulated to some degree when using POP3 or when IMAP server does not have the SORT capability.",title:"Sort Term",required:!1,deprecated:!1}}},snmp:{type:"object",title:"SNMP",group:"monitoring",icon:"generic24.png",description:"Receive traps and poll SNMP (Simple Network Management Protocol) capable devices.",properties:{host:{kind:"path",type:"string",description:"Hostname of the SNMP enabled device",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number of the SNMP enabled device",title:"Port",required:!0,deprecated:!1},oids:{kind:"parameter",type:"object",description:"Defines which values you are interested in. Please have a look at the Wikipedia to get a better understanding. You may provide a single OID or a coma separated list of OIDs. Example: oids=1.3.6.1.2.1.1.3.0,1.3.6.1.2.1.25.3.2.1.5.1,1.3.6.1.2.1.25.3.5.1.1.1,1.3.6.1.2.1.43.5.1.1.11.1",title:"Oids",required:!1,deprecated:!1},protocol:{kind:"parameter",type:"string",defaultValue:"udp",enum:["tcp","udp"],description:"Here you can select which protocol to use. You can use either udp or tcp.",title:"Protocol",required:!1,deprecated:!1},retries:{kind:"parameter",type:"integer",defaultValue:"2",description:"Defines how often a retry is made before canceling the request.",title:"Retries",required:!1,deprecated:!1},snmpCommunity:{kind:"parameter",type:"string",defaultValue:"public",description:"Sets the community octet string for the snmp request.",title:"Snmp Community",required:!1,deprecated:!1},snmpContextEngineId:{kind:"parameter",type:"string",description:"Sets the context engine ID field of the scoped PDU.",title:"Snmp Context Engine Id",required:!1,deprecated:!1},snmpContextName:{kind:"parameter",type:"string",description:"Sets the context name field of this scoped PDU.",title:"Snmp Context Name",required:!1,deprecated:!1},snmpVersion:{kind:"parameter",type:"integer",defaultValue:"0",enum:["0","1","3"],description:"Sets the snmp version for the request. The value 0 means SNMPv1, 1 means SNMPv2c, and the value 3 means SNMPv3",title:"Snmp Version",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"1500",description:"Sets the timeout value for the request in millis.",title:"Timeout",required:!1,deprecated:!1},type:{kind:"parameter",type:"object",enum:["TRAP","POLL","GET_NEXT"],description:"Which operation to perform such as poll, trap, etc.",title:"Type",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"60000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},treeList:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets the flag whether the scoped PDU will be displayed as the list if it has child elements in its tree",title:"Tree List",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},authenticationPassphrase:{kind:"parameter",type:"string",description:"The authentication passphrase. If not null, authenticationProtocol must also be not null. RFC3414 11.2 requires passphrases to have a minimum length of 8 bytes. If the length of authenticationPassphrase is less than 8 bytes an IllegalArgumentException is thrown.",title:"Authentication Passphrase",required:!1,deprecated:!1},authenticationProtocol:{kind:"parameter",type:"string",enum:["MD5","SHA1"],description:"Authentication protocol to use if security level is set to enable authentication The possible values are: MD5, SHA1",title:"Authentication Protocol",required:!1,deprecated:!1},privacyPassphrase:{kind:"parameter",type:"string",description:"The privacy passphrase. If not null, privacyProtocol must also be not null. RFC3414 11.2 requires passphrases to have a minimum length of 8 bytes. If the length of authenticationPassphrase is less than 8 bytes an IllegalArgumentException is thrown.",title:"Privacy Passphrase",required:!1,deprecated:!1},privacyProtocol:{kind:"parameter",type:"string",description:"The privacy protocol ID to be associated with this user. If set to null, this user only supports unencrypted messages.",title:"Privacy Protocol",required:!1,deprecated:!1},securityLevel:{kind:"parameter",type:"integer",defaultValue:"3",enum:["1","2","3"],description:"Sets the security level for this target. The supplied security level must be supported by the security model dependent information associated with the security name set for this target. The value 1 means: No authentication and no encryption. Anyone can create and read messages with this security level The value 2 means: Authentication and no encryption. Only the one with the right authentication key can create messages with this security level, but anyone can read the contents of the message. The value 3 means: Authentication and encryption. Only the one with the right authentication key can create messages with this security level, and only the one with the right encryption/decryption key can read the contents of the message.",title:"Security Level",required:!1,deprecated:!1},securityName:{kind:"parameter",type:"string",description:"Sets the security name to be used with this target.",title:"Security Name",required:!1,deprecated:!1}}},splunk:{type:"object",title:"Splunk",group:"iot,monitoring",icon:"generic24.png",description:"Publish or search for events in Splunk.",properties:{name:{kind:"path",type:"string",description:"Name has no purpose",title:"Name",required:!0,deprecated:!1},app:{kind:"parameter",type:"string",description:"Splunk app",title:"App",required:!1,deprecated:!1},connectionTimeout:{kind:"parameter",type:"integer",defaultValue:"5000",description:"Timeout in MS when connecting to Splunk server",title:"Connection Timeout",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",defaultValue:"localhost",description:"Splunk host.",title:"Host",required:!1,deprecated:!1},owner:{kind:"parameter",type:"string",description:"Splunk owner",title:"Owner",required:!1,deprecated:!1},port:{kind:"parameter",type:"integer",defaultValue:"8089",description:"Splunk port",title:"Port",required:!1,deprecated:!1},scheme:{kind:"parameter",type:"string",defaultValue:"https",description:"Splunk scheme",title:"Scheme",required:!1,deprecated:!1},count:{kind:"parameter",type:"integer",description:"A number that indicates the maximum number of entities to return.",title:"Count",required:!1,deprecated:!1},earliestTime:{kind:"parameter",type:"string",description:"Earliest time of the search time window.",title:"Earliest Time",required:!1,deprecated:!1},initEarliestTime:{kind:"parameter",type:"string",description:"Initial start offset of the first search",title:"Init Earliest Time",required:!1,deprecated:!1},latestTime:{kind:"parameter",type:"string",description:"Latest time of the search time window.",title:"Latest Time",required:!1,deprecated:!1},savedSearch:{kind:"parameter",type:"string",description:"The name of the query saved in Splunk to run",title:"Saved Search",required:!1,deprecated:!1},search:{kind:"parameter",type:"string",description:"The Splunk query to run",title:"Search",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},streaming:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets streaming mode. Streaming mode sends exchanges as they are received, rather than in a batch.",title:"Streaming",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},eventHost:{kind:"parameter",type:"string",description:"Override the default Splunk event host field",title:"Event Host",required:!1,deprecated:!1},index:{kind:"parameter",type:"string",description:"Splunk index to write to",title:"Index",required:!1,deprecated:!1},raw:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should the payload be inserted raw",title:"Raw",required:!1,deprecated:!1},source:{kind:"parameter",type:"string",description:"Splunk source argument",title:"Source",required:!1,deprecated:!1},sourceType:{kind:"parameter",type:"string",description:"Splunk sourcetype argument",title:"Source Type",required:!1,deprecated:!1},tcpReceiverLocalPort:{kind:"parameter",type:"integer",description:"Splunk tcp receiver port defined locally on splunk server. (For example if splunk port 9997 is mapped to 12345, tcpReceiverLocalPort has to be 9997)",title:"Tcp Receiver Local Port",required:!1,deprecated:!1},tcpReceiverPort:{kind:"parameter",type:"integer",description:"Splunk tcp receiver port",title:"Tcp Receiver Port",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password for Splunk",title:"Password",required:!1,deprecated:!1},sslProtocol:{kind:"parameter",type:"object",defaultValue:"TLSv1.2",enum:["TLSv1.2","TLSv1.1","TLSv1","SSLv3"],description:"Set the ssl protocol to use",title:"Ssl Protocol",required:!1,deprecated:!1},token:{kind:"parameter",type:"string",description:"User's token for Splunk. This takes precedence over password when both are set",title:"Token",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Username for Splunk",title:"Username",required:!1,deprecated:!1},useSunHttpsHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use sun.net.www.protocol.https.Handler Https handler to establish the Splunk Connection. Can be useful when running in application servers to avoid app. server https handling.",title:"Use Sun Https Handler",required:!1,deprecated:!1}}},"splunk-hec":{type:"object",title:"Splunk HEC",group:"monitoring",icon:"generic24.png",description:"The splunk component allows to publish events in Splunk using the HTTP Event Collector.",properties:{splunkURL:{kind:"path",type:"string",description:"Splunk Host and Port (example: my_splunk_server:8089)",title:"Splunk URL",required:!0,deprecated:!1},token:{kind:"path",type:"string",description:"Splunk HEC token (this is the token created for HEC and not the user's token)",title:"Token",required:!0,deprecated:!1},bodyOnly:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Send only the message body",title:"Body Only",required:!1,deprecated:!1},headersOnly:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Send only message headers",title:"Headers Only",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",description:"Splunk host field of the event message. This is not the Splunk host to connect to.",title:"Host",required:!1,deprecated:!1},index:{kind:"parameter",type:"string",defaultValue:"camel",description:"Splunk index to write to",title:"Index",required:!1,deprecated:!1},source:{kind:"parameter",type:"string",defaultValue:"camel",description:"Splunk source argument",title:"Source",required:!1,deprecated:!1},sourceType:{kind:"parameter",type:"string",defaultValue:"camel",description:"Splunk sourcetype argument",title:"Source Type",required:!1,deprecated:!1},splunkEndpoint:{kind:"parameter",type:"string",defaultValue:"/services/collector/event",description:"Splunk endpoint Defaults to /services/collector/event To write RAW data like JSON use /services/collector/raw For a list of all endpoints refer to splunk documentation (HTTP Event Collector REST API endpoints) Example for Spunk 8.2.x: https://docs.splunk.com/Documentation/SplunkCloud/8.2.2203/Data/HECRESTendpoints To extract timestamps in Splunk8.0 /services/collector/eventauto_extract_timestamp=true Remember to utilize RAW{} for questionmarks or slashes in parameters.",title:"Splunk Endpoint",required:!1,deprecated:!1},time:{kind:"parameter",type:"integer",description:"Time this even occurred. By default, the time will be when this event hits the splunk server.",title:"Time",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},https:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Contact HEC over https.",title:"Https",required:!1,deprecated:!1},skipTlsVerify:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Splunk HEC TLS verification.",title:"Skip Tls Verify",required:!1,deprecated:!1}}},"spring-batch":{type:"object",title:"Spring Batch",group:"workflow",icon:"generic24.png",description:"Send messages to Spring Batch for further processing.",properties:{jobName:{kind:"path",type:"string",description:"The name of the Spring Batch job located in the registry.",title:"Job Name",required:!0,deprecated:!1},jobFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Explicitly defines if the jobName should be taken from the headers instead of the URI.",title:"Job From Header",required:!1,deprecated:!1},jobLauncher:{kind:"parameter",type:"object",description:"Explicitly specifies a JobLauncher to be used.",title:"Job Launcher",required:!1,deprecated:!1},jobRegistry:{kind:"parameter",type:"object",description:"Explicitly specifies a JobRegistry to be used.",title:"Job Registry",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"spring-event":{type:"object",title:"Spring Event",group:"messaging",icon:"generic24.png",description:"Listen for Spring Application Events.",properties:{name:{kind:"path",type:"string",description:"Name of endpoint",title:"Name",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"spring-jdbc":{type:"object",title:"Spring JDBC",group:"database",icon:"generic24.png",description:"Access databases through SQL and JDBC with Spring Transaction support.",properties:{dataSourceName:{kind:"path",type:"string",description:"Name of DataSource to lookup in the Registry. If the name is dataSource or default, then Camel will attempt to lookup a default DataSource from the registry, meaning if there is a only one instance of DataSource found, then this DataSource will be used.",title:"Data Source Name",required:!0,deprecated:!1},allowNamedParameters:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using named parameters in the queries.",title:"Allow Named Parameters",required:!1,deprecated:!1},outputClass:{kind:"parameter",type:"string",description:"Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.",title:"Output Class",required:!1,deprecated:!1},outputType:{kind:"parameter",type:"object",defaultValue:"SelectList",enum:["SelectOne","SelectList","StreamList"],description:"Determines the output the producer should use.",title:"Output Type",required:!1,deprecated:!1},parameters:{kind:"parameter",type:"object",description:"Optional parameters to the java.sql.Statement. For example to set maxRows, fetchSize etc.",title:"Parameters",required:!1,deprecated:!1},readSize:{kind:"parameter",type:"integer",description:"The default maximum number of rows that can be read by a polling query. The default value is 0.",title:"Read Size",required:!1,deprecated:!1},resetAutoCommit:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag. When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.",title:"Reset Auto Commit",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether transactions are in use.",title:"Transacted",required:!1,deprecated:!1},useGetBytesForBlob:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To read BLOB columns as bytes instead of string data. This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.",title:"Use Get Bytes For Blob",required:!1,deprecated:!1},useHeadersAsParameters:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set this option to true to use the prepareStatementStrategy with named parameters. This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.",title:"Use Headers As Parameters",required:!1,deprecated:!1},useJDBC4ColumnNameAndLabelSemantics:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name. JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel. Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your JDBC driver if you get problem using this component This option is default true.",title:"Use JDBC4 Column Name And Label Semantics",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},beanRowMapper:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass. The default implementation will lower case the row names and skip underscores, and dashes. For example CUST_ID is mapped as custId.",title:"Bean Row Mapper",required:!1,deprecated:!1},connectionStrategy:{kind:"parameter",type:"object",description:"To use a custom strategy for working with connections. Do not use a custom strategy when using the spring-jdbc component because a special Spring ConnectionStrategy is used by default to support Spring Transactions.",title:"Connection Strategy",required:!1,deprecated:!1},prepareStatementStrategy:{kind:"parameter",type:"object",description:"Allows the plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.",title:"Prepare Statement Strategy",required:!1,deprecated:!1}}},"spring-ldap":{type:"object",title:"Spring LDAP",group:"security",icon:"generic24.png",description:"Perform searches in LDAP servers using filters as the message payload.",properties:{templateName:{kind:"path",type:"string",description:"Name of the Spring LDAP Template bean",title:"Template Name",required:!0,deprecated:!1},operation:{kind:"parameter",type:"object",enum:["SEARCH","BIND","UNBIND","AUTHENTICATE","MODIFY_ATTRIBUTES","FUNCTION_DRIVEN"],description:"The LDAP operation to be performed.",title:"Operation",required:!0,deprecated:!1},scope:{kind:"parameter",type:"string",defaultValue:"subtree",enum:["object","onelevel","subtree"],description:"The scope of the search operation.",title:"Scope",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"spring-rabbitmq":{type:"object",title:"Spring RabbitMQ",group:"messaging",icon:"generic24.png",description:"Send and receive messages from RabbitMQ using Spring RabbitMQ client.",properties:{exchangeName:{kind:"path",type:"string",description:"The exchange name determines the exchange to which the produced messages will be sent to. In the case of consumers, the exchange name determines the exchange the queue will be bound to. Note: to use default exchange then do not use empty name, but use default instead.",title:"Exchange Name",required:!0,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"The connection factory to be use. A connection factory must be configured either on the component or endpoint.",title:"Connection Factory",required:!1,deprecated:!1},disableReplyTo:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether Camel ignores the ReplyTo header in messages. If true, Camel does not send a reply back to the destination specified in the ReplyTo header. You can use this option if you want Camel to consume from a route and you do not want Camel to automatically send back a reply message because another component in your code handles the reply message. You can also use this option if you want to use Camel as a proxy between different message brokers and you want to route message from one system to another.",title:"Disable Reply To",required:!1,deprecated:!1},routingKey:{kind:"parameter",type:"string",description:"The value of a routing key to use. Default is empty which is not helpful when using the default (or any direct) exchange, but fine if the exchange is a headers exchange for instance.",title:"Routing Key",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to test the connection on startup. This ensures that when Camel starts that all the JMS consumers have a valid connection to the JMS broker. If a connection cannot be granted then Camel throws an exception on startup. This ensures that Camel is not started with failed connections. The JMS producers is tested as well.",title:"Test Connection On Startup",required:!1,deprecated:!1},acknowledgeMode:{kind:"parameter",type:"object",enum:["NONE","MANUAL","AUTO"],description:"Flag controlling the behaviour of the container with respect to message acknowledgement. The most common usage is to let the container handle the acknowledgements (so the listener doesn't need to know about the channel or the message). Set to AcknowledgeMode.MANUAL if the listener will send the acknowledgements itself using Channel.basicAck(long, boolean). Manual acks are consistent with either a transactional or non-transactional channel, but if you are doing no other work on the channel at the same other than receiving a single message then the transaction is probably unnecessary. Set to AcknowledgeMode.NONE to tell the broker not to expect any acknowledgements, and it will assume all messages are acknowledged as soon as they are sent (this is autoack in native Rabbit broker terms). If AcknowledgeMode.NONE then the channel cannot be transactional (so the container will fail on start up if that flag is accidentally set).",title:"Acknowledge Mode",required:!1,deprecated:!1},asyncConsumer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the consumer processes the Exchange asynchronously. If enabled then the consumer may pickup the next message from the queue, while the previous message is being processed asynchronously (by the Asynchronous Routing Engine). This means that messages may be processed not 100% strictly in order. If disabled (as default) then the Exchange is fully processed before the consumer will pickup the next message from the queue.",title:"Async Consumer",required:!1,deprecated:!1},autoDeclare:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether the consumer should auto declare binding between exchange, queue and routing key when starting.",title:"Auto Declare",required:!1,deprecated:!1},autoStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether the consumer container should auto-startup.",title:"Auto Startup",required:!1,deprecated:!1},deadLetterExchange:{kind:"parameter",type:"string",description:"The name of the dead letter exchange",title:"Dead Letter Exchange",required:!1,deprecated:!1},deadLetterExchangeType:{kind:"parameter",type:"string",defaultValue:"direct",enum:["direct","fanout","headers","topic"],description:"The type of the dead letter exchange",title:"Dead Letter Exchange Type",required:!1,deprecated:!1},deadLetterQueue:{kind:"parameter",type:"string",description:"The name of the dead letter queue",title:"Dead Letter Queue",required:!1,deprecated:!1},deadLetterRoutingKey:{kind:"parameter",type:"string",description:"The routing key for the dead letter exchange",title:"Dead Letter Routing Key",required:!1,deprecated:!1},exchangeType:{kind:"parameter",type:"string",defaultValue:"direct",enum:["direct","fanout","headers","topic"],description:"The type of the exchange",title:"Exchange Type",required:!1,deprecated:!1},exclusive:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set to true for an exclusive consumer",title:"Exclusive",required:!1,deprecated:!1},maximumRetryAttempts:{kind:"parameter",type:"integer",defaultValue:"5",description:"How many times a Rabbitmq consumer will retry the same message if Camel failed to process the message",title:"Maximum Retry Attempts",required:!1,deprecated:!1},noLocal:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set to true for an no-local consumer",title:"No Local",required:!1,deprecated:!1},queues:{kind:"parameter",type:"string",description:"The queue(s) to use for consuming messages. Multiple queue names can be separated by comma. If none has been configured then Camel will generate an unique id as the queue name for the consumer.",title:"Queues",required:!1,deprecated:!1},rejectAndDontRequeue:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether a Rabbitmq consumer should reject the message without requeuing. This enables failed messages to be sent to a Dead Letter Exchange/Queue, if the broker is so configured.",title:"Reject And Dont Requeue",required:!1,deprecated:!1},retryDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Delay in millis a Rabbitmq consumer will wait before redelivering a message that Camel failed to process",title:"Retry Delay",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",description:"The number of consumers",title:"Concurrent Consumers",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},maxConcurrentConsumers:{kind:"parameter",type:"integer",description:"The maximum number of consumers (available only with SMLC)",title:"Max Concurrent Consumers",required:!1,deprecated:!1},messageListenerContainerType:{kind:"parameter",type:"string",defaultValue:"DMLC",enum:["DMLC","SMLC"],description:"The type of the MessageListenerContainer",title:"Message Listener Container Type",required:!1,deprecated:!1},prefetchCount:{kind:"parameter",type:"integer",description:"Tell the broker how many messages to send in a single request. Often this can be set quite high to improve throughput.",title:"Prefetch Count",required:!1,deprecated:!1},retry:{kind:"parameter",type:"object",description:"Custom retry configuration to use. If this is configured then the other settings such as maximumRetryAttempts for retry are not in use.",title:"Retry",required:!1,deprecated:!1},allowNullBody:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow sending messages with no body. If this option is false and the message body is null, then an MessageConversionException is thrown.",title:"Allow Null Body",required:!1,deprecated:!1},confirm:{kind:"parameter",type:"string",defaultValue:"auto",enum:["auto","enabled","disabled"],description:"Controls whether to wait for confirms. The connection factory must be configured for publisher confirms and this method. auto = Camel detects if the connection factory uses confirms or not. disabled = Confirms is disabled. enabled = Confirms is enabled.",title:"Confirm",required:!1,deprecated:!1},confirmTimeout:{kind:"parameter",type:"duration",defaultValue:"5000",description:"Specify the timeout in milliseconds to be used when waiting for a message sent to be confirmed by RabbitMQ when doing send only messaging (InOnly). The default value is 5 seconds. A negative value indicates an indefinite timeout.",title:"Confirm Timeout",required:!1,deprecated:!1},replyTimeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Specify the timeout in milliseconds to be used when waiting for a reply message when doing request/reply (InOut) messaging. The default value is 30 seconds. A negative value indicates an indefinite timeout (Beware that this will cause a memory leak if a reply is not received).",title:"Reply Timeout",required:!1,deprecated:!1},usePublisherConnection:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Use a separate connection for publishers and consumers",title:"Use Publisher Connection",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},args:{kind:"parameter",type:"object",description:"Specify arguments for configuring the different RabbitMQ concepts, a different prefix is required for each element: arg.consumer. arg.exchange. arg.queue. arg.binding. arg.dlq.exchange. arg.dlq.queue. arg.dlq.binding. For example to declare a queue with message ttl argument: args=arg.queue.x-message-ttl=60000",title:"Args",required:!1,deprecated:!1},messageConverter:{kind:"parameter",type:"object",description:"To use a custom MessageConverter so you can be in control how to map to/from a org.springframework.amqp.core.Message.",title:"Message Converter",required:!1,deprecated:!1},messagePropertiesConverter:{kind:"parameter",type:"object",description:"To use a custom MessagePropertiesConverter so you can be in control how to map to/from a org.springframework.amqp.core.MessageProperties.",title:"Message Properties Converter",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1}}},"spring-redis":{type:"object",title:"Spring Redis",group:"cache",icon:"generic24.png",description:"Send and receive messages from Redis.",properties:{host:{kind:"path",type:"string",description:"The host where Redis server is running.",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Redis server port number",title:"Port",required:!0,deprecated:!1},channels:{kind:"parameter",type:"string",description:"List of topic names or name patterns to subscribe to. Multiple names can be separated by comma.",title:"Channels",required:!1,deprecated:!1},command:{kind:"parameter",type:"object",defaultValue:"SET",enum:["PING","SET","GET","QUIT","EXISTS","DEL","TYPE","FLUSHDB","KEYS","RANDOMKEY","RENAME","RENAMENX","RENAMEX","DBSIZE","EXPIRE","EXPIREAT","TTL","SELECT","MOVE","FLUSHALL","GETSET","MGET","SETNX","SETEX","MSET","MSETNX","DECRBY","DECR","INCRBY","INCR","APPEND","SUBSTR","HSET","HGET","HSETNX","HMSET","HMGET","HINCRBY","HEXISTS","HDEL","HLEN","HKEYS","HVALS","HGETALL","RPUSH","LPUSH","LLEN","LRANGE","LTRIM","LINDEX","LSET","LREM","LPOP","RPOP","RPOPLPUSH","SADD","SMEMBERS","SREM","SPOP","SMOVE","SCARD","SISMEMBER","SINTER","SINTERSTORE","SUNION","SUNIONSTORE","SDIFF","SDIFFSTORE","SRANDMEMBER","ZADD","ZRANGE","ZREM","ZINCRBY","ZRANK","ZREVRANK","ZREVRANGE","ZCARD","ZSCORE","MULTI","DISCARD","EXEC","WATCH","UNWATCH","SORT","BLPOP","BRPOP","AUTH","SUBSCRIBE","PUBLISH","UNSUBSCRIBE","PSUBSCRIBE","PUNSUBSCRIBE","ZCOUNT","ZRANGEBYSCORE","ZREVRANGEBYSCORE","ZREMRANGEBYRANK","ZREMRANGEBYSCORE","ZUNIONSTORE","ZINTERSTORE","SAVE","BGSAVE","BGREWRITEAOF","LASTSAVE","SHUTDOWN","INFO","MONITOR","SLAVEOF","CONFIG","STRLEN","SYNC","LPUSHX","PERSIST","RPUSHX","ECHO","LINSERT","DEBUG","BRPOPLPUSH","SETBIT","GETBIT","SETRANGE","GETRANGE","PEXPIRE","PEXPIREAT","GEOADD","GEODIST","GEOHASH","GEOPOS","GEORADIUS","GEORADIUSBYMEMBER"],description:"Default command, which can be overridden by message header. Notice the consumer only supports the following commands: PSUBSCRIBE and SUBSCRIBE",title:"Command",required:!1,deprecated:!1},connectionFactory:{kind:"parameter",type:"object",description:"Reference to a pre-configured RedisConnectionFactory instance to use.",title:"Connection Factory",required:!1,deprecated:!1},redisTemplate:{kind:"parameter",type:"object",description:"Reference to a pre-configured RedisTemplate instance to use.",title:"Redis Template",required:!1,deprecated:!1},serializer:{kind:"parameter",type:"object",description:"Reference to a pre-configured RedisSerializer instance to use.",title:"Serializer",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},listenerContainer:{kind:"parameter",type:"object",description:"Reference to a pre-configured RedisMessageListenerContainer instance to use.",title:"Listener Container",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"spring-ws":{type:"object",title:"Spring WebService",group:"webservice",icon:"generic24.png",description:"Access external web services as a client or expose your own web services.",properties:{type:{kind:"path",type:"object",enum:["ROOT_QNAME","ACTION","TO","SOAP_ACTION","XPATHRESULT","URI","URI_PATH","BEANNAME"],description:"Endpoint mapping type if endpoint mapping is used. rootqname - Offers the option to map web service requests based on the qualified name of the root element contained in the message. soapaction - Used to map web service requests based on the SOAP action specified in the header of the message. uri - In order to map web service requests that target a specific URI. xpathresult - Used to map web service requests based on the evaluation of an XPath expression against the incoming message. The result of the evaluation should match the XPath result specified in the endpoint URI. beanname - Allows you to reference an org.apache.camel.component.spring.ws.bean.CamelEndpointDispatcher object in order to integrate with existing (legacy) endpoint mappings like PayloadRootQNameEndpointMapping, SoapActionEndpointMapping, etc",title:"Type",required:!1,deprecated:!1},lookupKey:{kind:"path",type:"string",description:"Endpoint mapping key if endpoint mapping is used",title:"Lookup Key",required:!1,deprecated:!1},webServiceEndpointUri:{kind:"path",type:"string",description:"The default Web Service endpoint uri to use for the producer.",title:"Web Service Endpoint Uri",required:!1,deprecated:!1},messageFilter:{kind:"parameter",type:"object",description:"Option to provide a custom MessageFilter. For example when you want to process your headers or attachments by your own.",title:"Message Filter",required:!1,deprecated:!1},messageIdStrategy:{kind:"parameter",type:"object",description:"Option to provide a custom MessageIdStrategy to control generation of WS-Addressing unique message ids.",title:"Message Id Strategy",required:!1,deprecated:!1},endpointDispatcher:{kind:"parameter",type:"object",description:"Spring org.springframework.ws.server.endpoint.MessageEndpoint for dispatching messages received by Spring-WS to a Camel endpoint, to integrate with existing (legacy) endpoint mappings like PayloadRootQNameEndpointMapping, SoapActionEndpointMapping, etc.",title:"Endpoint Dispatcher",required:!1,deprecated:!1},endpointMapping:{kind:"parameter",type:"object",description:"Reference to an instance of org.apache.camel.component.spring.ws.bean.CamelEndpointMapping in the Registry/ApplicationContext. Only one bean is required in the registry to serve all Camel/Spring-WS endpoints. This bean is auto-discovered by the MessageDispatcher and used to map requests to Camel endpoints based on characteristics specified on the endpoint (like root QName, SOAP action, etc)",title:"Endpoint Mapping",required:!1,deprecated:!1},expression:{kind:"parameter",type:"string",description:"The XPath expression to use when option type=xpathresult. Then this option is required to be configured.",title:"Expression",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},allowResponseAttachmentOverride:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to override soap response attachments in in/out exchange with attachments from the actual service layer. If the invoked service appends or rewrites the soap attachments this option when set to true, allows the modified soap attachments to be overwritten in in/out message attachments",title:"Allow Response Attachment Override",required:!1,deprecated:!1},allowResponseHeaderOverride:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Option to override soap response header in in/out exchange with header info from the actual service layer. If the invoked service appends or rewrites the soap header this option when set to true, allows the modified soap header to be overwritten in in/out message headers",title:"Allow Response Header Override",required:!1,deprecated:!1},faultAction:{kind:"parameter",type:"string",description:"Signifies the value for the faultAction response WS-Addressing Fault Action header that is provided by the method. See org.springframework.ws.soap.addressing.server.annotation.Action annotation for more details.",title:"Fault Action",required:!1,deprecated:!1},faultTo:{kind:"parameter",type:"string",description:"Signifies the value for the faultAction response WS-Addressing FaultTo header that is provided by the method. See org.springframework.ws.soap.addressing.server.annotation.Action annotation for more details.",title:"Fault To",required:!1,deprecated:!1},messageFactory:{kind:"parameter",type:"object",description:"Option to provide a custom WebServiceMessageFactory. For example when you want Apache Axiom to handle web service messages instead of SAAJ.",title:"Message Factory",required:!1,deprecated:!1},messageSender:{kind:"parameter",type:"object",description:"Option to provide a custom WebServiceMessageSender. For example to perform authentication or use alternative transports",title:"Message Sender",required:!1,deprecated:!1},outputAction:{kind:"parameter",type:"string",description:"Signifies the value for the response WS-Addressing Action header that is provided by the method. See org.springframework.ws.soap.addressing.server.annotation.Action annotation for more details.",title:"Output Action",required:!1,deprecated:!1},replyTo:{kind:"parameter",type:"string",description:"Signifies the value for the replyTo response WS-Addressing ReplyTo header that is provided by the method. See org.springframework.ws.soap.addressing.server.annotation.Action annotation for more details.",title:"Reply To",required:!1,deprecated:!1},soapAction:{kind:"parameter",type:"string",description:"SOAP action to include inside a SOAP request when accessing remote web services",title:"Soap Action",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",description:"Sets the socket read timeout (in milliseconds) while invoking a webservice using the producer, see URLConnection.setReadTimeout() and CommonsHttpMessageSender.setReadTimeout(). This option works when using the built-in message sender implementations: CommonsHttpMessageSender and HttpUrlConnectionMessageSender. One of these implementations will be used by default for HTTP based services unless you customize the Spring WS configuration options supplied to the component. If you are using a non-standard sender, it is assumed that you will handle your own timeout configuration. The built-in message sender HttpComponentsMessageSender is considered instead of CommonsHttpMessageSender which has been deprecated, see HttpComponentsMessageSender.setReadTimeout().",title:"Timeout",required:!1,deprecated:!1},webServiceTemplate:{kind:"parameter",type:"object",description:"Option to provide a custom WebServiceTemplate. This allows for full control over client-side web services handling; like adding a custom interceptor or specifying a fault resolver, message sender or message factory.",title:"Web Service Template",required:!1,deprecated:!1},wsAddressingAction:{kind:"parameter",type:"string",description:"WS-Addressing 1.0 action header to include when accessing web services. The To header is set to the address of the web service as specified in the endpoint URI (default Spring-WS behavior).",title:"Ws Addressing Action",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},sql:{type:"object",title:"SQL",group:"database",icon:"generic24.png",description:"Perform SQL queries using Spring JDBC.",properties:{query:{kind:"path",type:"string",description:"Sets the SQL query to perform. You can externalize the query by using file: or classpath: as prefix and specify the location of the file.",title:"Query",required:!0,deprecated:!1},allowNamedParameters:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using named parameters in the queries.",title:"Allow Named Parameters",required:!1,deprecated:!1},dataSource:{kind:"parameter",type:"object",description:"Sets the DataSource to use to communicate with the database at endpoint level.",title:"Data Source",required:!1,deprecated:!1},outputClass:{kind:"parameter",type:"string",description:"Specify the full package and class name to use as conversion when outputType=SelectOne.",title:"Output Class",required:!1,deprecated:!1},outputHeader:{kind:"parameter",type:"string",description:"Store the query result in a header instead of the message body. By default, outputHeader == null and the query result is stored in the message body, any existing content in the message body is discarded. If outputHeader is set, the value is used as the name of the header to store the query result and the original message body is preserved.",title:"Output Header",required:!1,deprecated:!1},outputType:{kind:"parameter",type:"object",defaultValue:"SelectList",enum:["SelectOne","SelectList","StreamList"],description:"Make the output of consumer or producer to SelectList as List of Map, or SelectOne as single Java object in the following way: a) If the query has only single column, then that JDBC Column object is returned. (such as SELECT COUNT( ) FROM PROJECT will return a Long object. b) If the query has more than one column, then it will return a Map of that result. c) If the outputClass is set, then it will convert the query result into an Java bean object by calling all the setters that match the column names. It will assume your class has a default constructor to create instance with. d) If the query resulted in more than one rows, it throws an non-unique result exception. StreamList streams the result of the query using an Iterator. This can be used with the Splitter EIP in streaming mode to process the ResultSet in streaming fashion.",title:"Output Type",required:!1,deprecated:!1},separator:{kind:"parameter",type:"string",defaultValue:",",description:"The separator to use when parameter values is taken from message body (if the body is a String type), to be inserted at # placeholders. Notice if you use named parameters, then a Map type is used instead. The default value is comma",title:"Separator",required:!1,deprecated:!1},breakBatchOnConsumeFail:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to break batch if onConsume failed.",title:"Break Batch On Consume Fail",required:!1,deprecated:!1},expectedUpdateCount:{kind:"parameter",type:"integer",defaultValue:"-1",description:"Sets an expected update count to validate when using onConsume.",title:"Expected Update Count",required:!1,deprecated:!1},maxMessagesPerPoll:{kind:"parameter",type:"integer",description:"Sets the maximum number of messages to poll",title:"Max Messages Per Poll",required:!1,deprecated:!1},onConsume:{kind:"parameter",type:"string",description:"After processing each row then this query can be executed, if the Exchange was processed successfully, for example to mark the row as processed. The query can have parameter.",title:"On Consume",required:!1,deprecated:!1},onConsumeBatchComplete:{kind:"parameter",type:"string",description:"After processing the entire batch, this query can be executed to bulk update rows etc. The query cannot have parameters.",title:"On Consume Batch Complete",required:!1,deprecated:!1},onConsumeFailed:{kind:"parameter",type:"string",description:"After processing each row then this query can be executed, if the Exchange failed, for example to mark the row as failed. The query can have parameter.",title:"On Consume Failed",required:!1,deprecated:!1},routeEmptyResultSet:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether empty resultset should be allowed to be sent to the next hop. Defaults to false. So the empty resultset will be filtered out.",title:"Route Empty Result Set",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},transacted:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables or disables transaction. If enabled then if processing an exchange failed then the consumer breaks out processing any further exchanges to cause a rollback eager.",title:"Transacted",required:!1,deprecated:!1},useIterator:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets how resultset should be delivered to route. Indicates delivery as either a list or individual object. defaults to true.",title:"Use Iterator",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},processingStrategy:{kind:"parameter",type:"object",description:"Allows to plugin to use a custom org.apache.camel.component.sql.SqlProcessingStrategy to execute queries when the consumer has processed the rows/batch.",title:"Processing Strategy",required:!1,deprecated:!1},batch:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables or disables batch mode",title:"Batch",required:!1,deprecated:!1},noop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set, will ignore the results of the SQL query and use the existing IN message as the OUT message for the continuation of processing",title:"Noop",required:!1,deprecated:!1},useMessageBodyForSql:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use the message body as the SQL and then headers for parameters. If this option is enabled then the SQL in the uri is not used. Note that query parameters in the message body are represented by a question mark instead of a # symbol.",title:"Use Message Body For Sql",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},alwaysPopulateStatement:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled then the populateStatement method from org.apache.camel.component.sql.SqlPrepareStatementStrategy is always invoked, also if there is no expected parameters to be prepared. When this is false then the populateStatement is only invoked if there is 1 or more expected parameters to be set; for example this avoids reading the message body/headers for SQL queries with no parameters.",title:"Always Populate Statement",required:!1,deprecated:!1},parametersCount:{kind:"parameter",type:"integer",description:"If set greater than zero, then Camel will use this count value of parameters to replace instead of querying via JDBC metadata API. This is useful if the JDBC vendor could not return correct parameters count, then user may override instead.",title:"Parameters Count",required:!1,deprecated:!1},placeholder:{kind:"parameter",type:"string",defaultValue:"#",description:"Specifies a character that will be replaced to in SQL query. Notice, that it is simple String.replaceAll() operation and no SQL parsing is involved (quoted strings will also change).",title:"Placeholder",required:!1,deprecated:!1},prepareStatementStrategy:{kind:"parameter",type:"object",description:"Allows to plugin to use a custom org.apache.camel.component.sql.SqlPrepareStatementStrategy to control preparation of the query and prepared statement.",title:"Prepare Statement Strategy",required:!1,deprecated:!1},rowMapperFactory:{kind:"parameter",type:"object",description:"Factory for creating RowMapper",title:"Row Mapper Factory",required:!1,deprecated:!1},templateOptions:{kind:"parameter",type:"object",description:"Configures the Spring JdbcTemplate with the key/values from the Map",title:"Template Options",required:!1,deprecated:!1},usePlaceholder:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sets whether to use placeholder and replace all placeholder characters with sign in the SQL queries.",title:"Use Placeholder",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},"sql-stored":{type:"object",title:"SQL Stored Procedure",group:"database",icon:"generic24.png",description:"Perform SQL queries as a JDBC Stored Procedures using Spring JDBC.",properties:{template:{kind:"path",type:"string",description:"Sets the stored procedure template to perform. You can externalize the template by using file: or classpath: as prefix and specify the location of the file.",title:"Template",required:!0,deprecated:!1},batch:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables or disables batch mode",title:"Batch",required:!1,deprecated:!1},dataSource:{kind:"parameter",type:"object",description:"Sets the DataSource to use to communicate with the database.",title:"Data Source",required:!1,deprecated:!1},function:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether this call is for a function.",title:"Function",required:!1,deprecated:!1},noop:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If set, will ignore the results of the stored procedure template and use the existing IN message as the OUT message for the continuation of processing",title:"Noop",required:!1,deprecated:!1},outputHeader:{kind:"parameter",type:"string",description:"Store the template result in a header instead of the message body. By default, outputHeader == null and the template result is stored in the message body, any existing content in the message body is discarded. If outputHeader is set, the value is used as the name of the header to store the template result and the original message body is preserved.",title:"Output Header",required:!1,deprecated:!1},useMessageBodyForTemplate:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to use the message body as the stored procedure template and then headers for parameters. If this option is enabled then the template in the uri is not used.",title:"Use Message Body For Template",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},templateOptions:{kind:"parameter",type:"object",description:"Configures the Spring JdbcTemplate with the key/values from the Map",title:"Template Options",required:!1,deprecated:!1}}},ssh:{type:"object",title:"SSH",group:"file",icon:"generic24.png",description:"Execute commands on remote hosts using SSH.",properties:{host:{kind:"path",type:"string",description:"Sets the hostname of the remote SSH server.",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",defaultValue:"22",description:"Sets the port number for the remote SSH server.",title:"Port",required:!1,deprecated:!1},failOnUnknownHost:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether a connection to an unknown host should fail or not. This value is only checked when the property knownHosts is set.",title:"Fail On Unknown Host",required:!1,deprecated:!1},knownHostsResource:{kind:"parameter",type:"string",description:"Sets the resource path for a known_hosts file",title:"Known Hosts Resource",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Sets the timeout in milliseconds to wait in establishing the remote SSH server connection. Defaults to 30000 milliseconds.",title:"Timeout",required:!1,deprecated:!1},pollCommand:{kind:"parameter",type:"string",description:"Sets the command string to send to the remote SSH server during every poll cycle. Only works with camel-ssh component being used as a consumer, i.e. from(ssh://...) You may need to end your command with a newline, and that must be URL encoded %0A",title:"Poll Command",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},channelType:{kind:"parameter",type:"string",defaultValue:"exec",description:"Sets the channel type to pass to the Channel as part of command execution. Defaults to exec.",title:"Channel Type",required:!1,deprecated:!1},shellPrompt:{kind:"parameter",type:"string",description:"Sets the shellPrompt to be dropped when response is read after command execution",title:"Shell Prompt",required:!1,deprecated:!1},sleepForShellPrompt:{kind:"parameter",type:"integer",defaultValue:"100",description:"Sets the sleep period in milliseconds to wait reading response from shell prompt. Defaults to 100 milliseconds.",title:"Sleep For Shell Prompt",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},certResource:{kind:"parameter",type:"string",description:"Sets the resource path of the certificate to use for Authentication. Will use ResourceHelperKeyPairProvider to resolve file based certificate, and depends on keyType setting.",title:"Cert Resource",required:!1,deprecated:!1},certResourcePassword:{kind:"parameter",type:"string",description:"Sets the password to use in loading certResource, if certResource is an encrypted key.",title:"Cert Resource Password",required:!1,deprecated:!1},keyPairProvider:{kind:"parameter",type:"object",description:"Sets the KeyPairProvider reference to use when connecting using Certificates to the remote SSH Server.",title:"Key Pair Provider",required:!1,deprecated:!1},keyType:{kind:"parameter",type:"string",description:"Sets the key type to pass to the KeyPairProvider as part of authentication. KeyPairProvider.loadKey(...) will be passed this value. From Camel 3.0.0 / 2.25.0, by default Camel will select the first available KeyPair that is loaded. Prior to this, a KeyType of 'ssh-rsa' was enforced by default.",title:"Key Type",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Sets the password to use in connecting to remote SSH server. Requires keyPairProvider to be set to null.",title:"Password",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"Sets the username to use in logging into the remote SSH server.",title:"Username",required:!1,deprecated:!1}}},stax:{type:"object",title:"StAX",group:"transformation",icon:"generic24.png",description:"Process XML payloads by a SAX ContentHandler.",properties:{contentHandlerClass:{kind:"path",type:"string",description:"The FQN class name for the ContentHandler implementation to use.",title:"Content Handler Class",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},stitch:{type:"object",title:"Stitch",group:"cloud,api,saas,bigdata",icon:"generic24.png",description:"Stitch is a cloud ETL service that integrates various data sources into a central data warehouse through various integrations.",properties:{tableName:{kind:"path",type:"string",description:"The name of the destination table the data is being pushed to. Table names must be unique in each destination schema, or loading issues will occur. Note: The number of characters in the table name should be within the destination's allowed limits or data will rejected.",title:"Table Name",required:!1,deprecated:!1},keyNames:{kind:"parameter",type:"string",description:"A collection of comma separated strings representing the Primary Key fields in the source table. Stitch use these Primary Keys to de-dupe data during loading If not provided, the table will be loaded in an append-only manner.",title:"Key Names",required:!1,deprecated:!1},region:{kind:"parameter",type:"object",defaultValue:"EUROPE",enum:["NORTH_AMERICA","EUROPE"],description:"Stitch account region, e.g: europe",title:"Region",required:!1,deprecated:!1},stitchSchema:{kind:"parameter",type:"object",description:"A schema that describes the record(s)",title:"Stitch Schema",required:!1,deprecated:!1},connectionProvider:{kind:"parameter",type:"object",description:"ConnectionProvider contain configuration for the HttpClient like Maximum connection limit .. etc, you can inject this ConnectionProvider and the StitchClient will initialize HttpClient with this ConnectionProvider",title:"Connection Provider",required:!1,deprecated:!1},httpClient:{kind:"parameter",type:"object",description:"Reactor Netty HttpClient, you can injected it if you want to have custom HttpClient",title:"Http Client",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},stitchClient:{kind:"parameter",type:"object",description:"Set a custom StitchClient that implements org.apache.camel.component.stitch.client.StitchClient interface",title:"Stitch Client",required:!1,deprecated:!1},token:{kind:"parameter",type:"string",description:"Stitch access token for the Stitch Import API",title:"Token",required:!0,deprecated:!1}}},stomp:{type:"object",title:"Stomp",group:"messaging",icon:"generic24.png",description:"Send and rececive messages to/from STOMP (Simple Text Oriented Messaging Protocol) compliant message brokers.",properties:{destination:{kind:"path",type:"string",description:"Name of the queue",title:"Destination",required:!0,deprecated:!1},brokerURL:{kind:"parameter",type:"string",defaultValue:"tcp://localhost:61613",description:"The URI of the Stomp broker to connect to",title:"Broker URL",required:!0,deprecated:!1},customHeaders:{kind:"parameter",type:"object",description:"To set custom headers",title:"Custom Headers",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",description:"The virtual host name",title:"Host",required:!1,deprecated:!1},version:{kind:"parameter",type:"string",description:"The stomp version (1.1, or 1.2)",title:"Version",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},login:{kind:"parameter",type:"string",description:"The username",title:"Login",required:!1,deprecated:!1},passcode:{kind:"parameter",type:"string",description:"The password",title:"Passcode",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},stream:{type:"object",title:"Stream",group:"file,core",icon:"generic24.png",description:"Read from system-in and write to system-out and system-err streams.",properties:{kind:{kind:"path",type:"string",enum:["in","out","err","header","file","http"],description:"Kind of stream to use such as System.in, System.out, a file, or a http url.",title:"Kind",required:!0,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"You can configure the encoding (is a charset name) to use text-based streams (for example, message body is a String object). If not provided, Camel uses the JVM default Charset.",title:"Encoding",required:!1,deprecated:!1},fileName:{kind:"parameter",type:"string",description:"When using the stream:file URI format, this option specifies the filename to stream to/from.",title:"File Name",required:!1,deprecated:!1},fileWatcher:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To use JVM file watcher to listen for file change events to support re-loading files that may be overwritten, somewhat like tail --retry",title:"File Watcher",required:!1,deprecated:!1},groupLines:{kind:"parameter",type:"integer",description:"To group X number of lines in the consumer. For example to group 10 lines and therefore only spit out an Exchange with 10 lines, instead of 1 Exchange per line.",title:"Group Lines",required:!1,deprecated:!1},groupStrategy:{kind:"parameter",type:"object",description:"Allows to use a custom GroupStrategy to control how to group lines.",title:"Group Strategy",required:!1,deprecated:!1},httpHeaders:{kind:"parameter",type:"string",description:"When using stream:http format, this option specifies optional http headers, such as Accept: application/json. Multiple headers can be separated by comma.",title:"Http Headers",required:!1,deprecated:!1},httpUrl:{kind:"parameter",type:"string",description:"When using stream:http format, this option specifies the http url to stream from.",title:"Http Url",required:!1,deprecated:!1},initialPromptDelay:{kind:"parameter",type:"integer",defaultValue:"2000",description:"Initial delay in milliseconds before showing the message prompt. This delay occurs only once. Can be used during system startup to avoid message prompts being written while other logging is done to the system out.",title:"Initial Prompt Delay",required:!1,deprecated:!1},promptDelay:{kind:"parameter",type:"integer",description:"Optional delay in milliseconds before showing the message prompt.",title:"Prompt Delay",required:!1,deprecated:!1},promptMessage:{kind:"parameter",type:"string",description:"Message prompt to use when reading from stream:in; for example, you could set this to Enter a command:",title:"Prompt Message",required:!1,deprecated:!1},readLine:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to read the input stream in line mode (terminate by line breaks). Setting this to false, will instead read the entire stream until EOL.",title:"Read Line",required:!1,deprecated:!1},retry:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Will retry opening the stream if it's overwritten, somewhat like tail --retry If reading from files then you should also enable the fileWatcher option, to make it work reliable.",title:"Retry",required:!1,deprecated:!1},scanStream:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To be used for continuously reading a stream such as the unix tail command.",title:"Scan Stream",required:!1,deprecated:!1},scanStreamDelay:{kind:"parameter",type:"integer",description:"Delay in milliseconds between read attempts when using scanStream.",title:"Scan Stream Delay",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},appendNewLine:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to append a new line character at end of output.",title:"Append New Line",required:!1,deprecated:!1},autoCloseCount:{kind:"parameter",type:"integer",description:"Number of messages to process before closing stream on Producer side. Never close stream by default (only when Producer is stopped). If more messages are sent, the stream is reopened for another autoCloseCount batch.",title:"Auto Close Count",required:!1,deprecated:!1},closeOnDone:{kind:"parameter",type:"boolean",defaultValue:"false",description:"This option is used in combination with Splitter and streaming to the same file. The idea is to keep the stream open and only close when the Splitter is done, to improve performance. Mind this requires that you only stream to the same file, and not 2 or more files.",title:"Close On Done",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",description:"Initial delay in milliseconds before producing the stream.",title:"Delay",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},readTimeout:{kind:"parameter",type:"integer",description:"Sets the read timeout to a specified timeout, in milliseconds. A non-zero value specifies the timeout when reading from Input stream when a connection is established to a resource. If the timeout expires before there is data available for read, a java.net.SocketTimeoutException is raised. A timeout of zero is interpreted as an infinite timeout.",title:"Read Timeout",required:!1,deprecated:!1}}},"string-template":{type:"object",title:"String Template",group:"transformation,script",icon:"generic24.png",description:"Transform messages using StringTemplate engine.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},delimiterStart:{kind:"parameter",type:"string",defaultValue:"<",description:"The variable start delimiter",title:"Delimiter Start",required:!1,deprecated:!1},delimiterStop:{kind:"parameter",type:"string",defaultValue:">",description:"The variable end delimiter",title:"Delimiter Stop",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},stub:{type:"object",title:"Stub",group:"core,testing",icon:"generic24.png",description:"Stub out any physical endpoints while in development or testing.",properties:{name:{kind:"path",type:"string",description:"Name of queue",title:"Name",required:!0,deprecated:!1},size:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The maximum capacity of the SEDA queue (i.e., the number of messages it can hold). Will by default use the defaultSize set on the SEDA component.",title:"Size",required:!1,deprecated:!1},concurrentConsumers:{kind:"parameter",type:"integer",defaultValue:"1",description:"Number of concurrent threads processing exchanges.",title:"Concurrent Consumers",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},limitConcurrentConsumers:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to limit the number of concurrentConsumers to the maximum of 500. By default, an exception will be thrown if an endpoint is configured with a greater number. You can disable that check by turning this option off.",title:"Limit Concurrent Consumers",required:!1,deprecated:!1},multipleConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether multiple consumers are allowed. If enabled, you can use SEDA for Publish-Subscribe messaging. That is, you can send a message to the SEDA queue and have each consumer receive a copy of the message. When enabled, this option should be specified on every consumer endpoint.",title:"Multiple Consumers",required:!1,deprecated:!1},pollTimeout:{kind:"parameter",type:"integer",defaultValue:"1000",description:"The timeout (in milliseconds) used when polling. When a timeout occurs, the consumer can check whether it is allowed to continue running. Setting a lower value allows the consumer to react more quickly upon shutdown.",title:"Poll Timeout",required:!1,deprecated:!1},purgeWhenStopping:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to purge the task queue when stopping the consumer/route. This allows to stop faster, as any pending messages on the queue is discarded.",title:"Purge When Stopping",required:!1,deprecated:!1},blockWhenFull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a thread that sends messages to a full SEDA queue will block until the queue's capacity is no longer exhausted. By default, an exception will be thrown stating that the queue is full. By enabling this option, the calling thread will instead block and wait until the message can be accepted.",title:"Block When Full",required:!1,deprecated:!1},discardIfNoConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should discard the message (do not add the message to the queue), when sending to a queue with no active consumers. Only one of the options discardIfNoConsumers and failIfNoConsumers can be enabled at the same time.",title:"Discard If No Consumers",required:!1,deprecated:!1},discardWhenFull:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether a thread that sends messages to a full SEDA queue will be discarded. By default, an exception will be thrown stating that the queue is full. By enabling this option, the calling thread will give up sending and continue, meaning that the message was not sent to the SEDA queue.",title:"Discard When Full",required:!1,deprecated:!1},failIfNoConsumers:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should fail by throwing an exception, when sending to a queue with no active consumers. Only one of the options discardIfNoConsumers and failIfNoConsumers can be enabled at the same time.",title:"Fail If No Consumers",required:!1,deprecated:!1},offerTimeout:{kind:"parameter",type:"duration",description:"Offer timeout (in milliseconds) can be added to the block case when queue is full. You can disable timeout by using 0 or a negative value.",title:"Offer Timeout",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Timeout (in milliseconds) before a SEDA producer will stop waiting for an asynchronous task to complete. You can disable timeout by using 0 or a negative value.",title:"Timeout",required:!1,deprecated:!1},waitForTaskToComplete:{kind:"parameter",type:"object",defaultValue:"IfReplyExpected",enum:["Never","IfReplyExpected","Always"],description:"Option to specify whether the caller should wait for the async task to complete or not before continuing. The following three options are supported: Always, Never or IfReplyExpected. The first two values are self-explanatory. The last value, IfReplyExpected, will only wait if the message is Request Reply based. The default option is IfReplyExpected.",title:"Wait For Task To Complete",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},queue:{kind:"parameter",type:"object",description:"Define the queue instance which will be used by the endpoint",title:"Queue",required:!1,deprecated:!1}}},telegram:{type:"object",title:"Telegram",group:"cloud,api,chat",icon:"generic24.png",description:"Send and receive messages acting as a Telegram Bot Telegram Bot API.",properties:{type:{kind:"path",type:"string",enum:["bots"],description:"The endpoint type. Currently, only the 'bots' type is supported.",title:"Type",required:!0,deprecated:!1},limit:{kind:"parameter",type:"integer",defaultValue:"100",description:"Limit on the number of updates that can be received in a single polling request.",title:"Limit",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"30",description:"Timeout in seconds for long polling. Put 0 for short polling or a bigger number for long polling. Long polling produces shorter response time.",title:"Timeout",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},chatId:{kind:"parameter",type:"string",description:"The identifier of the chat that will receive the produced messages. Chat ids can be first obtained from incoming messages (eg. when a telegram user starts a conversation with a bot, its client sends automatically a '/start' message containing the chat id). It is an optional parameter, as the chat id can be set dynamically for each outgoing message (using body or headers).",title:"Chat Id",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},baseUri:{kind:"parameter",type:"string",description:"Can be used to set an alternative base URI, e.g. when you want to test the component against a mock Telegram API",title:"Base Uri",required:!1,deprecated:!1},bufferSize:{kind:"parameter",type:"integer",defaultValue:"1048576",description:"The initial in-memory buffer size used when transferring data between Camel and AHC Client.",title:"Buffer Size",required:!1,deprecated:!1},client:{kind:"parameter",type:"object",description:"To use a custom HttpClient",title:"Client",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"HTTP proxy host which could be used when sending out the message.",title:"Proxy Host",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"HTTP proxy port which could be used when sending out the message.",title:"Proxy Port",required:!1,deprecated:!1},proxyType:{kind:"parameter",type:"object",defaultValue:"HTTP",enum:["HTTP","SOCKS4","SOCKS5"],description:"HTTP proxy type which could be used when sending out the message.",title:"Proxy Type",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},authorizationToken:{kind:"parameter",type:"string",description:"The authorization token for using the bot (ask the BotFather)",title:"Authorization Token",required:!0,deprecated:!1}}},thrift:{type:"object",title:"Thrift",group:"rpc,transformation",icon:"generic24.png",description:"Call and expose remote procedures (RPC) with Apache Thrift data format and serialization mechanism.",properties:{host:{kind:"path",type:"string",description:"The Thrift server host name. This is localhost or 0.0.0.0 (if not defined) when being a consumer or remote server host name when using producer.",title:"Host",required:!1,deprecated:!1},port:{kind:"path",type:"integer",description:"The Thrift server port",title:"Port",required:!0,deprecated:!1},service:{kind:"path",type:"string",description:"Fully qualified service name from the thrift descriptor file (package dot service definition name)",title:"Service",required:!0,deprecated:!1},compressionType:{kind:"parameter",type:"object",defaultValue:"NONE",enum:["NONE","ZLIB"],description:"Protocol compression mechanism type",title:"Compression Type",required:!1,deprecated:!1},exchangeProtocol:{kind:"parameter",type:"object",defaultValue:"BINARY",enum:["BINARY","JSON","SJSON","COMPACT"],description:"Exchange protocol serialization type",title:"Exchange Protocol",required:!1,deprecated:!1},clientTimeout:{kind:"parameter",type:"integer",description:"Client timeout for consumers",title:"Client Timeout",required:!1,deprecated:!1},maxPoolSize:{kind:"parameter",type:"integer",defaultValue:"10",description:"The Thrift server consumer max thread pool size",title:"Max Pool Size",required:!1,deprecated:!1},poolSize:{kind:"parameter",type:"integer",defaultValue:"1",description:"The Thrift server consumer initial thread pool size",title:"Pool Size",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},method:{kind:"parameter",type:"string",description:"The Thrift invoked method name",title:"Method",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},negotiationType:{kind:"parameter",type:"object",defaultValue:"PLAINTEXT",enum:["PLAINTEXT","SSL","SASL"],description:"Security negotiation type",title:"Negotiation Type",required:!1,deprecated:!1},sslParameters:{kind:"parameter",type:"object",description:"Configuration parameters for SSL/TLS security negotiation",title:"Ssl Parameters",required:!1,deprecated:!1}}},tika:{type:"object",title:"Tika",group:"document,transformation",icon:"generic24.png",description:"Parse documents and extract metadata and text using Apache Tika.",properties:{operation:{kind:"path",type:"object",enum:["parse","detect"],description:"Operation type",title:"Operation",required:!0,deprecated:!1},tikaParseOutputEncoding:{kind:"parameter",type:"string",description:"Tika Parse Output Encoding",title:"Tika Parse Output Encoding",required:!1,deprecated:!1},tikaParseOutputFormat:{kind:"parameter",type:"object",defaultValue:"xml",enum:["xml","html","text","textMain"],description:"Tika Output Format. Supported output formats. xml: Returns Parsed Content as XML. html: Returns Parsed Content as HTML. text: Returns Parsed Content as Text. textMain: Uses the boilerpipe library to automatically extract the main content from a web page.",title:"Tika Parse Output Format",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},tikaConfig:{kind:"parameter",type:"object",description:"Tika Config",title:"Tika Config",required:!1,deprecated:!1},tikaConfigUri:{kind:"parameter",type:"string",description:"Tika Config Url",title:"Tika Config Uri",required:!1,deprecated:!1}}},timer:{type:"object",title:"Timer",group:"core,scheduling",icon:"generic24.png",description:"Generate messages in specified intervals using java.util.Timer.",properties:{timerName:{kind:"path",type:"string",description:"The name of the timer",title:"Timer Name",required:!0,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"1000",description:"Delay before first event is triggered.",title:"Delay",required:!1,deprecated:!1},fixedRate:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Events take place at approximately regular intervals, separated by the specified period.",title:"Fixed Rate",required:!1,deprecated:!1},includeMetadata:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to include metadata in the exchange such as fired time, timer name, timer count etc. This information is default included.",title:"Include Metadata",required:!1,deprecated:!1},period:{kind:"parameter",type:"duration",defaultValue:"1000",description:"If greater than 0, generate periodic events every period.",title:"Period",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the timer will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},daemon:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether or not the thread associated with the timer endpoint runs as a daemon. The default value is true.",title:"Daemon",required:!1,deprecated:!1},pattern:{kind:"parameter",type:"string",description:"Allows you to specify a custom Date pattern to use for setting the time option using URI syntax.",title:"Pattern",required:!1,deprecated:!1},synchronous:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether synchronous processing should be strictly used",title:"Synchronous",required:!1,deprecated:!1},time:{kind:"parameter",type:"string",description:"A java.util.Date the first event should be generated. If using the URI, the pattern expected is: yyyy-MM-dd HH:mm:ss or yyyy-MM-dd'T'HH:mm:ss.",title:"Time",required:!1,deprecated:!1},timer:{kind:"parameter",type:"object",description:"To use a custom Timer",title:"Timer",required:!1,deprecated:!1}}},twilio:{type:"object",title:"Twilio",group:"api,messaging,cloud",icon:"generic24.png",description:"Interact with Twilio REST APIs using Twilio Java SDK.",properties:{apiName:{kind:"path",type:"object",enum:["ACCOUNT","ADDRESS","APPLICATION","AVAILABLE_PHONE_NUMBER_COUNTRY","CALL","CONFERENCE","CONNECT_APP","INCOMING_PHONE_NUMBER","KEY","MESSAGE","NEW_KEY","NEW_SIGNING_KEY","NOTIFICATION","OUTGOING_CALLER_ID","QUEUE","RECORDING","SHORT_CODE","SIGNING_KEY","TOKEN","TRANSCRIPTION","VALIDATION_REQUEST","ADDRESS_DEPENDENT_PHONE_NUMBER","AVAILABLE_PHONE_NUMBER_COUNTRY_LOCAL","AVAILABLE_PHONE_NUMBER_COUNTRY_MOBILE","AVAILABLE_PHONE_NUMBER_COUNTRY_TOLL_FREE","CALL_FEEDBACK","CALL_FEEDBACK_SUMMARY","CALL_NOTIFICATION","CALL_RECORDING","CONFERENCE_PARTICIPANT","INCOMING_PHONE_NUMBER_LOCAL","INCOMING_PHONE_NUMBER_MOBILE","INCOMING_PHONE_NUMBER_TOLL_FREE","MESSAGE_FEEDBACK","MESSAGE_MEDIA","QUEUE_MEMBER","RECORDING_ADD_ON_RESULT","RECORDING_TRANSCRIPTION","RECORDING_ADD_ON_RESULT_PAYLOAD","SIP_CREDENTIAL_LIST","SIP_DOMAIN","SIP_IP_ACCESS_CONTROL_LIST","SIP_CREDENTIAL_LIST_CREDENTIAL","SIP_DOMAIN_CREDENTIAL_LIST_MAPPING","SIP_DOMAIN_IP_ACCESS_CONTROL_LIST_MAPPING","SIP_IP_ACCESS_CONTROL_LIST_IP_ADDRESS","USAGE_RECORD","USAGE_TRIGGER","USAGE_RECORD_ALL_TIME","USAGE_RECORD_DAILY","USAGE_RECORD_LAST_MONTH","USAGE_RECORD_MONTHLY","USAGE_RECORD_THIS_MONTH","USAGE_RECORD_TODAY","USAGE_RECORD_YEARLY","USAGE_RECORD_YESTERDAY"],description:"What kind of operation to perform",title:"Api Name",required:!0,deprecated:!1},methodName:{kind:"path",type:"string",enum:["create","delete","fetch","read","update"],description:"What sub operation to use for the selected operation",title:"Method Name",required:!0,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},"twitter-directmessage":{type:"object",title:"Twitter Direct Message",group:"saas,social",icon:"generic24.png",description:"Send and receive Twitter direct messages.",properties:{user:{kind:"path",type:"string",description:"The user name to send a direct message. This will be ignored for consumer.",title:"User",required:!0,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},type:{kind:"parameter",type:"object",defaultValue:"polling",enum:["polling","direct"],description:"Endpoint type to use.",title:"Type",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},distanceMetric:{kind:"parameter",type:"string",defaultValue:"km",enum:["km","mi"],description:"Used by the geography search, to search by radius using the configured metrics. The unit can either be mi for miles, or km for kilometers. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Distance Metric",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},extendedMode:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for enabling full text from twitter (eg receive tweets that contains more than 140 characters).",title:"Extended Mode",required:!1,deprecated:!1},latitude:{kind:"parameter",type:"number",description:"Used by the geography search to search by latitude. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Latitude",required:!1,deprecated:!1},locations:{kind:"parameter",type:"string",description:"Bounding boxes, created by pairs of lat/lons. Can be used for filter. A pair is defined as lat,lon. And multiple pairs can be separated by semicolon.",title:"Locations",required:!1,deprecated:!1},longitude:{kind:"parameter",type:"number",description:"Used by the geography search to search by longitude. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Longitude",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},radius:{kind:"parameter",type:"number",description:"Used by the geography search to search by radius. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Radius",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},count:{kind:"parameter",type:"integer",defaultValue:"5",description:"Limiting number of results per page.",title:"Count",required:!1,deprecated:!1},filterOld:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Filter out old tweets, that has previously been polled. This state is stored in memory only, and based on last tweet id.",title:"Filter Old",required:!1,deprecated:!1},lang:{kind:"parameter",type:"string",description:"The lang string ISO_639-1 which will be used for searching",title:"Lang",required:!1,deprecated:!1},numberOfPages:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of pages result which you want camel-twitter to consume.",title:"Number Of Pages",required:!1,deprecated:!1},sinceId:{kind:"parameter",type:"integer",defaultValue:"1",description:"The last tweet id which will be used for pulling the tweets. It is useful when the camel route is restarted after a long running.",title:"Since Id",required:!1,deprecated:!1},userIds:{kind:"parameter",type:"string",description:"To filter by user ids for filter. Multiple values can be separated by comma.",title:"User Ids",required:!1,deprecated:!1},httpProxyHost:{kind:"parameter",type:"string",description:"The http proxy host which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Host",required:!1,deprecated:!1},httpProxyPassword:{kind:"parameter",type:"string",description:"The http proxy password which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Password",required:!1,deprecated:!1},httpProxyPort:{kind:"parameter",type:"integer",description:"The http proxy port which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Port",required:!1,deprecated:!1},httpProxyUser:{kind:"parameter",type:"string",description:"The http proxy user which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy User",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"The access token. Can also be configured on the TwitterComponent level instead.",title:"Access Token",required:!1,deprecated:!1},accessTokenSecret:{kind:"parameter",type:"string",description:"The access secret. Can also be configured on the TwitterComponent level instead.",title:"Access Token Secret",required:!1,deprecated:!1},consumerKey:{kind:"parameter",type:"string",description:"The consumer key. Can also be configured on the TwitterComponent level instead.",title:"Consumer Key",required:!1,deprecated:!1},consumerSecret:{kind:"parameter",type:"string",description:"The consumer secret. Can also be configured on the TwitterComponent level instead.",title:"Consumer Secret",required:!1,deprecated:!1},sortById:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sorts by id, so the oldest are first, and newest last.",title:"Sort By Id",required:!1,deprecated:!1}}},"twitter-search":{type:"object",title:"Twitter Search",group:"saas,social",icon:"generic24.png",description:"Access Twitter Search.",properties:{keywords:{kind:"path",type:"string",description:"The search query, use the keywords AND, OR, - and () to narrow the search results.",title:"Keywords",required:!0,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},type:{kind:"parameter",type:"object",defaultValue:"polling",enum:["polling","direct"],description:"Endpoint type to use.",title:"Type",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},distanceMetric:{kind:"parameter",type:"string",defaultValue:"km",enum:["km","mi"],description:"Used by the geography search, to search by radius using the configured metrics. The unit can either be mi for miles, or km for kilometers. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Distance Metric",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},extendedMode:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for enabling full text from twitter (eg receive tweets that contains more than 140 characters).",title:"Extended Mode",required:!1,deprecated:!1},latitude:{kind:"parameter",type:"number",description:"Used by the geography search to search by latitude. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Latitude",required:!1,deprecated:!1},locations:{kind:"parameter",type:"string",description:"Bounding boxes, created by pairs of lat/lons. Can be used for filter. A pair is defined as lat,lon. And multiple pairs can be separated by semicolon.",title:"Locations",required:!1,deprecated:!1},longitude:{kind:"parameter",type:"number",description:"Used by the geography search to search by longitude. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Longitude",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},radius:{kind:"parameter",type:"number",description:"Used by the geography search to search by radius. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Radius",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},count:{kind:"parameter",type:"integer",defaultValue:"5",description:"Limiting number of results per page.",title:"Count",required:!1,deprecated:!1},filterOld:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Filter out old tweets, that has previously been polled. This state is stored in memory only, and based on last tweet id.",title:"Filter Old",required:!1,deprecated:!1},lang:{kind:"parameter",type:"string",description:"The lang string ISO_639-1 which will be used for searching",title:"Lang",required:!1,deprecated:!1},numberOfPages:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of pages result which you want camel-twitter to consume.",title:"Number Of Pages",required:!1,deprecated:!1},sinceId:{kind:"parameter",type:"integer",defaultValue:"1",description:"The last tweet id which will be used for pulling the tweets. It is useful when the camel route is restarted after a long running.",title:"Since Id",required:!1,deprecated:!1},userIds:{kind:"parameter",type:"string",description:"To filter by user ids for filter. Multiple values can be separated by comma.",title:"User Ids",required:!1,deprecated:!1},httpProxyHost:{kind:"parameter",type:"string",description:"The http proxy host which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Host",required:!1,deprecated:!1},httpProxyPassword:{kind:"parameter",type:"string",description:"The http proxy password which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Password",required:!1,deprecated:!1},httpProxyPort:{kind:"parameter",type:"integer",description:"The http proxy port which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Port",required:!1,deprecated:!1},httpProxyUser:{kind:"parameter",type:"string",description:"The http proxy user which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy User",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"The access token. Can also be configured on the TwitterComponent level instead.",title:"Access Token",required:!1,deprecated:!1},accessTokenSecret:{kind:"parameter",type:"string",description:"The access secret. Can also be configured on the TwitterComponent level instead.",title:"Access Token Secret",required:!1,deprecated:!1},consumerKey:{kind:"parameter",type:"string",description:"The consumer key. Can also be configured on the TwitterComponent level instead.",title:"Consumer Key",required:!1,deprecated:!1},consumerSecret:{kind:"parameter",type:"string",description:"The consumer secret. Can also be configured on the TwitterComponent level instead.",title:"Consumer Secret",required:!1,deprecated:!1},sortById:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sorts by id, so the oldest are first, and newest last.",title:"Sort By Id",required:!1,deprecated:!1}}},"twitter-timeline":{type:"object",title:"Twitter Timeline",group:"saas,social",icon:"generic24.png",description:"Send tweets and receive tweets from user's timeline.",properties:{timelineType:{kind:"path",type:"object",enum:["PUBLIC","HOME","USER","MENTIONS","LIST","UNKNOWN"],description:"The timeline type to produce/consume.",title:"Timeline Type",required:!0,deprecated:!1},list:{kind:"parameter",type:"string",description:"The list name when using timelineType=list",title:"List",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",description:"The username when using timelineType=user",title:"User",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},type:{kind:"parameter",type:"object",defaultValue:"polling",enum:["polling","direct"],description:"Endpoint type to use.",title:"Type",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},distanceMetric:{kind:"parameter",type:"string",defaultValue:"km",enum:["km","mi"],description:"Used by the geography search, to search by radius using the configured metrics. The unit can either be mi for miles, or km for kilometers. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Distance Metric",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},extendedMode:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Used for enabling full text from twitter (eg receive tweets that contains more than 140 characters).",title:"Extended Mode",required:!1,deprecated:!1},latitude:{kind:"parameter",type:"number",description:"Used by the geography search to search by latitude. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Latitude",required:!1,deprecated:!1},locations:{kind:"parameter",type:"string",description:"Bounding boxes, created by pairs of lat/lons. Can be used for filter. A pair is defined as lat,lon. And multiple pairs can be separated by semicolon.",title:"Locations",required:!1,deprecated:!1},longitude:{kind:"parameter",type:"number",description:"Used by the geography search to search by longitude. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Longitude",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},radius:{kind:"parameter",type:"number",description:"Used by the geography search to search by radius. You need to configure all the following options: longitude, latitude, radius, and distanceMetric.",title:"Radius",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},count:{kind:"parameter",type:"integer",defaultValue:"5",description:"Limiting number of results per page.",title:"Count",required:!1,deprecated:!1},filterOld:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Filter out old tweets, that has previously been polled. This state is stored in memory only, and based on last tweet id.",title:"Filter Old",required:!1,deprecated:!1},lang:{kind:"parameter",type:"string",description:"The lang string ISO_639-1 which will be used for searching",title:"Lang",required:!1,deprecated:!1},numberOfPages:{kind:"parameter",type:"integer",defaultValue:"1",description:"The number of pages result which you want camel-twitter to consume.",title:"Number Of Pages",required:!1,deprecated:!1},sinceId:{kind:"parameter",type:"integer",defaultValue:"1",description:"The last tweet id which will be used for pulling the tweets. It is useful when the camel route is restarted after a long running.",title:"Since Id",required:!1,deprecated:!1},userIds:{kind:"parameter",type:"string",description:"To filter by user ids for filter. Multiple values can be separated by comma.",title:"User Ids",required:!1,deprecated:!1},httpProxyHost:{kind:"parameter",type:"string",description:"The http proxy host which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Host",required:!1,deprecated:!1},httpProxyPassword:{kind:"parameter",type:"string",description:"The http proxy password which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Password",required:!1,deprecated:!1},httpProxyPort:{kind:"parameter",type:"integer",description:"The http proxy port which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy Port",required:!1,deprecated:!1},httpProxyUser:{kind:"parameter",type:"string",description:"The http proxy user which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.",title:"Http Proxy User",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"duration",defaultValue:"30000",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},accessToken:{kind:"parameter",type:"string",description:"The access token. Can also be configured on the TwitterComponent level instead.",title:"Access Token",required:!1,deprecated:!1},accessTokenSecret:{kind:"parameter",type:"string",description:"The access secret. Can also be configured on the TwitterComponent level instead.",title:"Access Token Secret",required:!1,deprecated:!1},consumerKey:{kind:"parameter",type:"string",description:"The consumer key. Can also be configured on the TwitterComponent level instead.",title:"Consumer Key",required:!1,deprecated:!1},consumerSecret:{kind:"parameter",type:"string",description:"The consumer secret. Can also be configured on the TwitterComponent level instead.",title:"Consumer Secret",required:!1,deprecated:!1},sortById:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Sorts by id, so the oldest are first, and newest last.",title:"Sort By Id",required:!1,deprecated:!1}}},undertow:{type:"object",title:"Undertow",group:"http,networking",icon:"generic24.png",description:"Expose HTTP and WebSocket endpoints and access external HTTP/WebSocket servers.",properties:{httpURI:{kind:"path",type:"string",description:"The url of the HTTP endpoint to use.",title:"Http URI",required:!0,deprecated:!1},useStreaming:{kind:"parameter",type:"boolean",defaultValue:"false",description:"For HTTP endpoint: if true, text and binary messages will be wrapped as java.io.InputStream before they are passed to an Exchange; otherwise they will be passed as byte. For WebSocket endpoint: if true, text and binary messages will be wrapped as java.io.Reader and java.io.InputStream respectively before they are passed to an Exchange; otherwise they will be passed as String and byte respectively.",title:"Use Streaming",required:!1,deprecated:!1},accessLog:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not the consumer should write access log",title:"Access Log",required:!1,deprecated:!1},httpMethodRestrict:{kind:"parameter",type:"string",description:"Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc. Multiple methods can be specified separated by comma.",title:"Http Method Restrict",required:!1,deprecated:!1},matchOnUriPrefix:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found.",title:"Match On Uri Prefix",required:!1,deprecated:!1},muteException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side the response's body won't contain the exception's stack trace.",title:"Mute Exception",required:!1,deprecated:!1},optionsEnabled:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Specifies whether to enable HTTP OPTIONS for this Servlet consumer. By default OPTIONS is turned off.",title:"Options Enabled",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side and if the caused Exception was send back serialized in the response as a application/x-java-serialized-object content type. On the producer side the exception will be deserialized and thrown as is instead of the HttpOperationFailedException. The caused exception is required to be serialized. This is by default turned off. If you enable this then be aware that Java will deserialize the incoming data from the request to Java and that can be a potential security risk.",title:"Transfer Exception",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},handlers:{kind:"parameter",type:"string",description:"Specifies a comma-delimited set of io.undertow.server.HttpHandler instances to lookup in your Registry. These handlers are added to the Undertow handler chain (for example, to add security). Important: You can not use different handlers with different Undertow endpoints using the same port number. The handlers is associated to the port number. If you need different handlers, then use different port numbers.",title:"Handlers",required:!1,deprecated:!1},cookieHandler:{kind:"parameter",type:"object",description:"Configure a cookie handler to maintain a HTTP session",title:"Cookie Handler",required:!1,deprecated:!1},keepAlive:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to ensure socket is not closed due to inactivity",title:"Keep Alive",required:!1,deprecated:!1},options:{kind:"parameter",type:"object",description:"Sets additional channel options. The options that can be used are defined in org.xnio.Options. To configure from endpoint uri, then prefix each option with option., such as option.close-abort=true&option.send-buffer=8192",title:"Options",required:!1,deprecated:!1},preserveHostHeader:{kind:"parameter",type:"boolean",defaultValue:"true",description:"If the option is true, UndertowProducer will set the Host header to the value contained in the current exchange Host header, useful in reverse proxy applications where you want the Host header received by the downstream server to reflect the URL called by the upstream client, this allows applications which use the Host header to generate accurate URL's for a proxied service.",title:"Preserve Host Header",required:!1,deprecated:!1},reuseAddresses:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to facilitate socket multiplexing",title:"Reuse Addresses",required:!1,deprecated:!1},tcpNoDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Setting to improve TCP protocol performance",title:"Tcp No Delay",required:!1,deprecated:!1},throwExceptionOnFailure:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server. This allows you to get all responses regardless of the HTTP status code.",title:"Throw Exception On Failure",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},accessLogReceiver:{kind:"parameter",type:"object",description:"Which Undertow AccessLogReceiver should be used Will use JBossLoggingAccessLogReceiver if not specified",title:"Access Log Receiver",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},undertowHttpBinding:{kind:"parameter",type:"object",description:"To use a custom UndertowHttpBinding to control the mapping between Camel message and undertow.",title:"Undertow Http Binding",required:!1,deprecated:!1},allowedRoles:{kind:"parameter",type:"string",description:"Configuration used by UndertowSecurityProvider. Comma separated list of allowed roles.",title:"Allowed Roles",required:!1,deprecated:!1},securityConfiguration:{kind:"parameter",type:"object",description:"OConfiguration used by UndertowSecurityProvider. Security configuration object for use from UndertowSecurityProvider. Configuration is UndertowSecurityProvider specific. Each provider decides whether accepts configuration.",title:"Security Configuration",required:!1,deprecated:!1},securityProvider:{kind:"parameter",type:"object",description:"Security provider allows plug in the provider, which will be used to secure requests. SPI approach could be used too (endpoint then finds security provider using SPI).",title:"Security Provider",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1},fireWebSocketChannelEvents:{kind:"parameter",type:"boolean",defaultValue:"false",description:"if true, the consumer will post notifications to the route when a new WebSocket peer connects, disconnects, etc. See UndertowConstants.EVENT_TYPE and EventType.",title:"Fire Web Socket Channel Events",required:!1,deprecated:!1},sendTimeout:{kind:"parameter",type:"integer",defaultValue:"30000",description:"Timeout in milliseconds when sending to a websocket channel. The default timeout is 30000 (30 seconds).",title:"Send Timeout",required:!1,deprecated:!1},sendToAll:{kind:"parameter",type:"boolean",description:"To send to all websocket subscribers. Can be used to configure on endpoint level, instead of having to use the UndertowConstants.SEND_TO_ALL header on the message.",title:"Send To All",required:!1,deprecated:!1}}},validator:{type:"object",title:"Validator",group:"core,validation",icon:"generic24.png",description:"Validate the payload using XML Schema and JAXP Validation.",properties:{resourceUri:{kind:"path",type:"string",description:"URL to a local resource on the classpath, or a reference to lookup a bean in the Registry, or a full URL to a remote resource or resource on the file system which contains the XSD to validate against.",title:"Resource Uri",required:!0,deprecated:!1},failOnNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to fail if no body exists.",title:"Fail On Null Body",required:!1,deprecated:!1},failOnNullHeader:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to fail if no header exists when validating against a header.",title:"Fail On Null Header",required:!1,deprecated:!1},headerName:{kind:"parameter",type:"string",description:"To validate against a header instead of the message body.",title:"Header Name",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},errorHandler:{kind:"parameter",type:"object",description:"To use a custom org.apache.camel.processor.validation.ValidatorErrorHandler. The default error handler captures the errors and throws an exception.",title:"Error Handler",required:!1,deprecated:!1},resourceResolver:{kind:"parameter",type:"object",description:"To use a custom LSResourceResolver. Do not use together with resourceResolverFactory",title:"Resource Resolver",required:!1,deprecated:!1},resourceResolverFactory:{kind:"parameter",type:"object",description:"To use a custom LSResourceResolver which depends on a dynamic endpoint resource URI. The default resource resolver factory resturns a resource resolver which can read files from the class path and file system. Do not use together with resourceResolver.",title:"Resource Resolver Factory",required:!1,deprecated:!1},schemaFactory:{kind:"parameter",type:"object",description:"To use a custom javax.xml.validation.SchemaFactory",title:"Schema Factory",required:!1,deprecated:!1},schemaLanguage:{kind:"parameter",type:"string",defaultValue:"http://www.w3.org/2001/XMLSchema",description:"Configures the W3C XML Schema Namespace URI.",title:"Schema Language",required:!1,deprecated:!1},useSharedSchema:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the Schema instance should be shared or not. This option is introduced to work around a JDK 1.6.x bug. Xerces should not have this issue.",title:"Use Shared Schema",required:!1,deprecated:!1}}},velocity:{type:"object",title:"Velocity",group:"transformation",icon:"generic24.png",description:"Transform messages using a Velocity template.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the resource. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod.",title:"Resource Uri",required:!0,deprecated:!1},allowContextMapAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether the context map should allow access to all details. By default only the message body and headers can be accessed. This option can be enabled for full access to the current Exchange and CamelContext. Doing so impose a potential security risk as this opens access to the full power of CamelContext API.",title:"Allow Context Map All",required:!1,deprecated:!1},allowTemplateFromHeader:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow to use resource template from header or not (default false). Enabling this allows to specify dynamic templates via message header. However this can be seen as a potential security vulnerability if the header is coming from a malicious user, so use this with care.",title:"Allow Template From Header",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Sets whether to use resource content cache or not",title:"Content Cache",required:!1,deprecated:!1},encoding:{kind:"parameter",type:"string",description:"Character encoding of the resource content.",title:"Encoding",required:!1,deprecated:!1},loaderCache:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enables / disables the velocity resource loader cache which is enabled by default",title:"Loader Cache",required:!1,deprecated:!1},propertiesFile:{kind:"parameter",type:"string",description:"The URI of the properties file which is used for VelocityEngine initialization.",title:"Properties File",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},vertx:{type:"object",title:"Vert.x",group:"messaging",icon:"generic24.png",description:"Send and receive messages to/from Vert.x Event Bus.",properties:{address:{kind:"path",type:"string",description:"Sets the event bus address used to communicate",title:"Address",required:!0,deprecated:!1},pubSub:{kind:"parameter",type:"boolean",description:"Whether to use publish/subscribe instead of point to point when sending to a vertx endpoint.",title:"Pub Sub",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"vertx-http":{type:"object",title:"Vert.x HTTP Client",group:"http",icon:"generic24.png",description:"Send requests to external HTTP servers using Vert.x",properties:{httpUri:{kind:"path",type:"string",description:"The HTTP URI to connect to",title:"Http Uri",required:!0,deprecated:!1},connectTimeout:{kind:"parameter",type:"integer",defaultValue:"60000",description:"The amount of time in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout.",title:"Connect Timeout",required:!1,deprecated:!1},cookieStore:{kind:"parameter",type:"object",defaultValue:"InMemoryCookieStore",description:"A custom CookieStore to use when session management is enabled. If this option is not set then an in-memory CookieStore is used",title:"Cookie Store",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",defaultValue:"VertxHttpHeaderFilterStrategy",description:"A custom org.apache.camel.spi.HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},httpMethod:{kind:"parameter",type:"object",description:"The HTTP method to use. The HttpMethod header cannot override this option if set",title:"Http Method",required:!1,deprecated:!1},okStatusCodeRange:{kind:"parameter",type:"string",defaultValue:"200-299",description:"The status codes which are considered a success response. The values are inclusive. Multiple ranges can be defined, separated by comma, e.g. 200-204,209,301-304. Each range must be a single number or from-to with the dash included",title:"Ok Status Code Range",required:!1,deprecated:!1},responsePayloadAsByteArray:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the response body should be byte or as io.vertx.core.buffer.Buffer",title:"Response Payload As Byte Array",required:!1,deprecated:!1},sessionManagement:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Enables session management via WebClientSession. By default the client is configured to use an in-memory CookieStore. The cookieStore option can be used to override this",title:"Session Management",required:!1,deprecated:!1},throwExceptionOnFailure:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Disable throwing HttpOperationFailedException in case of failed responses from the remote server",title:"Throw Exception On Failure",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"-1",description:"The amount of time in milliseconds after which if the request does not return any data within the timeout period a TimeoutException fails the request. Setting zero or a negative value disables the timeout.",title:"Timeout",required:!1,deprecated:!1},transferException:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If enabled and an Exchange failed processing on the consumer side, and if the caused Exception was sent back serialized in the response as a application/x-java-serialized-object content type. On the producer side the exception will be deserialized and thrown as is, instead of HttpOperationFailedException. The caused exception is required to be serialized. This is by default turned off. If you enable this then be aware that Camel will deserialize the incoming data from the request to a Java object, which can be a potential security risk.",title:"Transfer Exception",required:!1,deprecated:!1},useCompression:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set whether compression is enabled to handled compressed (E.g gzipped) responses",title:"Use Compression",required:!1,deprecated:!1},vertxHttpBinding:{kind:"parameter",type:"object",description:"A custom VertxHttpBinding which can control how to bind between Vert.x and Camel.",title:"Vertx Http Binding",required:!1,deprecated:!1},webClientOptions:{kind:"parameter",type:"object",description:"Sets customized options for configuring the Vert.x WebClient",title:"Web Client Options",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},proxyHost:{kind:"parameter",type:"string",description:"The proxy server host address",title:"Proxy Host",required:!1,deprecated:!1},proxyPassword:{kind:"parameter",type:"string",description:"The proxy server password if authentication is required",title:"Proxy Password",required:!1,deprecated:!1},proxyPort:{kind:"parameter",type:"integer",description:"The proxy server port",title:"Proxy Port",required:!1,deprecated:!1},proxyType:{kind:"parameter",type:"object",enum:["HTTP","SOCKS4","SOCKS5"],description:"The proxy server type",title:"Proxy Type",required:!1,deprecated:!1},proxyUsername:{kind:"parameter",type:"string",description:"The proxy server username if authentication is required",title:"Proxy Username",required:!1,deprecated:!1},basicAuthPassword:{kind:"parameter",type:"string",description:"The password to use for basic authentication",title:"Basic Auth Password",required:!1,deprecated:!1},basicAuthUsername:{kind:"parameter",type:"string",description:"The user name to use for basic authentication",title:"Basic Auth Username",required:!1,deprecated:!1},bearerToken:{kind:"parameter",type:"string",description:"The bearer token to use for bearer token authentication",title:"Bearer Token",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},"vertx-websocket":{type:"object",title:"Vert.x WebSocket",group:"http,networking",icon:"generic24.png",description:"Expose WebSocket endpoints and connect to remote WebSocket servers using Vert.x",properties:{host:{kind:"path",type:"string",description:"WebSocket hostname, such as localhost or a remote host when in client mode.",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"WebSocket port number to use.",title:"Port",required:!0,deprecated:!1},path:{kind:"path",type:"string",description:"WebSocket path to use.",title:"Path",required:!1,deprecated:!1},allowedOriginPattern:{kind:"parameter",type:"string",description:"Regex pattern to match the origin header sent by WebSocket clients",title:"Allowed Origin Pattern",required:!1,deprecated:!1},allowOriginHeader:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the WebSocket client should add the Origin header to the WebSocket handshake request.",title:"Allow Origin Header",required:!1,deprecated:!1},consumeAsClient:{kind:"parameter",type:"boolean",defaultValue:"false",description:"When set to true, the consumer acts as a WebSocket client, creating exchanges on each received WebSocket event.",title:"Consume As Client",required:!1,deprecated:!1},fireWebSocketConnectionEvents:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the server consumer will create a message exchange when a new WebSocket peer connects or disconnects",title:"Fire Web Socket Connection Events",required:!1,deprecated:!1},maxReconnectAttempts:{kind:"parameter",type:"integer",defaultValue:"0",description:"When consumeAsClient is set to true this sets the maximum number of allowed reconnection attempts to a previously closed WebSocket. A value of 0 (the default) will attempt to reconnect indefinitely.",title:"Max Reconnect Attempts",required:!1,deprecated:!1},originHeaderUrl:{kind:"parameter",type:"string",description:"The value of the Origin header that the WebSocket client should use on the WebSocket handshake request. When not specified, the WebSocket client will automatically determine the value for the Origin from the request URL.",title:"Origin Header Url",required:!1,deprecated:!1},reconnectInitialDelay:{kind:"parameter",type:"integer",defaultValue:"0",description:"When consumeAsClient is set to true this sets the initial delay in milliseconds before attempting to reconnect to a previously closed WebSocket.",title:"Reconnect Initial Delay",required:!1,deprecated:!1},reconnectInterval:{kind:"parameter",type:"integer",defaultValue:"1000",description:"When consumeAsClient is set to true this sets the interval in milliseconds at which reconnecting to a previously closed WebSocket occurs.",title:"Reconnect Interval",required:!1,deprecated:!1},router:{kind:"parameter",type:"object",description:"To use an existing vertx router for the HTTP server",title:"Router",required:!1,deprecated:!1},serverOptions:{kind:"parameter",type:"object",description:"Sets customized options for configuring the HTTP server hosting the WebSocket for the consumer",title:"Server Options",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},clientOptions:{kind:"parameter",type:"object",description:"Sets customized options for configuring the WebSocket client used in the producer",title:"Client Options",required:!1,deprecated:!1},clientSubProtocols:{kind:"parameter",type:"string",description:"Comma separated list of WebSocket subprotocols that the client should use for the Sec-WebSocket-Protocol header",title:"Client Sub Protocols",required:!1,deprecated:!1},sendToAll:{kind:"parameter",type:"boolean",defaultValue:"false",description:"To send to all websocket subscribers. Can be used to configure at the endpoint level, instead of providing the VertxWebsocketConstants.SEND_TO_ALL header on the message. Note that when using this option, the host name specified for the vertx-websocket producer URI must match one used for an existing vertx-websocket consumer. Note that this option only applies when producing messages to endpoints hosted by the vertx-websocket consumer and not to an externally hosted WebSocket.",title:"Send To All",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},sslContextParameters:{kind:"parameter",type:"object",description:"To configure security using SSLContextParameters",title:"Ssl Context Parameters",required:!1,deprecated:!1}}},weather:{type:"object",title:"Weather",group:"api",icon:"generic24.png",description:"Poll the weather information from Open Weather Map.",properties:{name:{kind:"path",type:"string",description:"The name value is not used.",title:"Name",required:!0,deprecated:!1},appid:{kind:"parameter",type:"string",description:"APPID ID used to authenticate the user connected to the API Server",title:"Appid",required:!0,deprecated:!1},headerName:{kind:"parameter",type:"string",description:"To store the weather result in this header instead of the message body. This is useable if you want to keep current message body as-is.",title:"Header Name",required:!1,deprecated:!1},language:{kind:"parameter",type:"object",defaultValue:"en",enum:["en","ru","it","es","sp","uk","ua","de","pt","ro","pl","fi","nl","fr","bg","sv","se","zh_tw","zh","zh_cn","tr","hr","ca"],description:"Language of the response.",title:"Language",required:!1,deprecated:!1},mode:{kind:"parameter",type:"object",defaultValue:"JSON",enum:["HTML","JSON","XML"],description:"The output format of the weather data.",title:"Mode",required:!1,deprecated:!1},period:{kind:"parameter",type:"string",description:"If null, the current weather will be returned, else use values of 5, 7, 14 days. Only the numeric value for the forecast period is actually parsed, so spelling, capitalisation of the time period is up to you (its ignored)",title:"Period",required:!1,deprecated:!1},units:{kind:"parameter",type:"object",enum:["IMPERIAL","METRIC"],description:"The units for temperature measurement.",title:"Units",required:!1,deprecated:!1},weatherApi:{kind:"parameter",type:"object",enum:["Current","Station","Hourly","Daily"],description:"The API to use (current, forecast/3 hour, forecast daily, station)",title:"Weather Api",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},geoLocationProvider:{kind:"parameter",type:"object",description:"A custum geolocation provider to determine the longitude and latitude to use when no location information is set. The default implementaion uses the ipstack API and requires geolocationAccessKey and geolocationRequestHostIP",title:"Geo Location Provider",required:!1,deprecated:!1},httpClient:{kind:"parameter",type:"object",description:"To use an existing configured http client (for example with http proxy)",title:"Http Client",required:!1,deprecated:!1},cnt:{kind:"parameter",type:"integer",description:"Number of results to be found",title:"Cnt",required:!1,deprecated:!1},ids:{kind:"parameter",type:"string",description:"List of id's of city/stations. You can separate multiple ids by comma.",title:"Ids",required:!1,deprecated:!1},lat:{kind:"parameter",type:"string",description:"Latitude of location. You can use lat and lon options instead of location. For boxed queries this is the bottom latitude.",title:"Lat",required:!1,deprecated:!1},location:{kind:"parameter",type:"string",description:"If null Camel will try and determine your current location using the geolocation of your ip address, else specify the city,country. For well known city names, Open Weather Map will determine the best fit, but multiple results may be returned. Hence specifying and country as well will return more accurate data. If you specify current as the location then the component will try to get the current latitude and longitude and use that to get the weather details. You can use lat and lon options instead of location.",title:"Location",required:!1,deprecated:!1},lon:{kind:"parameter",type:"string",description:"Longitude of location. You can use lat and lon options instead of location. For boxed queries this is the left longtitude.",title:"Lon",required:!1,deprecated:!1},rightLon:{kind:"parameter",type:"string",description:"For boxed queries this is the right longtitude. Needs to be used in combination with topLat and zoom.",title:"Right Lon",required:!1,deprecated:!1},topLat:{kind:"parameter",type:"string",description:"For boxed queries this is the top latitude. Needs to be used in combination with rightLon and zoom.",title:"Top Lat",required:!1,deprecated:!1},zip:{kind:"parameter",type:"string",description:"Zip-code, e.g. 94040,us",title:"Zip",required:!1,deprecated:!1},zoom:{kind:"parameter",type:"integer",description:"For boxed queries this is the zoom. Needs to be used in combination with rightLon and topLat.",title:"Zoom",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},geolocationAccessKey:{kind:"parameter",type:"string",description:"The geolocation service now needs an accessKey to be used",title:"Geolocation Access Key",required:!0,deprecated:!1},geolocationRequestHostIP:{kind:"parameter",type:"string",description:"The geolocation service now needs to specify the IP associated to the accessKey you're using",title:"Geolocation Request Host IP",required:!0,deprecated:!1}}},web3j:{type:"object",title:"Web3j Ethereum Blockchain",group:"blockchain",icon:"generic24.png",description:"Interact with Ethereum nodes using web3j client API.",properties:{nodeAddress:{kind:"path",type:"string",description:"Sets the node address used to communicate",title:"Node Address",required:!0,deprecated:!1},addresses:{kind:"parameter",type:"array",description:"Contract address or a list of addresses.",title:"Addresses",required:!1,deprecated:!1},fromAddress:{kind:"parameter",type:"string",description:"The address the transaction is send from",title:"From Address",required:!1,deprecated:!1},fromBlock:{kind:"parameter",type:"string",defaultValue:"latest",description:"The block number, or the string latest for the last mined block or pending, earliest for not yet mined transactions.",title:"From Block",required:!1,deprecated:!1},fullTransactionObjects:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true it returns the full transaction objects, if false only the hashes of the transactions.",title:"Full Transaction Objects",required:!1,deprecated:!1},gasLimit:{kind:"parameter",type:"object",description:"The maximum gas allowed in this block.",title:"Gas Limit",required:!1,deprecated:!1},privateFor:{kind:"parameter",type:"array",description:"A transaction privateFor nodes with public keys in a Quorum network",title:"Private For",required:!1,deprecated:!1},quorumAPI:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, this will support Quorum API.",title:"Quorum API",required:!1,deprecated:!1},toAddress:{kind:"parameter",type:"string",description:"The address the transaction is directed to.",title:"To Address",required:!1,deprecated:!1},toBlock:{kind:"parameter",type:"string",defaultValue:"latest",description:"The block number, or the string latest for the last mined block or pending, earliest for not yet mined transactions.",title:"To Block",required:!1,deprecated:!1},topics:{kind:"parameter",type:"string",description:"Topics are order-dependent. Each topic can also be a list of topics. Specify multiple topics separated by comma.",title:"Topics",required:!1,deprecated:!1},web3j:{kind:"parameter",type:"object",description:"The preconfigured Web3j object.",title:"Web3j",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},address:{kind:"parameter",type:"string",description:"Contract address.",title:"Address",required:!1,deprecated:!1},atBlock:{kind:"parameter",type:"string",defaultValue:"latest",description:"The block number, or the string latest for the last mined block or pending, earliest for not yet mined transactions.",title:"At Block",required:!1,deprecated:!1},blockHash:{kind:"parameter",type:"string",description:"Hash of the block where this transaction was in.",title:"Block Hash",required:!1,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"A random hexadecimal(32 bytes) ID identifying the client.",title:"Client Id",required:!1,deprecated:!1},data:{kind:"parameter",type:"string",description:"The compiled code of a contract OR the hash of the invoked method signature and encoded parameters.",title:"Data",required:!1,deprecated:!1},databaseName:{kind:"parameter",type:"string",description:"The local database name.",title:"Database Name",required:!1,deprecated:!1},filterId:{kind:"parameter",type:"object",description:"The filter id to use.",title:"Filter Id",required:!1,deprecated:!1},gasPrice:{kind:"parameter",type:"object",description:"Gas price used for each paid gas.",title:"Gas Price",required:!1,deprecated:!1},hashrate:{kind:"parameter",type:"string",description:"A hexadecimal string representation (32 bytes) of the hash rate.",title:"Hashrate",required:!1,deprecated:!1},headerPowHash:{kind:"parameter",type:"string",description:"The header's pow-hash (256 bits) used for submitting a proof-of-work solution.",title:"Header Pow Hash",required:!1,deprecated:!1},index:{kind:"parameter",type:"object",description:"The transactions/uncle index position in the block.",title:"Index",required:!1,deprecated:!1},keyName:{kind:"parameter",type:"string",description:"The key name in the database.",title:"Key Name",required:!1,deprecated:!1},mixDigest:{kind:"parameter",type:"string",description:"The mix digest (256 bits) used for submitting a proof-of-work solution.",title:"Mix Digest",required:!1,deprecated:!1},nonce:{kind:"parameter",type:"string",description:"The nonce found (64 bits) used for submitting a proof-of-work solution.",title:"Nonce",required:!1,deprecated:!1},operation:{kind:"parameter",type:"string",defaultValue:"transaction",description:"Operation to use.",title:"Operation",required:!1,deprecated:!1},position:{kind:"parameter",type:"object",description:"The transaction index position withing a block.",title:"Position",required:!1,deprecated:!1},priority:{kind:"parameter",type:"object",description:"The priority of a whisper message.",title:"Priority",required:!1,deprecated:!1},sha3HashOfDataToSign:{kind:"parameter",type:"string",description:"Message to sign by calculating an Ethereum specific signature.",title:"Sha3 Hash Of Data To Sign",required:!1,deprecated:!1},signedTransactionData:{kind:"parameter",type:"string",description:"The signed transaction data for a new message call transaction or a contract creation for signed transactions.",title:"Signed Transaction Data",required:!1,deprecated:!1},sourceCode:{kind:"parameter",type:"string",description:"The source code to compile.",title:"Source Code",required:!1,deprecated:!1},transactionHash:{kind:"parameter",type:"string",description:"The information about a transaction requested by transaction hash.",title:"Transaction Hash",required:!1,deprecated:!1},ttl:{kind:"parameter",type:"object",description:"The time to live in seconds of a whisper message.",title:"Ttl",required:!1,deprecated:!1},value:{kind:"parameter",type:"object",description:"The value sent within a transaction.",title:"Value",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},webhook:{type:"object",title:"Webhook",group:"cloud",icon:"generic24.png",description:"Expose webhook endpoints to receive push notifications for other Camel components.",properties:{endpointUri:{kind:"path",type:"string",description:"The delegate uri. Must belong to a component that supports webhooks.",title:"Endpoint Uri",required:!0,deprecated:!1},webhookAutoRegister:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Automatically register the webhook at startup and unregister it on shutdown.",title:"Webhook Auto Register",required:!1,deprecated:!1},webhookBasePath:{kind:"parameter",type:"string",description:"The first (base) path element where the webhook will be exposed. It's a good practice to set it to a random string, so that it cannot be guessed by unauthorized parties.",title:"Webhook Base Path",required:!1,deprecated:!1},webhookComponentName:{kind:"parameter",type:"string",description:"The Camel Rest component to use for the REST transport, such as netty-http.",title:"Webhook Component Name",required:!1,deprecated:!1},webhookExternalUrl:{kind:"parameter",type:"string",description:"The URL of the current service as seen by the webhook provider",title:"Webhook External Url",required:!1,deprecated:!1},webhookPath:{kind:"parameter",type:"string",description:"The path where the webhook endpoint will be exposed (relative to basePath, if any)",title:"Webhook Path",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}},whatsapp:{type:"object",title:"WhatsApp",group:"cloud,api,chat",icon:"generic24.png",description:"Send messages to WhatsApp.",properties:{phoneNumberId:{kind:"path",type:"string",description:"The phone number ID taken from whatsapp-business dashboard.",title:"Phone Number Id",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},apiVersion:{kind:"parameter",type:"string",description:"Facebook graph api version.",title:"Api Version",required:!1,deprecated:!1},baseUri:{kind:"parameter",type:"string",description:"Can be used to set an alternative base URI, e.g. when you want to test the component against a mock WhatsApp API",title:"Base Uri",required:!1,deprecated:!1},httpClient:{kind:"parameter",type:"object",description:"HttpClient implementation",title:"Http Client",required:!1,deprecated:!1},webhookPath:{kind:"parameter",type:"string",defaultValue:"webhook",description:"Webhook path",title:"Webhook Path",required:!1,deprecated:!1},webhookVerifyToken:{kind:"parameter",type:"string",description:"Webhook verify token",title:"Webhook Verify Token",required:!1,deprecated:!1},whatsappService:{kind:"parameter",type:"object",description:"WhatsApp service implementation",title:"Whatsapp Service",required:!1,deprecated:!1},authorizationToken:{kind:"parameter",type:"string",description:"The authorization access token taken from whatsapp-business dashboard.",title:"Authorization Token",required:!0,deprecated:!1}}},wordpress:{type:"object",title:"Wordpress",group:"cloud,api,cms",icon:"generic24.png",description:"Manage posts and users using Wordpress API.",properties:{operation:{kind:"path",type:"string",enum:["post","user"],description:"The endpoint operation.",title:"Operation",required:!0,deprecated:!1},operationDetail:{kind:"path",type:"string",enum:["delete"],description:"The second part of an endpoint operation. Needed only when endpoint semantic is not enough, like wordpress:post:delete",title:"Operation Detail",required:!1,deprecated:!1},apiVersion:{kind:"parameter",type:"string",defaultValue:"2",description:"The Wordpress REST API version",title:"Api Version",required:!1,deprecated:!1},criteria:{kind:"parameter",type:"object",description:"The criteria to use with complex searches.",title:"Criteria",required:!1,deprecated:!1},force:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to bypass trash and force deletion.",title:"Force",required:!1,deprecated:!1},id:{kind:"parameter",type:"integer",description:"The entity ID. Should be passed when the operation performed requires a specific entity, e.g. deleting a post",title:"Id",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password from authorized user",title:"Password",required:!1,deprecated:!1},searchCriteria:{kind:"parameter",type:"object",description:"Search criteria",title:"Search Criteria",required:!1,deprecated:!1},url:{kind:"parameter",type:"string",description:"The Wordpress API URL from your site, e.g. http://myblog.com/wp-json/",title:"Url",required:!0,deprecated:!1},user:{kind:"parameter",type:"string",description:"Authorized user to perform writing operations",title:"User",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},workday:{type:"object",title:"Workday",group:"cloud,api,saas",icon:"generic24.png",description:"Detect and parse documents using Workday.",properties:{entity:{kind:"path",type:"object",enum:["report","commonAPI"],description:"The entity to be requested or subscribed via API.",title:"Entity",required:!0,deprecated:!1},path:{kind:"path",type:"string",description:"The API path to access an entity structure.",title:"Path",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},httpConnectionManager:{kind:"parameter",type:"object",description:"Pool connection manager for advanced configuration.",title:"Http Connection Manager",required:!1,deprecated:!1},reportFormat:{kind:"parameter",type:"string",defaultValue:"json",enum:["json"],description:"Workday Report as a service output format.",title:"Report Format",required:!1,deprecated:!1},host:{kind:"parameter",type:"string",description:"Workday Host name.",title:"Host",required:!0,deprecated:!1},clientId:{kind:"parameter",type:"string",description:"Workday client Id generated by API client for integrations.",title:"Client Id",required:!0,deprecated:!1},clientSecret:{kind:"parameter",type:"string",description:"Workday client Secret generated by API client for integrations.",title:"Client Secret",required:!0,deprecated:!1},tokenRefresh:{kind:"parameter",type:"string",description:"Workday token Refresh generated for integrations system user.",title:"Token Refresh",required:!0,deprecated:!1},tenant:{kind:"parameter",type:"string",description:"Workday Tenant name.",title:"Tenant",required:!0,deprecated:!1}}},xchange:{type:"object",title:"XChange",group:"blockchain",icon:"generic24.png",description:"Access market data and trade on Bitcoin and Altcoin exchanges.",properties:{name:{kind:"path",type:"string",description:"The exchange to connect to",title:"Name",required:!0,deprecated:!1},currency:{kind:"parameter",type:"object",description:"The currency",title:"Currency",required:!1,deprecated:!1},currencyPair:{kind:"parameter",type:"string",description:"The currency pair",title:"Currency Pair",required:!1,deprecated:!1},method:{kind:"parameter",type:"object",enum:["balances","fundingHistory","wallets","currencies","currencyMetaData","currencyPairs","currencyPairMetaData","ticker"],description:"The method to execute",title:"Method",required:!0,deprecated:!1},service:{kind:"parameter",type:"object",enum:["marketdata","metadata","account"],description:"The service to call",title:"Service",required:!0,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},xj:{type:"object",title:"XJ",group:"transformation",icon:"generic24.png",description:"Transform JSON and XML message using a XSLT.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the template. The following is supported by the default URIResolver. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod",title:"Resource Uri",required:!0,deprecated:!1},allowStAX:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using StAX as the javax.xml.transform.Source. You can enable this if the XSLT library supports StAX such as the Saxon library (camel-saxon). The Xalan library (default in JVM) does not support StAXSource.",title:"Allow StAX",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Cache for the resource content (the stylesheet file) when it is loaded. If set to false Camel will reload the stylesheet file on each message processing. This is good for development. A cached stylesheet can be forced to reload at runtime via JMX using the clearCachedStylesheet operation.",title:"Content Cache",required:!1,deprecated:!1},deleteOutputFile:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If you have output=file then this option dictates whether or not the output file should be deleted when the Exchange is done processing. For example suppose the output file is a temporary file, then it can be a good idea to delete it after use.",title:"Delete Output File",required:!1,deprecated:!1},failOnNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to throw an exception if the input body is null.",title:"Fail On Null Body",required:!1,deprecated:!1},output:{kind:"parameter",type:"object",defaultValue:"string",enum:["string","bytes","DOM","file"],description:"Option to specify which output type to use. Possible values are: string, bytes, DOM, file. The first three options are all in memory based, where as file is streamed directly to a java.io.File. For file you must specify the filename in the IN header with the key XsltConstants.XSLT_FILE_NAME which is also CamelXsltFileName. Also any paths leading to the filename must be created beforehand, otherwise an exception is thrown at runtime.",title:"Output",required:!1,deprecated:!1},transformDirection:{kind:"parameter",type:"object",enum:["XML2JSON","JSON2XML"],description:"Transform direction. Either XML2JSON or JSON2XML",title:"Transform Direction",required:!0,deprecated:!1},transformerCacheSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The number of javax.xml.transform.Transformer object that are cached for reuse to avoid calls to Template.newTransformer().",title:"Transformer Cache Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},entityResolver:{kind:"parameter",type:"object",description:"To use a custom org.xml.sax.EntityResolver with javax.xml.transform.sax.SAXSource.",title:"Entity Resolver",required:!1,deprecated:!1},errorListener:{kind:"parameter",type:"object",description:"Allows to configure to use a custom javax.xml.transform.ErrorListener. Beware when doing this then the default error listener which captures any errors or fatal errors and store information on the Exchange as properties is not in use. So only use this option for special use-cases.",title:"Error Listener",required:!1,deprecated:!1},resultHandlerFactory:{kind:"parameter",type:"object",description:"Allows you to use a custom org.apache.camel.builder.xml.ResultHandlerFactory which is capable of using custom org.apache.camel.builder.xml.ResultHandler types.",title:"Result Handler Factory",required:!1,deprecated:!1},saxonConfiguration:{kind:"parameter",type:"object",description:"To use a custom Saxon configuration",title:"Saxon Configuration",required:!1,deprecated:!1},saxonExtensionFunctions:{kind:"parameter",type:"string",description:"Allows you to use a custom net.sf.saxon.lib.ExtensionFunctionDefinition. You would need to add camel-saxon to the classpath. The function is looked up in the registry, where you can comma to separate multiple values to lookup.",title:"Saxon Extension Functions",required:!1,deprecated:!1},secureProcessing:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Feature for XML secure processing (see javax.xml.XMLConstants). This is enabled by default. However, when using Saxon Professional you may need to turn this off to allow Saxon to be able to use Java extension functions.",title:"Secure Processing",required:!1,deprecated:!1},transformerFactory:{kind:"parameter",type:"object",description:"To use a custom XSLT transformer factory",title:"Transformer Factory",required:!1,deprecated:!1},transformerFactoryClass:{kind:"parameter",type:"string",description:"To use a custom XSLT transformer factory, specified as a FQN class name",title:"Transformer Factory Class",required:!1,deprecated:!1},transformerFactoryConfigurationStrategy:{kind:"parameter",type:"object",description:"A configuration strategy to apply on freshly created instances of TransformerFactory.",title:"Transformer Factory Configuration Strategy",required:!1,deprecated:!1},uriResolver:{kind:"parameter",type:"object",description:"To use a custom javax.xml.transform.URIResolver",title:"Uri Resolver",required:!1,deprecated:!1},xsltMessageLogger:{kind:"parameter",type:"object",description:"A consumer to messages generated during XSLT transformations.",title:"Xslt Message Logger",required:!1,deprecated:!1}}},"xmlsecurity-sign":{type:"object",title:"XML Security Sign",group:"security,transformation",icon:"generic24.png",description:"Sign XML payloads using the XML signature specification.",properties:{name:{kind:"path",type:"string",description:"The name part in the URI can be chosen by the user to distinguish between different signer endpoints within the camel context.",title:"Name",required:!0,deprecated:!1},addKeyInfoReference:{kind:"parameter",type:"boolean",defaultValue:"true",description:"In order to protect the KeyInfo element from tampering you can add a reference to the signed info element so that it is protected via the signature value. The default value is true. Only relevant when a KeyInfo is returned by KeyAccessor. and KeyInfo#getId() is not null.",title:"Add Key Info Reference",required:!1,deprecated:!1},baseUri:{kind:"parameter",type:"string",description:"You can set a base URI which is used in the URI dereferencing. Relative URIs are then concatenated with the base URI.",title:"Base Uri",required:!1,deprecated:!1},canonicalizationMethod:{kind:"parameter",type:"object",defaultValue:"http://www.w3.org/TR/2001/REC-xml-c14n-20010315",description:"Canonicalization method used to canonicalize the SignedInfo element before the digest is calculated. You can use the helper methods XmlSignatureHelper.getCanonicalizationMethod(String algorithm) or getCanonicalizationMethod(String algorithm, List inclusiveNamespacePrefixes) to create a canonicalization method.",title:"Canonicalization Method",required:!1,deprecated:!1},clearHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Determines if the XML signature specific headers be cleared after signing and verification. Defaults to true.",title:"Clear Headers",required:!1,deprecated:!1},contentObjectId:{kind:"parameter",type:"string",description:"Sets the content object Id attribute value. By default a UUID is generated. If you set the null value, then a new UUID will be generated. Only used in the enveloping case.",title:"Content Object Id",required:!1,deprecated:!1},contentReferenceType:{kind:"parameter",type:"string",description:"Type of the content reference. The default value is null. This value can be overwritten by the header XmlSignatureConstants#HEADER_CONTENT_REFERENCE_TYPE.",title:"Content Reference Type",required:!1,deprecated:!1},contentReferenceUri:{kind:"parameter",type:"string",description:"Reference URI for the content to be signed. Only used in the enveloped case. If the reference URI contains an ID attribute value, then the resource schema URI ( setSchemaResourceUri(String)) must also be set because the schema validator will then find out which attributes are ID attributes. Will be ignored in the enveloping or detached case.",title:"Content Reference Uri",required:!1,deprecated:!1},cryptoContextProperties:{kind:"parameter",type:"object",description:"Sets the crypto context properties. See {link XMLCryptoContext#setProperty(String, Object)}. Possible properties are defined in XMLSignContext an XMLValidateContext (see Supported Properties). The following properties are set by default to the value Boolean#TRUE for the XML validation. If you want to switch these features off you must set the property value to Boolean#FALSE. org.jcp.xml.dsig.validateManifests javax.xml.crypto.dsig.cacheReference",title:"Crypto Context Properties",required:!1,deprecated:!1},digestAlgorithm:{kind:"parameter",type:"string",description:"Digest algorithm URI. Optional parameter. This digest algorithm is used for calculating the digest of the input message. If this digest algorithm is not specified then the digest algorithm is calculated from the signature algorithm. Example: http://www.w3.org/2001/04/xmlenc#sha256",title:"Digest Algorithm",required:!1,deprecated:!1},disallowDoctypeDecl:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Disallows that the incoming XML document contains DTD DOCTYPE declaration. The default value is Boolean#TRUE.",title:"Disallow Doctype Decl",required:!1,deprecated:!1},keyAccessor:{kind:"parameter",type:"object",description:"For the signing process, a private key is necessary. You specify a key accessor bean which provides this private key. The key accessor bean must implement the KeyAccessor interface. The package org.apache.camel.component.xmlsecurity.api contains the default implementation class DefaultKeyAccessor which reads the private key from a Java keystore.",title:"Key Accessor",required:!1,deprecated:!1},omitXmlDeclaration:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicator whether the XML declaration in the outgoing message body should be omitted. Default value is false. Can be overwritten by the header XmlSignatureConstants#HEADER_OMIT_XML_DECLARATION.",title:"Omit Xml Declaration",required:!1,deprecated:!1},outputXmlEncoding:{kind:"parameter",type:"string",description:"The character encoding of the resulting signed XML document. If null then the encoding of the original XML document is used.",title:"Output Xml Encoding",required:!1,deprecated:!1},parentLocalName:{kind:"parameter",type:"string",description:"Local name of the parent element to which the XML signature element will be added. Only relevant for enveloped XML signature. Alternatively you can also use setParentXpath(XPathFilterParameterSpec). Default value is null. The value must be null for enveloping and detached XML signature. This parameter or the parameter setParentXpath(XPathFilterParameterSpec) for enveloped signature and the parameter setXpathsToIdAttributes(List) for detached signature must not be set in the same configuration. If the parameters parentXpath and parentLocalName are specified in the same configuration then an exception is thrown.",title:"Parent Local Name",required:!1,deprecated:!1},parentNamespace:{kind:"parameter",type:"string",description:"Namespace of the parent element to which the XML signature element will be added.",title:"Parent Namespace",required:!1,deprecated:!1},parentXpath:{kind:"parameter",type:"object",description:"Sets the XPath to find the parent node in the enveloped case. Either you specify the parent node via this method or the local name and namespace of the parent with the methods setParentLocalName(String) and setParentNamespace(String). Default value is null. The value must be null for enveloping and detached XML signature. If the parameters parentXpath and parentLocalName are specified in the same configuration then an exception is thrown.",title:"Parent Xpath",required:!1,deprecated:!1},plainText:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicator whether the message body contains plain text. The default value is false, indicating that the message body contains XML. The value can be overwritten by the header XmlSignatureConstants#HEADER_MESSAGE_IS_PLAIN_TEXT.",title:"Plain Text",required:!1,deprecated:!1},plainTextEncoding:{kind:"parameter",type:"string",defaultValue:"UTF-8",description:"Encoding of the plain text. Only relevant if the message body is plain text (see parameter plainText. Default value is UTF-8.",title:"Plain Text Encoding",required:!1,deprecated:!1},prefixForXmlSignatureNamespace:{kind:"parameter",type:"string",defaultValue:"ds",description:"Namespace prefix for the XML signature namespace http://www.w3.org/2000/09/xmldsig#. Default value is ds. If null or an empty value is set then no prefix is used for the XML signature namespace. See best practice http://www.w3.org/TR/xmldsig-bestpractices/#signing-xml- without-namespaces",title:"Prefix For Xml Signature Namespace",required:!1,deprecated:!1},properties:{kind:"parameter",type:"object",description:"For adding additional References and Objects to the XML signature which contain additional properties, you can provide a bean which implements the XmlSignatureProperties interface.",title:"Properties",required:!1,deprecated:!1},schemaResourceUri:{kind:"parameter",type:"string",description:"Classpath to the XML Schema. Must be specified in the detached XML Signature case for determining the ID attributes, might be set in the enveloped and enveloping case. If set, then the XML document is validated with the specified XML schema. The schema resource URI can be overwritten by the header XmlSignatureConstants#HEADER_SCHEMA_RESOURCE_URI.",title:"Schema Resource Uri",required:!1,deprecated:!1},signatureAlgorithm:{kind:"parameter",type:"string",defaultValue:"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256",description:"Signature algorithm. Default value is http://www.w3.org/2000/09/xmldsig#rsa-sha1.",title:"Signature Algorithm",required:!1,deprecated:!1},signatureId:{kind:"parameter",type:"string",description:"Sets the signature Id. If this parameter is not set (null value) then a unique ID is generated for the signature ID (default). If this parameter is set to (empty string) then no Id attribute is created in the signature element.",title:"Signature Id",required:!1,deprecated:!1},transformMethods:{kind:"parameter",type:"array",description:"Transforms which are executed on the message body before the digest is calculated. By default, C14n is added and in the case of enveloped signature (see option parentLocalName) also http://www.w3.org/2000/09/xmldsig#enveloped-signature is added at position 0 of the list. Use methods in XmlSignatureHelper to create the transform methods.",title:"Transform Methods",required:!1,deprecated:!1},xpathsToIdAttributes:{kind:"parameter",type:"array",description:"Define the elements which are signed in the detached case via XPATH expressions to ID attributes (attributes of type ID). For each element found via the XPATH expression a detached signature is created whose reference URI contains the corresponding attribute value (preceded by '#'). The signature becomes the last sibling of the signed element. Elements with deeper hierarchy level are signed first. You can also set the XPATH list dynamically via the header XmlSignatureConstants#HEADER_XPATHS_TO_ID_ATTRIBUTES. The parameter setParentLocalName(String) or setParentXpath(XPathFilterParameterSpec) for enveloped signature and this parameter for detached signature must not be set in the same configuration.",title:"Xpaths To Id Attributes",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},uriDereferencer:{kind:"parameter",type:"object",description:"If you want to restrict the remote access via reference URIs, you can set an own dereferencer. Optional parameter. If not set the provider default dereferencer is used which can resolve URI fragments, HTTP, file and XPpointer URIs. Attention: The implementation is provider dependent!",title:"Uri Dereferencer",required:!1,deprecated:!1}}},"xmlsecurity-verify":{type:"object",title:"XML Security Verify",group:"security,transformation",icon:"generic24.png",description:"Verify XML payloads using the XML signature specification.",properties:{name:{kind:"path",type:"string",description:"The name part in the URI can be chosen by the user to distinguish between different verify endpoints within the camel context.",title:"Name",required:!0,deprecated:!1},baseUri:{kind:"parameter",type:"string",description:"You can set a base URI which is used in the URI dereferencing. Relative URIs are then concatenated with the base URI.",title:"Base Uri",required:!1,deprecated:!1},clearHeaders:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Determines if the XML signature specific headers be cleared after signing and verification. Defaults to true.",title:"Clear Headers",required:!1,deprecated:!1},cryptoContextProperties:{kind:"parameter",type:"object",description:"Sets the crypto context properties. See {link XMLCryptoContext#setProperty(String, Object)}. Possible properties are defined in XMLSignContext an XMLValidateContext (see Supported Properties). The following properties are set by default to the value Boolean#TRUE for the XML validation. If you want to switch these features off you must set the property value to Boolean#FALSE. org.jcp.xml.dsig.validateManifests javax.xml.crypto.dsig.cacheReference",title:"Crypto Context Properties",required:!1,deprecated:!1},disallowDoctypeDecl:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Disallows that the incoming XML document contains DTD DOCTYPE declaration. The default value is Boolean#TRUE.",title:"Disallow Doctype Decl",required:!1,deprecated:!1},keySelector:{kind:"parameter",type:"object",description:"Provides the key for validating the XML signature.",title:"Key Selector",required:!1,deprecated:!1},omitXmlDeclaration:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicator whether the XML declaration in the outgoing message body should be omitted. Default value is false. Can be overwritten by the header XmlSignatureConstants#HEADER_OMIT_XML_DECLARATION.",title:"Omit Xml Declaration",required:!1,deprecated:!1},outputNodeSearch:{kind:"parameter",type:"object",description:"Sets the output node search value for determining the node from the XML signature document which shall be set to the output message body. The class of the value depends on the type of the output node search. The output node search is forwarded to XmlSignature2Message.",title:"Output Node Search",required:!1,deprecated:!1},outputNodeSearchType:{kind:"parameter",type:"string",defaultValue:"Default",description:"Determines the search type for determining the output node which is serialized into the output message bodyF. See setOutputNodeSearch(Object). The supported default search types you can find in DefaultXmlSignature2Message.",title:"Output Node Search Type",required:!1,deprecated:!1},outputXmlEncoding:{kind:"parameter",type:"string",description:"The character encoding of the resulting signed XML document. If null then the encoding of the original XML document is used.",title:"Output Xml Encoding",required:!1,deprecated:!1},removeSignatureElements:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Indicator whether the XML signature elements (elements with local name Signature and namesapce http://www.w3.org/2000/09/xmldsig#) shall be removed from the document set to the output message. Normally, this is only necessary, if the XML signature is enveloped. The default value is Boolean#FALSE. This parameter is forwarded to XmlSignature2Message. This indicator has no effect if the output node search is of type DefaultXmlSignature2Message#OUTPUT_NODE_SEARCH_TYPE_DEFAULT.F",title:"Remove Signature Elements",required:!1,deprecated:!1},schemaResourceUri:{kind:"parameter",type:"string",description:"Classpath to the XML Schema. Must be specified in the detached XML Signature case for determining the ID attributes, might be set in the enveloped and enveloping case. If set, then the XML document is validated with the specified XML schema. The schema resource URI can be overwritten by the header XmlSignatureConstants#HEADER_SCHEMA_RESOURCE_URI.",title:"Schema Resource Uri",required:!1,deprecated:!1},secureValidation:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Enables secure validation. If true then secure validation is enabled.",title:"Secure Validation",required:!1,deprecated:!1},validationFailedHandler:{kind:"parameter",type:"object",description:"Handles the different validation failed situations. The default implementation throws specific exceptions for the different situations (All exceptions have the package name org.apache.camel.component.xmlsecurity.api and are a sub-class of XmlSignatureInvalidException. If the signature value validation fails, a XmlSignatureInvalidValueException is thrown. If a reference validation fails, a XmlSignatureInvalidContentHashException is thrown. For more detailed information, see the JavaDoc.",title:"Validation Failed Handler",required:!1,deprecated:!1},xmlSignature2Message:{kind:"parameter",type:"object",description:"Bean which maps the XML signature to the output-message after the validation. How this mapping should be done can be configured by the options outputNodeSearchType, outputNodeSearch, and removeSignatureElements. The default implementation offers three possibilities which are related to the three output node search types Default, ElementName, and XPath. The default implementation determines a node which is then serialized and set to the body of the output message If the search type is ElementName then the output node (which must be in this case an element) is determined by the local name and namespace defined in the search value (see option outputNodeSearch). If the search type is XPath then the output node is determined by the XPath specified in the search value (in this case the output node can be of type Element, TextNode or Document). If the output node search type is Default then the following rules apply: In the enveloped XML signature case (there is a reference with URI= and transform http://www.w3.org/2000/09/xmldsig#enveloped-signature), the incoming XML document without the Signature element is set to the output message body. In the non-enveloped XML signature case, the message body is determined from a referenced Object; this is explained in more detail in chapter Output Node Determination in Enveloping XML Signature Case.",title:"Xml Signature2 Message",required:!1,deprecated:!1},xmlSignatureChecker:{kind:"parameter",type:"object",description:"This interface allows the application to check the XML signature before the validation is executed. This step is recommended in http://www.w3.org/TR/xmldsig-bestpractices/#check-what-is-signed",title:"Xml Signature Checker",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},uriDereferencer:{kind:"parameter",type:"object",description:"If you want to restrict the remote access via reference URIs, you can set an own dereferencer. Optional parameter. If not set the provider default dereferencer is used which can resolve URI fragments, HTTP, file and XPpointer URIs. Attention: The implementation is provider dependent!",title:"Uri Dereferencer",required:!1,deprecated:!1}}},xmpp:{type:"object",title:"XMPP",group:"chat,messaging",icon:"generic24.png",description:"Send and receive messages to/from an XMPP chat server.",properties:{host:{kind:"path",type:"string",description:"Hostname for the chat server",title:"Host",required:!0,deprecated:!1},port:{kind:"path",type:"integer",description:"Port number for the chat server",title:"Port",required:!0,deprecated:!1},participant:{kind:"path",type:"string",description:"JID (Jabber ID) of person to receive messages. room parameter has precedence over participant.",title:"Participant",required:!1,deprecated:!1},login:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to login the user.",title:"Login",required:!1,deprecated:!1},nickname:{kind:"parameter",type:"string",description:"Use nickname when joining room. If room is specified and nickname is not, user will be used for the nickname.",title:"Nickname",required:!1,deprecated:!1},pubsub:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Accept pubsub packets on input, default is false",title:"Pubsub",required:!1,deprecated:!1},room:{kind:"parameter",type:"string",description:"If this option is specified, the component will connect to MUC (Multi User Chat). Usually, the domain name for MUC is different from the login domain. For example, if you are supermanjabber.org and want to join the krypton room, then the room URL is kryptonconference.jabber.org. Note the conference part. It is not a requirement to provide the full room JID. If the room parameter does not contain the symbol, the domain part will be discovered and added by Camel",title:"Room",required:!1,deprecated:!1},serviceName:{kind:"parameter",type:"string",description:"The name of the service you are connecting to. For Google Talk, this would be gmail.com.",title:"Service Name",required:!1,deprecated:!1},testConnectionOnStartup:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Specifies whether to test the connection on startup. This is used to ensure that the XMPP client has a valid connection to the XMPP server when the route starts. Camel throws an exception on startup if a connection cannot be established. When this option is set to false, Camel will attempt to establish a lazy connection when needed by a producer, and will poll for a consumer connection until the connection is established. Default is true.",title:"Test Connection On Startup",required:!1,deprecated:!1},createAccount:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If true, an attempt to create an account will be made. Default is false.",title:"Create Account",required:!1,deprecated:!1},resource:{kind:"parameter",type:"string",defaultValue:"Camel",description:"XMPP resource. The default is Camel.",title:"Resource",required:!1,deprecated:!1},connectionPollDelay:{kind:"parameter",type:"integer",defaultValue:"10",description:"The amount of time in seconds between polls (in seconds) to verify the health of the XMPP connection, or between attempts to establish an initial consumer connection. Camel will try to re-establish a connection if it has become inactive. Default is 10 seconds.",title:"Connection Poll Delay",required:!1,deprecated:!1},doc:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Set a doc header on the IN message containing a Document form of the incoming packet; default is true if presence or pubsub are true, otherwise false",title:"Doc",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},connectionConfig:{kind:"parameter",type:"object",description:"To use an existing connection configuration. Currently org.jivesoftware.smack.tcp.XMPPTCPConnectionConfiguration is only supported (XMPP over TCP).",title:"Connection Config",required:!1,deprecated:!1},headerFilterStrategy:{kind:"parameter",type:"object",description:"To use a custom HeaderFilterStrategy to filter header to and from Camel message.",title:"Header Filter Strategy",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"Password for login",title:"Password",required:!1,deprecated:!1},roomPassword:{kind:"parameter",type:"string",description:"Password for room",title:"Room Password",required:!1,deprecated:!1},user:{kind:"parameter",type:"string",description:"User name (without server name). If not specified, anonymous login will be attempted.",title:"User",required:!1,deprecated:!1}}},xquery:{type:"object",title:"XQuery",group:"transformation",icon:"generic24.png",description:"Query and/or transform XML payloads using XQuery and Saxon.",properties:{resourceUri:{kind:"path",type:"string",description:"The name of the template to load from classpath or file system",title:"Resource Uri",required:!0,deprecated:!1},allowStAX:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether to allow using StAX mode",title:"Allow St AX",required:!1,deprecated:!1},headerName:{kind:"parameter",type:"string",description:"To use a Camel Message header as the input source instead of Message body.",title:"Header Name",required:!1,deprecated:!1},namespacePrefixes:{kind:"parameter",type:"object",description:"Allows to control which namespace prefixes to use for a set of namespace mappings",title:"Namespace Prefixes",required:!1,deprecated:!1},propertyName:{kind:"parameter",type:"string",description:"To use a Camel Exchange property as the input source instead of Message body. It has a lower precedent than the name of header if both are set.",title:"Property Name",required:!1,deprecated:!1},resultsFormat:{kind:"parameter",type:"object",defaultValue:"DOM",enum:["Bytes","BytesSource","DOM","DOMSource","List","String","StringSource"],description:"What output result to use",title:"Results Format",required:!1,deprecated:!1},resultType:{kind:"parameter",type:"string",description:"What output result to use defined as a class",title:"Result Type",required:!1,deprecated:!1},stripsAllWhiteSpace:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to strip all whitespaces",title:"Strips All White Space",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},configuration:{kind:"parameter",type:"object",description:"To use a custom Saxon configuration",title:"Configuration",required:!1,deprecated:!1},configurationProperties:{kind:"parameter",type:"object",description:"To set custom Saxon configuration properties",title:"Configuration Properties",required:!1,deprecated:!1},moduleURIResolver:{kind:"parameter",type:"object",description:"To use the custom ModuleURIResolver",title:"Module URIResolver",required:!1,deprecated:!1},parameters:{kind:"parameter",type:"object",description:"Additional parameters",title:"Parameters",required:!1,deprecated:!1},properties:{kind:"parameter",type:"object",description:"Properties to configure the serialization parameters",title:"Properties",required:!1,deprecated:!1},staticQueryContext:{kind:"parameter",type:"object",description:"To use a custom Saxon StaticQueryContext",title:"Static Query Context",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1}}},xslt:{type:"object",title:"XSLT",group:"core,transformation",icon:"generic24.png",description:"Transforms XML payload using an XSLT template.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the template. The following is supported by the default URIResolver. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod",title:"Resource Uri",required:!0,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Cache for the resource content (the stylesheet file) when it is loaded. If set to false Camel will reload the stylesheet file on each message processing. This is good for development. A cached stylesheet can be forced to reload at runtime via JMX using the clearCachedStylesheet operation.",title:"Content Cache",required:!1,deprecated:!1},deleteOutputFile:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If you have output=file then this option dictates whether or not the output file should be deleted when the Exchange is done processing. For example suppose the output file is a temporary file, then it can be a good idea to delete it after use.",title:"Delete Output File",required:!1,deprecated:!1},failOnNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to throw an exception if the input body is null.",title:"Fail On Null Body",required:!1,deprecated:!1},output:{kind:"parameter",type:"object",defaultValue:"string",enum:["string","bytes","DOM","file"],description:"Option to specify which output type to use. Possible values are: string, bytes, DOM, file. The first three options are all in memory based, where as file is streamed directly to a java.io.File. For file you must specify the filename in the IN header with the key XsltConstants.XSLT_FILE_NAME which is also CamelXsltFileName. Also any paths leading to the filename must be created beforehand, otherwise an exception is thrown at runtime.",title:"Output",required:!1,deprecated:!1},transformerCacheSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The number of javax.xml.transform.Transformer object that are cached for reuse to avoid calls to Template.newTransformer().",title:"Transformer Cache Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},entityResolver:{kind:"parameter",type:"object",description:"To use a custom org.xml.sax.EntityResolver with javax.xml.transform.sax.SAXSource.",title:"Entity Resolver",required:!1,deprecated:!1},errorListener:{kind:"parameter",type:"object",description:"Allows to configure to use a custom javax.xml.transform.ErrorListener. Beware when doing this then the default error listener which captures any errors or fatal errors and store information on the Exchange as properties is not in use. So only use this option for special use-cases.",title:"Error Listener",required:!1,deprecated:!1},resultHandlerFactory:{kind:"parameter",type:"object",description:"Allows you to use a custom org.apache.camel.builder.xml.ResultHandlerFactory which is capable of using custom org.apache.camel.builder.xml.ResultHandler types.",title:"Result Handler Factory",required:!1,deprecated:!1},transformerFactory:{kind:"parameter",type:"object",description:"To use a custom XSLT transformer factory",title:"Transformer Factory",required:!1,deprecated:!1},transformerFactoryClass:{kind:"parameter",type:"string",description:"To use a custom XSLT transformer factory, specified as a FQN class name",title:"Transformer Factory Class",required:!1,deprecated:!1},transformerFactoryConfigurationStrategy:{kind:"parameter",type:"object",description:"A configuration strategy to apply on freshly created instances of TransformerFactory.",title:"Transformer Factory Configuration Strategy",required:!1,deprecated:!1},uriResolver:{kind:"parameter",type:"object",description:"To use a custom javax.xml.transform.URIResolver",title:"Uri Resolver",required:!1,deprecated:!1},xsltMessageLogger:{kind:"parameter",type:"object",description:"A consumer to messages generated during XSLT transformations.",title:"Xslt Message Logger",required:!1,deprecated:!1}}},"xslt-saxon":{type:"object",title:"XSLT Saxon",group:"core,transformation",icon:"generic24.png",description:"Transform XML payloads using an XSLT template using Saxon.",properties:{resourceUri:{kind:"path",type:"string",description:"Path to the template. The following is supported by the default URIResolver. You can prefix with: classpath, file, http, ref, or bean. classpath, file and http loads the resource using these protocols (classpath is default). ref will lookup the resource in the registry. bean will call a method on a bean to be used as the resource. For bean you can specify the method name after dot, eg bean:myBean.myMethod",title:"Resource Uri",required:!0,deprecated:!1},allowStAX:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether to allow using StAX as the javax.xml.transform.Source. You can enable this if the XSLT library supports StAX such as the Saxon library (camel-saxon). The Xalan library (default in JVM) does not support StAXSource.",title:"Allow StAX",required:!1,deprecated:!1},contentCache:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Cache for the resource content (the stylesheet file) when it is loaded. If set to false Camel will reload the stylesheet file on each message processing. This is good for development. A cached stylesheet can be forced to reload at runtime via JMX using the clearCachedStylesheet operation.",title:"Content Cache",required:!1,deprecated:!1},deleteOutputFile:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If you have output=file then this option dictates whether or not the output file should be deleted when the Exchange is done processing. For example suppose the output file is a temporary file, then it can be a good idea to delete it after use.",title:"Delete Output File",required:!1,deprecated:!1},failOnNullBody:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether or not to throw an exception if the input body is null.",title:"Fail On Null Body",required:!1,deprecated:!1},output:{kind:"parameter",type:"object",defaultValue:"string",enum:["string","bytes","DOM","file"],description:"Option to specify which output type to use. Possible values are: string, bytes, DOM, file. The first three options are all in memory based, where as file is streamed directly to a java.io.File. For file you must specify the filename in the IN header with the key XsltConstants.XSLT_FILE_NAME which is also CamelXsltFileName. Also any paths leading to the filename must be created beforehand, otherwise an exception is thrown at runtime.",title:"Output",required:!1,deprecated:!1},transformerCacheSize:{kind:"parameter",type:"integer",defaultValue:"0",description:"The number of javax.xml.transform.Transformer object that are cached for reuse to avoid calls to Template.newTransformer().",title:"Transformer Cache Size",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},entityResolver:{kind:"parameter",type:"object",description:"To use a custom org.xml.sax.EntityResolver with javax.xml.transform.sax.SAXSource.",title:"Entity Resolver",required:!1,deprecated:!1},errorListener:{kind:"parameter",type:"object",description:"Allows to configure to use a custom javax.xml.transform.ErrorListener. Beware when doing this then the default error listener which captures any errors or fatal errors and store information on the Exchange as properties is not in use. So only use this option for special use-cases.",title:"Error Listener",required:!1,deprecated:!1},resultHandlerFactory:{kind:"parameter",type:"object",description:"Allows you to use a custom org.apache.camel.builder.xml.ResultHandlerFactory which is capable of using custom org.apache.camel.builder.xml.ResultHandler types.",title:"Result Handler Factory",required:!1,deprecated:!1},saxonConfiguration:{kind:"parameter",type:"object",description:"To use a custom Saxon configuration",title:"Saxon Configuration",required:!1,deprecated:!1},saxonExtensionFunctions:{kind:"parameter",type:"string",description:"Allows you to use a custom net.sf.saxon.lib.ExtensionFunctionDefinition. You would need to add camel-saxon to the classpath. The function is looked up in the registry, where you can comma to separate multiple values to lookup.",title:"Saxon Extension Functions",required:!1,deprecated:!1},secureProcessing:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Feature for XML secure processing (see javax.xml.XMLConstants). This is enabled by default. However, when using Saxon Professional you may need to turn this off to allow Saxon to be able to use Java extension functions.",title:"Secure Processing",required:!1,deprecated:!1},transformerFactory:{kind:"parameter",type:"object",description:"To use a custom XSLT transformer factory",title:"Transformer Factory",required:!1,deprecated:!1},transformerFactoryClass:{kind:"parameter",type:"string",description:"To use a custom XSLT transformer factory, specified as a FQN class name",title:"Transformer Factory Class",required:!1,deprecated:!1},transformerFactoryConfigurationStrategy:{kind:"parameter",type:"object",description:"A configuration strategy to apply on freshly created instances of TransformerFactory.",title:"Transformer Factory Configuration Strategy",required:!1,deprecated:!1},uriResolver:{kind:"parameter",type:"object",description:"To use a custom javax.xml.transform.URIResolver",title:"Uri Resolver",required:!1,deprecated:!1},xsltMessageLogger:{kind:"parameter",type:"object",description:"A consumer to messages generated during XSLT transformations.",title:"Xslt Message Logger",required:!1,deprecated:!1}}},zeebe:{type:"object",title:"Zeebe",group:"workflow,saas",icon:"generic24.png",description:"Zeebe component which does integrage with Camunda Zeebe to interact with the API.",properties:{operationName:{kind:"path",type:"object",enum:["startProcess","cancelProcess","publishMessage","completeJob","failJob","updateJobRetries","worker","throwError","deployResource"],description:"The operation to use",title:"Operation Name",required:!0,deprecated:!1},formatJSON:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Format the result in the body as JSON.",title:"Format JSON",required:!1,deprecated:!1},jobKey:{kind:"parameter",type:"string",description:"JobKey for the job worker.",title:"Job Key",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"10",description:"Timeout for job worker.",title:"Timeout",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},zendesk:{type:"object",title:"Zendesk",group:"cloud,api,saas",icon:"generic24.png",description:"Manage Zendesk tickets, users, organizations, etc.",properties:{methodName:{kind:"path",type:"object",enum:["ADD_TAG_TO_ORGANISATIONS","ADD_TAG_TO_TICKET","ADD_TAG_TO_TOPICS","ASSOCIATE_ATTACHMENTS_TO_ARTICLE","CHANGE_USER_PASSWORD","CREATE_ARTICLE","CREATE_ARTICLE_1","CREATE_ARTICLE_TRANSLATION","CREATE_AUTOMATION","CREATE_CATEGORY","CREATE_CATEGORY_TRANSLATION","CREATE_COMMENT","CREATE_CONTENT_TAG","CREATE_DYNAMIC_CONTENT_ITEM","CREATE_DYNAMIC_CONTENT_ITEM_VARIANT","CREATE_FORUM","CREATE_GROUP","CREATE_GROUP_MEMBERSHIP","CREATE_GROUP_MEMBERSHIP_1","CREATE_MACRO","CREATE_OR_UPDATE_ORGANIZATION","CREATE_OR_UPDATE_USER","CREATE_OR_UPDATE_USERS","CREATE_OR_UPDATE_USERS_1","CREATE_OR_UPDATE_USERS_ASYNC","CREATE_ORGANIZATION","CREATE_ORGANIZATION_MEMBERSHIP","CREATE_ORGANIZATION_MEMBERSHIP_1","CREATE_ORGANIZATION_MEMBERSHIPS","CREATE_ORGANIZATION_MEMBERSHIPS_1","CREATE_ORGANIZATION_MEMBERSHIPS_ASYNC","CREATE_ORGANIZATIONS","CREATE_ORGANIZATIONS_1","CREATE_ORGANIZATIONS_ASYNC","CREATE_PERMISSION_GROUP","CREATE_REQUEST","CREATE_SATISFACTION_RATING","CREATE_SATISFACTION_RATING_1","CREATE_SECTION","CREATE_SECTION_TRANSLATION","CREATE_TARGET","CREATE_TICKET","CREATE_TICKET_ASYNC","CREATE_TICKET_FIELD","CREATE_TICKET_FORM","CREATE_TICKET_FROM_TWEET","CREATE_TICKETS","CREATE_TICKETS_1","CREATE_TICKETS_ASYNC","CREATE_TOPIC","CREATE_TRIGGER","CREATE_UPLOAD","CREATE_UPLOAD_1","CREATE_UPLOAD_2","CREATE_UPLOAD_ARTICLE","CREATE_UPLOAD_ARTICLE_1","CREATE_USER","CREATE_USER_IDENTITY","CREATE_USER_IDENTITY_1","CREATE_USER_SEGMENT","CREATE_USERS","CREATE_USERS_1","CREATE_USERS_ASYNC","DELETE_ARTICLE","DELETE_ARTICLE_ATTACHMENT","DELETE_ARTICLE_ATTACHMENT_1","DELETE_ATTACHMENT","DELETE_ATTACHMENT_1","DELETE_AUTOMATION","DELETE_CATEGORY","DELETE_CONTENT_TAG","DELETE_DYNAMIC_CONTENT_ITEM","DELETE_DYNAMIC_CONTENT_ITEM_VARIANT","DELETE_FORUM","DELETE_GROUP","DELETE_GROUP_1","DELETE_GROUP_MEMBERSHIP","DELETE_GROUP_MEMBERSHIP_1","DELETE_GROUP_MEMBERSHIP_2","DELETE_GROUP_MEMBERSHIP_3","DELETE_ORGANIZATION","DELETE_ORGANIZATION_1","DELETE_ORGANIZATION_MEMBERSHIP","DELETE_ORGANIZATION_MEMBERSHIP_1","DELETE_ORGANIZATION_MEMBERSHIP_2","DELETE_ORGANIZATION_MEMBERSHIPS","DELETE_ORGANIZATIONS","DELETE_PERMISSION_GROUP","DELETE_PERMISSION_GROUP_1","DELETE_SECTION","DELETE_SUSPENDED_TICKET","DELETE_SUSPENDED_TICKET_1","DELETE_TARGET","DELETE_TICKET","DELETE_TICKET_1","DELETE_TICKET_FIELD","DELETE_TICKET_FIELD_1","DELETE_TICKET_FORM","DELETE_TICKET_FORM_1","DELETE_TICKETS","DELETE_TOPIC","DELETE_TRANSLATION","DELETE_TRANSLATION_1","DELETE_TRIGGER","DELETE_UPLOAD","DELETE_UPLOAD_1","DELETE_USER","DELETE_USER_1","DELETE_USER_IDENTITY","DELETE_USER_IDENTITY_1","DELETE_USER_IDENTITY_2","DELETE_USER_SEGMENT","DELETE_USER_SEGMENT_1","DELETE_USERS","GET_ACTIVE_TRIGGERS","GET_ARTICLE","GET_ARTICLE_FROM_SEARCH","GET_ARTICLE_FROM_SEARCH_1","GET_ARTICLE_SUBSCRIPTIONS","GET_ARTICLE_SUBSCRIPTIONS_1","GET_ARTICLE_TRANSLATIONS","GET_ARTICLES","GET_ARTICLES_1","GET_ARTICLES_2","GET_ARTICLES_3","GET_ARTICLES_FROM_ALL_LABELS","GET_ARTICLES_FROM_ANY_LABELS","GET_ARTICLES_FROM_PAGE","GET_ARTICLES_INCREMENTALLY","GET_ASSIGNABLE_GROUP_MEMBERSHIPS","GET_ASSIGNABLE_GROUP_MEMBERSHIPS_1","GET_ASSIGNABLE_GROUPS","GET_ASSIGNED_TICKETS_COUNT_FOR_USER","GET_ATTACHMENT","GET_ATTACHMENT_1","GET_ATTACHMENTS_FROM_ARTICLE","GET_AUTHENTICATED_USER","GET_AUTO_COMPLETE_ORGANIZATIONS","GET_AUTOMATION","GET_AUTOMATIONS","GET_BRANDS","GET_CC_REQUESTS","GET_CATEGORIES","GET_CATEGORY","GET_CATEGORY_TRANSLATIONS","GET_CCD_TICKETS_COUNT_FOR_USER","GET_COMPLIANCE_DELETION_STATUSES","GET_CONTENT_TAG","GET_CONTENT_TAGS","GET_CONTENT_TAGS_1","GET_CONTENT_TAGS_2","GET_CURRENT_USER","GET_CUSTOM_AGENT_ROLES","GET_DELETED_TICKETS","GET_DELETED_TICKETS_1","GET_DYNAMIC_CONTENT_ITEM","GET_DYNAMIC_CONTENT_ITEM_VARIANT","GET_DYNAMIC_CONTENT_ITEM_VARIANTS","GET_DYNAMIC_CONTENT_ITEMS","GET_FORUM","GET_FORUMS","GET_FORUMS_1","GET_GROUP","GET_GROUP_MEMBERSHIP","GET_GROUP_MEMBERSHIP_1","GET_GROUP_MEMBERSHIP_BY_USER","GET_GROUP_MEMBERSHIPS","GET_GROUP_MEMBERSHIPS_1","GET_GROUP_ORGANIZATION","GET_GROUP_USERS","GET_GROUPS","GET_HELP_CENTER_LOCALES","GET_HOLIDAYS_FOR_SCHEDULE","GET_HOLIDAYS_FOR_SCHEDULE_1","GET_INCREMENTAL_TICKETS_RESULT","GET_JOB_STATUS","GET_JOB_STATUS_ASYNC","GET_JOB_STATUSES","GET_JOB_STATUSES_ASYNC","GET_MACRO","GET_MACROS","GET_OPEN_REQUESTS","GET_ORGANIZATION","GET_ORGANIZATION_FIELDS","GET_ORGANIZATION_MEMBERSHIP","GET_ORGANIZATION_MEMBERSHIP_BY_USER","GET_ORGANIZATION_MEMBERSHIP_FOR_USER","GET_ORGANIZATION_MEMBERSHIPS","GET_ORGANIZATION_MEMBERSHIPS_FOR_ORG","GET_ORGANIZATION_MEMBERSHIPS_FOR_USER","GET_ORGANIZATION_REQUESTS","GET_ORGANIZATION_TICKETS","GET_ORGANIZATION_USERS","GET_ORGANIZATIONS","GET_ORGANIZATIONS_1","GET_ORGANIZATIONS_INCREMENTALLY","GET_PERMISSION_GROUP","GET_PERMISSION_GROUPS","GET_RECENT_TICKETS","GET_REQUEST","GET_REQUEST_COMMENT","GET_REQUEST_COMMENT_1","GET_REQUEST_COMMENT_2","GET_REQUEST_COMMENTS","GET_REQUEST_COMMENTS_1","GET_REQUESTS","GET_SATISFACTION_RATING","GET_SATISFACTION_RATINGS","GET_SCHEDULE","GET_SCHEDULE_1","GET_SCHEDULES","GET_SEARCH_TICKET_RESULTS","GET_SECTION","GET_SECTION_SUBSCRIPTIONS","GET_SECTION_SUBSCRIPTIONS_1","GET_SECTION_TRANSLATIONS","GET_SECTIONS","GET_SECTIONS_1","GET_SECTIONS_2","GET_SOLVED_REQUESTS","GET_SUSPENDED_TICKETS","GET_TARGET","GET_TARGETS","GET_TICKET","GET_TICKET_AUDIT","GET_TICKET_AUDIT_1","GET_TICKET_AUDIT_2","GET_TICKET_AUDITS","GET_TICKET_AUDITS_1","GET_TICKET_COLLABORATORS","GET_TICKET_COMMENTS","GET_TICKET_COMMENTS_1","GET_TICKET_FIELD","GET_TICKET_FIELDS","GET_TICKET_FORM","GET_TICKET_FORMS","GET_TICKET_INCIDENTS","GET_TICKET_METRIC","GET_TICKET_METRIC_BY_TICKET","GET_TICKET_METRICS","GET_TICKETS","GET_TICKETS_1","GET_TICKETS_BY_EXTERNAL_ID","GET_TICKETS_BY_EXTERNAL_ID_1","GET_TICKETS_COUNT","GET_TICKETS_COUNT_FOR_ORGANIZATION","GET_TICKETS_FROM_SEARCH","GET_TICKETS_INCREMENTALLY","GET_TICKETS_INCREMENTALLY_1","GET_TIME_ZONES","GET_TOPIC","GET_TOPICS","GET_TOPICS_1","GET_TOPICS_2","GET_TOPICS_3","GET_TOPICS_BY_USER","GET_TRIGGER","GET_TRIGGERS","GET_TRIGGERS_1","GET_TWITTER_MONITORS","GET_USER","GET_USER_CCD_TICKETS","GET_USER_FIELDS","GET_USER_IDENTITIES","GET_USER_IDENTITIES_1","GET_USER_IDENTITY","GET_USER_IDENTITY_1","GET_USER_IDENTITY_2","GET_USER_RELATED_INFO","GET_USER_REQUESTED_TICKETS","GET_USER_REQUESTS","GET_USER_REQUESTS_1","GET_USER_SEGMENT","GET_USER_SEGMENTS","GET_USER_SEGMENTS_1","GET_USER_SEGMENTS_APPLICABLE","GET_USER_SUBSCRIPTIONS","GET_USER_SUBSCRIPTIONS_1","GET_USERS","GET_USERS_1","GET_USERS_BY_EXTERNAL_IDS","GET_USERS_BY_EXTERNAL_IDS_1","GET_USERS_BY_ROLE","GET_USERS_INCREMENTALLY","GET_VIEW","GET_VIEWS","IMPORT_TICKET","IMPORT_TOPIC","LIST_HELP_CENTER_LOCALES","LOOKUP_ORGANIZATIONS_BY_EXTERNAL_ID","LOOKUP_USER_BY_EMAIL","LOOKUP_USER_BY_EXTERNAL_ID","MACROS_SHOW_CHANGES_TO_TICKET","MACROS_SHOW_TICKET_AFTER_CHANGES","MAKE_PRIVATE_TICKET_AUDIT","MAKE_PRIVATE_TICKET_AUDIT_1","MAKE_PRIVATE_TICKET_AUDIT_2","MARK_TICKET_AS_SPAM","MARK_TICKET_AS_SPAM_1","MERGE_USERS","NOTIFY_APP","PERMANENTLY_DELETE_TICKET","PERMANENTLY_DELETE_TICKET_1","PERMANENTLY_DELETE_TICKETS","PERMANENTLY_DELETE_USER","PERMANENTLY_DELETE_USER_1","QUEUE_CREATE_TICKET_ASYNC","REMOVE_TAG_FROM_ORGANISATIONS","REMOVE_TAG_FROM_TICKET","REMOVE_TAG_FROM_TOPICS","REQUEST_VERIFY_USER_IDENTITY","REQUEST_VERIFY_USER_IDENTITY_1","REQUEST_VERIFY_USER_IDENTITY_2","RESET_USER_PASSWORD","RESET_USER_PASSWORD_1","SEARCH_TRIGGERS","SEARCH_TRIGGERS_1","SET_GROUP_MEMBERSHIP_AS_DEFAULT","SET_ORGANIZATION_MEMBERSHIP_AS_DEFAULT","SET_TAG_ON_ORGANISATIONS","SET_TAG_ON_TICKET","SET_TAG_ON_TOPICS","SET_USER_PRIMARY_IDENTITY","SET_USER_PRIMARY_IDENTITY_1","SET_USER_PRIMARY_IDENTITY_2","SHOW_ARTICLE_TRANSLATION","SHOW_CATEGORY_TRANSLATION","SHOW_SECTION_TRANSLATION","SUSPEND_USER","TRUST_TICKET_AUDIT","TRUST_TICKET_AUDIT_1","TRUST_TICKET_AUDIT_2","UNSUSPEND_USER","UPDATE_ARTICLE","UPDATE_ARTICLE_TRANSLATION","UPDATE_AUTOMATION","UPDATE_CATEGORY","UPDATE_CATEGORY_TRANSLATION","UPDATE_CONTENT_TAG","UPDATE_DYNAMIC_CONTENT_ITEM","UPDATE_DYNAMIC_CONTENT_ITEM_VARIANT","UPDATE_FORUM","UPDATE_GROUP","UPDATE_INSTALLATION","UPDATE_MACRO","UPDATE_ORGANIZATION","UPDATE_ORGANIZATIONS","UPDATE_ORGANIZATIONS_1","UPDATE_ORGANIZATIONS_ASYNC","UPDATE_PERMISSION_GROUP","UPDATE_REQUEST","UPDATE_SECTION","UPDATE_SECTION_TRANSLATION","UPDATE_TICKET","UPDATE_TICKET_FIELD","UPDATE_TICKET_FORM","UPDATE_TICKETS","UPDATE_TICKETS_1","UPDATE_TICKETS_ASYNC","UPDATE_TOPIC","UPDATE_TRIGGER","UPDATE_USER","UPDATE_USER_IDENTITY","UPDATE_USER_IDENTITY_1","UPDATE_USER_SEGMENT","UPDATE_USERS","UPDATE_USERS_1","UPDATE_USERS_ASYNC","VERIFY_USER_IDENTITY","VERIFY_USER_IDENTITY_1","VERIFY_USER_IDENTITY_2"],description:"What operation to use",title:"Method Name",required:!0,deprecated:!1},inBody:{kind:"parameter",type:"string",description:"Sets the name of a parameter to be passed in the exchange In Body",title:"In Body",required:!1,deprecated:!1},serverUrl:{kind:"parameter",type:"string",description:"The server URL to connect.",title:"Server Url",required:!1,deprecated:!1},sendEmptyMessageWhenIdle:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead.",title:"Send Empty Message When Idle",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},pollStrategy:{kind:"parameter",type:"object",description:"A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.",title:"Poll Strategy",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1},backoffErrorThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.",title:"Backoff Error Threshold",required:!1,deprecated:!1},backoffIdleThreshold:{kind:"parameter",type:"integer",description:"The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.",title:"Backoff Idle Threshold",required:!1,deprecated:!1},backoffMultiplier:{kind:"parameter",type:"integer",description:"To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.",title:"Backoff Multiplier",required:!1,deprecated:!1},delay:{kind:"parameter",type:"integer",defaultValue:"500",description:"Milliseconds before the next poll.",title:"Delay",required:!1,deprecated:!1},greedy:{kind:"parameter",type:"boolean",defaultValue:"false",description:"If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages.",title:"Greedy",required:!1,deprecated:!1},initialDelay:{kind:"parameter",type:"integer",defaultValue:"1000",description:"Milliseconds before the first poll starts.",title:"Initial Delay",required:!1,deprecated:!1},repeatCount:{kind:"parameter",type:"integer",defaultValue:"0",description:"Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever.",title:"Repeat Count",required:!1,deprecated:!1},runLoggingLevel:{kind:"parameter",type:"object",defaultValue:"TRACE",enum:["TRACE","DEBUG","INFO","WARN","ERROR","OFF"],description:"The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.",title:"Run Logging Level",required:!1,deprecated:!1},scheduledExecutorService:{kind:"parameter",type:"object",description:"Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.",title:"Scheduled Executor Service",required:!1,deprecated:!1},scheduler:{kind:"parameter",type:"object",defaultValue:"none",description:"To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler",title:"Scheduler",required:!1,deprecated:!1},schedulerProperties:{kind:"parameter",type:"object",description:"To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler.",title:"Scheduler Properties",required:!1,deprecated:!1},startScheduler:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Whether the scheduler should be auto started.",title:"Start Scheduler",required:!1,deprecated:!1},timeUnit:{kind:"parameter",type:"object",defaultValue:"MILLISECONDS",enum:["NANOSECONDS","MICROSECONDS","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS"],description:"Time unit for initialDelay and delay options.",title:"Time Unit",required:!1,deprecated:!1},useFixedDelay:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.",title:"Use Fixed Delay",required:!1,deprecated:!1},oauthToken:{kind:"parameter",type:"string",description:"The OAuth token.",title:"Oauth Token",required:!1,deprecated:!1},password:{kind:"parameter",type:"string",description:"The password.",title:"Password",required:!1,deprecated:!1},token:{kind:"parameter",type:"string",description:"The security token.",title:"Token",required:!1,deprecated:!1},username:{kind:"parameter",type:"string",description:"The user name.",title:"Username",required:!1,deprecated:!1}}},zookeeper:{type:"object",title:"ZooKeeper",group:"clustering,management,bigdata",icon:"generic24.png",description:"Manage ZooKeeper clusters.",properties:{serverUrls:{kind:"path",type:"string",description:"The zookeeper server hosts (multiple servers can be separated by comma)",title:"Server Urls",required:!0,deprecated:!1},path:{kind:"path",type:"string",description:"The node in the ZooKeeper server (aka znode)",title:"Path",required:!0,deprecated:!1},listChildren:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the children of the node should be listed",title:"List Children",required:!1,deprecated:!1},timeout:{kind:"parameter",type:"integer",defaultValue:"5000",description:"The time interval to wait on connection before timing out.",title:"Timeout",required:!1,deprecated:!1},backoff:{kind:"parameter",type:"integer",defaultValue:"5000",description:"The time interval to backoff for after an error before retrying.",title:"Backoff",required:!1,deprecated:!1},repeat:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should changes to the znode be 'watched' and repeatedly processed.",title:"Repeat",required:!1,deprecated:!1},sendEmptyMessageOnDelete:{kind:"parameter",type:"boolean",defaultValue:"true",description:"Upon the delete of a znode, should an empty message be send to the consumer",title:"Send Empty Message On Delete",required:!1,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1},create:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Should the endpoint create the node if it does not currently exist.",title:"Create",required:!1,deprecated:!1},createMode:{kind:"parameter",type:"string",defaultValue:"EPHEMERAL",enum:["PERSISTENT","PERSISTENT_SEQUENTIAL","EPHEMERAL","EPHEMERAL_SEQUENTIAL"],description:"The create mode that should be used for the newly created node",title:"Create Mode",required:!1,deprecated:!1},lazyStartProducer:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",title:"Lazy Start Producer",required:!1,deprecated:!1}}},"zookeeper-master":{type:"object",title:"ZooKeeper Master",group:"clustering,management,bigdata",icon:"generic24.png",description:"Have only a single consumer in a cluster consuming from a given endpoint; with automatic failover if the JVM dies.",properties:{groupName:{kind:"path",type:"string",description:"The name of the cluster group to use",title:"Group Name",required:!0,deprecated:!1},consumerEndpointUri:{kind:"path",type:"string",description:"The consumer endpoint to use in master/slave mode",title:"Consumer Endpoint Uri",required:!0,deprecated:!1},bridgeErrorHandler:{kind:"parameter",type:"boolean",defaultValue:"false",description:"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Bridge Error Handler",required:!1,deprecated:!1},exceptionHandler:{kind:"parameter",type:"object",description:"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored.",title:"Exception Handler",required:!1,deprecated:!1},exchangePattern:{kind:"parameter",type:"object",enum:["InOnly","InOut"],description:"Sets the exchange pattern when the consumer creates an exchange.",title:"Exchange Pattern",required:!1,deprecated:!1}}}},u="4.0.5"}}]);
//# sourceMappingURL=146.4945bd6a.chunk.js.map