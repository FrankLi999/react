## Vars
## APPLICATION-NAME: my-camel-integrator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: integrator
  # namespace: my-sandbox
  # labels:
  #   app: my-camel
  #   deployment: my-camel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: integrator
  template:
    # metadata:
    #   labels:
    #     app: my-camel-integrator
    #     deployment: my-camel-integrator
    spec:
      containers:
        - name: integrator
          # cd openshift/overlays/sandbox
          # oc kustomize edit set image my-camel-integrator=my-camel-integrator:$TAG_VERSION
          # image: my-camel-integrator:latest
          image: >-
            integrator:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: integrator-env
                  key: SPRING_PROFILES_ACTIVE
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
          volumeMounts:
            - name: my-camel-spring-config
              mountPath: /my/config  
          resources: {}
          imagePullPolicy: IfNotPresent
      imagePullSecrets:
        - name: myregistry.azurecr.io   
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext: {}
      volumes:
        - name: my-camel-spring-config
          configMap:
            name: integrator-spring-config
  strategy:
#    rollingUpdate:
#      maxSurge: 1
#      maxUnavailable: 1
    type: RollingUpdate
  progressDeadlineSeconds: 600
