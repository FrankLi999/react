{"version":3,"file":"static/js/952.bb06c210.chunk.js","mappings":"8SAIe,SAASA,EAASC,GACvBA,EAARC,SAG4B,IAF5BC,EAAQF,EAARE,SACGC,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAEAC,EAAoBJ,EAApBI,gBACR,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDN,GAAK,IACTO,MAAO,CAAEC,MAAO,QAChBC,UAAS,QAAAC,OAAUV,EAAMS,WACzBE,MAAOR,EAAgBS,EAAAA,GAAmBC,eAAeC,UAEzDV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,MAGb,C,wBCfe,SAASC,EAItBhB,GACA,IACEc,EAcEd,EAdFc,SACAG,EAaEjB,EAbFiB,SACAC,EAYElB,EAZFkB,WACAC,EAWEnB,EAXFmB,QACAC,EAUEpB,EAVFoB,YACAC,EASErB,EATFqB,UACAC,EAQEtB,EARFsB,UACAC,EAOEvB,EAPFuB,MACAC,EAMExB,EANFwB,iBACAC,EAKEzB,EALFyB,iBACAC,EAIE1B,EAJF0B,eACAC,EAGE3B,EAHF2B,SACA5B,EAEEC,EAFFD,SACAD,EACEE,EADFF,SAEF8B,EAAmE7B,EAAS8B,UAAUC,gBAA9EC,EAAUH,EAAVG,WAAYC,EAAcJ,EAAdI,eAAgBC,EAAYL,EAAZK,aAAcC,EAAYN,EAAZM,aAC5CC,EAA0B,CAC9BC,KAAM,EACNC,YAAa,EACbC,aAAc,EACdC,WAAY,QAEd,OACEnC,EAAAA,EAAAA,KAAA,OAAAU,UACE0B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAChC,UAAU,kCAAiCK,SAAA,EAC9CV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAG9B,SACfA,KAEHV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAInC,UAAU,OAAMK,SAChCI,IACCsB,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,kBAAiBK,SAAA,EAC5BO,GAAaD,KACbhB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASK,UACtBV,EAAAA,EAAAA,KAAC6B,EAAY,CACXxB,UAAU,qBACVF,MAAO4B,EACPlB,SAAUA,GAAYU,IAAaN,EACnCwB,QAASnB,EAAeH,EAAOA,EAAQ,GACvCzB,SAAUA,EACVC,SAAUA,OAIdsB,GAAaD,KACbhB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASK,UACtBV,EAAAA,EAAAA,KAAC4B,EAAc,CACbzB,MAAO4B,EACPlB,SAAUA,GAAYU,IAAaP,EACnCyB,QAASnB,EAAeH,EAAOA,EAAQ,GACvCzB,SAAUA,EACVC,SAAUA,MAIfoB,IACCf,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASK,UACtBV,EAAAA,EAAAA,KAAC2B,EAAU,CACTxB,MAAO4B,EACPlB,SAAUA,GAAYU,EACtBkB,QAASrB,EAAiBD,GAC1BzB,SAAUA,EACVC,SAAUA,MAIfuB,IACClB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASK,UACtBV,EAAAA,EAAAA,KAAC8B,EAAY,CACX3B,MAAO4B,EACPlB,SAAUA,GAAYU,EACtBkB,QAASpB,EAAiBF,GAC1BzB,SAAUA,EACVC,SAAUA,eAU9B,C,wBChFe,SAAS+C,EAItB9C,GACA,IAAQ+C,EACN/C,EADM+C,OAAQ9B,EACdjB,EADciB,SAAU+B,EACxBhD,EADwBgD,SAAUlD,EAClCE,EADkCF,SAAUmD,EAC5CjD,EAD4CiD,MAAOC,EACnDlD,EADmDkD,WAAYvB,EAC/D3B,EAD+D2B,SAAU5B,EACzEC,EADyED,SAAUoD,EACnFnD,EADmFmD,SAAUC,EAC7FpD,EAD6FoD,OAAQzC,EACrGX,EADqGW,MAEjG0C,GAAYC,EAAAA,EAAAA,IAAsBxD,GAClCyD,GAAgCC,EAAAA,EAAAA,IACpC,gCACAzD,EACAsD,GAEIrC,GAAyBwC,EAAAA,EAAAA,IAC7B,yBACAzD,EACAsD,GAEII,GAA0BD,EAAAA,EAAAA,IAC9B,0BACAzD,EACAsD,GAImBzD,EACjBG,EAAS8B,UADXC,gBAAmBlC,UAErB,OACEQ,EAAAA,EAAAA,KAAA,OAAAU,UACEV,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAChC,UAAU,UAASK,UACtB0B,EAAAA,EAAAA,MAACE,EAAAA,EAAG,CAACjC,UAAU,UAASK,SAAA,EACtBV,EAAAA,EAAAA,KAACqD,EAAuB,CACtBT,SAAUA,EACVrC,MAAO0C,EAAU1C,OAASA,EAC1ByC,OAAQA,EACRtD,SAAUA,EACVqD,SAAUA,EACVpD,SAAUA,KAEZK,EAAAA,EAAAA,KAACmD,EAA6B,CAC5BP,SAAUA,EACVU,YAAaL,EAAUK,aAAeN,EAAOM,YAC7CN,OAAQA,EACRtD,SAAUA,EACVC,SAAUA,KAEZyC,EAAAA,EAAAA,MAACmB,EAAAA,EAAS,CAACC,OAAK,EAAyCnD,UAAU,UAASK,SAAA,CACzEmC,GACCA,EAAMY,KAAI,SAAAhE,GAAA,IAAGiE,EAAGjE,EAAHiE,IAAQC,GAAS9D,EAAAA,EAAAA,GAAAJ,EAAAK,GAAA,OAC5BE,EAAAA,EAAAA,KAACY,GAAsBV,EAAAA,EAAAA,GAAA,GAAeyD,GAATD,EAAsB,IAEtDf,IACC3C,EAAAA,EAAAA,KAACuD,EAAAA,EAAS,CAAClD,UAAU,GAAEK,UACrB0B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAChC,UAAU,OAAMK,SAAA,EACnBV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAI,KACTvC,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAI,EAAGlC,UAAU,sBAAqBK,UACzCV,EAAAA,EAAAA,KAACR,EAAS,CACRa,UAAU,iBACVoC,QAASK,EACTjC,SAAUA,GAAYU,EACtB7B,SAAUA,EACVC,SAAUA,aAKnB,mBAAAW,OApBsCsC,EAASgB,YA0B5D,C,cCzEe,SAASC,EAAiBpE,GAsBJ,IAjBnCqE,EAAErE,EAAFqE,GACAC,EAAWtE,EAAXsE,YACAhB,EAAQtD,EAARsD,SACAxB,EAAQ9B,EAAR8B,SACAV,EAAQpB,EAARoB,SACAmD,EAAIvE,EAAJuE,KACAC,EAAKxE,EAALwE,MACAC,EAAQzE,EAARyE,SACAC,EAAgB1E,EAAhB0E,iBACAC,EAAM3E,EAAN2E,OACAC,EAAO5E,EAAP4E,QACAC,EAAS7E,EAAT6E,UACAC,EAAO9E,EAAP8E,QACAvB,EAAMvD,EAANuD,OAAMwB,EAAA/E,EACNgF,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EACd9D,EAAQjB,EAARiB,SACAgE,EAAUjF,EAAViF,WAEMC,GAAUzE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXwE,IACAE,EAAAA,EAAAA,IAAuB5B,EAAQgB,EAAMO,IAQ1C,OACEnC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAAnE,SAAA,EACEV,EAAAA,EAAAA,KAAC8E,EAAAA,EAAKC,SAAO7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACX4D,GAAIA,EACJkB,KAAMlB,EACNC,YAAaA,EACbkB,UAAWX,EACXvB,SAAUA,EACVlC,SAAUA,EACVqE,SAAU3D,EACVlB,UAAWoE,EAAUU,OAAS,EAAI,aAAe,GACjDC,KAAMpC,EAAOqC,UAAWC,EAAAA,EAAAA,IAAcxB,QAAMyB,GACxCZ,GAAU,IACdV,MAAOA,GAAmB,IAAVA,EAAcA,EAAQ,GACtCC,SAAUC,GApBE,SAAHqB,GAAA,IAAgBvB,EAAKuB,EAAfC,OAAUxB,MAAK,OAClCC,EAAmB,KAAVD,EAAeM,EAAQmB,WAAazB,EAAO,EAoBhDG,OAnBU,SAAHuB,GAAA,IAAgB1B,EAAK0B,EAAfF,OAAUxB,MAAK,OAAuCG,EAAON,EAAIG,EAAO,EAoBrFI,QAnBW,SAAHuB,GAAA,IAAgB3B,EAAK2B,EAAfH,OAAUxB,MAAK,OAAuCI,EAAQP,EAAIG,EAAO,EAoBvF,oBAAkB4B,EAAAA,EAAAA,IAAsB/B,IAAMd,EAAOqC,aAEtD3E,EACAoF,MAAMC,QAAQ/C,EAAOqC,WACpBrF,EAAAA,EAAAA,KAAA,YAAU8D,IAAIwB,EAAAA,EAAAA,IAAcxB,GAAIpD,SAC5BsC,EAAOqC,SACN/E,OAAO0C,EAAOgD,UAAYhD,EAAOqC,SAASY,SAASjD,EAAOgD,SAAY,CAAChD,EAAOgD,SAAwB,IACtGvC,KAAI,SAACyC,GACJ,OAAOlG,EAAAA,EAAAA,KAAA,UAAsBiE,MAAOiC,GAAhBA,EACtB,MAEF,OAGV,CC1Ee,SAASC,EAAgB1G,GAIgB,IAApDqE,EAAErE,EAAFqE,GAAIR,EAAW7D,EAAX6D,YACN,OAAIA,GAEAtD,EAAAA,EAAAA,KAAA,OAAAU,UACEV,EAAAA,EAAAA,KAAA,OAAK8D,GAAIA,EAAIzD,UAAU,OAAMK,SAC1B4C,MAMF,IACT,C,wBCbe,SAAS8C,EAAS3G,GAGJ,IAF3B4G,EAAM5G,EAAN4G,OAGQtG,EAFAN,EAARE,SAEQI,gBACR,OACEqC,EAAAA,EAAAA,MAACkE,EAAAA,EAAI,CAACC,OAAO,SAASlG,UAAU,OAAMK,SAAA,EACpCV,EAAAA,EAAAA,KAACsG,EAAAA,EAAKE,OAAM,CAACnG,UAAU,eAAcK,SAAEX,EAAgBS,EAAAA,GAAmBiG,gBAC1EzG,EAAAA,EAAAA,KAACsG,EAAAA,EAAKI,KAAI,CAACrG,UAAU,MAAKK,UACxBV,EAAAA,EAAAA,KAAC2G,EAAAA,EAAS,CAAAjG,SACP2F,EAAO5C,KAAI,SAACmD,EAAOC,GAClB,OACE7G,EAAAA,EAAAA,KAAC2G,EAAAA,EAAUG,KAAI,CAASzG,UAAU,WAAUK,UAC1CV,EAAAA,EAAAA,KAAA,QAAAU,SAAOkG,EAAMG,SADMF,EAIzB,UAKV,C,oGCnBe,SAASG,EACtBpH,GAEA,IAAQqH,EAAiErH,EAAjEqH,KAAkDC,GAAetH,EAA3DuH,SAA2DvH,EAAjDS,UAAiDT,EAAtCF,SAAsCE,EAA5BD,UAAuBE,EAAAA,EAAAA,GAAKD,EAAKE,IAC9E,OAEEE,EAAAA,EAAAA,KAACC,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKgH,GAAU,IAAEE,QAASxH,EAAMwH,SAAW,QAASC,KAAK,KAAI3G,SACjEuG,IAGP,CAEO,SAAStF,EACd/B,GAEA,IACcG,EACVH,EADFD,SAAYI,gBAEd,OAAOC,EAAAA,EAAAA,KAACgH,GAAU9G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACK,MAAOR,EAAgBS,EAAAA,GAAmBmB,aAAiB/B,GAAK,IAAEqH,MAAMjH,EAAAA,EAAAA,KAACsH,EAAAA,EAAS,MACvG,CAEO,SAAS1F,EACdhC,GAEA,IACcG,EACVH,EADFD,SAAYI,gBAEd,OACEC,EAAAA,EAAAA,KAACgH,GAAU9G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACK,MAAOR,EAAgBS,EAAAA,GAAmBoB,iBAAqBhC,GAAK,IAAEqH,MAAMjH,EAAAA,EAAAA,KAACuH,EAAAA,EAAkB,MAE/G,CAEO,SAAS1F,EACdjC,GAEA,IACcG,EACVH,EADFD,SAAYI,gBAEd,OAAOC,EAAAA,EAAAA,KAACgH,GAAU9G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACK,MAAOR,EAAgBS,EAAAA,GAAmBqB,eAAmBjC,GAAK,IAAEqH,MAAMjH,EAAAA,EAAAA,KAACwH,EAAAA,EAAgB,MAChH,CAEO,SAAS1F,EACdlC,GAEA,IACcG,EACVH,EADFD,SAAYI,gBAEd,OACEC,EAAAA,EAAAA,KAACgH,GAAU9G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACTK,MAAOR,EAAgBS,EAAAA,GAAmBsB,eACtClC,GAAK,IACTwH,QAAQ,SACRH,MAAMjH,EAAAA,EAAAA,KAACyH,EAAAA,EAAW,MAGxB,CCvDe,SAASC,EAItB9H,GACA,IAAA+H,EAAkC/H,EAA1ByG,OAAAA,OAAM,IAAAsB,EAAG,GAAEA,EAAE/E,EAAahD,EAAbgD,SACrB,GAAsB,IAAlByD,EAAOlB,OACT,OAAO,KAET,IAAMrB,GAAK8D,EAAAA,EAAAA,IAAWhF,GAEtB,OACE5C,EAAAA,EAAAA,KAAC2G,EAAAA,EAAS,CAACkB,GAAG,KAAK/D,GAAIA,EAAGpD,SACvB2F,EAAO5C,KAAI,SAACmD,EAAOC,GAClB,OACE7G,EAAAA,EAAAA,KAAC2G,EAAAA,EAAUG,KAAI,CAACe,GAAG,KAAaxH,UAAU,mBAAkBK,UAC1DV,EAAAA,EAAAA,KAAA,SAAOK,UAAU,kBAAiBK,SAAEkG,KADTC,EAIjC,KAGN,CCtBe,SAASiB,EAItBlI,GACA,IAAQgD,EAA8BhD,EAA9BgD,SAAUmF,EAAoBnI,EAApBmI,KAAMC,EAAcpI,EAAdoI,UACxB,IAAKD,EACH,OAAO,KAET,IAAMjE,GAAKmE,EAAAA,EAAAA,IAAUrF,GACrB,OACE5C,EAAAA,EAAAA,KAAC8E,EAAAA,EAAKoD,KAAI,CAAC7H,UAAW2H,EAAY,cAAgB,aAAclE,GAAIA,EAAGpD,SACpEqH,GAGP,CCZe,SAASI,EAAa1I,GAyBJ,IApB/BqE,EAAErE,EAAFqE,GACApD,EAAQjB,EAARiB,SACA0H,EAAY3I,EAAZ2I,aAAY5D,EAAA/E,EACZgF,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EACd6B,EAAM5G,EAAN4G,OACA0B,EAAItI,EAAJsI,KACAzE,EAAW7D,EAAX6D,YACA+E,EAAc5I,EAAd4I,eACAC,EAAU7I,EAAV6I,WACAnI,EAAKV,EAALU,MACAU,EAAQpB,EAARoB,SACA0H,EAAK9I,EAAL8I,MACAC,EAAM/I,EAAN+I,OACAC,EAAmBhJ,EAAnBgJ,oBACAC,EAAWjJ,EAAXiJ,YACAnH,EAAQ9B,EAAR8B,SACAwB,EAAQtD,EAARsD,SACAC,EAAMvD,EAANuD,OACAtD,EAAQD,EAARC,SACAC,EAAQF,EAARE,SAEMsD,GAAYC,EAAAA,EAAAA,IAAaxD,GACzBiJ,GAA2BvF,EAAAA,EAAAA,IAC/B,2BACAzD,EACAsD,GAEF,OAAIuF,GACKxI,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAAQK,SAAEA,KAGhCV,EAAAA,EAAAA,KAAC2I,EAAwB,CACvBL,WAAYA,EACZnI,MAAOA,EACPU,SAAUA,EACViD,GAAIA,EACJyE,MAAOA,EACPE,oBAAqBA,EACrBC,YAAaA,EACbnH,SAAUA,EACVwB,SAAUA,EACVC,OAAQA,EACRtD,SAAUA,EACVC,SAAUA,EAASe,UAEnB0B,EAAAA,EAAAA,MAAC0C,EAAAA,EAAK8D,MAAK,CAAAlI,SAAA,CACR0H,IACChG,EAAAA,EAAAA,MAAC0C,EAAAA,EAAK+D,MAAK,CAACC,QAAShF,EAAIzD,UAAWoE,EAAUU,OAAS,EAAI,cAAgB,GAAGzE,SAAA,CAC3E6H,EACAxF,EAAW,IAAM,QAGrBrC,EACA0H,GAAgBC,IACfrI,EAAAA,EAAAA,KAAC8E,EAAAA,EAAKoD,KAAI,CAAC7H,UAAWoE,EAAUU,OAAS,EAAI,cAAgB,aAAazE,SAAE4C,IAE7E+C,EACA0B,MAIT,CC5De,SAASgB,EAAmBtJ,GAiBJ,IAZrC6D,EAAW7D,EAAX6D,YACA/C,EAAKd,EAALc,MACAyI,EAAUvJ,EAAVuJ,WACAjG,EAAQtD,EAARsD,SACArD,EAAQD,EAARC,SACAkD,EAAQnD,EAARmD,SACAI,EAAMvD,EAANuD,OACAiG,EAAQxJ,EAARwJ,SACAnG,EAAUrD,EAAVqD,WACAjC,EAAQpB,EAARoB,SACAU,EAAQ9B,EAAR8B,SACA5B,EAAQF,EAARE,SAEMsD,GAAYC,EAAAA,EAAAA,IAAsBxD,GAClCwJ,GAAqB9F,EAAAA,EAAAA,IAA2C,qBAAsBzD,EAAUsD,GAChGkG,GAA2B/F,EAAAA,EAAAA,IAC/B,2BACAzD,EACAsD,GAImBzD,EACjBG,EAAS8B,UADXC,gBAAmBlC,UAErB,OACE4C,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAAnE,SAAA,CACGH,IACCP,EAAAA,EAAAA,KAACkJ,EAAkB,CACjBpF,IAAIsF,EAAAA,EAAAA,IAAWxG,GACfrC,MAAOA,EACPwC,SAAUA,EACVC,OAAQA,EACRtD,SAAUA,EACVC,SAAUA,IAGb2D,IACCtD,EAAAA,EAAAA,KAACmJ,EAAwB,CACvBrF,IAAIuF,EAAAA,EAAAA,IAAiBzG,GACrBU,YAAaA,EACbN,OAAQA,EACRtD,SAAUA,EACVC,SAAUA,KAGdyC,EAAAA,EAAAA,MAACmB,EAAAA,EAAS,CAACC,OAAK,EAACnD,UAAU,MAAKK,SAAA,CAC7BsI,EAAWvF,KAAI,SAAC6F,EAAcnI,GAAa,OAC1CnB,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAalC,MAAO,CAAEoJ,aAAc,QAAUlJ,UAAWiJ,EAAQd,OAAS,cAAWjD,EAAU7E,UACjG0B,EAAAA,EAAAA,MAACE,EAAAA,EAAG,CAACC,GAAI,GAAG7B,SAAA,CAAC,IAAE4I,EAAQE,YADfrI,EAEJ,KAEPsI,EAAAA,EAAAA,IAAUzG,EAAQtD,EAAUuJ,IAC3BjJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAA3B,UACFV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAI,CAAEmH,OAAQ,EAAGC,KAAM,GAAKtJ,UAAU,OAAMK,UAC/CV,EAAAA,EAAAA,KAACR,EAAS,CACRiD,QAASK,EAAWE,GACpBnC,SAAUA,GAAYU,EACtBlB,UAAU,yBACVX,SAAUA,EACVC,SAAUA,QAId,UAIZ,CCrFe,SAASiK,EACtBhK,GAEA,IAAAiK,GAA2DC,EAAAA,EAAAA,IAAgClK,EAAMF,UAAzFqK,EAAUF,EAAVE,WAAYC,EAAQH,EAARG,SAAiBC,EAAiBJ,EAAxBjK,MAC9B,OAAIoK,EACK,MAGPhK,EAAAA,EAAAA,KAAA,OAAAU,UACEV,EAAAA,EAAAA,KAACC,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACkH,QAAQ,UAAUpD,KAAK,UAAaiG,GAAiB,IAAAvJ,SAC1DqJ,MAIT,CCfe,SAASG,EAAUzK,GAIJ,IAH5BqE,EAAErE,EAAFqE,GACAvD,EAAKd,EAALc,MACAb,EAAQD,EAARC,SAEMuD,GAAYC,EAAAA,EAAAA,IAAsBxD,GACxC,OACE0C,EAAAA,EAAAA,MAAA,OAAK0B,GAAIA,EAAIzD,UAAU,OAAMK,SAAA,EAC3BV,EAAAA,EAAAA,KAAA,MAAAU,SAAKuC,EAAU1C,OAASA,KACxBP,EAAAA,EAAAA,KAAA,MAAIK,UAAU,wBAAwBF,MAAO,CAAEgK,OAAQ,WAG7D,CCAe,SAASxB,EAAwBlJ,GAkBJ,IAb1C6I,EAAU7I,EAAV6I,WACAnI,EAAKV,EAALU,MACAO,EAAQjB,EAARiB,SACAG,EAAQpB,EAARoB,SACAiD,EAAErE,EAAFqE,GACAyE,EAAK9I,EAAL8I,MACAE,EAAmBhJ,EAAnBgJ,oBACAC,EAAWjJ,EAAXiJ,YACAnH,EAAQ9B,EAAR8B,SACAwB,EAAQtD,EAARsD,SACAC,EAAMvD,EAANuD,OACAtD,EAAQD,EAARC,SACAC,EAAQF,EAARE,SAEQ8B,EAA+B9B,EAA/B8B,UAAW1B,EAAoBJ,EAApBI,gBAEX+B,EAAiBL,EAAUC,gBAA3BI,aACFsI,EAAWrK,EAAgBS,EAAAA,GAAmB6J,SAAU,CAAC9B,IAG/D,KAFmB+B,EAAAA,MAA4BtH,GAG7C,OACEhD,EAAAA,EAAAA,KAAA,OAAKK,UAAWiI,EAAYnI,MAAOA,EAAMO,SACtCA,IAKP,IACM6J,EAAK,GAAAjK,OAAMwD,EAAE,QAEnB,OACE1B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAChC,UAAWiI,EAAYnI,MAAOA,EAAMO,SAAA,EACvCV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAI,EAAE7B,UACT0B,EAAAA,EAAAA,MAAC0C,EAAAA,EAAK8D,MAAK,CAAAlI,SAAA,EACTV,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK+D,MAAK,CAACC,QAASyB,EAAM7J,SAAE0J,KAC7BpK,EAAAA,EAAAA,KAAC8E,EAAAA,EAAKC,QAAO,CACXhC,SAAUA,EACVyH,aAAcjC,EACd1H,SAAUA,GAAYU,EACtBuC,GAAIyG,EACJvF,KAAMuF,EACNnG,OAAS7C,OAAwBgE,EAdxB,SAAHC,GAAA,IAAMC,EAAMD,EAANC,OAAM,OAAqCiD,EAAYjD,EAAOxB,MAAO,EAejFD,KAAK,eAIXhE,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAI,EAAE7B,SAAEA,KACbV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,GAAI,EAAGlC,UAAU,OAAMK,UAC1BV,EAAAA,EAAAA,KAAC8B,EAAY,CACXqF,SAAS,QACT9G,UAAU,QACVQ,SAAUA,GAAYU,EACtBkB,QAASgG,EAAoBF,GAC7B7I,SAAUA,EACVC,SAAUA,QAvB+B4K,EA4BnD,CC/DO,SAASE,IAKd,MAAO,CACL7J,uBAAAA,EACA8B,mBAAAA,EACAmB,kBAAAA,EACAnC,gBAAiB,CACflC,UAAAA,EACAmC,WAAAA,EACAC,eAAAA,EACAC,aAAAA,EACAC,aAAAA,EACA8H,aAAAA,GAEFT,yBAA0BhD,EAC1BuE,kBAAmBtE,EACnBsB,mBAAAA,EACAI,kBAAAA,EACAK,cAAAA,EACAY,oBAAAA,EACAG,mBAAoBgB,EACpBvB,yBAAAA,EAEJ,CAEe8B,IC9BA,SAASE,EAItB/K,GACA,IACEkE,EAcElE,EAdFkE,GACAG,EAaErE,EAbFqE,MACApD,EAYEjB,EAZFiB,SACAU,EAWE3B,EAXF2B,SACAgH,EAUE3I,EAVF2I,MACAqC,EASEhL,EATFgL,UACA5H,EAQEpD,EARFoD,OACAsB,EAOE1E,EAPF0E,UACAC,EAME3E,EANF2E,QACAL,EAKEtE,EALFsE,SACAE,EAIExE,EAJFwE,OACAC,EAGEzE,EAHFyE,QACA1E,EAEEC,EAFFD,SACAD,EACEE,EADFF,SAKIqD,GAAW8H,EAAAA,EAAAA,IAA2B7H,GACtCmG,GAA2B/F,EAAAA,EAAAA,IAC/B,2BACAzD,EACA4E,GAOIjB,EAAciB,EAAQjB,aAAeN,EAAOM,YAClD,OACElB,EAAAA,EAAAA,MAAC0C,EAAAA,EAAK8D,MAAK,CACTvI,UAAS,YAAAC,OAAcO,GAAYU,EAAW,WAAa,IAC3D,oBAAkBsE,EAAAA,EAAAA,IAAsB/B,GAAIpD,SAAA,EAE1CkK,KAAetH,IACftD,EAAAA,EAAAA,KAACmJ,EAAwB,CACvBrF,IAAIuF,EAAAA,EAAAA,IAAiBvF,GACrBR,YAAaA,EACbN,OAAQA,EACRtD,SAAUA,EACVC,SAAUA,KAGdK,EAAAA,EAAAA,KAAC8E,EAAAA,EAAKgG,MAAK,CACThH,GAAIA,EACJkB,KAAMlB,EACNyE,OAAOwC,EAAAA,EAAAA,IAAWxC,EAAOqC,IAAcrC,GACvCyC,QAA0B,qBAAV/G,GAAgCA,EAChDlB,SAAUA,EACVlC,SAAUA,GAAYU,EACtB0D,UAAWX,EACXJ,SA3BY,SAAHzE,GAAA,IAAgBuL,EAAOvL,EAAjBgG,OAAUuF,QAAO,OAAuC9G,EAAS8G,EAAS,EA4BzFhH,KAAK,WACLI,OA5BU,SAAHoB,GAAA,IAAgBwF,EAAOxF,EAAjBC,OAAUuF,QAAO,OAAuC5G,EAAON,EAAIkH,EAAS,EA6BzF3G,QA5BW,SAAHsB,GAAA,IAAgBqF,EAAOrF,EAAjBF,OAAUuF,QAAO,OAAuC3G,EAAQP,EAAIkH,EAAS,MAgCnG,CChEe,SAASC,EAAgBxL,GAI6E,IAAjHqE,EAAErE,EAAFqE,GAAIjD,EAAQpB,EAARoB,SAAU0D,EAAO9E,EAAP8E,QAASN,EAAKxE,EAALwE,MAAOK,EAAS7E,EAAT6E,UAAW/C,EAAQ9B,EAAR8B,SAAUwB,EAAQtD,EAARsD,SAAUmB,EAAQzE,EAARyE,SAAUE,EAAM3E,EAAN2E,OAAQC,EAAO5E,EAAP4E,QACzE6G,EAAkD3G,EAAlD2G,YAAaC,EAAqC5G,EAArC4G,aAAcC,EAAuB7G,EAAvB6G,OAAQ1F,EAAenB,EAAfmB,WACrC2F,EAAmBvF,MAAMC,QAAQ9B,GAASA,EAAQ,CAACA,GAEnDqH,EACJ,SAACnK,GAAa,OACd,SAAAqE,GAA6D,IAAhDwF,EAAOxF,EAAjBC,OAAUuF,QAET9G,EADE8G,GACOO,EAAAA,EAAAA,IAA0BpK,EAAOkK,EAAkBH,IAEnDM,EAAAA,EAAAA,IAA4BrK,EAAOkK,EAAkBH,GAElE,CAAE,EAEEO,EAAU,SAAH9F,GAAA,IAAgB1B,EAAK0B,EAAfF,OAAUxB,MAAK,OAChCG,EAAON,GAAI4H,EAAAA,EAAAA,IAA4BzH,EAAOiH,EAAaxF,GAAa,EACpEiG,EAAW,SAAH/F,GAAA,IAAgB3B,EAAK2B,EAAfH,OAAUxB,MAAK,OACjCI,EAAQP,GAAI4H,EAAAA,EAAAA,IAA4BzH,EAAOiH,EAAaxF,GAAa,EAE3E,OACE1F,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK8D,MAAK,CAAAlI,SACRoF,MAAMC,QAAQmF,IACbA,EAAYzH,KAAI,SAACmI,EAAQzK,GACvB,IAAM6J,GAAUa,EAAAA,EAAAA,IAAyBD,EAAO3H,MAAOoH,GACjDS,EAAehG,MAAMC,QAAQoF,KAAyD,IAAxCA,EAAaY,QAAQH,EAAO3H,OAEhF,OACEjE,EAAAA,EAAAA,KAAC8E,EAAAA,EAAKgG,MAAK,CAETM,OAAQA,EAERrI,SAAUA,EACViI,QAASA,EACT3K,UAAU,0BACV2D,KAAM,WACNF,IAAIkI,EAAAA,EAAAA,IAASlI,EAAI3C,GACjB6D,KAAMlB,EACNyE,MAAOqD,EAAOrD,MACdtD,UAAWX,GAAuB,IAAVnD,EACxB+C,SAAUoH,EAAUnK,GACpBiD,OAAQqH,EACRpH,QAASsH,EACT9K,SAAUA,GAAYiL,GAAgBvK,EACtC,oBAAkBsE,EAAAA,EAAAA,IAAsB/B,IAfnC8H,EAAO3H,MAkBlB,KAGR,CCvDe,SAASgI,EAAWxM,GAUT,IATxBqE,EAAErE,EAAFqE,GACAS,EAAO9E,EAAP8E,QACAN,EAAKxE,EAALwE,MACAlB,EAAQtD,EAARsD,SACAlC,EAAQpB,EAARoB,SACAU,EAAQ9B,EAAR8B,SACA2C,EAAQzE,EAARyE,SACAE,EAAM3E,EAAN2E,OACAC,EAAO5E,EAAP4E,QAEQ6G,EAA0C3G,EAA1C2G,YAAaC,EAA6B5G,EAA7B4G,aAAczF,EAAenB,EAAfmB,WAE7B4F,EAAY,SAAH9F,GAAA,IAAgBvB,EAAKuB,EAAfC,OAAUxB,MAAK,OAClCC,GAASwH,EAAAA,EAAAA,IAA4BzH,EAAOiH,EAAaxF,GAAa,EAClE+F,EAAU,SAAH9F,GAAA,IAAgB1B,EAAK0B,EAAfF,OAAUxB,MAAK,OAChCG,EAAON,GAAI4H,EAAAA,EAAAA,IAA4BzH,EAAOiH,EAAaxF,GAAa,EACpEiG,EAAW,SAAH/F,GAAA,IAAgB3B,EAAK2B,EAAfH,OAAUxB,MAAK,OACjCI,EAAQP,GAAI4H,EAAAA,EAAAA,IAA4BzH,EAAOiH,EAAaxF,GAAa,EAErE0F,EAASc,QAAQ3H,GAAWA,EAAQ6G,QAE1C,OACEpL,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK8D,MAAK,CAACvI,UAAU,OAAMK,SACzBoF,MAAMC,QAAQmF,IACbA,EAAYzH,KAAI,SAACmI,EAAQzK,GACvB,IAAM2K,EAAehG,MAAMC,QAAQoF,KAAyD,IAAxCA,EAAaY,QAAQH,EAAO3H,OAC1E+G,GAAUa,EAAAA,EAAAA,IAAyBD,EAAO3H,MAAOA,GAoBvD,OAjBEjE,EAAAA,EAAAA,KAAC8E,EAAAA,EAAKgG,MAAK,CACTM,OAAQA,EACR7C,MAAOqD,EAAOrD,MACdzE,IAAIkI,EAAAA,EAAAA,IAASlI,EAAI3C,GAEjB6D,KAAMlB,EACNE,KAAK,QACLnD,SAAUA,GAAYiL,GAAgBvK,EACtCyJ,QAASA,EACTjI,SAAUA,EACVkB,MAAOkI,OAAOhL,GACd+C,SAAUoH,EACVlH,OAAQqH,EACRpH,QAASsH,EACT,oBAAkB9F,EAAAA,EAAAA,IAAsB/B,IAVnC3C,EAcX,KAGR,CC9De,SAASiL,EACtBxM,GAEA,IAAQqE,EAA+CrE,EAA/CqE,MAAOsE,EAAwC3I,EAAxC2I,MAAOqC,EAAiChL,EAAjCgL,UAAWrG,EAAsB3E,EAAtB2E,QAAS5E,EAAaC,EAAbD,SACpCkE,GAAoBT,EAAAA,EAAAA,IAA0C,oBAAqBzD,EAAU4E,GACnG,OACEvE,EAAAA,EAAAA,KAAC6D,GAAiB3D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKN,GAAK,IAAE8E,WAAY,CAAE6D,OAAOwC,EAAAA,EAAAA,IAAWxC,QAAShD,EAAWqF,IAAalK,UAC7FV,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYK,SAAEuD,MAGpC,CCAe,SAASoI,EAAY5M,GAmBV,IAdxBuD,EAAMvD,EAANuD,OACAc,EAAErE,EAAFqE,GACAS,EAAO9E,EAAP8E,QACAxB,EAAQtD,EAARsD,SACAlC,EAAQpB,EAARoB,SACAU,EAAQ9B,EAAR8B,SACA0C,EAAKxE,EAALwE,MACAqI,EAAQ7M,EAAR6M,SACAhI,EAAS7E,EAAT6E,UACAJ,EAAQzE,EAARyE,SACAE,EAAM3E,EAAN2E,OACAC,EAAO5E,EAAP4E,QACAN,EAAWtE,EAAXsE,YAAWS,EAAA/E,EACXgF,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAEN0G,EAAyD3G,EAAzD2G,YAAaC,EAA4C5G,EAA5C4G,aAA0BoB,EAAkBhI,EAA9BmB,WAE7BA,EAAa4G,EAAW,GAAK,GAEnC,SAASE,EAASC,EAAuCH,GACvD,OAAIA,EACK,GAAGI,MACPC,KAAKF,EAAMhH,OAAOlB,SAClBqI,QAAO,SAACC,GAAM,OAAKA,EAAEC,QAAQ,IAC7BrJ,KAAI,SAACoJ,GAAM,OAAKA,EAAE5I,KAAK,IAEnBwI,EAAMhH,OAAOxB,KAExB,CACA,IAAM8I,GAAkBC,EAAAA,EAAAA,IAA4B/I,EAAOiH,EAAaoB,GAExE,OACElK,EAAAA,EAAAA,MAAC0C,EAAAA,EAAKC,QAAO,CACX8C,GAAG,SACHoF,SAAS,gBACTnJ,GAAIA,EACJkB,KAAMlB,EACNG,MAAkC,qBAApB8I,EAAkCrH,EAAaqH,EAC7DhK,SAAUA,EACVuJ,SAAUA,EACVzL,SAAUA,GAAYU,EACtB0D,UAAWX,EACXjE,UAAWoE,EAAUU,OAAS,EAAI,aAAe,GACjDf,OACEA,GACC,SAACqI,GACA,IAAMS,EAAWV,EAASC,EAAOH,GACjClI,EAAON,GAAI4H,EAAAA,EAAAA,IAA4BwB,EAAUhC,EAAaqB,GAChE,EAEFlI,QACEA,GACC,SAACoI,GACA,IAAMS,EAAWV,EAASC,EAAOH,GACjCjI,EAAQP,GAAI4H,EAAAA,EAAAA,IAA4BwB,EAAUhC,EAAaqB,GACjE,EAEFrI,SAAU,SAACuI,GACT,IAAMS,EAAWV,EAASC,EAAOH,GACjCpI,GAASwH,EAAAA,EAAAA,IAA4BwB,EAAUhC,EAAaqB,GAC9D,EACA,oBAAkB1G,EAAAA,EAAAA,IAAsB/B,GAAIpD,SAAA,EAE1C4L,QAA+B/G,IAAnBvC,EAAOgD,UAAyBhG,EAAAA,EAAAA,KAAA,UAAQiE,MAAM,GAAEvD,SAAEqD,IAC9DmH,EAAoBzH,KAAI,SAAA+B,EAAwBqB,GAAe,IAApC5C,EAAKuB,EAALvB,MAAOsE,EAAK/C,EAAL+C,MAC5B1H,EAAgBiF,MAAMC,QAAQoF,KAA0D,GAAxCA,EAAqBY,QAAQ9H,GACnF,OACEjE,EAAAA,EAAAA,KAAA,UAAgB8D,GAAIyE,EAAOtE,MAAOkI,OAAOtF,GAAIhG,SAAUA,EAASH,SAC7D6H,GADU1B,EAIjB,MAGN,C,wBC9Ee,SAASsG,EAAc1N,GAgBN,IAX9BqE,EAAErE,EAAFqE,GACAC,EAAWtE,EAAXsE,YACAE,EAAKxE,EAALwE,MACAlB,EAAQtD,EAARsD,SACAlC,EAAQpB,EAARoB,SACAyD,EAAS7E,EAAT6E,UACA/C,EAAQ9B,EAAR8B,SACA6C,EAAM3E,EAAN2E,OACAC,EAAO5E,EAAP4E,QACAH,EAAQzE,EAARyE,SACAK,EAAO9E,EAAP8E,QAOA,OACEvE,EAAAA,EAAAA,KAACoN,EAAAA,EAAU,CAAA1M,UACTV,EAAAA,EAAAA,KAACqN,EAAAA,EAAW,CACVvJ,GAAIA,EACJkB,KAAMlB,EACN+D,GAAG,WACH9D,YAAaA,EACblD,SAAUA,EACVqE,SAAU3D,EACV0C,MAAOA,EACPlB,SAAUA,EACVkC,UAAWX,EACXgJ,KAAM/I,EAAQ+I,MAAQ,EACtBpJ,SAlBY,SAAHsB,GAAA,IAAgBvB,EAAKuB,EAAfC,OAAUxB,MAAK,OAClCC,EAAmB,KAAVD,EAAeM,EAAQmB,WAAazB,EAAO,EAkBhDG,OAjBU,SAAHuB,GAAA,IAAgB1B,EAAK0B,EAAfF,OAAUxB,MAAK,OAA0CG,EAAON,EAAIG,EAAO,EAkBxFI,QAjBW,SAAHuB,GAAA,IAAgB3B,EAAK2B,EAAfH,OAAUxB,MAAK,OAA0CI,EAAQP,EAAIG,EAAO,EAkB1F,oBAAkB4B,EAAAA,EAAAA,IAAsB/B,MAIhD,CC/CO,SAASyJ,IAKd,MAAO,CACL5C,eAAAA,EACAM,iBAAAA,EACAgB,YAAAA,EACAG,YAAAA,EACAC,aAAAA,EACAc,eAAAA,EAEJ,CAEeI,ICjBR,SAASC,KAKd,MAAO,CACL/L,UAAWgJ,IACXgD,QAASF,IAEb,CAEeC,KCHf,QAHSE,EAAAA,EAAAA,IAAmBF,MC6CH,SAAAG,KAaxB,OAbwBA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAzB,SAAAC,EAA0BC,GAAS,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQ1B,OAPLC,QAAQC,IAAI,iBAAkBP,GAC9BM,QAAQC,IAAI,qBAAsBP,EAAK/E,UAASkF,EAAAC,KAAA,EAEtCH,EAAiB,CACnBO,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoB,OAAU,aACzDC,KAAMC,KAAKC,UAAUZ,EAAK/E,WAC7BkF,EAAAE,KAAA,EACKQ,MAAM,mBAAoBZ,GAAgB,KAAD,EAAAE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAE/CG,QAAQC,IAAGJ,EAAAW,IAAM,yBAAAX,EAAAY,OAAA,GAAAhB,EAAA,mBAExBiB,MAAA,KAAAC,UAAA,CACD,OAtDA,WACI,IAAMjM,EAAqBkM,EAAQ,MAC7BjG,EAAWiG,EAAQ,MACnBxP,EAAWwP,EAAQ,MAGzB,OACIlP,EAAAA,EAAAA,KAAA6E,EAAAA,SAAA,CAAAnE,UACAV,EAAAA,EAAAA,KAACuD,EAAAA,EAAS,CAACC,OAAK,EAAA9C,UACZV,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAA3B,UACAV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAAC6M,GAAG,KAAIzO,UACR0B,EAAAA,EAAAA,MAACkE,EAAAA,EAAI,CAAA5F,SAAA,EACD0B,EAAAA,EAAAA,MAACkE,EAAAA,EAAKE,OAAM,CAAA9F,SAAA,EACRV,EAAAA,EAAAA,KAACsG,EAAAA,EAAK8I,MAAK,CAACvH,GAAG,KAAInH,SAAC,qCACpBV,EAAAA,EAAAA,KAAA,KAAGK,UAAU,gBAAeK,SAAC,mCAEjCV,EAAAA,EAAAA,KAACsG,EAAAA,EAAKI,KAAI,CAAAhG,UACNV,EAAAA,EAAAA,KAACqC,EAAAA,EAAG,CAAA3B,UACAV,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAAC6M,GAAG,KAAIzO,UACRV,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMK,UACjBV,EAAAA,EAAAA,KAAC8E,GAAI,CACD9B,OAAQA,EACRtD,SAAUA,EACVuJ,SAAUA,EACVoG,UAAWA,EAAAA,GACXC,SAAU,SAAAtB,GAAI,OAazD,SAEwBuB,GAAA,OAAA5B,GAAAqB,MAAC,KAADC,UAAA,CAfqCO,CAAWxB,EAAK,sBAa9E,C","sources":["components/bootstrap5/AddButton/AddButton.tsx","components/bootstrap5/ArrayFieldItemTemplate/ArrayFieldItemTemplate.tsx","components/bootstrap5/ArrayFieldTemplate/ArrayFieldTemplate.tsx","components/bootstrap5/BaseInputTemplate/BaseInputTemplate.tsx","components/bootstrap5/DescriptionField/DescriptionField.tsx","components/bootstrap5/ErrorList/ErrorList.tsx","components/bootstrap5/IconButton/IconButton.tsx","components/bootstrap5/FieldErrorTemplate/FieldErrorTemplate.tsx","components/bootstrap5/FieldHelpTemplate/FieldHelpTemplate.tsx","components/bootstrap5/FieldTemplate/FieldTemplate.tsx","components/bootstrap5/ObjectFieldTemplate/ObjectFieldTemplate.tsx","components/bootstrap5/SubmitButton/SubmitButton.tsx","components/bootstrap5/TitleField/TitleField.tsx","components/bootstrap5/WrapIfAdditionalTemplate/WrapIfAdditionalTemplate.tsx","components/bootstrap5/Templates/Templates.ts","components/bootstrap5/CheckboxWidget/CheckboxWidget.tsx","components/bootstrap5/CheckboxesWidget/CheckboxesWidget.tsx","components/bootstrap5/RadioWidget/RadioWidget.tsx","components/bootstrap5/RangeWidget/RangeWidget.tsx","components/bootstrap5/SelectWidget/SelectWidget.tsx","components/bootstrap5/TextareaWidget/TextareaWidget.tsx","components/bootstrap5/Widgets/Widgets.ts","components/bootstrap5/Theme/Theme.tsx","components/bootstrap5/Form/Form.tsx","views/protected/configuration-data/ConfigurationDataForm.tsx"],"sourcesContent":["import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { BsPlus } from '@react-icons/all-files/bs/BsPlus';\r\n\r\nexport default function AddButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\r\n  uiSchema,\r\n  registry,\r\n  ...props\r\n}: IconButtonProps<T, S, F>) {\r\n  const { translateString } = registry;\r\n  return (\r\n    <Button\r\n      {...props}\r\n      style={{ width: '100%' }}\r\n      className={`ml-1 ${props.className}`}\r\n      title={translateString(TranslatableString.AddItemButton)}\r\n    >\r\n      <BsPlus />\r\n    </Button>\r\n  );\r\n}\r\n","import { CSSProperties } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { ArrayFieldTemplateItemType, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\r\n\r\nexport default function ArrayFieldItemTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\r\n  const {\r\n    children,\r\n    disabled,\r\n    hasToolbar,\r\n    hasCopy,\r\n    hasMoveDown,\r\n    hasMoveUp,\r\n    hasRemove,\r\n    index,\r\n    onCopyIndexClick,\r\n    onDropIndexClick,\r\n    onReorderClick,\r\n    readonly,\r\n    registry,\r\n    uiSchema,\r\n  } = props;\r\n  const { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } = registry.templates.ButtonTemplates;\r\n  const btnStyle: CSSProperties = {\r\n    flex: 1,\r\n    paddingLeft: 6,\r\n    paddingRight: 6,\r\n    fontWeight: 'bold',\r\n  };\r\n  return (\r\n    <div>\r\n      <Row className='mb-2  d-flex align-items-center'>\r\n        <Col xs='9' lg='9'>\r\n          {children}\r\n        </Col>\r\n        <Col xs='3' lg='3' className='py-4'>\r\n          {hasToolbar && (\r\n            <div className='d-flex flex-row'>\r\n              {(hasMoveUp || hasMoveDown) && (\r\n                <div className='m-0 p-0'>\r\n                  <MoveUpButton\r\n                    className='array-item-move-up'\r\n                    style={btnStyle}\r\n                    disabled={disabled || readonly || !hasMoveUp}\r\n                    onClick={onReorderClick(index, index - 1)}\r\n                    uiSchema={uiSchema}\r\n                    registry={registry}\r\n                  />\r\n                </div>\r\n              )}\r\n              {(hasMoveUp || hasMoveDown) && (\r\n                <div className='m-0 p-0'>\r\n                  <MoveDownButton\r\n                    style={btnStyle}\r\n                    disabled={disabled || readonly || !hasMoveDown}\r\n                    onClick={onReorderClick(index, index + 1)}\r\n                    uiSchema={uiSchema}\r\n                    registry={registry}\r\n                  />\r\n                </div>\r\n              )}\r\n              {hasCopy && (\r\n                <div className='m-0 p-0'>\r\n                  <CopyButton\r\n                    style={btnStyle}\r\n                    disabled={disabled || readonly}\r\n                    onClick={onCopyIndexClick(index)}\r\n                    uiSchema={uiSchema}\r\n                    registry={registry}\r\n                  />\r\n                </div>\r\n              )}\r\n              {hasRemove && (\r\n                <div className='m-0 p-0'>\r\n                  <RemoveButton\r\n                    style={btnStyle}\r\n                    disabled={disabled || readonly}\r\n                    onClick={onDropIndexClick(index)}\r\n                    uiSchema={uiSchema}\r\n                    registry={registry}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {\r\n  ArrayFieldTemplateItemType,\r\n  ArrayFieldTemplateProps,\r\n  FormContextType,\r\n  getTemplate,\r\n  getUiOptions,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n} from '@rjsf/utils';\r\n\r\nexport default function ArrayFieldTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(props: ArrayFieldTemplateProps<T, S, F>) {\r\n  const { canAdd, disabled, idSchema, uiSchema, items, onAddClick, readonly, registry, required, schema, title } =\r\n    props;\r\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\r\n  const ArrayFieldDescriptionTemplate = getTemplate<'ArrayFieldDescriptionTemplate', T, S, F>(\r\n    'ArrayFieldDescriptionTemplate',\r\n    registry,\r\n    uiOptions\r\n  );\r\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\r\n    'ArrayFieldItemTemplate',\r\n    registry,\r\n    uiOptions\r\n  );\r\n  const ArrayFieldTitleTemplate = getTemplate<'ArrayFieldTitleTemplate', T, S, F>(\r\n    'ArrayFieldTitleTemplate',\r\n    registry,\r\n    uiOptions\r\n  );\r\n  // Button templates are not overridden in the uiSchema\r\n  const {\r\n    ButtonTemplates: { AddButton },\r\n  } = registry.templates;\r\n  return (\r\n    <div>\r\n      <Row className='p-0 m-0'>\r\n        <Col className='p-0 m-0'>\r\n          <ArrayFieldTitleTemplate\r\n            idSchema={idSchema}\r\n            title={uiOptions.title || title}\r\n            schema={schema}\r\n            uiSchema={uiSchema}\r\n            required={required}\r\n            registry={registry}\r\n          />\r\n          <ArrayFieldDescriptionTemplate\r\n            idSchema={idSchema}\r\n            description={uiOptions.description || schema.description}\r\n            schema={schema}\r\n            uiSchema={uiSchema}\r\n            registry={registry}\r\n          />\r\n          <Container fluid key={`array-item-list-${idSchema.$id}`} className='p-0 m-0'>\r\n            {items &&\r\n              items.map(({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\r\n                <ArrayFieldItemTemplate key={key} {...itemProps} />\r\n              ))}\r\n            {canAdd && (\r\n              <Container className=''>\r\n                <Row className='mt-2'>\r\n                  <Col xs={9}></Col>\r\n                  <Col xs={3} className='py-4 col-lg-3 col-3'>\r\n                    <AddButton\r\n                      className='array-item-add'\r\n                      onClick={onAddClick}\r\n                      disabled={disabled || readonly}\r\n                      uiSchema={uiSchema}\r\n                      registry={registry}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            )}\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import { ChangeEvent, FocusEvent } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {\r\n  ariaDescribedByIds,\r\n  BaseInputTemplateProps,\r\n  examplesId,\r\n  FormContextType,\r\n  getInputProps,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n} from '@rjsf/utils';\r\n\r\nexport default function BaseInputTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({\r\n  id,\r\n  placeholder,\r\n  required,\r\n  readonly,\r\n  disabled,\r\n  type,\r\n  value,\r\n  onChange,\r\n  onChangeOverride,\r\n  onBlur,\r\n  onFocus,\r\n  autofocus,\r\n  options,\r\n  schema,\r\n  rawErrors = [],\r\n  children,\r\n  extraProps,\r\n}: BaseInputTemplateProps<T, S, F>) {\r\n  const inputProps = {\r\n    ...extraProps,\r\n    ...getInputProps<T, S, F>(schema, type, options),\r\n  };\r\n  const _onChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) =>\r\n    onChange(value === '' ? options.emptyValue : value);\r\n  const _onBlur = ({ target: { value } }: FocusEvent<HTMLInputElement>) => onBlur(id, value);\r\n  const _onFocus = ({ target: { value } }: FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\r\n  return (\r\n    <>\r\n      <Form.Control\r\n        id={id}\r\n        name={id}\r\n        placeholder={placeholder}\r\n        autoFocus={autofocus}\r\n        required={required}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        className={rawErrors.length > 0 ? 'is-invalid' : ''}\r\n        list={schema.examples ? examplesId<T>(id) : undefined}\r\n        {...inputProps}\r\n        value={value || value === 0 ? value : ''}\r\n        onChange={onChangeOverride || _onChange}\r\n        onBlur={_onBlur}\r\n        onFocus={_onFocus}\r\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\r\n      />\r\n      {children}\r\n      {Array.isArray(schema.examples) ? (\r\n        <datalist id={examplesId<T>(id)}>\r\n          {(schema.examples as string[])\r\n            .concat(schema.default && !schema.examples.includes(schema.default) ? ([schema.default] as string[]) : [])\r\n            .map((example: any) => {\r\n              return <option key={example} value={example} />;\r\n            })}\r\n        </datalist>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { DescriptionFieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\r\n\r\nexport default function DescriptionField<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({ id, description }: DescriptionFieldProps<T, S, F>) {\r\n  if (description) {\r\n    return (\r\n      <div>\r\n        <div id={id} className='mb-3'>\r\n          {description}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n","import Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nimport { ErrorListProps, FormContextType, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\r\n\r\nexport default function ErrorList<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\r\n  errors,\r\n  registry,\r\n}: ErrorListProps<T, S, F>) {\r\n  const { translateString } = registry;\r\n  return (\r\n    <Card border='danger' className='mb-4'>\r\n      <Card.Header className='alert-danger'>{translateString(TranslatableString.ErrorsLabel)}</Card.Header>\r\n      <Card.Body className='p-0'>\r\n        <ListGroup>\r\n          {errors.map((error, i: number) => {\r\n            return (\r\n              <ListGroup.Item key={i} className='border-0'>\r\n                <span>{error.stack}</span>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\r\nimport Button, { ButtonProps } from 'react-bootstrap/Button';\r\nimport { IoIosCopy } from '@react-icons/all-files/io/IoIosCopy';\r\nimport { IoIosRemove } from '@react-icons/all-files/io/IoIosRemove';\r\nimport { AiOutlineArrowUp } from '@react-icons/all-files/ai/AiOutlineArrowUp';\r\nimport { AiOutlineArrowDown } from '@react-icons/all-files/ai/AiOutlineArrowDown';\r\n\r\nexport default function IconButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\r\n  props: IconButtonProps<T, S, F> & ButtonProps\r\n) {\r\n  const { icon, iconType, className, uiSchema, registry, ...otherProps } = props;\r\n  return (\r\n    // TODO:  block={iconType === 'block'}    Property 'block' does not exist on type 'IntrinsicAttributes \r\n    <Button {...otherProps} variant={props.variant || 'light'} size='sm'>\r\n      {icon}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport function CopyButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\r\n  props: IconButtonProps<T, S, F>\r\n) {\r\n  const {\r\n    registry: { translateString },\r\n  } = props;\r\n  return <IconButton title={translateString(TranslatableString.CopyButton)} {...props} icon={<IoIosCopy />} />;\r\n}\r\n\r\nexport function MoveDownButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\r\n  props: IconButtonProps<T, S, F>\r\n) {\r\n  const {\r\n    registry: { translateString },\r\n  } = props;\r\n  return (\r\n    <IconButton title={translateString(TranslatableString.MoveDownButton)} {...props} icon={<AiOutlineArrowDown />} />\r\n  );\r\n}\r\n\r\nexport function MoveUpButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\r\n  props: IconButtonProps<T, S, F>\r\n) {\r\n  const {\r\n    registry: { translateString },\r\n  } = props;\r\n  return <IconButton title={translateString(TranslatableString.MoveUpButton)} {...props} icon={<AiOutlineArrowUp />} />;\r\n}\r\n\r\nexport function RemoveButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\r\n  props: IconButtonProps<T, S, F>\r\n) {\r\n  const {\r\n    registry: { translateString },\r\n  } = props;\r\n  return (\r\n    <IconButton\r\n      title={translateString(TranslatableString.RemoveButton)}\r\n      {...props}\r\n      variant='danger'\r\n      icon={<IoIosRemove />}\r\n    />\r\n  );\r\n}\r\n","import { FieldErrorProps, FormContextType, RJSFSchema, StrictRJSFSchema, errorId } from '@rjsf/utils';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\r\n *\r\n * @param props - The `FieldErrorProps` for the errors being rendered\r\n */\r\nexport default function FieldErrorTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(props: FieldErrorProps<T, S, F>) {\r\n  const { errors = [], idSchema } = props;\r\n  if (errors.length === 0) {\r\n    return null;\r\n  }\r\n  const id = errorId<T>(idSchema);\r\n\r\n  return (\r\n    <ListGroup as='ul' id={id}>\r\n      {errors.map((error, i) => {\r\n        return (\r\n          <ListGroup.Item as='li' key={i} className='border-0 m-0 p-0'>\r\n            <small className='m-0 text-danger'>{error}</small>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </ListGroup>\r\n  );\r\n}\r\n","import { FieldHelpProps, FormContextType, RJSFSchema, StrictRJSFSchema, helpId } from '@rjsf/utils';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n/** The `FieldHelpTemplate` component renders any help desired for a field\r\n *\r\n * @param props - The `FieldHelpProps` to be rendered\r\n */\r\nexport default function FieldHelpTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(props: FieldHelpProps<T, S, F>) {\r\n  const { idSchema, help, hasErrors } = props;\r\n  if (!help) {\r\n    return null;\r\n  }\r\n  const id = helpId<T>(idSchema);\r\n  return (\r\n    <Form.Text className={hasErrors ? 'text-danger' : 'text-muted'} id={id}>\r\n      {help}\r\n    </Form.Text>\r\n  );\r\n}\r\n","import {\r\n  FieldTemplateProps,\r\n  FormContextType,\r\n  getTemplate,\r\n  getUiOptions,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n} from '@rjsf/utils';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function FieldTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({\r\n  id,\r\n  children,\r\n  displayLabel,\r\n  rawErrors = [],\r\n  errors,\r\n  help,\r\n  description,\r\n  rawDescription,\r\n  classNames,\r\n  style,\r\n  disabled,\r\n  label,\r\n  hidden,\r\n  onDropPropertyClick,\r\n  onKeyChange,\r\n  readonly,\r\n  required,\r\n  schema,\r\n  uiSchema,\r\n  registry,\r\n}: FieldTemplateProps<T, S, F>) {\r\n  const uiOptions = getUiOptions(uiSchema);\r\n  const WrapIfAdditionalTemplate = getTemplate<'WrapIfAdditionalTemplate', T, S, F>(\r\n    'WrapIfAdditionalTemplate',\r\n    registry,\r\n    uiOptions\r\n  );\r\n  if (hidden) {\r\n    return <div className='hidden'>{children}</div>;\r\n  }\r\n  return (\r\n    <WrapIfAdditionalTemplate\r\n      classNames={classNames}\r\n      style={style}\r\n      disabled={disabled}\r\n      id={id}\r\n      label={label}\r\n      onDropPropertyClick={onDropPropertyClick}\r\n      onKeyChange={onKeyChange}\r\n      readonly={readonly}\r\n      required={required}\r\n      schema={schema}\r\n      uiSchema={uiSchema}\r\n      registry={registry}\r\n    >\r\n      <Form.Group>\r\n        {displayLabel && (\r\n          <Form.Label htmlFor={id} className={rawErrors.length > 0 ? 'text-danger' : ''}>\r\n            {label}\r\n            {required ? '*' : null}\r\n          </Form.Label>\r\n        )}\r\n        {children}\r\n        {displayLabel && rawDescription && (\r\n          <Form.Text className={rawErrors.length > 0 ? 'text-danger' : 'text-muted'}>{description}</Form.Text>\r\n        )}\r\n        {errors}\r\n        {help}\r\n      </Form.Group>\r\n    </WrapIfAdditionalTemplate>\r\n  );\r\n}\r\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport {\r\n  canExpand,\r\n  descriptionId,\r\n  FormContextType,\r\n  getTemplate,\r\n  getUiOptions,\r\n  ObjectFieldTemplateProps,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n  titleId,\r\n} from '@rjsf/utils';\r\n\r\nexport default function ObjectFieldTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({\r\n  description,\r\n  title,\r\n  properties,\r\n  required,\r\n  uiSchema,\r\n  idSchema,\r\n  schema,\r\n  formData,\r\n  onAddClick,\r\n  disabled,\r\n  readonly,\r\n  registry,\r\n}: ObjectFieldTemplateProps<T, S, F>) {\r\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\r\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>('TitleFieldTemplate', registry, uiOptions);\r\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\r\n    'DescriptionFieldTemplate',\r\n    registry,\r\n    uiOptions\r\n  );\r\n  // Button templates are not overridden in the uiSchema\r\n  const {\r\n    ButtonTemplates: { AddButton },\r\n  } = registry.templates;\r\n  return (\r\n    <>\r\n      {title && (\r\n        <TitleFieldTemplate\r\n          id={titleId<T>(idSchema)}\r\n          title={title}\r\n          required={required}\r\n          schema={schema}\r\n          uiSchema={uiSchema}\r\n          registry={registry}\r\n        />\r\n      )}\r\n      {description && (\r\n        <DescriptionFieldTemplate\r\n          id={descriptionId<T>(idSchema)}\r\n          description={description}\r\n          schema={schema}\r\n          uiSchema={uiSchema}\r\n          registry={registry}\r\n        />\r\n      )}\r\n      <Container fluid className='p-0'>\r\n        {properties.map((element: any, index: number) => (\r\n          <Row key={index} style={{ marginBottom: '10px' }} className={element.hidden ? 'd-none' : undefined}>\r\n            <Col xs={12}> {element.content}</Col>\r\n          </Row>\r\n        ))}\r\n        {canExpand(schema, uiSchema, formData) ? (\r\n          <Row>\r\n            <Col xs={{ offset: 9, span: 3 }} className='py-4'>\r\n              <AddButton\r\n                onClick={onAddClick(schema)}\r\n                disabled={disabled || readonly}\r\n                className='object-property-expand'\r\n                uiSchema={uiSchema}\r\n                registry={registry}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        ) : null}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import Button from 'react-bootstrap/Button';\r\nimport { FormContextType, getSubmitButtonOptions, RJSFSchema, StrictRJSFSchema, SubmitButtonProps } from '@rjsf/utils';\r\n\r\nexport default function SubmitButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\r\n  props: SubmitButtonProps<T, S, F>\r\n) {\r\n  const { submitText, norender, props: submitButtonProps } = getSubmitButtonOptions<T, S, F>(props.uiSchema);\r\n  if (norender) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n      <Button variant='primary' type='submit' {...submitButtonProps}>\r\n        {submitText}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { FormContextType, getUiOptions, RJSFSchema, StrictRJSFSchema, TitleFieldProps } from '@rjsf/utils';\r\n\r\nexport default function TitleField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\r\n  id,\r\n  title,\r\n  uiSchema,\r\n}: TitleFieldProps<T, S, F>) {\r\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\r\n  return (\r\n    <div id={id} className='my-1'>\r\n      <h5>{uiOptions.title || title}</h5>\r\n      <hr className='border-0 bg-secondary' style={{ height: '1px' }} />\r\n    </div>\r\n  );\r\n}\r\n","import { FocusEvent } from 'react';\r\nimport {\r\n  ADDITIONAL_PROPERTY_FLAG,\r\n  FormContextType,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n  TranslatableString,\r\n  WrapIfAdditionalTemplateProps,\r\n} from '@rjsf/utils';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function WrapIfAdditionalTemplate<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({\r\n  classNames,\r\n  style,\r\n  children,\r\n  disabled,\r\n  id,\r\n  label,\r\n  onDropPropertyClick,\r\n  onKeyChange,\r\n  readonly,\r\n  required,\r\n  schema,\r\n  uiSchema,\r\n  registry,\r\n}: WrapIfAdditionalTemplateProps<T, S, F>) {\r\n  const { templates, translateString } = registry;\r\n  // Button templates are not overridden in the uiSchema\r\n  const { RemoveButton } = templates.ButtonTemplates;\r\n  const keyLabel = translateString(TranslatableString.KeyLabel, [label]);\r\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\r\n\r\n  if (!additional) {\r\n    return (\r\n      <div className={classNames} style={style}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleBlur = ({ target }: FocusEvent<HTMLInputElement>) => onKeyChange(target.value);\r\n  const keyId = `${id}-key`;\r\n\r\n  return (\r\n    <Row className={classNames} style={style} key={keyId}>\r\n      <Col xs={5}>\r\n        <Form.Group>\r\n          <Form.Label htmlFor={keyId}>{keyLabel}</Form.Label>\r\n          <Form.Control\r\n            required={required}\r\n            defaultValue={label}\r\n            disabled={disabled || readonly}\r\n            id={keyId}\r\n            name={keyId}\r\n            onBlur={!readonly ? handleBlur : undefined}\r\n            type='text'\r\n          />\r\n        </Form.Group>\r\n      </Col>\r\n      <Col xs={5}>{children}</Col>\r\n      <Col xs={2} className='py-4'>\r\n        <RemoveButton\r\n          iconType='block'\r\n          className='w-100'\r\n          disabled={disabled || readonly}\r\n          onClick={onDropPropertyClick(label)}\r\n          uiSchema={uiSchema}\r\n          registry={registry}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import AddButton from '../AddButton';\r\nimport ArrayFieldItemTemplate from '../ArrayFieldItemTemplate';\r\nimport ArrayFieldTemplate from '../ArrayFieldTemplate';\r\nimport BaseInputTemplate from '../BaseInputTemplate/BaseInputTemplate';\r\nimport DescriptionField from '../DescriptionField';\r\nimport ErrorList from '../ErrorList';\r\nimport { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } from '../IconButton';\r\nimport FieldErrorTemplate from '../FieldErrorTemplate';\r\nimport FieldHelpTemplate from '../FieldHelpTemplate';\r\nimport FieldTemplate from '../FieldTemplate';\r\nimport ObjectFieldTemplate from '../ObjectFieldTemplate';\r\nimport SubmitButton from '../SubmitButton';\r\nimport TitleField from '../TitleField';\r\nimport WrapIfAdditionalTemplate from '../WrapIfAdditionalTemplate';\r\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\r\n\r\nexport function generateTemplates<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(): Partial<TemplatesType<T, S, F>> {\r\n  return {\r\n    ArrayFieldItemTemplate,\r\n    ArrayFieldTemplate,\r\n    BaseInputTemplate,\r\n    ButtonTemplates: {\r\n      AddButton,\r\n      CopyButton,\r\n      MoveDownButton,\r\n      MoveUpButton,\r\n      RemoveButton,\r\n      SubmitButton,\r\n    },\r\n    DescriptionFieldTemplate: DescriptionField,\r\n    ErrorListTemplate: ErrorList,\r\n    FieldErrorTemplate,\r\n    FieldHelpTemplate,\r\n    FieldTemplate,\r\n    ObjectFieldTemplate,\r\n    TitleFieldTemplate: TitleField,\r\n    WrapIfAdditionalTemplate,\r\n  };\r\n}\r\n\r\nexport default generateTemplates();\r\n","import { FocusEvent } from 'react';\r\nimport {\r\n  ariaDescribedByIds,\r\n  descriptionId,\r\n  getTemplate,\r\n  labelValue,\r\n  WidgetProps,\r\n  schemaRequiresTrueValue,\r\n  StrictRJSFSchema,\r\n  RJSFSchema,\r\n  FormContextType,\r\n} from '@rjsf/utils';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function CheckboxWidget<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(props: WidgetProps<T, S, F>) {\r\n  const {\r\n    id,\r\n    value,\r\n    disabled,\r\n    readonly,\r\n    label,\r\n    hideLabel,\r\n    schema,\r\n    autofocus,\r\n    options,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    registry,\r\n    uiSchema,\r\n  } = props;\r\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\r\n  // the \"required\" attribute if the field value must be \"true\", due to the\r\n  // \"const\" or \"enum\" keywords\r\n  const required = schemaRequiresTrueValue<S>(schema);\r\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\r\n    'DescriptionFieldTemplate',\r\n    registry,\r\n    options\r\n  );\r\n\r\n  const _onChange = ({ target: { checked } }: FocusEvent<HTMLInputElement>) => onChange(checked);\r\n  const _onBlur = ({ target: { checked } }: FocusEvent<HTMLInputElement>) => onBlur(id, checked);\r\n  const _onFocus = ({ target: { checked } }: FocusEvent<HTMLInputElement>) => onFocus(id, checked);\r\n\r\n  const description = options.description || schema.description;\r\n  return (\r\n    <Form.Group\r\n      className={`checkbox ${disabled || readonly ? 'disabled' : ''}`}\r\n      aria-describedby={ariaDescribedByIds<T>(id)}\r\n    >\r\n      {!hideLabel && !!description && (\r\n        <DescriptionFieldTemplate\r\n          id={descriptionId<T>(id)}\r\n          description={description}\r\n          schema={schema}\r\n          uiSchema={uiSchema}\r\n          registry={registry}\r\n        />\r\n      )}\r\n      <Form.Check\r\n        id={id}\r\n        name={id}\r\n        label={labelValue(label, hideLabel || !label)}\r\n        checked={typeof value === 'undefined' ? false : value}\r\n        required={required}\r\n        disabled={disabled || readonly}\r\n        autoFocus={autofocus}\r\n        onChange={_onChange}\r\n        type='checkbox'\r\n        onBlur={_onBlur}\r\n        onFocus={_onFocus}\r\n      />\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { ChangeEvent, FocusEvent } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {\r\n  ariaDescribedByIds,\r\n  enumOptionsDeselectValue,\r\n  enumOptionsIsSelected,\r\n  enumOptionsSelectValue,\r\n  enumOptionsValueForIndex,\r\n  optionId,\r\n  FormContextType,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n  WidgetProps,\r\n} from '@rjsf/utils';\r\n\r\nexport default function CheckboxesWidget<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({ id, disabled, options, value, autofocus, readonly, required, onChange, onBlur, onFocus }: WidgetProps<T, S, F>) {\r\n  const { enumOptions, enumDisabled, inline, emptyValue } = options;\r\n  const checkboxesValues = Array.isArray(value) ? value : [value];\r\n\r\n  const _onChange =\r\n    (index: number) =>\r\n    ({ target: { checked } }: ChangeEvent<HTMLInputElement>) => {\r\n      if (checked) {\r\n        onChange(enumOptionsSelectValue<S>(index, checkboxesValues, enumOptions));\r\n      } else {\r\n        onChange(enumOptionsDeselectValue<S>(index, checkboxesValues, enumOptions));\r\n      }\r\n    };\r\n\r\n  const _onBlur = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\r\n  const _onFocus = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\r\n    onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\r\n\r\n  return (\r\n    <Form.Group>\r\n      {Array.isArray(enumOptions) &&\r\n        enumOptions.map((option, index: number) => {\r\n          const checked = enumOptionsIsSelected<S>(option.value, checkboxesValues);\r\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\r\n          // TODO: custom, Property 'custom' does not exist on type\r\n          return (\r\n            <Form.Check\r\n              key={option.value}\r\n              inline={inline}\r\n              \r\n              required={required}\r\n              checked={checked}\r\n              className='bg-transparent border-0'\r\n              type={'checkbox'}\r\n              id={optionId(id, index)}\r\n              name={id}\r\n              label={option.label}\r\n              autoFocus={autofocus && index === 0}\r\n              onChange={_onChange(index)}\r\n              onBlur={_onBlur}\r\n              onFocus={_onFocus}\r\n              disabled={disabled || itemDisabled || readonly}\r\n              aria-describedby={ariaDescribedByIds<T>(id)}\r\n            />\r\n          );\r\n        })}\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { ChangeEvent, FocusEvent } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {\r\n  ariaDescribedByIds,\r\n  enumOptionsIsSelected,\r\n  enumOptionsValueForIndex,\r\n  optionId,\r\n  FormContextType,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n  WidgetProps,\r\n} from '@rjsf/utils';\r\n\r\nexport default function RadioWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\r\n  id,\r\n  options,\r\n  value,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps<T, S, F>) {\r\n  const { enumOptions, enumDisabled, emptyValue } = options;\r\n\r\n  const _onChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) =>\r\n    onChange(enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\r\n  const _onBlur = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\r\n  const _onFocus = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\r\n    onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\r\n\r\n  const inline = Boolean(options && options.inline);\r\n\r\n  return (\r\n    <Form.Group className='mb-0'>\r\n      {Array.isArray(enumOptions) &&\r\n        enumOptions.map((option, index) => {\r\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\r\n          const checked = enumOptionsIsSelected<S>(option.value, value);\r\n\r\n          const radio = (\r\n            <Form.Check\r\n              inline={inline}\r\n              label={option.label}\r\n              id={optionId(id, index)}\r\n              key={index}\r\n              name={id}\r\n              type='radio'\r\n              disabled={disabled || itemDisabled || readonly}\r\n              checked={checked}\r\n              required={required}\r\n              value={String(index)}\r\n              onChange={_onChange}\r\n              onBlur={_onBlur}\r\n              onFocus={_onFocus}\r\n              aria-describedby={ariaDescribedByIds<T>(id)}\r\n            />\r\n          );\r\n          return radio;\r\n        })}\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { FormContextType, getTemplate, labelValue, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\r\n\r\nexport default function RangeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\r\n  props: WidgetProps<T, S, F>\r\n) {\r\n  const { value, label, hideLabel, options, registry } = props;\r\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\r\n  return (\r\n    <BaseInputTemplate {...props} extraProps={{ label: labelValue(label || undefined, hideLabel) }}>\r\n      <span className='range-view'>{value}</span>\r\n    </BaseInputTemplate>\r\n  );\r\n}\r\n","import { ChangeEvent, FocusEvent } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {\r\n  ariaDescribedByIds,\r\n  FormContextType,\r\n  enumOptionsIndexForValue,\r\n  enumOptionsValueForIndex,\r\n  RJSFSchema,\r\n  StrictRJSFSchema,\r\n  WidgetProps,\r\n} from '@rjsf/utils';\r\n\r\nexport default function SelectWidget<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({\r\n  schema,\r\n  id,\r\n  options,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  value,\r\n  multiple,\r\n  autofocus,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  placeholder,\r\n  rawErrors = [],\r\n}: WidgetProps<T, S, F>) {\r\n  const { enumOptions, enumDisabled, emptyValue: optEmptyValue } = options;\r\n\r\n  const emptyValue = multiple ? [] : '';\r\n\r\n  function getValue(event: FocusEvent | ChangeEvent | any, multiple?: boolean) {\r\n    if (multiple) {\r\n      return [].slice\r\n        .call(event.target.options as any)\r\n        .filter((o: any) => o.selected)\r\n        .map((o: any) => o.value);\r\n    } else {\r\n      return event.target.value;\r\n    }\r\n  }\r\n  const selectedIndexes = enumOptionsIndexForValue<S>(value, enumOptions, multiple);\r\n\r\n  return (\r\n    <Form.Control\r\n      as='select'\r\n      bsPrefix='custom-select'\r\n      id={id}\r\n      name={id}\r\n      value={typeof selectedIndexes === 'undefined' ? emptyValue : selectedIndexes}\r\n      required={required}\r\n      multiple={multiple}\r\n      disabled={disabled || readonly}\r\n      autoFocus={autofocus}\r\n      className={rawErrors.length > 0 ? 'is-invalid' : ''}\r\n      onBlur={\r\n        onBlur &&\r\n        ((event: FocusEvent) => {\r\n          const newValue = getValue(event, multiple);\r\n          onBlur(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue));\r\n        })\r\n      }\r\n      onFocus={\r\n        onFocus &&\r\n        ((event: FocusEvent) => {\r\n          const newValue = getValue(event, multiple);\r\n          onFocus(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue));\r\n        })\r\n      }\r\n      onChange={(event: ChangeEvent) => {\r\n        const newValue = getValue(event, multiple);\r\n        onChange(enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyValue));\r\n      }}\r\n      aria-describedby={ariaDescribedByIds<T>(id)}\r\n    >\r\n      {!multiple && schema.default === undefined && <option value=''>{placeholder}</option>}\r\n      {(enumOptions as any).map(({ value, label }: any, i: number) => {\r\n        const disabled: any = Array.isArray(enumDisabled) && (enumDisabled as any).indexOf(value) != -1;\r\n        return (\r\n          <option key={i} id={label} value={String(i)} disabled={disabled}>\r\n            {label}\r\n          </option>\r\n        );\r\n      })}\r\n    </Form.Control>\r\n  );\r\n}\r\n","import { ChangeEvent, FocusEvent } from 'react';\r\nimport { ariaDescribedByIds, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\ntype CustomWidgetProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = WidgetProps<\r\n  T,\r\n  S,\r\n  F\r\n> & {\r\n  options: any;\r\n};\r\n\r\nexport default function TextareaWidget<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>({\r\n  id,\r\n  placeholder,\r\n  value,\r\n  required,\r\n  disabled,\r\n  autofocus,\r\n  readonly,\r\n  onBlur,\r\n  onFocus,\r\n  onChange,\r\n  options,\r\n}: CustomWidgetProps<T, S, F>) {\r\n  const _onChange = ({ target: { value } }: ChangeEvent<HTMLTextAreaElement>) =>\r\n    onChange(value === '' ? options.emptyValue : value);\r\n  const _onBlur = ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onBlur(id, value);\r\n  const _onFocus = ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onFocus(id, value);\r\n\r\n  return (\r\n    <InputGroup>\r\n      <FormControl\r\n        id={id}\r\n        name={id}\r\n        as='textarea'\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        value={value}\r\n        required={required}\r\n        autoFocus={autofocus}\r\n        rows={options.rows || 5}\r\n        onChange={_onChange}\r\n        onBlur={_onBlur}\r\n        onFocus={_onFocus}\r\n        aria-describedby={ariaDescribedByIds<T>(id)}\r\n      />\r\n    </InputGroup>\r\n  );\r\n}\r\n","import CheckboxWidget from '../CheckboxWidget/CheckboxWidget';\r\nimport CheckboxesWidget from '../CheckboxesWidget/CheckboxesWidget';\r\nimport RadioWidget from '../RadioWidget/RadioWidget';\r\nimport RangeWidget from '../RangeWidget/RangeWidget';\r\nimport SelectWidget from '../SelectWidget/SelectWidget';\r\nimport TextareaWidget from '../TextareaWidget/TextareaWidget';\r\nimport { FormContextType, RegistryWidgetsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\r\n\r\nexport function generateWidgets<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(): RegistryWidgetsType<T, S, F> {\r\n  return {\r\n    CheckboxWidget,\r\n    CheckboxesWidget,\r\n    RadioWidget,\r\n    RangeWidget,\r\n    SelectWidget,\r\n    TextareaWidget,\r\n  };\r\n}\r\n\r\nexport default generateWidgets();\r\n","import { ThemeProps } from '@rjsf/core';\r\n\r\nimport { generateTemplates } from '../Templates';\r\nimport { generateWidgets } from '../Widgets';\r\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\r\n\r\nexport function generateTheme<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(): ThemeProps<T, S, F> {\r\n  return {\r\n    templates: generateTemplates<T, S, F>(),\r\n    widgets: generateWidgets<T, S, F>(),\r\n  };\r\n}\r\n\r\nexport default generateTheme();\r\n","import { ComponentType } from 'react';\r\n\r\nimport { withTheme, FormProps } from '@rjsf/core';\r\nimport { generateTheme } from '../Theme';\r\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\r\n\r\nexport function generateForm<\r\n  T = any,\r\n  S extends StrictRJSFSchema = RJSFSchema,\r\n  F extends FormContextType = any\r\n>(): ComponentType<FormProps<T, S, F>> {\r\n  return withTheme<T, S, F>(generateTheme<T, S, F>());\r\n}\r\n\r\nexport default generateForm();\r\n","import React from \"react\";\r\nimport { RJSFSchema } from '@rjsf/utils';\r\nimport validator from '@rjsf/validator-ajv8';\r\n// import Form from \"@rjsf/bootstrap-4\";\r\nimport Form from \"../../../components/bootstrap5/Form\";\r\n// import schemaForm from './jsonFiles/schema.json';\r\n// import formData from './jsonFiles/formData.json';\r\n// import uiSchema from './jsonFiles/uiSchema.json';\r\n\r\nimport {\r\n    Card,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"react-bootstrap\";\r\n\r\nfunction ConfigurationDataForm() {\r\n    const schema: RJSFSchema = require(\"./json-files/config-data-schema.json\")\r\n    const formData = require(\"./json-files/config-data-form-data.json\")\r\n    const uiSchema = require(\"./json-files/config-data-form-uischema.json\")\r\n    const log = (type: any) => console.log.bind(console, type);\r\n    // const schema: RJSFSchema = schemaForm;\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h4\">Camel Integrator Configurations</Card.Title>\r\n                            <p className=\"card-category\">All service configurations</p>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col md=\"12\">\r\n                                    <div className=\"form\">\r\n                                        <Form\r\n                                            schema={schema}\r\n                                            uiSchema={uiSchema}\r\n                                            formData={formData}\r\n                                            validator={validator}\r\n                                            onSubmit={data => submitData(data)}\r\n                                        >\r\n                                        </Form>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nasync function submitData(data: any) {\r\n    console.log('submitted data', data)\r\n    console.log('submitted for data', data.formData)\r\n    try {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'accept': 'text/html' },\r\n            body: JSON.stringify(data.formData),\r\n        };\r\n        await fetch(\"/api/config-data\", requestOptions);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\nexport default ConfigurationDataForm;"],"names":["AddButton","_ref","uiSchema","registry","props","_objectWithoutProperties","_excluded","translateString","_jsx","Button","_objectSpread","style","width","className","concat","title","TranslatableString","AddItemButton","children","BsPlus","ArrayFieldItemTemplate","disabled","hasToolbar","hasCopy","hasMoveDown","hasMoveUp","hasRemove","index","onCopyIndexClick","onDropIndexClick","onReorderClick","readonly","_registry$templates$B","templates","ButtonTemplates","CopyButton","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","flex","paddingLeft","paddingRight","fontWeight","_jsxs","Row","Col","xs","lg","onClick","ArrayFieldTemplate","canAdd","idSchema","items","onAddClick","required","schema","uiOptions","getUiOptions","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldTitleTemplate","description","Container","fluid","map","key","itemProps","$id","BaseInputTemplate","id","placeholder","type","value","onChange","onChangeOverride","onBlur","onFocus","autofocus","options","_ref$rawErrors","rawErrors","extraProps","inputProps","getInputProps","_Fragment","Form","Control","name","autoFocus","readOnly","length","list","examples","examplesId","undefined","_ref2","target","emptyValue","_ref3","_ref4","ariaDescribedByIds","Array","isArray","default","includes","example","DescriptionField","ErrorList","errors","Card","border","Header","ErrorsLabel","Body","ListGroup","error","i","Item","stack","IconButton","icon","otherProps","iconType","variant","size","IoIosCopy","AiOutlineArrowDown","AiOutlineArrowUp","IoIosRemove","FieldErrorTemplate","_props$errors","errorId","as","FieldHelpTemplate","help","hasErrors","helpId","Text","FieldTemplate","displayLabel","rawDescription","classNames","label","hidden","onDropPropertyClick","onKeyChange","WrapIfAdditionalTemplate","Group","Label","htmlFor","ObjectFieldTemplate","properties","formData","TitleFieldTemplate","DescriptionFieldTemplate","titleId","descriptionId","element","marginBottom","content","canExpand","offset","span","SubmitButton","_getSubmitButtonOptio","getSubmitButtonOptions","submitText","norender","submitButtonProps","TitleField","height","keyLabel","KeyLabel","ADDITIONAL_PROPERTY_FLAG","keyId","defaultValue","generateTemplates","ErrorListTemplate","CheckboxWidget","hideLabel","schemaRequiresTrueValue","Check","labelValue","checked","CheckboxesWidget","enumOptions","enumDisabled","inline","checkboxesValues","_onChange","enumOptionsSelectValue","enumOptionsDeselectValue","_onBlur","enumOptionsValueForIndex","_onFocus","option","enumOptionsIsSelected","itemDisabled","indexOf","optionId","RadioWidget","Boolean","String","RangeWidget","SelectWidget","multiple","optEmptyValue","getValue","event","slice","call","filter","o","selected","selectedIndexes","enumOptionsIndexForValue","bsPrefix","newValue","TextareaWidget","InputGroup","FormControl","rows","generateWidgets","generateTheme","widgets","withTheme","_submitData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","requestOptions","wrap","_context","prev","next","console","log","method","headers","body","JSON","stringify","fetch","t0","stop","apply","arguments","require","md","Title","validator","onSubmit","_x","submitData"],"sourceRoot":""}